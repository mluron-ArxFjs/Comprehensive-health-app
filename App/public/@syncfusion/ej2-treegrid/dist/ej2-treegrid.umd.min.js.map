{"version":3,"file":"ej2-treegrid.umd.min.js","sources":["../src/treegrid/utils.js","../src/treegrid/actions/crud-actions.js","../src/treegrid/models/column.js","../src/treegrid/models/loading-indicator.js","../src/treegrid/models/filter-settings.js","../src/treegrid/models/textwrap-settings.js","../src/treegrid/actions/logger.js","../src/treegrid/base/constant.js","../src/treegrid/actions/clipboard.js","../src/treegrid/actions/selection.js","../src/treegrid/actions/print.js","../src/treegrid/models/search-settings.js","../src/treegrid/models/selection-settings.js","../src/treegrid/renderer/render.js","../src/treegrid/base/data.js","../src/treegrid/enum.js","../src/treegrid/models/page-settings.js","../src/treegrid/models/summary.js","../src/treegrid/models/edit-settings.js","../src/treegrid/models/sort-settings.js","../src/treegrid/models/infinite-scroll-settings.js","../src/treegrid/base/treegrid.js","../src/treegrid/actions/reorder.js","../src/treegrid/actions/resize.js","../src/treegrid/actions/rowdragdrop.js","../src/treegrid/models/rowdrop-settings.js","../src/treegrid/renderer/virtual-row-model-generator.js","../src/treegrid/actions/filter.js","../src/treegrid/actions/excel-export.js","../src/treegrid/actions/pdf-export.js","../src/treegrid/actions/page.js","../src/treegrid/actions/toolbar.js","../src/treegrid/actions/summary.js","../src/treegrid/actions/sort.js","../src/treegrid/actions/column-menu.js","../src/treegrid/actions/context-menu.js","../src/treegrid/actions/batch-edit.js","../src/treegrid/actions/edit.js","../src/treegrid/actions/command-column.js","../src/treegrid/actions/detail-row.js","../src/treegrid/renderer/virtual-tree-content-render.js","../src/treegrid/actions/virtual-scroll.js","../src/treegrid/renderer/virtual-tree-freeze-render.js","../src/treegrid/actions/freeze-column.js","../src/treegrid/actions/column-chooser.js","../src/treegrid/actions/infinite-scroll.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Specifies whether remote data binding\n */\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\n/**\n * @param {TreeGrid | IGrid} parent - Tree Grid or Grid instance\n * @returns {boolean} - Returns whether custom binding\n */\nexport function isCountRequired(parent) {\n    if (parent.dataSource && 'result' in parent.dataSource) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether checkbox column is enabled\n */\nexport function isCheckboxcolumn(parent) {\n    for (var i = 0; i < parent.columns.length; i++) {\n        if (parent.columns[parseInt(i.toString(), 10)].showCheckbox) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether filtering and searching done\n */\nexport function isFilterChildHierarchy(parent) {\n    if ((!isNullOrUndefined(parent.grid.searchSettings.key) && parent.grid.searchSettings.key !== '' &&\n        (parent.searchSettings.hierarchyMode === 'Child' || parent.searchSettings.hierarchyMode === 'None')) ||\n        (parent.allowFiltering && parent.grid.filterSettings.columns.length &&\n            (parent.filterSettings.hierarchyMode === 'Child' || parent.filterSettings.hierarchyMode === 'None'))) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {Object} records - Define records for which parent records has to be found\n * @hidden\n * @returns {Object} - Returns parent records collection\n */\nexport function findParentRecords(records) {\n    var datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[parseInt(i.toString(), 10)]);\n        if (hasChild) {\n            datas.push(records[parseInt(i.toString(), 10)]);\n        }\n    }\n    return datas;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns the expand status of record\n * @param {ITreeData} record - Define the record for which expand status has be found\n * @param {ITreeData[]} parents - Parent Data collection\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @param {ITreeData} records - Define the record for which child records has to be found\n * @returns {Object[]} - Returns child records collection\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || (!records.hasChildRecords && !isNullOrUndefined(records.childRecords)\n        && !records.childRecords.length)) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        var childRecords = records.childRecords.filter(function (item) { return !item.isSummaryRow; });\n        var keys = Object.keys(childRecords);\n        for (var i = 0, len = keys.length; i < len; i++) {\n            datas.push(childRecords[parseInt(i.toString(), 10)]);\n            if (childRecords[parseInt(i.toString(), 10)].hasChildRecords ||\n                (!isNullOrUndefined(childRecords[parseInt(i.toString(), 10)].childRecords) &&\n                    childRecords[parseInt(i.toString(), 10)].childRecords.length)) {\n                datas = datas.concat(findChildrenRecords(childRecords[parseInt(i.toString(), 10)]));\n            }\n        }\n    }\n    return datas;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether local data binding\n */\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\n/**\n * @param {Object[]} array - Defines the array to be cloned\n * @returns {Object[]} - Returns cloned array collection\n */\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; array && i < array.length; i++) {\n        keys = Object.keys(array[parseInt(i.toString(), 10)]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[parseInt(j.toString(), 10)]] = array[parseInt(i.toString(), 10)][keys[parseInt(j.toString(), 10)]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\n/**\n * @param {ITreeData} value - Defined the dirty data to be cleaned\n * @returns {ITreeData} - Returns cleaned original data\n */\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    delete value.taskData;\n    delete value.uniqueID;\n    return value;\n}\n/**\n * @param {TreeGrid} parent - TreeGrid instance\n * @param {string} value - IdMapping field name\n * @param {boolean} requireFilter - Specified whether treegrid data is filtered\n * @returns {ITreeData} - Returns IdMapping matched record\n */\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[\"\" + idFilter][\"\" + value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[\"\" + id][\"\" + value];\n    }\n}\n/**\n * @param {HTMLTableRowElement} el - Row element\n * @returns {boolean} - Returns whether hidden\n */\nexport function isHidden(el) {\n    var style = window.getComputedStyle(el);\n    return ((style.display === 'none') || (style.visibility === 'hidden'));\n}\n","import { isNullOrUndefined, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData, getParentData } from '../utils';\n/**\n * Performs CRUD update to Tree Grid data source\n *\n * @param {{value: ITreeData, action: string }} details - Gets modified record value and CRUD action type\n * @param {TreeGrid} details.value - Gets modified record value\n * @param {string} details.action - CRUD action type\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Denotes whether Self Referential data binding\n * @param {number} addRowIndex - New add row index\n * @param {number} selectedIndex - Selected Row index\n * @param {string} columnName - Column field name\n * @param {ITreeData} addRowRecord - Newly added record\n * @returns {void}\n */\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var changedRecords = 'changedRecords';\n    var i;\n    var j;\n    var addedRecords = 'addedRecords';\n    var batchChanges;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    if (control.editSettings.mode === 'Batch') {\n        batchChanges = control.grid.editModule.getBatchChanges();\n    }\n    if (action === 'add' || (action === 'batchsave' && (control.editSettings.mode === 'Batch'\n        && batchChanges[\"\" + addedRecords].length))) {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            if (typeof (modifiedData[parseInt(k.toString(), 10)][\"\" + key]) === 'object') {\n                modifiedData[parseInt(k.toString(), 10)] = modifiedData[parseInt(k.toString(), 10)][\"\" + key];\n            }\n            var keys = modifiedData[parseInt(k.toString(), 10)].taskData ?\n                Object.keys(modifiedData[parseInt(k.toString(), 10)].taskData) :\n                Object.keys(modifiedData[parseInt(k.toString(), 10)]);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[parseInt(i.toString(), 10)][\"\" + key] === modifiedData[parseInt(k.toString(), 10)][\"\" + key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[parseInt(i.toString(), 10)];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[\"\" + control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[\"\" + control.idMapping] === currentData_1[\"\" + control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[\"\" + control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[parseInt(p.toString(), 10)][\"\" + control.idMapping] === currentData_1[\"\" + control.idMapping]) {\n                                        if (!control.enableImmutableMode && parentData.childRecords.length === parentData['Children'].length) {\n                                            parentData['childRecords'].splice(p, 1);\n                                        }\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (Object.prototype.hasOwnProperty.call(treeData[parseInt(i.toString(), 10)], keys[parseInt(j.toString(), 10)]) && ((control.editSettings.mode !== 'Cell'\n                                    || (!isNullOrUndefined(batchChanges) && batchChanges[\"\" + changedRecords].length === 0))\n                                    || keys[parseInt(j.toString(), 10)] === columnName)) {\n                                    var editedData = getParentData(control, modifiedData[parseInt(k.toString(), 10)].uniqueID);\n                                    treeData[parseInt(i.toString(), 10)][keys[parseInt(j.toString(), 10)]] =\n                                        modifiedData[parseInt(k.toString(), 10)][keys[parseInt(j.toString(), 10)]];\n                                    if (editedData && editedData.taskData) {\n                                        editedData.taskData[keys[parseInt(j.toString(), 10)]] = editedData[keys[parseInt(j.toString(), 10)]]\n                                            = treeData[parseInt(i.toString(), 10)][keys[parseInt(j.toString(), 10)]];\n                                    }\n                                }\n                            }\n                        }\n                        else if (action === 'add' || action === 'batchsave') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData.taskData[\"\" + control.parentIdMapping] = treeData[parseInt(i.toString(), 10)][\"\" + control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData.taskData);\n                                }\n                                else {\n                                    if (!Object.prototype.hasOwnProperty.call(treeData[parseInt(i.toString(), 10)], control.childMapping)) {\n                                        treeData[parseInt(i.toString(), 10)][\"\" + control.childMapping] = [];\n                                    }\n                                    treeData[parseInt(i.toString(), 10)][\"\" + control.childMapping].push(originalData.taskData);\n                                    updateParentRow(key, treeData[parseInt(i.toString(), 10)], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData.taskData);\n                                if (!isNullOrUndefined(originalData.parentItem)) {\n                                    updateParentRow(key, treeData[i + 1], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData.taskData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData.taskData);\n                                if (!isNullOrUndefined(originalData.parentItem)) {\n                                    updateParentRow(key, treeData[parseInt(i.toString(), 10)], action, control, isSelfReference, originalData);\n                                }\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[parseInt(i.toString(), 10)][\"\" + control.childMapping])) {\n                    if (removeChildRecords(treeData[parseInt(i.toString(), 10)][\"\" + control.childMapping], modifiedData[parseInt(k.toString(), 10)], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[parseInt(i.toString(), 10)], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\n/**\n * Performs Add action to Tree Grid data source\n *\n * @param {{value: ITreeData, action: string }} details - Gets modified record value and CRUD action type\n * @param {TreeGrid} details.value - Gets modified record value\n * @param {string} details.action - CRUD action type\n * @param {Object[]} treeData - Tree Grid data source\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Denotes whether Self Referential data binding\n * @param {number} addRowIndex - New add row index\n * @param {number} selectedIndex - Selected Row index\n * @param {ITreeData} addRowRecord - Newly added record\n * @returns {void}\n */\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            treeData.unshift(value);\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                value = extend({}, currentViewRecords[addRowIndex + 1]);\n                value = getPlainData(value);\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n                var currentdata = currentViewRecords[parseInt(addRowIndex.toString(), 10)];\n                if (!isNullOrUndefined(currentdata) && currentdata[\"\" + primaryKeys] === details.value[\"\" + primaryKeys] || selectedIndex !== -1) {\n                    value = extend({}, currentdata);\n                }\n                else {\n                    value = extend({}, details.value);\n                }\n                value = getPlainData(value);\n                var internalProperty = 'internalProperties';\n                control.editModule[\"\" + internalProperty].taskData = value;\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\n/**\n * @param {ITreeData[]} childRecords - Child Records collection\n * @param {Object} modifiedData - Modified data in crud action\n * @param {string} action - crud action type\n * @param {string} key - Primary key field name\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Specified whether Self Referential data binding\n * @param {ITreeData} originalData - Non updated data from data source, of edited data\n * @param {string} columnName - column field name\n * @returns {boolean} Returns whether child records exists\n */\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[parseInt(j.toString(), 10)][\"\" + key] === modifiedData[\"\" + key] ||\n            (isSelfReference && childRecords[parseInt(j.toString(), 10)][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                var editedData = getParentData(control, modifiedData.uniqueID);\n                for (var i = 0; i < keys.length; i++) {\n                    if (Object.prototype.hasOwnProperty.call(childRecords[parseInt(j.toString(), 10)], keys[parseInt(i.toString(), 10)]) &&\n                        (control.editSettings.mode !== 'Cell' || keys[parseInt(i.toString(), 10)] === columnName)) {\n                        editedData[keys[parseInt(i.toString(), 10)]] =\n                            editedData.taskData[keys[parseInt(i.toString(), 10)]] =\n                                childRecords[parseInt(j.toString(), 10)][keys[parseInt(i.toString(), 10)]] =\n                                    modifiedData[keys[parseInt(i.toString(), 10)]];\n                        if (control.grid.editSettings.mode === 'Normal' && control.editSettings.mode === 'Cell') {\n                            var editModule = 'editModule';\n                            control.grid.editModule[\"\" + editModule].editRowIndex = modifiedData.index;\n                            control.grid.editModule[\"\" + editModule].updateCurrentViewData(modifiedData);\n                        }\n                    }\n                }\n                break;\n            }\n            else if (action === 'add' || action === 'batchsave') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[\"\" + control.parentIdMapping] = childRecords[parseInt(j.toString(), 10)][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[parseInt(j.toString(), 10)], action, control, isSelfReference, originalData);\n                    }\n                    else {\n                        if (!Object.prototype.hasOwnProperty.call(childRecords[parseInt(j.toString(), 10)], control.childMapping)) {\n                            childRecords[parseInt(j.toString(), 10)][control.childMapping] = [];\n                        }\n                        childRecords[parseInt(j.toString(), 10)][control.childMapping].push(originalData.taskData);\n                        updateParentRow(key, childRecords[parseInt(j.toString(), 10)], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData.taskData);\n                    if (!isNullOrUndefined(originalData.parentItem)) {\n                        updateParentRow(key, childRecords[parseInt(j.toString(), 10)], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData.taskData);\n                    if (!isNullOrUndefined(originalData.parentItem)) {\n                        updateParentRow(key, childRecords[parseInt(j.toString(), 10)], action, control, isSelfReference, originalData);\n                    }\n                }\n            }\n            else {\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[parseInt(j.toString(), 10)][control.childMapping])) {\n            if (removeChildRecords(childRecords[parseInt(j.toString(), 10)][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[parseInt(j.toString(), 10)], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\n/**\n * @param {string} key - Primary key field name\n * @param {ITreeData} record - Parent Record which has to be updated\n * @param {string} action - CRUD action type\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Specified whether self referential data binding\n * @param {ITreeData} child - Specifies child record\n * @returns {void}\n */\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    if ((control.editSettings.newRowPosition === 'Above' || control.editSettings.newRowPosition === 'Below')\n        && ((action === 'add' || action === 'batchsave')) && !isNullOrUndefined(child.parentItem)) {\n        var parentData = getParentData(control, child.parentItem.uniqueID);\n        parentData.childRecords.push(child);\n    }\n    else {\n        var currentRecords = control.grid.getCurrentViewRecords();\n        var index_1;\n        currentRecords.map(function (e, i) { if (e[\"\" + key] === record[\"\" + key]) {\n            index_1 = i;\n            return;\n        } });\n        if (control.enableVirtualization && isNullOrUndefined(index_1)) {\n            var updatedParent = getValue('uniqueIDCollection.' + child.parentUniqueID, control);\n            record = updatedParent;\n        }\n        if (!isNullOrUndefined(index_1)) {\n            record = currentRecords[parseInt(index_1.toString(), 10)];\n        }\n        if (control.enableVirtualization && isNullOrUndefined(record) && !isNullOrUndefined(child)) {\n            record = getValue('uniqueIDCollection.' + child.parentUniqueID, control);\n        }\n        if (!isSelfReference && !isNullOrUndefined(record.childRecords) && record.childRecords.length) {\n            record.hasChildRecords = true;\n        }\n        else {\n            record.hasChildRecords = false;\n        }\n        if (action === 'add' || action === 'batchsave') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n                child = currentRecords.filter(function (e) {\n                    if (e.parentUniqueID === record.uniqueID) {\n                        return e;\n                    }\n                    else {\n                        return null;\n                    }\n                });\n            }\n            var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index_1 + 1];\n            if (control.editSettings.newRowPosition !== 'Below') {\n                if (!Object.prototype.hasOwnProperty.call(record, 'childRecords')) {\n                    record.childRecords = [];\n                }\n                else {\n                    if (!isNullOrUndefined(child) && record[\"\" + key] !== child[\"\" + key]) {\n                        record.childRecords.push(child);\n                    }\n                }\n                if (record.childRecords.indexOf(childRecords) === -1 && record[\"\" + key] !== child[\"\" + key]) {\n                    record.childRecords.unshift(childRecords);\n                }\n                if (isSelfReference) {\n                    if (!Object.prototype.hasOwnProperty.call(record, control.childMapping)) {\n                        record[control.childMapping] = [];\n                    }\n                    if (record[\"\" + control.childMapping].indexOf(childRecords) === -1 && record[\"\" + key] !== child[\"\" + key]) {\n                        record[control.childMapping].unshift(childRecords);\n                    }\n                }\n            }\n        }\n        var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n        var data = control.grid.dataSource instanceof DataManager ?\n            control.grid.dataSource.dataSource.json : control.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            if (data[parseInt(i.toString(), 10)][\"\" + primaryKeys] === record[\"\" + primaryKeys]) {\n                data[parseInt(i.toString(), 10)] = record;\n                break;\n            }\n        }\n        control.grid.setRowData(key, record);\n        var row = control.getRowByIndex(index_1);\n        if (control.editSettings.mode === 'Batch') {\n            if (action === 'add') {\n                row = control.getRows()[control.grid.getCurrentViewRecords().indexOf(record)];\n            }\n            else {\n                row = control.getRows()[control.grid.getRowIndexByPrimaryKey(record[\"\" + key])];\n            }\n        }\n        var movableRow = void 0;\n        if (control.frozenRows || control.getFrozenColumns()) {\n            movableRow = control.getMovableRowByIndex(index_1);\n        }\n        if (!control.enableVirtualization && !isNullOrUndefined(row) || !isNullOrUndefined(movableRow)) {\n            var index_2 = control.treeColumnIndex;\n            if (control.allowRowDragAndDrop && control.enableImmutableMode) {\n                index_2 = index_2 + 1;\n            }\n            control.renderModule.cellRender({\n                data: record, cell: row.cells[parseInt(index_2.toString(), 10)] ? row.cells[parseInt(index_2.toString(), 10)]\n                    : movableRow.cells[index_2 - control.getFrozenColumns()],\n                column: control.grid.getColumns()[control.treeColumnIndex],\n                requestType: action\n            });\n            if (control.enableImmutableMode && control['action'] === 'indenting' || control['action'] === 'outdenting') {\n                control.renderModule.RowModifier({\n                    data: record, row: row\n                });\n            }\n        }\n    }\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { merge, Property } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         *\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         *\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `disableHtmlEncode` is set to true, it encodes the HTML of the header and content cells.\n         *\n         * @default true\n         */\n        this.disableHtmlEncode = true;\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         *\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         *\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         *\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         *\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         *\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    /**\n     * Update the State changes reflected for TreeGrid columndirective in react platform.\n     *\n     * @param {Column} column - specifies the column\n     * @returns {void}\n     * @hidden\n     */\n    Column.prototype.setProperties = function (column) {\n        //Angular two way binding\n        var keys = Object.keys(column);\n        for (var i = 0; i < keys.length; i++) {\n            this[keys[parseInt(i.toString(), 10)]] = column[keys[parseInt(i.toString(), 10)]];\n            //Refresh the react columnTemplates on state change\n            if (this.parent && this.parent['isReact'] && keys[parseInt(i.toString(), 10)] === 'template') {\n                var refreshReactColumnTemplateByUid = 'refreshReactColumnTemplateByUid';\n                this.parent.clipboardModule['treeGridParent'].renderModule[\"\" + refreshReactColumnTemplateByUid](this.uid);\n            }\n        }\n    };\n    return Column;\n}());\nexport { Column };\n/**\n * Defines TreeGrid column\n */\nvar TreeGridColumn = /** @class */ (function (_super) {\n    __extends(TreeGridColumn, _super);\n    function TreeGridColumn() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], TreeGridColumn.prototype, \"columns\", void 0);\n    return TreeGridColumn;\n}(Column));\nexport { TreeGridColumn };\n/**\n * Defines stacked tree grid column\n */\nvar StackedColumn = /** @class */ (function (_super) {\n    __extends(StackedColumn, _super);\n    function StackedColumn() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return StackedColumn;\n}(TreeGridColumn));\nexport { StackedColumn };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the Loading Indicator of the Tree Grid.\n */\nvar LoadingIndicator = /** @class */ (function (_super) {\n    __extends(LoadingIndicator, _super);\n    function LoadingIndicator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Spinner')\n    ], LoadingIndicator.prototype, \"indicatorType\", void 0);\n    return LoadingIndicator;\n}(ChildProperty));\nexport { LoadingIndicator };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Represents the Tree Grid predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the textwrap behavior of the TreeGrid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Logger as GridLogger, Grid, detailLists } from '@syncfusion/ej2-grids';\n/**\n * Logger module for TreeGrid\n *\n * @hidden\n */\nvar DOC_URL = 'https://ej2.syncfusion.com/documentation/treegrid';\nvar BASE_DOC_URL = 'https://ej2.syncfusion.com/documentation';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nvar WARNING = '[EJ2TreeGrid.Warning]';\nvar ERROR = '[EJ2TreeGrid.Error]';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nvar INFO = '[EJ2TreeGrid.Info]';\nvar IsRowDDEnabled = false;\nvar Logger = /** @class */ (function (_super) {\n    __extends(Logger, _super);\n    function Logger(parent) {\n        var _this = this;\n        Grid.Inject(GridLogger);\n        _this = _super.call(this, parent) || this;\n        return _this;\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Logger module name\n     */\n    Logger.prototype.getModuleName = function () {\n        return 'logger';\n    };\n    Logger.prototype.log = function (types, args) {\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        for (var i = 0; i < type.length; i++) {\n            var item = detailLists[type[parseInt(i.toString(), 10)]];\n            var cOp = item.check(args, this.parent);\n            if (cOp.success) {\n                var message = item.generateMessage(args, this.parent, cOp.options);\n                message = message.replace('EJ2Grid', 'EJ2TreeGrid').replace('* Hierarchy Grid', '').replace('* Grouping', '');\n                if (IsRowDDEnabled && type[parseInt(i.toString(), 10)] === 'primary_column_missing') {\n                    message = message.replace('Editing', 'Row DragAndDrop');\n                    IsRowDDEnabled = false;\n                }\n                var index = message.indexOf('https');\n                var gridurl = message.substring(index);\n                if (type[parseInt(i.toString(), 10)] === 'module_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/modules');\n                }\n                else if (type[parseInt(i.toString(), 10)] === 'primary_column_missing' || type[parseInt(i.toString(), 10)] === 'selection_key_missing') {\n                    message = message.replace(gridurl, BASE_DOC_URL + '/api/treegrid/column/#isprimarykey');\n                }\n                else if (type[parseInt(i.toString(), 10)] === 'grid_remote_edit') {\n                    message = message.replace(gridurl, DOC_URL + '/edit');\n                }\n                else if (type[parseInt(i.toString(), 10)] === 'virtual_height') {\n                    message = message.replace(gridurl, DOC_URL + '/virtual');\n                }\n                else if (type[parseInt(i.toString(), 10)] === 'check_datasource_columns') {\n                    message = message.replace(gridurl, DOC_URL + '/columns');\n                }\n                else if (type[parseInt(i.toString(), 10)] === 'locale_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/global-local/#localization');\n                }\n                if (type[parseInt(i.toString(), 10)] === 'datasource_syntax_mismatch') {\n                    if (!isNullOrUndefined(this.treeGridObj) && !isNullOrUndefined(this.treeGridObj.dataStateChange)) {\n                        // eslint-disable-next-line no-console\n                        console[item.logType](message);\n                    }\n                }\n                else {\n                    // eslint-disable-next-line no-console\n                    console[item.logType](message);\n                }\n            }\n        }\n    };\n    Logger.prototype.treeLog = function (types, args, treeGrid) {\n        this.treeGridObj = treeGrid;\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        if (treeGrid.allowRowDragAndDrop && !treeGrid.columns.filter(function (column) { return column.isPrimaryKey; }).length) {\n            IsRowDDEnabled = true;\n            this.log('primary_column_missing', args);\n        }\n        for (var i = 0; i < type.length; i++) {\n            var item = treeGridDetails[type[parseInt(i.toString(), 10)]];\n            var cOp = item.check(args, treeGrid);\n            if (cOp.success) {\n                var message = item.generateMessage(args, treeGrid, cOp.options);\n                // eslint-disable-next-line no-console\n                console[item.logType](message);\n            }\n        }\n    };\n    return Logger;\n}(GridLogger));\nexport { Logger };\nexport var treeGridDetails = {\n    // eslint-disable-next-line camelcase\n    mapping_fields_missing: {\n        type: 'mapping_fields_missing',\n        logType: 'error',\n        check: function (args, parent) {\n            var opt = { success: false };\n            if ((isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.childMapping)\n                && isNullOrUndefined(parent.parentIdMapping)) ||\n                (!isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.parentIdMapping)) ||\n                (isNullOrUndefined(parent.idMapping) && !isNullOrUndefined(parent.parentIdMapping))) {\n                opt = { success: true };\n            }\n            return opt;\n        },\n        generateMessage: function () {\n            return ERROR + ':' + ' MAPPING FIELDS MISSING \\n' + 'One of the following fields is missing. It is ' +\n                'required for the hierarchical relationship of records in TreeGrid:\\n' +\n                '* childMapping\\n' + '* idMapping\\n' + '* parentIdMapping\\n' +\n                'Refer to the following documentation links for more details.\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#childmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#idmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#$parentidmapping\");\n        }\n    }\n};\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var dataStateChange = 'dataStateChange';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var beforeCopy = 'beforeCopy';\n/** @hidden */\nexport var beforePaste = 'beforePaste';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchDelete = 'beforeBatchDelete';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var destroy = 'destroy';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n/** @hidden */\nexport var rowDrag = 'rowDrag';\n/** @hidden */\nexport var rowDragStartHelper = 'rowDragStartHelper';\n/** @hidden */\nexport var rowDrop = 'rowDrop';\n/** @hidden */\nexport var rowDragStart = 'rowDragStart';\n/** @hidden */\nexport var rowsAdd = 'rows-add';\n/** @hidden */\nexport var rowsRemove = 'rows-remove';\n/** @hidden */\nexport var rowdraging = 'row-draging';\n/** @hidden */\nexport var rowDropped = 'row-dropped';\n/** @hidden */\nexport var autoCol = 'auto-col';\n/** @hidden */\nexport var rowDeselecting = 'rowDeselecting';\n/** @hidden */\nexport var headerContent = 'e-headercontent';\n/** @hidden */\nexport var movableContent = 'e-movablecontent';\n/** @hidden */\nexport var movableHeader = 'e-movableheader';\n/** @hidden */\nexport var frozenContent = 'e-frozencontent';\n/** @hidden */\nexport var frozenHeader = 'e-frozenheader';\n/** @hidden */\nexport var content = 'e-content';\n/** @hidden */\nexport var table = 'e-table';\n/** @hidden */\nexport var leftRight = 'Left-Right';\n/** @hidden */\nexport var frozenRight = 'frozen-right';\n/** @hidden */\nexport var frozenLeft = 'frozen-left';\n/** @hidden */\nexport var dataColIndex = 'data-colindex';\n/** @hidden */\nexport var ariaColIndex = 'aria-colindex';\n/** @hidden */\nexport var dataRowIndex = 'data-rowindex';\n/** @hidden */\nexport var ariaRowIndex = 'aria-rowindex';\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { Clipboard as GridClipboard } from '@syncfusion/ej2-grids';\n/**\n * The `Clipboard` module is used to handle clipboard copy action.\n *\n * @hidden\n */\nvar TreeClipboard = /** @class */ (function (_super) {\n    __extends(TreeClipboard, _super);\n    function TreeClipboard(parent, serviceLocator) {\n        var _this = _super.call(this, parent.grid, serviceLocator) || this;\n        _this.treeCopyContent = '';\n        _this.copiedUniqueIdCollection = [];\n        _this.treeGridParent = parent;\n        _this.serviceLocator = serviceLocator;\n        return _this;\n    }\n    TreeClipboard.prototype.setCopyData = function (withHeader) {\n        var copyContent = 'copyContent';\n        var getCopyData = 'getCopyData';\n        var isSelect = 'isSelect';\n        var uniqueID = 'uniqueID';\n        var currentRecords = this.treeGridParent.getCurrentViewRecords();\n        if (window.getSelection().toString() === '') {\n            this.clipBoardTextArea.value = this[\"\" + copyContent] = '';\n            var rows = this.treeGridParent.grid.getRows();\n            if (this.treeGridParent.selectionSettings.mode !== 'Cell') {\n                var selectedIndexes = this.treeGridParent.getSelectedRowIndexes().sort(function (a, b) {\n                    return a - b;\n                });\n                for (var i = 0; i < selectedIndexes.length; i++) {\n                    if (i > 0) {\n                        this.treeCopyContent += '\\n';\n                    }\n                    if (!rows[selectedIndexes[parseInt(i.toString(), 10)]].classList.contains('e-summaryrow')) {\n                        var cells = [].slice.call(rows[selectedIndexes[parseInt(i.toString(), 10)]].querySelectorAll('.e-rowcell'));\n                        var uniqueid = this.treeGridParent.getSelectedRecords()[parseInt(i.toString(), 10)][\"\" + uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            if (this.treeGridParent.copyHierarchyMode === 'Parent' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.parentContentData(currentRecords, selectedIndexes[parseInt(i.toString(), 10)], rows, withHeader, i);\n                            }\n                            this[\"\" + getCopyData](cells, false, '\\t', withHeader);\n                            this.treeCopyContent += this[\"\" + copyContent];\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[\"\" + copyContent] = '';\n                            if (this.treeGridParent.copyHierarchyMode === 'Child' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.childContentData(currentRecords, selectedIndexes[parseInt(i.toString(), 10)], rows, withHeader);\n                            }\n                        }\n                    }\n                }\n                if (withHeader) {\n                    var headerTextArray = [];\n                    for (var i = 0; i < this.treeGridParent.getVisibleColumns().length; i++) {\n                        headerTextArray[parseInt(i.toString(), 10)] =\n                            this.treeGridParent.getVisibleColumns()[parseInt(i.toString(), 10)].headerText;\n                    }\n                    this[\"\" + getCopyData](headerTextArray, false, '\\t', withHeader);\n                    this.treeCopyContent = this[\"\" + copyContent] + '\\n' + this.treeCopyContent;\n                }\n                var args = {\n                    data: this.treeCopyContent,\n                    cancel: false\n                };\n                this.treeGridParent.trigger(events.beforeCopy, args);\n                if (args.cancel) {\n                    return;\n                }\n                this.clipBoardTextArea.value = this[\"\" + copyContent] = args.data;\n                if (!Browser.userAgent.match(/ipad|ipod|iphone/i)) {\n                    this.clipBoardTextArea.select();\n                }\n                else {\n                    this.clipBoardTextArea.setSelectionRange(0, this.clipBoardTextArea.value.length);\n                }\n                this[\"\" + isSelect] = true;\n                this.copiedUniqueIdCollection = [];\n                this.treeCopyContent = '';\n            }\n            else {\n                _super.prototype.setCopyData.call(this, withHeader);\n            }\n        }\n    };\n    TreeClipboard.prototype.parentContentData = function (currentRecords, selectedIndex, rows, withHeader, index) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var parentItem = 'parentItem';\n        var uniqueID = 'uniqueID';\n        var level = 'level';\n        if (!isNullOrUndefined(currentRecords[parseInt(selectedIndex.toString(), 10)][\"\" + parentItem])) {\n            var treeLevel = currentRecords[parseInt(selectedIndex.toString(), 10)][\"\" + parentItem][\"\" + level];\n            for (var i = 0; i < treeLevel + 1; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(currentRecords[parseInt(selectedIndex.toString(), 10)][\"\" + parentItem]) &&\n                        currentRecords[parseInt(j.toString(), 10)][\"\" + uniqueID] === currentRecords[parseInt(selectedIndex.toString(), 10)][\"\" + parentItem][\"\" + uniqueID]) {\n                        selectedIndex = j;\n                        var cells = [].slice.call(rows[parseInt(selectedIndex.toString(), 10)].querySelectorAll('.e-rowcell'));\n                        var uniqueid = currentRecords[parseInt(j.toString(), 10)][\"\" + uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            this[\"\" + getCopyData](cells, false, '\\t', withHeader);\n                            if (index > 0) {\n                                this.treeCopyContent = this.treeCopyContent + this[\"\" + copyContent] + '\\n';\n                            }\n                            else {\n                                this.treeCopyContent = this[\"\" + copyContent] + '\\n' + this.treeCopyContent;\n                            }\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[\"\" + copyContent] = '';\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    TreeClipboard.prototype.copy = function (withHeader) {\n        _super.prototype.copy.call(this, withHeader);\n    };\n    TreeClipboard.prototype.paste = function (data, rowIndex, colIndex) {\n        _super.prototype.paste.call(this, data, rowIndex, colIndex);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns clipboard module name\n     */\n    TreeClipboard.prototype.getModuleName = function () {\n        return 'clipboard';\n    };\n    /**\n     * To destroy the clipboard\n     *\n     * @returns {void}\n     * @hidden\n     */\n    TreeClipboard.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n    };\n    TreeClipboard.prototype.childContentData = function (currentRecords, selectedIndex, rows, withHeader) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var childRecords = 'childRecords';\n        var hasChildRecords = 'hasChildRecords';\n        var uniqueID = 'uniqueID';\n        if (currentRecords[parseInt(selectedIndex.toString(), 10)][\"\" + hasChildRecords]) {\n            var childData = currentRecords[parseInt(selectedIndex.toString(), 10)][\"\" + childRecords];\n            for (var i = 0; i < childData.length; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(childData[parseInt(i.toString(), 10)][\"\" + uniqueID]) && currentRecords[parseInt(j.toString(), 10)][\"\" + uniqueID] === childData[parseInt(i.toString(), 10)][\"\" + uniqueID]) {\n                        if ((!isNullOrUndefined(rows[parseInt(j.toString(), 10)])) && !rows[parseInt(j.toString(), 10)].classList.contains('e-summaryrow')) {\n                            var cells = [].slice.call(rows[parseInt(j.toString(), 10)].querySelectorAll('.e-rowcell'));\n                            var uniqueid = currentRecords[parseInt(j.toString(), 10)][\"\" + uniqueID];\n                            if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                                this[\"\" + getCopyData](cells, false, '\\t', withHeader);\n                                this.treeCopyContent += ('\\n' + this[\"\" + copyContent]);\n                                this[\"\" + copyContent] = '';\n                                this.copiedUniqueIdCollection.push(uniqueid);\n                                this.childContentData(currentRecords, j, rows, withHeader);\n                            }\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    return TreeClipboard;\n}(GridClipboard));\nexport { TreeClipboard };\n","import { isNullOrUndefined, removeClass } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData, isRemoteData, isCheckboxcolumn, findChildrenRecords } from '../utils';\n/**\n * TreeGrid Selection module\n *\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.filteredList = [];\n        this.searchingRecords = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Selection module name\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.grid.on('colgroup-refresh', this.headerCheckbox, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.grid.off('colgroup-refresh', this.headerCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = [];\n            rowIndex.push(target.closest('tr').rowIndex);\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var stackedHeader = 'stackedHeader';\n        var columnModel = 'columnModel';\n        var columns = this.parent[\"\" + stackedHeader] ? this.parent[\"\" + columnModel] : (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[parseInt(col.toString(), 10)].showCheckbox) {\n                mappingUid = columns[parseInt(col.toString(), 10)].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[parseInt(j.toString(), 10)];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            var checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n        else if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length > 0) {\n            var checkWrap = this.parent.getHeaderContent().querySelectorAll('.e-checkbox-wrapper')[0];\n            var checkBoxvalue = checkWrap.querySelector('.e-frame').classList.contains('e-check');\n            if (this.parent.autoCheckHierarchy && checkBoxvalue) {\n                this.headerSelection(checkBoxvalue);\n            }\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox', 'aria-label': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        var checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        if (this.parent.allowTextWrap) {\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n        }\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            if (!container.cell.querySelector('.e-hierarchycheckbox')) {\n                containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n            }\n        }\n        else {\n            var spanEle = this.parent.createElement('span', { className: 'e-treecheckbox' });\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            var divEle = this.parent.createElement('div', { className: 'e-treecheckbox-container' });\n            divEle.appendChild(checkWrap);\n            divEle.appendChild(spanEle);\n            container.cell.appendChild(divEle);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[parseInt(i.toString(), 10)]];\n            var flatRecord = getParentData(this.parent, record.uniqueID);\n            record = flatRecord;\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            for (var j = 0; j < keys.length; j++) {\n                if (Object.prototype.hasOwnProperty.call(flatRecord, keys[parseInt(j.toString(), 10)])) {\n                    flatRecord[keys[parseInt(j.toString(), 10)]] = record[keys[parseInt(j.toString(), 10)]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (!childRecords[parseInt(count.toString(), 10)].isSummaryRow) {\n                    if (childRecords[parseInt(count.toString(), 10)].hasChildRecords) {\n                        this.traverSelection(childRecords[parseInt(count.toString(), 10)], checkboxState, true);\n                    }\n                    else {\n                        this.updateSelectedItems(childRecords[parseInt(count.toString(), 10)], checkboxState);\n                    }\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            for (var i = 0; i < childRecords.length; i++) {\n                var currentRecord = getParentData(this.parent, childRecords[parseInt(i.toString(), 10)].uniqueID);\n                var checkBoxRecord = currentRecord;\n                if (!isNullOrUndefined(checkBoxRecord)) {\n                    if (checkBoxRecord.checkboxState === 'indeterminate') {\n                        indeter++;\n                    }\n                    else if (checkBoxRecord.checkboxState === 'check') {\n                        checkChildRecords++;\n                    }\n                }\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && (!record.hasFilteredChildRecords || isNullOrUndefined(record.hasFilteredChildRecords)) && !isNullOrUndefined(this.parent['dataResults']['actionArgs']) &&\n                (this.parent['dataResults']['actionArgs'].requestType === 'searching' || this.parent['dataResults']['actionArgs'].requestType === 'filtering') && record.checkboxState === 'check') {\n                record.checkboxState = 'check';\n            }\n            else if ((checkChildRecords === 0 && indeter === 0) || (checkChildRecords === 0 && record.hasFilteredChildRecords && !isNullOrUndefined(this.parent['dataResults']['actionArgs']) &&\n                (this.parent['dataResults']['actionArgs'].requestType === 'searching' || this.parent['dataResults']['actionArgs'].requestType === 'filtering') && record.checkboxState === 'check')) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var _this = this;\n        var index = -1;\n        var length = 0;\n        //This property used to maintain the check state of the currentview data after clear filtering\n        var multiFilterCheckState = false;\n        if (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) {\n            var filterResult = this.parent.filterModule.filteredResult;\n            if (this.filteredList.length === 0) {\n                this.filteredList = filterResult;\n            }\n            if (this.parent.grid.searchSettings.key.length) {\n                this.searchingRecords = filterResult;\n            }\n            else {\n                if (this.filteredList !== filterResult) {\n                    this.filteredList = filterResult;\n                    multiFilterCheckState = true;\n                }\n                else {\n                    multiFilterCheckState = false;\n                }\n            }\n        }\n        if (this.filteredList.length > 0) {\n            if (!this.parent.filterSettings.columns.length && this.filteredList.length && !this.parent.grid.searchSettings.key.length) {\n                this.filteredList = [];\n            }\n            if (this.searchingRecords.length && !isNullOrUndefined(checkAll)) {\n                this.filteredList = this.searchingRecords;\n            }\n        }\n        var data;\n        if (!(isNullOrUndefined(this.parent.filterModule)) &&\n            this.parent.filterModule.filteredResult.length === 0 && this.parent.getCurrentViewRecords().length === 0 &&\n            this.parent.filterSettings.columns.length > 0) {\n            data = this.filteredList;\n        }\n        else {\n            data = (!isNullOrUndefined(this.parent.filterModule) &&\n                (this.filteredList.length > 0)) ? this.filteredList : this.parent.flatData;\n        }\n        data = isRemoteData(this.parent) ? this.parent.getCurrentViewRecords() : data;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[parseInt(i.toString(), 10)].checkboxState === 'check') {\n                        continue;\n                    }\n                    if (multiFilterCheckState) {\n                        continue;\n                    }\n                    data[parseInt(i.toString(), 10)].checkboxState = 'check';\n                    this.updateSelectedItems(data[parseInt(i.toString(), 10)], data[parseInt(i.toString(), 10)].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[parseInt(i.toString(), 10)]);\n                    if (index > -1) {\n                        data[parseInt(i.toString(), 10)].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[parseInt(i.toString(), 10)], data[parseInt(i.toString(), 10)].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[parseInt(i.toString(), 10)]);\n                        }\n                    }\n                }\n            }\n        }\n        if (checkAll === false && this.parent.enableVirtualization) {\n            this.selectedItems = [];\n            this.selectedIndexes = [];\n            data.filter(function (rec) {\n                rec.checkboxState = 'uncheck';\n                _this.updateSelectedItems(rec, rec.checkboxState);\n            });\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderContent().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length && !checkAll) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState) {\n        var record = this.parent.grid.currentViewData.filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var checkedRecord;\n        var recordIndex = this.parent.grid.currentViewData.indexOf(record[0]);\n        var checkboxRecord = getParentData(this.parent, currentRecord.uniqueID);\n        var tr = this.parent.getRows()[parseInt(recordIndex.toString(), 10)];\n        var checkbox;\n        if (recordIndex > -1) {\n            var movableTr = void 0;\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                movableTr = this.parent.getMovableDataRows()[parseInt(recordIndex.toString(), 10)];\n            }\n            checkbox = tr.querySelectorAll('.e-frame')[0] ? tr.querySelectorAll('.e-frame')[0]\n                : movableTr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        checkedRecord = checkboxRecord;\n        if (isNullOrUndefined(checkedRecord)) {\n            checkedRecord = currentRecord;\n        }\n        checkedRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && this.parent.enableVirtualization && ((!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(checkedRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(checkedRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n                var chkstate = checkState === 'check' ? 'checked' : checkState === 'uncheck' ? 'unchecked' : 'mixed';\n                tr.querySelector('.e-treecheckselect').setAttribute('aria-checked', checkState === 'check' ? 'true' : checkState === 'uncheck' ? 'false' : 'mixed');\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (isCheckboxcolumn(this.parent)) {\n            if (this.parent.autoCheckHierarchy) {\n                if ((requestType === 'sorting' || requestType === 'paging')) {\n                    var rows = this.parent.grid.getRows();\n                    childData = this.parent.getCurrentViewRecords();\n                    childLength = childData.length;\n                    this.selectedIndexes = [];\n                    for (var i = 0; i < childLength; i++) {\n                        if (!rows[parseInt(i.toString(), 10)].classList.contains('e-summaryrow')) {\n                            this.updateSelectedItems(childData[parseInt(i.toString(), 10)], childData[parseInt(i.toString(), 10)].checkboxState);\n                        }\n                    }\n                }\n                else if (requestType === 'delete' || args.action === 'add') {\n                    var updatedData = [];\n                    if (requestType === 'delete') {\n                        updatedData = args.data;\n                    }\n                    else {\n                        updatedData.push(args.data);\n                    }\n                    for (var i = 0; i < updatedData.length; i++) {\n                        if (requestType === 'delete') {\n                            var index = this.parent.flatData.indexOf(updatedData[parseInt(i.toString(), 10)]);\n                            var checkedIndex = this.selectedIndexes.indexOf(index);\n                            this.selectedIndexes.splice(checkedIndex, 1);\n                            this.updateSelectedItems(updatedData[parseInt(i.toString(), 10)], 'uncheck');\n                        }\n                        if (!isNullOrUndefined(updatedData[parseInt(i.toString(), 10)].parentItem)) {\n                            this.updateParentSelection(updatedData[parseInt(i.toString(), 10)].parentItem);\n                        }\n                    }\n                }\n                else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                    args.data.checkboxState = 'uncheck';\n                }\n                else if (requestType === 'filtering' || requestType === 'searching' || requestType === 'refresh'\n                    && !isRemoteData(this.parent)) {\n                    this.selectedItems = [];\n                    this.selectedIndexes = [];\n                    childData = (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) ?\n                        this.parent.getCurrentViewRecords() : this.parent.flatData;\n                    childData.forEach(function (record) {\n                        if (_this.parent.enableVirtualization) {\n                            if (record.hasChildRecords && record.childRecords.length > 0) {\n                                _this.updateParentSelection(record);\n                            }\n                            else {\n                                _this.updateSelectedItems(record, record.checkboxState);\n                            }\n                            var child = findChildrenRecords(record);\n                            child = _this.getFilteredChildRecords(child);\n                            for (var i = 0; i < child.length; i++) {\n                                if (child[parseInt(i.toString(), 10)].hasChildRecords) {\n                                    _this.updateParentSelection(child[parseInt(i.toString(), 10)]);\n                                }\n                                else if (!(child[parseInt(i.toString(), 10)].hasChildRecords) &&\n                                    !isNullOrUndefined(child[parseInt(i.toString(), 10)])) {\n                                    _this.updateSelectedItems(child[parseInt(i.toString(), 10)], child[parseInt(i.toString(), 10)].checkboxState);\n                                }\n                            }\n                        }\n                        else {\n                            if (record.hasChildRecords) {\n                                _this.updateParentSelection(record);\n                            }\n                            else {\n                                _this.updateSelectedItems(record, record.checkboxState);\n                            }\n                        }\n                    });\n                    this.headerSelection();\n                }\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n *\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Print module name\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    __decorate([\n        Property(true)\n    ], SelectionSettings.prototype, \"enableToggle\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { templateCompiler, extend, CellRenderer } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * TreeGrid render module\n *\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n        this.parent.grid.on('reactTemplateRender', this.reactTemplateRender, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     *\n     * @param {RowDataBoundEventArgs} args - Row details before its bound to DOM\n     * @returns {void}\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        if (!isNullOrUndefined(data.parentItem) && !isFilterChildHierarchy(this.parent) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed && !isNullOrUndefined(args.row)) {\n                args.row.style.display = 'none';\n                var rowsObj = this.parent.grid.getRowsObject();\n                if (!this.parent.grid.isFrozenGrid() && !isNullOrUndefined(args.row.getAttribute('data-uid'))) {\n                    rowsObj.filter(function (e) { return e.uid === args.row.getAttribute('data-uid'); })[0].visible = false;\n                }\n            }\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0 && !parentrec[0].isSummaryRow && !isNullOrUndefined(args.row)) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        //addClass([args.row], 'e-gridrowindex' + index + 'level' + (<ITreeData>args.data).level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (!isNullOrUndefined(args.row)) {\n            if (args.row.querySelector('.e-treegridexpand')) {\n                args.row.setAttribute('aria-expanded', 'true');\n            }\n            else if (args.row.querySelector('.e-treegridcollapse')) {\n                args.row.setAttribute('aria-expanded', 'false');\n            }\n            if (this.parent.enableCollapseAll && this.parent.initialRender) {\n                if (!isNullOrUndefined(data.parentItem)) {\n                    args.row.style.display = 'none';\n                }\n            }\n        }\n        var dragStartData = 'dragStartData';\n        var draggedRecord = 'draggedRecord';\n        if (this.parent.rowDragAndDropModule && this.parent.grid.rowDragAndDropModule && (this.parent.grid.rowDragAndDropModule[\"\" + dragStartData] ||\n            this.parent.rowDragAndDropModule[\"\" + draggedRecord]) && this.parent.getContentTable().scrollHeight <= this.parent.getContent().clientHeight) {\n            var lastRowBorder = 'lastRowBorder';\n            var lastVisualData = this.parent.getVisibleRecords()[this.parent.getVisibleRecords().length - 1];\n            if (lastVisualData.uniqueID === args.data.uniqueID && !isNullOrUndefined(args.row) && !args.row.cells[0].classList.contains('e-lastrowcell')) {\n                this.parent[\"\" + lastRowBorder](args.row, true);\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     *\n     * @param {QueryCellInfoEventArgs} args - Cell detail before its bound to DOM\n     * @returns {void}\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var index;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByUid(args.column.uid);\n        var summaryRow = data.isSummaryRow;\n        var frozenColumns = this.parent.getFrozenColumns();\n        if (!isNullOrUndefined(data.parentItem)) {\n            index = data.parentItem.index;\n        }\n        else {\n            index = data.index;\n        }\n        var columnIndex;\n        var getVirtualColIndexByUid = 'getVirtualColIndexByUid';\n        if (this.parent.enableColumnVirtualization && !this.parent.initialRender) {\n            columnIndex = this.parent[\"\" + getVirtualColIndexByUid](args.column.uid);\n        }\n        else {\n            columnIndex = grid.getColumnIndexByUid(args.column.uid);\n        }\n        if (columnIndex === this.parent.treeColumnIndex && (args.requestType === 'add' || args.requestType\n            === 'rowDragAndDrop' || args.requestType === 'delete' || isNullOrUndefined(args.cell.querySelector('.e-treecell')))) {\n            var container = createElement('div', { className: 'e-treecolumn-container' });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                if (this.parent['isFromGantt'] && !this.parent.loadChildOnDemand) {\n                    iconRequired = data.hasChildRecords;\n                }\n                else {\n                    iconRequired = !(data.childRecords.length === 0);\n                }\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                args.cell.setAttribute('aria-expanded', data.expanded ? 'true' : 'false');\n                var expandIcon = createElement('span', { className: 'e-icons' });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                addClass([expandIcon], (expand) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '4px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', { className: 'e-treecell' });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            this.updateTreeCell(args, cellElement);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        else if (this.templateResult) {\n            this.templateResult = null;\n        }\n        var freeze = (grid.getFrozenLeftColumnsCount() > 0 || grid.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (!freeze) {\n            if (frozenColumns > this.parent.treeColumnIndex && frozenColumns > 0 &&\n                grid.getColumnIndexByUid(args.column.uid) === frozenColumns) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if (frozenColumns < this.parent.treeColumnIndex && frozenColumns > 0 &&\n                (grid.getColumnIndexByUid(args.column.uid) === frozenColumns\n                    || grid.getColumnIndexByUid(args.column.uid) === frozenColumns - 1)) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if (frozenColumns === this.parent.treeColumnIndex && frozenColumns > 0 &&\n                grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex - 1) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n        }\n        else {\n            var freezerightColumns = grid.getFrozenRightColumns();\n            var freezeLeftColumns = grid.getFrozenLeftColumns();\n            var movableColumns = grid.getMovableColumns();\n            if ((freezerightColumns.length > 0) && freezerightColumns[0].field === args.column.field) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if ((freezeLeftColumns.length > 0) && freezeLeftColumns[0].field === args.column.field) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if ((movableColumns.length > 0) && movableColumns[0].field === args.column.field) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                totalIconsWidth += 10;\n                if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n                    cellElement = args.cell.querySelector('.e-treecell');\n                }\n                else {\n                    cellElement = args.cell.querySelector('.e-treecheckbox');\n                }\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            summaryData = isNullOrUndefined(summaryData) ? null : summaryData;\n            if (args.cell.querySelector('.e-treecell') != null) {\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData;\n            }\n            else {\n                if (args.column.template) {\n                    args.cell.innerHTML = null;\n                }\n                else {\n                    args.cell.innerHTML = summaryData;\n                }\n            }\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.updateTreeCell = function (args, cellElement) {\n        var columnModel = getValue('columnModel', this.parent);\n        var treeColumn = columnModel[this.parent.treeColumnIndex];\n        var templateFn = 'templateFn';\n        var colindex = args.column.index;\n        if (isNullOrUndefined(treeColumn.field)) {\n            args.cell.setAttribute('data-colindex', colindex + '');\n        }\n        if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template)) {\n            /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n            args.column.template = treeColumn.template;\n            args.column[\"\" + templateFn] = templateCompiler(args.column.template);\n            args.cell.classList.add('e-templatecell');\n        }\n        var textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            var len = args.cell.children.length;\n            var tempID = this.parent.element.id + args.column.uid;\n            if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template)) {\n                var portals = 'portals';\n                var renderReactTemplates = 'renderReactTemplates';\n                if (this.parent.isReact && typeof (args.column.template) !== 'string') {\n                    args.column[\"\" + templateFn](args.data, this.parent, 'columnTemplate', tempID, null, null, cellElement);\n                    if (isNullOrUndefined(this.parent.grid[\"\" + portals])) {\n                        this.parent.grid[\"\" + portals] = this.parent[\"\" + portals];\n                    }\n                    this.parent.notify('renderReactTemplate', this.parent[\"\" + portals]);\n                    this.parent[\"\" + renderReactTemplates]();\n                }\n                else {\n                    var str = 'isStringTemplate';\n                    var result = args.column[\"\" + templateFn](extend({ 'index': '' }, args.data), this.parent, 'template', tempID, this.parent[\"\" + str]);\n                    appendChildren(cellElement, result);\n                }\n                delete args.column.template;\n                delete args.column[\"\" + templateFn];\n                args.cell.innerHTML = '';\n            }\n            else {\n                for (var i = 0; i < len; len = args.cell.children.length) {\n                    cellElement.appendChild(args.cell.children[parseInt(i.toString(), 10)]);\n                }\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    };\n    /**\n     * @param {string} columnUid - Defines column uid\n     * @returns {void}\n     * @hidden\n     */\n    Render.prototype.refreshReactColumnTemplateByUid = function (columnUid) {\n        var _this = this;\n        if (this.parent.isReact) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.parent.clearTemplate(['columnTemplate'], undefined, function () {\n                var cells = 'cells';\n                var rowIdx = 'index';\n                var rowsObj = _this.parent.grid.getRowsObject();\n                var indent = _this.parent.grid.getIndentCount();\n                var cellIndex = _this.parent.grid.getNormalizedColumnIndex(columnUid);\n                for (var j = 0; j < rowsObj.length; j++) {\n                    if (rowsObj[parseInt(j.toString(), 10)].isDataRow && !isNullOrUndefined(rowsObj[parseInt(j.toString(), 10)].index)) {\n                        var cell = rowsObj[parseInt(j.toString(), 10)][\"\" + cells][parseInt(cellIndex.toString(), 10)];\n                        var cellRenderer = new CellRenderer(_this.parent.grid, _this.parent.grid.serviceLocator);\n                        var td = _this.parent.getCellFromIndex(rowsObj[parseInt(j.toString(), 10)].index, cellIndex - indent);\n                        cellRenderer.refreshTD(td, cell, rowsObj[parseInt(j.toString(), 10)].data, { index: rowsObj[parseInt(j.toString(), 10)][\"\" + rowIdx] });\n                        var treecell = _this.parent.getRows()[parseInt(j.toString(), 10)]\n                            .cells[parseInt(cellIndex.toString(), 10)];\n                        _this.cellRender({ data: rowsObj[parseInt(j.toString(), 10)].data, cell: treecell, column: cell.column });\n                    }\n                }\n            });\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.reactTemplateRender = function (args) {\n        var renderReactTemplates = 'renderReactTemplates';\n        var portals = 'portals';\n        this.parent[\"\" + portals] = args;\n        this.parent.notify('renderReactTemplate', this.parent[\"\" + portals]);\n        this.parent[\"\" + renderReactTemplates]();\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n        this.parent.grid.off('reactTemplateRender', this.reactTemplateRender);\n    };\n    return Render;\n}());\nexport { Render };\n","import { extend, isNullOrUndefined, setValue, getValue, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, isCountRequired, getExpandStatus } from '../utils';\nimport * as events from './constant';\n/**\n * Internal dataoperations for tree grid\n *\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.addedRecords = 'addedRecords';\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {boolean} -Returns whether remote data binding\n     */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     *\n     * @param {Object} data - Provide tree grid datasource to convert to flat data\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 && !(this.parent.dataSource instanceof DataManager) ?\n            this.parent.dataSource : []);\n        this.parent.parentData = [];\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    var filterKey = this.parent.query.params.filter(function (param) { return param.key === 'IdMapping'; });\n                    if (this.parent.initialRender && !filterKey.length) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                if (!this.parent.hasChildMapping) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.convertJSONData(data);\n        }\n    };\n    DataManipulation.prototype.convertJSONData = function (data) {\n        this.hierarchyData = [];\n        this.taskIds = [];\n        if (!this.parent.idMapping) {\n            this.hierarchyData = data;\n        }\n        else {\n            var keys = Object.keys(data);\n            for (var i = 0; i < keys.length; i++) {\n                var tempData = data[parseInt(i.toString(), 10)];\n                this.hierarchyData.push(extend({}, tempData));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n        }\n        if (this.isSelfReference) {\n            var selfData = [];\n            var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                .group(this.parent.parentIdMapping));\n            for (var i = 0; i < mappingData.length; i++) {\n                var groupData = mappingData[parseInt(i.toString(), 10)];\n                var index = this.taskIds.indexOf(groupData.key);\n                if (!isNullOrUndefined(groupData.key)) {\n                    if (index > -1) {\n                        var childData = (groupData.items);\n                        this.hierarchyData[parseInt(index.toString(), 10)][this.parent.childMapping] = childData;\n                        continue;\n                    }\n                }\n                selfData.push.apply(selfData, groupData.items);\n            }\n            this.hierarchyData = this.selfReferenceUpdate(selfData);\n        }\n        if (!Object.keys(this.hierarchyData).length) {\n            var isGantt = 'isGantt';\n            var referenceData = !(this.parent.dataSource instanceof DataManager) && this.parent[\"\" + isGantt];\n            this.parent.flatData = referenceData ? (this.parent.dataSource) : [];\n        }\n        else {\n            this.createRecords(this.hierarchyData);\n        }\n        this.storedIndex = -1;\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     *\n     * @param {BeforeDataBoundArgs} args - contains data before its bounds to tree grid\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var actionArgs = 'actionArgs';\n        if (isRemoteData(this.parent) && this.parent.enableVirtualization && args[\"\" + actionArgs].requestType === 'virtualscroll') {\n            this.parent.hideSpinner();\n        }\n        var records = args.result;\n        if (isRemoteData(this.parent) && this.parent.enableVirtualization && (args[\"\" + actionArgs].requestType === 'virtualscroll' || args[\"\" + actionArgs].action === 'clearFilter' || args[\"\" + actionArgs].searchString === '')) {\n            this.parent.query.expands = [];\n        }\n        if (!this.parent.hasChildMapping && !this.parentItems.length &&\n            (!this.parent.loadChildOnDemand)) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!this.parent.loadChildOnDemand) {\n                var _loop_1 = function (rec) {\n                    if (isCountRequired(this_1.parent) && records[parseInt(rec.toString(), 10)].hasChildRecords &&\n                        this_1.parent.initialRender) {\n                        records[parseInt(rec.toString(), 10)].expanded = false;\n                    }\n                    if (isRemoteData(this_1.parent) && this_1.parent.enableVirtualization) {\n                        var childRecords_1 = [];\n                        var parent_1 = this_1.parent;\n                        records.filter(function (e) {\n                            if (e[\"\" + parent_1.parentIdMapping] === records[parseInt(rec.toString(), 10)][\"\" + parent_1.idMapping]) {\n                                childRecords_1.push(e);\n                            }\n                        });\n                        if (childRecords_1.length) {\n                            records[parseInt(rec.toString(), 10)].expanded = true;\n                        }\n                        else if (records[parseInt(rec.toString(), 10)].hasChildRecords) {\n                            records[parseInt(rec.toString(), 10)].expanded = false;\n                        }\n                    }\n                    if (isNullOrUndefined(records[parseInt(rec.toString(), 10)].index)) {\n                        records[parseInt(rec.toString(), 10)].taskData = extend({}, records[parseInt(rec.toString(), 10)]);\n                        records[parseInt(rec.toString(), 10)].uniqueID = getUid(this_1.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + records[parseInt(rec.toString(), 10)].uniqueID, records[parseInt(rec.toString(), 10)], this_1.parent);\n                        records[parseInt(rec.toString(), 10)].level = 0;\n                        if (isRemoteData(this_1.parent) && this_1.parent.enableVirtualization && records[parseInt(rec.toString(), 10)][\"\" + this_1.parent.parentIdMapping] && records[parseInt(rec.toString(), 10)].level === 0) {\n                            records[parseInt(rec.toString(), 10)].level = records[parseInt(rec.toString(), 10)].level + 1;\n                        }\n                        records[parseInt(rec.toString(), 10)].index = Math.ceil(Math.random() * 1000);\n                        if ((records[parseInt(rec.toString(), 10)][this_1.parent.hasChildMapping] ||\n                            this_1.parentItems.indexOf(records[parseInt(rec.toString(), 10)][this_1.parent.idMapping]) !== -1)) {\n                            records[parseInt(rec.toString(), 10)].hasChildRecords = true;\n                        }\n                        records[parseInt(rec.toString(), 10)].checkboxState = 'uncheck';\n                    }\n                };\n                var this_1 = this;\n                for (var rec = 0; rec < records.length; rec++) {\n                    _loop_1(rec);\n                }\n            }\n            else {\n                var dataResults = 'dataResults';\n                var expandRecord = 'expandRecord';\n                if (!isNullOrUndefined(records) && !((this.parent.loadChildOnDemand) && isCountRequired(this.parent) && !isNullOrUndefined(this.parent[\"\" + dataResults][\"\" + expandRecord])) &&\n                    !(isRemoteData(this.parent) && this.parent.loadChildOnDemand && args[\"\" + actionArgs].isExpandCollapse && this.parent.enableVirtualization)) {\n                    this.convertToFlatData(records);\n                }\n            }\n        }\n        if (isRemoteData(this.parent) && this.parent.loadChildOnDemand && args[\"\" + actionArgs].isExpandCollapse && this.parent.enableVirtualization) {\n            args.result = records;\n        }\n        else if (isRemoteData(this.parent) && this.parent.enableVirtualization && !this.parent.loadChildOnDemand) {\n            args.result = records;\n        }\n        else {\n            args.result = this.parent.loadChildOnDemand ? this.parent.flatData : records;\n        }\n        if (isRemoteData(this.parent) && this.parent.enableVirtualization && this.parent.loadChildOnDemand\n            && this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var query = 'query';\n            var summaryQuery = args[\"\" + query].queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            args.result = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     *\n     * @param {{record: ITreeData, rows: HTMLTableRowElement[], parentRow: HTMLTableRowElement}} rowDetails - Row details for which child rows has to be fetched\n     * @param {ITreeData} rowDetails.record - current expanding record\n     * @param {HTMLTableRowElement[]} rowDetails.rows - Expanding Row element\n     * @param {HTMLTableRowElement} rowDetails.parentRow  - Curent expanding row element\n     * @param {boolean} isChild - Specified whether current record is already a child record\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails, isChild) {\n        var gridRows = this.parent.getRows();\n        var name = 'name';\n        if (this.parent.rowTemplate) {\n            var rows = this.parent.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var childRecord;\n        if (rowDetails.rows.length > 0) {\n            if (!isChild) {\n                rowDetails.record.expanded = true;\n            }\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                rowDetails.rows[parseInt(i.toString(), 10)].style.display = 'table-row';\n                if (this.parent.loadChildOnDemand) {\n                    var targetEle = rowDetails.rows[parseInt(i.toString(), 10)].getElementsByClassName('e-treegridcollapse')[0];\n                    childRecord = this.parent.rowTemplate ?\n                        this.parent.grid.getCurrentViewRecords()[rowDetails.rows[parseInt(i.toString(), 10)].rowIndex] :\n                        this.parent.grid.getRowObjectFromUID(rowDetails.rows[parseInt(i.toString(), 10)].getAttribute('data-Uid')).data;\n                    if (!isNullOrUndefined(targetEle) && childRecord.expanded) {\n                        addClass([targetEle], 'e-treegridexpand');\n                        removeClass([targetEle], 'e-treegridcollapse');\n                    }\n                    var childRows = [];\n                    childRows = gridRows.filter(function (r) {\n                        return r.querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1));\n                    });\n                    if (childRows.length && childRecord.expanded) {\n                        this.collectExpandingRecs({ record: childRecord, rows: childRows, parentRow: rowDetails.parentRow }, true);\n                    }\n                }\n                var expandingTd = rowDetails.rows[parseInt(i.toString(), 10)].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            }\n        }\n        else {\n            this.fetchRemoteChildData({ action: rowDetails[\"\" + name], record: rowDetails.record, rows: rowDetails.rows, parentRow: rowDetails.parentRow });\n        }\n    };\n    DataManipulation.prototype.fetchRemoteChildData = function (rowDetails) {\n        var _this = this;\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        var dm = this.parent.dataSource;\n        var qry = this.parent.grid.getDataModule().generateQuery();\n        var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n        qry.queries = clonequries;\n        qry.isCountRequired = true;\n        if (this.parent.enableVirtualization && rowDetails.action === 'remoteExpand') {\n            qry.take(this.parent.pageSettings.pageSize);\n            var expandDetail = [];\n            expandDetail.push('ExpandingAction', parseInt(rowDetails.record[this.parent.idMapping], 10).toString());\n            qry.expand(expandDetail);\n        }\n        else if (this.parent.enableVirtualization && rowDetails.action === 'collapse') {\n            qry.take(this.parent.grid.pageSettings.pageSize);\n            var expandDetail = [];\n            expandDetail.push('CollapsingAction', parseInt(rowDetails.record[this.parent.idMapping], 10).toString());\n            qry.expand(expandDetail);\n        }\n        qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n        if (rowDetails.action === 'remoteExpand' && this.parent.grid.filterModule && this.parent.grid.filterModule['value']) {\n            var filterqry = this.parent.grid.getDataModule().generateQuery().queries.filter(function (e) { return e.fn !== 'onPage' && typeof e.e.predicates !== 'undefined'; });\n            qry.queries.push(filterqry[0]);\n        }\n        showSpinner(this.parent.element);\n        dm.executeQuery(qry).then(function (e) {\n            var remoteExpandedData = 'remoteExpandedData';\n            var remoteCollapsedData = 'remoteCollapsedData';\n            var level = 'level';\n            var datas = _this.parent.grid.currentViewData.slice();\n            var inx = datas.indexOf(rowDetails.record);\n            if (_this.parent.enableVirtualization && (rowDetails.action === 'collapse' || rowDetails.action === 'remoteExpand')) {\n                datas = [];\n                for (var i = 0; i < inx; i++) {\n                    datas.push(_this.parent.grid.currentViewData[parseInt(i.toString(), 10)]);\n                }\n            }\n            if (inx === -1) {\n                _this.parent.grid.getRowsObject().forEach(function (rows) {\n                    if (rows.data.uniqueID === rowDetails.record.uniqueID) {\n                        inx = rows.index;\n                    }\n                });\n            }\n            var haveChild = getObject('actual.nextLevel', e);\n            var result = e.result;\n            var resultChildData = [];\n            if (rowDetails.action === 'remoteExpand' && _this.parent.grid.filterModule && _this.parent.grid.filterModule['value']) {\n                for (var i = 0; i < datas.length; i++) {\n                    if (Object.prototype.hasOwnProperty.call(datas[parseInt(i.toString(), 10)], _this.parent.parentIdMapping) && datas[parseInt(i.toString(), 10)]['' + _this.parent.parentIdMapping] !== null && datas[parseInt(i.toString(), 10)].level === 0) {\n                        datas.splice(i, 1);\n                        i--;\n                    }\n                }\n                for (var i = 0; i < result.length; i++) {\n                    if (rowDetails.record['' + _this.parent.idMapping] !== result[parseInt(i.toString(), 10)]['' + _this.parent.idMapping] &&\n                        rowDetails.record['' + _this.parent.idMapping] === result[parseInt(i.toString(), 10)]['' + _this.parent.parentIdMapping]) {\n                        if (Object.prototype.hasOwnProperty.call(result, i)) {\n                            resultChildData.push(result[parseInt(i.toString(), 10)]);\n                        }\n                    }\n                }\n                result = resultChildData;\n            }\n            if (_this.parent.enableVirtualization && rowDetails.action === 'remoteExpand') {\n                rowDetails.record.childRecords = [];\n                for (var i = 0; i < result.length; i++) {\n                    if (rowDetails.record['' + _this.parent.idMapping] !== result[parseInt(i.toString(), 10)]['' + _this.parent.idMapping] &&\n                        rowDetails.record['' + _this.parent.idMapping] === result[parseInt(i.toString(), 10)]['' + _this.parent.parentIdMapping] && Object.prototype.hasOwnProperty.call(result, i)) {\n                        rowDetails.record.childRecords.push(result[parseInt(i.toString(), 10)]);\n                    }\n                }\n            }\n            else {\n                rowDetails.record.childRecords = result;\n            }\n            for (var r = 0; r < result.length; r++) {\n                if (_this.parent.enableVirtualization && result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping] === rowDetails.record[\"\" + _this.parent.idMapping] && rowDetails.action === 'remoteExpand') {\n                    _this.parent[\"\" + remoteExpandedData].push(rowDetails.record);\n                }\n                else if (_this.parent.enableVirtualization && result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping] === rowDetails.record[\"\" + _this.parent.idMapping] && rowDetails.action === 'collapse') {\n                    for (var i = 0; i < _this.parent[\"\" + remoteExpandedData].length; i++) {\n                        if (rowDetails.record[\"\" + _this.parent.idMapping] === _this.parent[\"\" + remoteExpandedData][parseInt(i.toString(), 10)][\"\" + _this.parent.idMapping]) {\n                            _this.parent[\"\" + remoteExpandedData].splice(i, 1);\n                        }\n                    }\n                }\n                result[parseInt(r.toString(), 10)].taskData = extend({}, result[parseInt(r.toString(), 10)]);\n                if (result[parseInt(r.toString(), 10)][\"\" + _this.parent.parentIdMapping] && _this.parent.enableVirtualization && _this.parent[\"\" + remoteExpandedData].length) {\n                    for (var i = 0; i < _this.parent[\"\" + remoteExpandedData].length; i++) {\n                        if (result[parseInt(r.toString(), 10)][\"\" + _this.parent.parentIdMapping] === _this.parent[\"\" + remoteExpandedData][parseInt(i.toString(), 10)][\"\" + _this.parent.idMapping]) {\n                            result[parseInt(r.toString(), 10)].level = _this.parent[\"\" + remoteExpandedData][parseInt(i.toString(), 10)][\"\" + level] + 1;\n                            var parentData = _this.parent[\"\" + remoteExpandedData][parseInt(i.toString(), 10)];\n                            delete parentData.childRecords;\n                            result[parseInt(r.toString(), 10)].parentItem = parentData;\n                            result[parseInt(r.toString(), 10)].parentUniqueID = rowDetails.record.uniqueID;\n                        }\n                    }\n                }\n                else if (_this.parent.enableVirtualization) {\n                    if ((result[parseInt(r.toString(), 10)][\"\" + _this.parent.hasChildMapping] ||\n                        _this.parentItems.indexOf(result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping]) !== -1)\n                        && !(haveChild && !haveChild[parseInt(r.toString(), 10)])) {\n                        if (isNullOrUndefined(result[parseInt(r.toString(), 10)][\"\" + _this.parent.parentIdMapping])) {\n                            result[parseInt(r.toString(), 10)].level = 0;\n                            if (rowDetails.action === 'remoteExpand') {\n                                result[parseInt(r.toString(), 10)].childRecords = [];\n                                result[parseInt(r.toString(), 10)].childRecords = rowDetails.record.childRecords;\n                            }\n                        }\n                        else {\n                            result[parseInt(r.toString(), 10)].level = rowDetails.record.level;\n                        }\n                    }\n                    else {\n                        var parentData = extend({}, rowDetails.record);\n                        delete parentData.childRecords;\n                        result[parseInt(r.toString(), 10)].parentItem = parentData;\n                        result[parseInt(r.toString(), 10)].parentUniqueID = rowDetails.record.uniqueID;\n                    }\n                }\n                else {\n                    result[parseInt(r.toString(), 10)].level = rowDetails.record.level + 1;\n                    var parentData = extend({}, rowDetails.record);\n                    delete parentData.childRecords;\n                    result[parseInt(r.toString(), 10)].parentItem = parentData;\n                    result[parseInt(r.toString(), 10)].parentUniqueID = rowDetails.record.uniqueID;\n                }\n                result[parseInt(r.toString(), 10)].index = Math.ceil(Math.random() * 1000);\n                result[parseInt(r.toString(), 10)].uniqueID = getUid(_this.parent.element.id + '_data_');\n                result[parseInt(r.toString(), 10)].checkboxState = 'uncheck';\n                if (_this.parent.enableVirtualization && isNullOrUndefined(result[parseInt(r.toString(), 10)].level)) {\n                    for (var p = 0; p < _this.parent.grid.currentViewData.length; p++) {\n                        if (_this.parent.grid.currentViewData[parseInt(p.toString(), 10)][\"\" + _this.parent.idMapping] === result[parseInt(r.toString(), 10)][\"\" + _this.parent.parentIdMapping]) {\n                            result[parseInt(r.toString(), 10)].level = _this.parent.grid.currentViewData[parseInt(p.toString(), 10)]['level'] + 1;\n                        }\n                    }\n                }\n                setValue('uniqueIDCollection.' + result[parseInt(r.toString(), 10)].uniqueID, result[parseInt(r.toString(), 10)], _this.parent);\n                // delete result[r].parentItem.childRecords;\n                if ((result[parseInt(r.toString(), 10)][\"\" + _this.parent.hasChildMapping] ||\n                    _this.parentItems.indexOf(result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping]) !== -1)\n                    && !(haveChild && !haveChild[parseInt(r.toString(), 10)])) {\n                    result[parseInt(r.toString(), 10)].hasChildRecords = true;\n                    if (_this.parent.enableVirtualization && _this.parent.loadChildOnDemand) {\n                        for (var i = 0; i < _this.parent[\"\" + remoteCollapsedData].length; i++) {\n                            if (result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping] === _this.parent[\"\" + remoteCollapsedData][parseInt(i.toString(), 10)][\"\" + _this.parent.idMapping]) {\n                                result[parseInt(r.toString(), 10)].expanded = _this.parent[\"\" + remoteCollapsedData][parseInt(i.toString(), 10)]['expanded'];\n                            }\n                        }\n                        if (rowDetails.action === 'collapse' && result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping] !== rowDetails.record[\"\" + _this.parent.idMapping] && result[parseInt(r.toString(), 10)].expanded !== false) {\n                            result[parseInt(r.toString(), 10)].expanded = true;\n                        }\n                        else if (rowDetails.action === 'collapse' && result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping] === rowDetails.record[\"\" + _this.parent.idMapping]) {\n                            result[parseInt(r.toString(), 10)].expanded = false;\n                            _this.parent[\"\" + remoteCollapsedData].push(rowDetails.record);\n                        }\n                        else if (rowDetails.action === 'remoteExpand') {\n                            for (var i = 0; i < _this.parent.grid.currentViewData.length; i++) {\n                                if (_this.parent.grid.currentViewData[parseInt(i.toString(), 10)][\"\" + _this.parent.idMapping] === result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping]) {\n                                    result.splice(r, 1, _this.parent.grid.currentViewData[parseInt(i.toString(), 10)]);\n                                }\n                            }\n                            if (result[parseInt(r.toString(), 10)][_this.parent.idMapping] === rowDetails.record[\"\" + _this.parent.idMapping]) {\n                                for (var i = 0; i < _this.parent[\"\" + remoteCollapsedData].length; i++) {\n                                    if (rowDetails.record[\"\" + _this.parent.idMapping] === _this.parent[\"\" + remoteCollapsedData][parseInt(i.toString(), 10)][\"\" + _this.parent.idMapping]) {\n                                        _this.parent[\"\" + remoteCollapsedData].splice(i, 1);\n                                    }\n                                }\n                            }\n                            if (result[parseInt(r.toString(), 10)].expanded !== false) {\n                                result[parseInt(r.toString(), 10)].expanded = true;\n                            }\n                        }\n                    }\n                    else if (_this.parent.enableVirtualization && result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping] === rowDetails.record[\"\" + _this.parent.idMapping] && rowDetails.action !== 'collapse') {\n                        result[parseInt(r.toString(), 10)].expanded = true;\n                    }\n                    else if (!(_this.parent.enableVirtualization && _this.parent.loadChildOnDemand)) {\n                        result[parseInt(r.toString(), 10)].expanded = false;\n                    }\n                }\n                datas.splice(inx + r + 1, 0, result[parseInt(r.toString(), 10)]);\n            }\n            setValue('result', datas, e);\n            setValue('action', 'beforecontentrender', e);\n            _this.parent.trigger(events.actionComplete, e);\n            hideSpinner(_this.parent.element);\n            if (_this.parent.grid.aggregates.length > 0 && !_this.parent.enableVirtualization) {\n                var gridQuery = getObject('query', e);\n                var result_1 = 'result';\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', _this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(gridQuery)) {\n                    var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    e[\"\" + result_1] = _this.parent.summaryModule.calculateSummaryValue(summaryQuery, e[\"\" + result_1], true);\n                }\n            }\n            if (_this.parent.enableVirtualization) {\n                _this.parent.grid.pageSettings.totalRecordsCount = e.count;\n            }\n            e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n            var virtualArgs = {};\n            if (_this.parent.enableVirtualization) {\n                _this.remoteVirtualAction(virtualArgs);\n            }\n            var notifyArgs = { index: inx, childData: result };\n            if (_this.parent.enableInfiniteScrolling) {\n                _this.parent.notify('infinite-remote-expand', notifyArgs);\n            }\n            else {\n                getValue('grid.renderModule', _this.parent).dataManagerSuccess(e, virtualArgs);\n            }\n            _this.parent.trigger(events.expanded, args);\n        });\n    };\n    DataManipulation.prototype.remoteVirtualAction = function (virtualArgs) {\n        virtualArgs.requestType = 'refresh';\n        setValue('isExpandCollapse', true, virtualArgs);\n        var contentModule = getValue('grid.contentModule', this.parent);\n        var currentInfo = getValue('currentInfo', contentModule);\n        var prevInfo = getValue('prevInfo', contentModule);\n        if (currentInfo.loadNext && this.parent.grid.pageSettings.currentPage === currentInfo.nextInfo.page) {\n            this.parent.grid.pageSettings.currentPage = prevInfo.page;\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n        if (isRemoteData(this.parent) && this.parent.enableVirtualization) {\n            var index = this.parent.query.queries.indexOf(this.parent.query.queries.filter(function (q) { return q.fn === 'onSortBy'; })[0]);\n            if (index !== -1) {\n                this.parent.query.queries.splice(index, 1);\n            }\n            if (this.parent.grid.sortSettings.columns.length === 0) {\n                this.parent.query.sortBy(null, null);\n            }\n        }\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        var treeGridData = [];\n        var keys = Object.keys(data);\n        for (var i = 0, len = keys.length; i < len; i++) {\n            var currentData = extend({}, data[parseInt(i.toString(), 10)]);\n            currentData.taskData = data[parseInt(i.toString(), 10)];\n            var level = 0;\n            this.storedIndex++;\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'index')) {\n                currentData.index = this.storedIndex;\n            }\n            if ((!isNullOrUndefined(currentData[this.parent.childMapping]) && !isCountRequired(this.parent)) ||\n                ((currentData[this.parent.hasChildMapping]) && isCountRequired(this.parent))) {\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll || !isNullOrUndefined(this.parent.dataStateChange)\n                    && isNullOrUndefined(currentData[this.parent.childMapping])) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'index')) {\n                currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            }\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                if (this.isSelfReference) {\n                    delete parentData.taskData[this.parent.childMapping];\n                }\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'level')) {\n                currentData.level = level;\n            }\n            currentData.checkboxState = 'uncheck';\n            var remoteCollapsedData = 'remoteCollapsedData';\n            if (this.parent.enableVirtualization && this.parent.loadChildOnDemand && isRemoteData(this.parent)\n                && !this.parent.initialRender) {\n                if (!currentData.hasChildRecords && isNullOrUndefined(currentData[\"\" + this.parent.parentIdMapping])) {\n                    currentData.hasChildRecords = true;\n                    for (var c = 0; c < this.parent[\"\" + remoteCollapsedData].length; c++) {\n                        if (this.parent[\"\" + remoteCollapsedData][parseInt(c.toString(), 10)][\"\" + this.parent.idMapping] === currentData[\"\" + this.parent.idMapping]) {\n                            currentData.expanded = false;\n                        }\n                    }\n                }\n                else if (currentData.level === 0 && isNullOrUndefined(parentRecords) && !currentData.hasChildRecords) {\n                    currentData.level = currentData.level + 1;\n                }\n                if (currentData[\"\" + this.parent.hasChildMapping] && !isNullOrUndefined(currentData[\"\" + this.parent.expandStateMapping])) {\n                    currentData.expanded = currentData[\"\" + this.parent.expandStateMapping];\n                    currentData.hasChildRecords = true;\n                }\n                this.parent.flatData.push(currentData);\n            }\n            else if (isNullOrUndefined(currentData[\"\" + this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n                this.parent['infiniteScrollData'].push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                var record = this.createRecords(currentData[this.parent.childMapping], currentData);\n                currentData.childRecords = record;\n            }\n            treeGridData.push(currentData);\n        }\n        return treeGridData;\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     *\n     * @param {BeforeDataBoundArgs} args - data details to be processed before binding to grid\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var isPrinting = getObject('isPrinting', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        var actionAddArgs = actionArgs;\n        var primaryKeyColumnName = this.parent.getPrimaryKeyFieldNames()[0];\n        var dataValue = getObject('data', actionAddArgs);\n        if ((!isNullOrUndefined(actionAddArgs)) && (!isNullOrUndefined(actionAddArgs.action)) && (actionAddArgs.action === 'add')\n            && (!isNullOrUndefined(actionAddArgs.data)) && isNullOrUndefined(actionAddArgs.data[\"\" + primaryKeyColumnName])) {\n            actionAddArgs.data[\"\" + primaryKeyColumnName] = args.result[actionAddArgs.index][\"\" + primaryKeyColumnName];\n            dataValue.taskData[\"\" + primaryKeyColumnName] = args.result[actionAddArgs.index][\"\" + primaryKeyColumnName];\n        }\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType;\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (this.parent.editSettings.mode === 'Batch') {\n                this.batchChanges = this.parent.grid.editModule.getBatchChanges();\n            }\n            if (this.parent.isLocalData) {\n                this.updateAction(actionData, action, requestType);\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = isCountRequired(this.parent) ? getValue('result', this.parent.grid.dataSource)\n                : this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var qry = new Query();\n        var gridQuery = getObject('query', args);\n        var filterQuery;\n        var searchQuery;\n        if (!isNullOrUndefined(gridQuery)) {\n            filterQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            searchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n        }\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0) || (!isNullOrUndefined(gridQuery) &&\n            (filterQuery.length || searchQuery.length) && this.parent.isLocalData)) {\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery_1 = getObject('query', args);\n            if (isNullOrUndefined(gridQuery_1)) {\n                gridQuery_1 = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = this.parent.parentData;\n            var query = getObject('query', args);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var getColumnByField = 'getColumnByField';\n                var col = this.parent.grid.renderModule.data[\"\" + getColumnByField](this.parent.grid.\n                    sortSettings.columns[parseInt(srt.toString(), 10)].field);\n                var compFun = col.sortComparer && isOffline(this.parent) ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[parseInt(srt.toString(), 10)].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[parseInt(srt.toString(), 10)].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            if (this.parent.allowRowDragAndDrop && !isNullOrUndefined(this.parent.rowDragAndDropModule['draggedRecord']) &&\n                this.parent.rowDragAndDropModule['droppedRecord'].hasChildRecords && this.parent.rowDragAndDropModule['dropPosition'] !== 'middleSegment') {\n                var dragdIndex = modifiedData.indexOf(this.parent.rowDragAndDropModule['draggedRecord']);\n                modifiedData.splice(dragdIndex, 1);\n                var dropdIndex = modifiedData.indexOf(this.parent.rowDragAndDropModule['droppedRecord']);\n                if (this.parent.rowDragAndDropModule['droppedRecord'].hasChildRecords && this.parent.rowDragAndDropModule['dropPosition'] === 'topSegment') {\n                    modifiedData.splice(dropdIndex, 0, this.parent.rowDragAndDropModule['draggedRecord']);\n                }\n                else if (this.parent.rowDragAndDropModule['dropPosition'] === 'bottomSegment') {\n                    modifiedData.splice(dropdIndex + 1, 0, this.parent.rowDragAndDropModule['draggedRecord']);\n                }\n            }\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var temp = this.paging(results, count, isExport, isPrinting, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, isPrinting, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')\n            && (!isPrinting || this.parent.printMode === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n                : this.dataResults.count;\n        }\n        else if ((this.parent.enableVirtualization || this.parent.enableInfiniteScrolling) && (!isExport || exportType === 'CurrentPage')\n            && getValue('requestType', args) !== 'save') {\n            var actArgs = this.parent.enableInfiniteScrolling ? args : getValue('actionArgs', args);\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: actArgs });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        var isPdfExport = 'isPdfExport';\n        var isCollapsedStatePersist = 'isCollapsedStatePersist';\n        if ((isPrinting === true || (args[\"\" + isPdfExport] && (isNullOrUndefined(args[\"\" + isCollapsedStatePersist])\n            || args[\"\" + isCollapsedStatePersist]))) && this.parent.printMode === 'AllPages') {\n            var actualResults = [];\n            for (var i = 0; i < results.length; i++) {\n                var expandStatus = getExpandStatus(this.parent, results[parseInt(i.toString(), 10)], this.parent.parentData);\n                if (expandStatus) {\n                    actualResults.push(results[parseInt(i.toString(), 10)]);\n                }\n            }\n            results = actualResults;\n            count = results.length;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    DataManipulation.prototype.updateAction = function (actionData, action, requestType) {\n        if ((requestType === 'delete' || requestType === 'save')) {\n            this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n        }\n        if (requestType === 'batchsave' && this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify(events.batchSave, {});\n        }\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n *\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n *\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n    ContextMenuItems[ContextMenuItems[\"RowIndent\"] = 16] = \"RowIndent\";\n    ContextMenuItems[ContextMenuItems[\"RowOutdent\"] = 17] = \"RowOutdent\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * Custom format function\n     *\n     * @hidden\n     * @param {string} cultureName - culture name to format\n     * @returns {void}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @param {NumberFormatOptions | DateFormatOptions} format - formatting options for number and date values\n     * @hidden\n     * @returns {Function} - return formatter function\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {Function} - Returns formatter function\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @param {Object} helper - Specified the helper\n     * @hidden\n     * @returns {void}\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @param {CellType} type - specifies the cell type\n     * @returns {Object} returns the object\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @param {Object} prop - updates aggregate properties without change detection\n     * @hidden\n     * @returns {void}\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowNextRowEdit\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the infinite scroll behavior of Tree Grid.\n */\nvar InfiniteScrollSettings = /** @class */ (function (_super) {\n    __extends(InfiniteScrollSettings, _super);\n    function InfiniteScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], InfiniteScrollSettings.prototype, \"enableCache\", void 0);\n    __decorate([\n        Property(3)\n    ], InfiniteScrollSettings.prototype, \"maxBlocks\", void 0);\n    __decorate([\n        Property(3)\n    ], InfiniteScrollSettings.prototype, \"initialBlocks\", void 0);\n    return InfiniteScrollSettings;\n}(ChildProperty));\nexport { InfiniteScrollSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend, merge, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, getValue } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { RowDropSettings, getUid } from '@syncfusion/ej2-grids';\nimport { LoadingIndicator } from '../models/loading-indicator';\nimport { FilterSettings } from '../models/filter-settings';\nimport { TextWrapSettings } from '../models/textwrap-settings';\nimport { Logger as TreeLogger } from '../actions/logger';\nimport { TreeClipboard } from '../actions/clipboard';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, Query, JsonAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray, isCountRequired, findChildrenRecords } from '../utils';\nimport { Grid, Logger } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\nimport { isHidden, getExpandStatus } from '../utils';\nimport { editAction } from '../actions/crud-actions';\nimport { InfiniteScrollSettings } from '../models/infinite-scroll-settings';\nimport * as literals from '../base/constant';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        _this.changedRecords = 'changedRecords';\n        _this.deletedRecords = 'deletedRecords';\n        _this.addedRecords = 'addedRecords';\n        _this.indentOutdentAction = 'indentOutdentAction';\n        _this.modifiedRecords = [];\n        _this.stackedHeader = false;\n        _this.objectEqualityChecker = function (old, current) {\n            if (old) {\n                var keys = Object.keys(old);\n                var isEqual = true;\n                var excludeKeys = ['Children', 'childRecords', 'taskData', 'uniqueID', 'parentItem', 'parentUniqueID', 'index'];\n                for (var i = 0; i < keys.length; i++) {\n                    if (old[keys[parseInt(i.toString(), 10)]] !== current[keys[parseInt(i.toString(), 10)]] &&\n                        excludeKeys.indexOf(keys[parseInt(i.toString(), 10)]) === -1) {\n                        var isDate = old[keys[parseInt(i.toString(), 10)]] instanceof Date &&\n                            current[keys[parseInt(i.toString(), 10)]] instanceof Date;\n                        if (!isDate || (old[keys[parseInt(i.toString(), 10)]].getTime() !==\n                            current[keys[parseInt(i.toString(), 10)]].getTime())) {\n                            isEqual = false;\n                            break;\n                        }\n                    }\n                }\n                return isEqual;\n            }\n            else {\n                return false;\n            }\n        };\n        TreeGrid_1.Inject(TreeGridSelection);\n        setValue('mergePersistData', _this.mergePersistTreeGridData, _this);\n        var logger = 'Logger';\n        if (!isNullOrUndefined(_this.injectedModules[\"\" + logger])) {\n            Grid.Inject(Logger);\n        }\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     *\n     * @param  {ExcelExportProperties | TreeGridExcelExportProperties} excelExportProperties - Defines the export properties of the Tree Grid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     */\n    /* eslint-disable */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        /* eslint-enable */\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     *\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     */\n    /* eslint-disable */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        /* eslint-enable */\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     *\n     * @param {PdfExportProperties | TreeGridPdfExportProperties} pdfExportProperties - Defines the export properties of the Tree Grid.\n     * @param {boolean} isMultipleExport - Define to enable multiple export.\n     * @param {Object} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns TreeGrid module name\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            Child: 'Child',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n            RowIndent: 'Indent',\n            RowOutdent: 'Outdent'\n        };\n        this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     *\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @returns {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        if (this.sortModule) {\n            this.sortModule.sortColumn(columnName, direction, isMultiSort);\n        }\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     *\n     * @param {string} field - Defines the column field name to remove sort.\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        if (this.sortModule) {\n            this.sortModule.removeSortColumn(field);\n        }\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./#searchsettings/).\n     *\n     * @param  {string} searchString - Defines the key.\n     * @returns {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     *\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @returns {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     *\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @returns {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        var locale = L10n.locale;\n        var localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./#printmode).\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            var target = void 0;\n            var parentTarget = void 0;\n            var column = void 0;\n            var row = void 0;\n            var summaryElement = void 0;\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    target = e.target;\n                    column = target.closest('.e-rowcell');\n                    if (!isNullOrUndefined(column)) {\n                        row = column.closest('tr');\n                        if (!isNullOrUndefined(row) && !(isNullOrUndefined(row.getElementsByClassName('e-treegridexpand')[0]))) {\n                            this.expandCollapseRequest(row.querySelector('.e-treegridexpand'));\n                        }\n                    }\n                    break;\n                case 'ctrlShiftDownArrow':\n                    target = e.target;\n                    column = target.closest('.e-rowcell');\n                    if (!isNullOrUndefined(column)) {\n                        row = column.closest('tr');\n                        if (!isNullOrUndefined(row) && !(isNullOrUndefined(row.getElementsByClassName('e-treegridcollapse')[0]))) {\n                            this.expandCollapseRequest(row.querySelector('.e-treegridcollapse'));\n                        }\n                    }\n                    break;\n                case 'downArrow':\n                    if (!this.enableVirtualization) {\n                        target = e.target;\n                        parentTarget = target.parentElement;\n                        var cellIndex = parentTarget.cellIndex;\n                        if (this.grid.getColumnByIndex(cellIndex).editType === 'dropdownedit' && isNullOrUndefined(this.grid.getColumnByIndex(cellIndex).edit['obj'])) {\n                            parentTarget = target;\n                        }\n                        summaryElement = this.findnextRowElement(parentTarget);\n                        if (summaryElement !== null) {\n                            var rowIndex = summaryElement.rowIndex;\n                            this.selectRow(rowIndex);\n                            var cellIndex_1 = e.target.cellIndex;\n                            var row_1 = summaryElement.children[parseInt(cellIndex_1.toString(), 10)];\n                            addClass([row_1], 'e-focused');\n                            addClass([row_1], 'e-focus');\n                        }\n                        else {\n                            this.clearSelection();\n                        }\n                    }\n                    break;\n                case 'upArrow':\n                    if (!this.enableVirtualization) {\n                        target = e.target;\n                        parentTarget = target.parentElement;\n                        var cellIndex = parentTarget.cellIndex;\n                        if (this.grid.getColumnByIndex(cellIndex).editType === 'dropdownedit' && isNullOrUndefined(this.grid.getColumnByIndex(cellIndex).edit['obj'])) {\n                            parentTarget = target;\n                        }\n                        summaryElement = this.findPreviousRowElement(parentTarget);\n                        if (summaryElement !== null) {\n                            var rIndex = summaryElement.rowIndex;\n                            this.selectRow(rIndex);\n                            var cIndex = e.target.cellIndex;\n                            var rows = summaryElement.children[parseInt(cIndex.toString(), 10)];\n                            addClass([rows], 'e-focused');\n                            addClass([rows], 'e-focus');\n                        }\n                        else {\n                            this.clearSelection();\n                        }\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary\n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary\n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.infiniteScrollData = [];\n        this.remoteCollapsedData = [];\n        this.remoteExpandedData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.grid.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     *\n     * @returns {ModuleDeclaration[]} - Returns TreeGrid modules collection\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        var splitFrozenCount = 'splitFrozenCount';\n        this.grid[\"\" + splitFrozenCount](this.getGridColumns(this.columns));\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter', args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary', args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize', args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport', args: [this]\n            });\n        }\n        var freezePresent = this.injectedModules.filter(function (e) {\n            return e.prototype.getModuleName() === 'freeze';\n        });\n        if (this.frozenColumns || this.frozenRows || this.getFrozenColumns() ||\n            this.grid.getFrozenLeftColumnsCount() || this.grid.getFrozenRightColumnsCount() || freezePresent.length) {\n            modules.push({\n                member: 'freeze', args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow', args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport', args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu', args: [this]\n            });\n        }\n        if (this.showColumnChooser) {\n            modules.push({\n                member: 'ColumnChooser', args: [this]\n            });\n        }\n        this.extendRequiredModules(modules);\n        return modules;\n    };\n    TreeGrid.prototype.extendRequiredModules = function (modules) {\n        var IsRowDDInjected = this.injectedModules.filter(function (e) {\n            return e.prototype.getModuleName() === 'rowDragAndDrop';\n        });\n        if (this.allowRowDragAndDrop || IsRowDDInjected.length) {\n            if ((!isNullOrUndefined(this.toolbar) && (this.toolbar['includes']('Indent') ||\n                this.toolbar['includes']('Outdent')))) {\n                this.isIndentEnabled = true;\n            }\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n        if (this.enableInfiniteScrolling) {\n            modules.push({\n                member: 'infiniteScroll',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'logger',\n            args: [this.grid]\n        });\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        if (this.grid && this.grid.element) {\n            EventHandler.remove(this.grid.element, 'click', this.mouseClickHandler);\n        }\n    };\n    /**\n     * Logs tree grid error message on console\n     *\n     * @param {string | string[]} types - Tree Grid error type\n     * @param {object} args - Error details\n     * @hidden\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.log = function (types, args) {\n        if (this.loggerModule) {\n            this.loggerModule.treeLog(types, args, this);\n        }\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.render = function () {\n        var _this = this;\n        if (this.isReact) {\n            this.grid.isReact = true;\n            this.grid.portals = [];\n        }\n        if (this.isVue) {\n            this.grid.isVue = true;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.grid.vueInstance = this.vueInstance;\n        }\n        createSpinner({ target: this.element }, this.createElement);\n        this.log(['mapping_fields_missing']);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        if (!isNullOrUndefined(this.dataSource)) {\n            this.convertTreeData(this.dataSource);\n        }\n        this.loadGrid();\n        if (this.element.classList.contains('e-treegrid') && this.rowDropSettings.targetID) {\n            this.grid.rowDropSettings.targetID += '_gridcontrol';\n        }\n        this.addListener();\n        var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n        addClass([this.element], 'e-treegrid');\n        if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n            this.element.style.height = this.height;\n        }\n        if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n            this.element.style.width = this.width;\n        }\n        this.element.appendChild(gridContainer);\n        var gridRequiredModules = this.grid.requiredModules;\n        this.grid.requiredModules = function () {\n            var modules = [];\n            modules = gridRequiredModules.apply(this);\n            for (var i = 0; i < modules.length; i++) {\n                if (modules[parseInt(i.toString(), 10)].member === 'virtualscroll') {\n                    modules[parseInt(i.toString(), 10)].member = 'treeVirtualScroll';\n                }\n            }\n            return modules;\n        };\n        var root = 'root';\n        this.grid[\"\" + root] = this[\"\" + root] ? this[\"\" + root] : this;\n        this.grid.appendTo(gridContainer);\n        if (this.isIndentEnabled) {\n            this.refreshToolbarItems();\n        }\n        this.wireEvents();\n        this.renderComplete();\n        var destroyTemplate = 'destroyTemplate';\n        var destroyTemplateFn = this.grid[\"\" + destroyTemplate];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.grid[\"\" + destroyTemplate] = function (args, index) {\n            destroyTemplateFn.apply(_this.grid);\n            var portals = 'portals';\n            if (!(_this.isReact && isNullOrUndefined(_this[\"\" + portals]))) {\n                _this.clearTemplate(args, index);\n            }\n        };\n    };\n    TreeGrid.prototype.refreshToolbarItems = function () {\n        var toolbarElement = this.toolbarModule.getToolbar();\n        var indentID = this.element.id + '_gridcontrol_indent';\n        var outdentID = this.element.id + '_gridcontrol_outdent';\n        var indentElement = toolbarElement.querySelector('#' + indentID).parentElement;\n        var outdentElement = toolbarElement.querySelector('#' + outdentID).parentElement;\n        indentElement.classList.add('e-hidden');\n        outdentElement.classList.add('e-hidden');\n    };\n    TreeGrid.prototype.afterGridRender = function () {\n        if (!isNullOrUndefined(this.grid.clipboardModule)) {\n            this.grid.clipboardModule.destroy();\n        }\n        this.clipboardModule = this.grid.clipboardModule = new TreeClipboard(this, this.grid.serviceLocator);\n    };\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (isCountRequired(this)) {\n            data = getValue('result', data);\n        }\n        if (data instanceof Array && data.length > 0 && Object.prototype.hasOwnProperty.call(data[0], 'level')) {\n            this.flatData = data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            if (isCountRequired(this)) {\n                var griddata = getValue('result', this.dataSource);\n                this.dataModule.convertToFlatData(griddata);\n            }\n            else {\n                this.dataModule.convertToFlatData(data);\n            }\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.enableColumnVirtualization = this.enableColumnVirtualization;\n        this.grid.enableInfiniteScrolling = this.enableInfiniteScrolling;\n        this.grid.infiniteScrollSettings = this.infiniteScrollSettings;\n        this.grid.enableVirtualMaskRow = this.enableVirtualMaskRow;\n        this.grid.loadingIndicator = this.loadingIndicator;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.enableAutoFill = this.enableAutoFill;\n        this.grid.enableAdaptiveUI = this.enableAdaptiveUI;\n        this.grid.enableImmutableMode = this.enableImmutableMode;\n        this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n        this.grid.rowDropSettings = getActualProperties(this.rowDropSettings);\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.showColumnChooser = this.showColumnChooser;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        this.grid.frozenRows = this.frozenRows;\n        this.grid.frozenColumns = this.frozenColumns;\n        this.grid.clipMode = getActualProperties(this.clipMode);\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[\"\" + templateInstance] = this[\"\" + templateInstance];\n        var isJsComponent = 'isJsComponent';\n        this.grid[\"\" + isJsComponent] = true;\n        var enableHtmlSanitizer = 'enableHtmlSanitizer';\n        this.grid[\"\" + enableHtmlSanitizer] = this.enableHtmlSanitizer;\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.IsExpandCollapseClicked = function (args) {\n        if (!isNullOrUndefined(args.target) && (args.target.classList.contains('e-treegridexpand')\n            || args.target.classList.contains('e-treegridcollapse') || args.target.classList.contains('e-summarycell'))\n            && (!isNullOrUndefined(args.data) && args.data['hasChildRecords']) && !this.selectionSettings.checkboxOnly) {\n            args.cancel = true;\n            return;\n        }\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        this.grid.rowSelecting = function (args) {\n            _this.IsExpandCollapseClicked(args);\n            _this.trigger(events.rowSelecting, args);\n        };\n        this.grid.rowDeselecting = function (args) {\n            _this.IsExpandCollapseClicked(args);\n            _this.trigger(events.rowDeselecting, args);\n        };\n        this.grid.rowSelected = function (args) {\n            if (_this.enableVirtualization && args.isHeaderCheckboxClicked &&\n                _this.grid.currentViewData.length !== _this.grid.selectionModule.selectedRowIndexes.length) {\n                var updateRowSelection = 'updateRowSelection';\n                for (var i = 0; i < _this.getRows().length; i++) {\n                    if (_this.getRows()[parseInt(i.toString(), 10)].getElementsByClassName('e-frame e-icons e-uncheck').length) {\n                        _this.grid.selectionModule[\"\" + updateRowSelection](_this.getRows()[parseInt(i.toString(), 10)], _this.getCurrentViewRecords()[parseInt(i.toString(), 10)].index);\n                    }\n                }\n            }\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.notify(events.rowSelected, args);\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            if (!isNullOrUndefined(args.data)) {\n                _this.notify(events.rowDeselected, args);\n            }\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.beforeCopy = this.triggerEvents.bind(this);\n        this.grid.beforePaste = function (args) {\n            var rows = _this.getRows();\n            var rowIndex = 'rowIndex';\n            while (rows[args[\"\" + rowIndex]].classList.contains('e-summaryrow')) {\n                args[\"\" + rowIndex]++;\n            }\n            _this.trigger(events.beforePaste, args);\n        };\n        this.grid.load = function () {\n            _this.grid.on('initial-end', _this.afterGridRender, _this);\n            if (!isNullOrUndefined(_this.loggerModule)) {\n                var loggerModule = 'loggerModule';\n                _this.loggerModule = _this.grid[\"\" + loggerModule] = new TreeLogger(_this.grid);\n            }\n        };\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.extendedGridDataBoundEvent();\n        this.extendedGridEvents();\n        this.extendedGridActionEvents();\n        this.extendedGridEditEvents();\n        this.bindGridDragEvents();\n        this.bindCallBackEvents();\n    };\n    TreeGrid.prototype.lastRowBorder = function (visiblerow, isAddBorder) {\n        for (var j = 0; j < visiblerow.cells.length; j++) {\n            if (isAddBorder) {\n                addClass([visiblerow.cells[parseInt(j.toString(), 10)]], 'e-lastrowcell');\n            }\n            else {\n                removeClass([visiblerow.cells[parseInt(j.toString(), 10)]], 'e-lastrowcell');\n            }\n        }\n    };\n    TreeGrid.prototype.isPixelHeight = function () {\n        if (this.height !== 'auto' && this.height.toString().indexOf('%') === -1) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    TreeGrid.prototype.extendedGridDataBoundEvent = function () {\n        var _this = this;\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate();\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            if (_this.isPixelHeight() && _this.initialRender) {\n                var rows = _this.getContentTable().rows;\n                var totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[parseInt(i.toString(), 10)])) {\n                        if (totalRows[parseInt(i.toString(), 10)].nextElementSibling) {\n                            _this.lastRowBorder(totalRows[parseInt(i.toString(), 10)], true);\n                        }\n                        break;\n                    }\n                }\n            }\n            var action = 'action';\n            if (_this.enableVirtualization && _this.selectionSettings.persistSelection && (_this.dataResults[\"\" + action] === 'expand' || _this.dataResults[\"\" + action] === 'collapse')) {\n                var refreshPersistSelection = 'refreshPersistSelection';\n                _this.grid.selectionModule[\"\" + refreshPersistSelection]();\n                if (_this.grid.selectionSettings.type === 'Single') {\n                    var updateRowSelection = 'updateRowSelection';\n                    var index = _this.getCurrentViewRecords().indexOf(_this.grid.selectionModule['data']);\n                    _this.grid.selectionModule[\"\" + updateRowSelection](_this.getRows()[parseInt(index.toString(), 10)], index);\n                }\n            }\n            _this.trigger(events.dataBound, args);\n            _this.initialRender = false;\n        };\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var treeGrid = this;\n        this.grid.beforeDataBound = function (args) {\n            var dataSource = 'dataSource';\n            var requestType = getObject('action', args);\n            if (((isRemoteData(treeGrid) && !isOffline(treeGrid)) || isCountRequired(this)) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[\"\" + dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid) && !isCountRequired(this) && !isNullOrUndefined(treeGrid.dataSource)) {\n                if (this.isPrinting) {\n                    setValue('isPrinting', true, args);\n                }\n                treeGrid.notify('dataProcessor', args);\n                //args = treeGrid.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            if (treeGrid.enableImmutableMode) {\n                args.result = args.result.slice();\n            }\n            if (treeGrid.initialRender) {\n                this.contentModule.objectEqualityChecker = treeGrid.objectEqualityChecker;\n            }\n            // treeGrid.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                var callBackPromise_1 = new Deferred();\n                treeGrid.trigger(events.beforeDataBound, args, function (beforeDataBoundArgs) {\n                    callBackPromise_1.resolve(beforeDataBoundArgs);\n                });\n                return callBackPromise_1;\n            }\n        };\n        this.grid.log = function (type, args) {\n            if (_this.loggerModule) {\n                _this.loggerModule.log(type, args);\n            }\n        };\n    };\n    TreeGrid.prototype.bindCallBackEvents = function () {\n        var _this = this;\n        this.grid.toolbarClick = function (args) {\n            if ((args.item.id === _this.grid.element.id + '_excelexport' && _this.allowExcelExport === false) ||\n                (args.item.id === _this.grid.element.id + '_pdfexport' && _this.allowPdfExport === false) ||\n                (args.item.id === _this.grid.element.id + '_csvexport' && _this.allowExcelExport === false)) {\n                return;\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.toolbarClick, args, function (toolbarargs) {\n                if (!toolbarargs.cancel) {\n                    _this.notify(events.toolbarClick, args);\n                }\n                callBackPromise.resolve(toolbarargs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSelecting = function (args) {\n            var actualTarget = 'actualTarget';\n            var target = _this.grid.selectionModule[\"\" + actualTarget];\n            if (!isNullOrUndefined(target) && (target.classList.contains('e-treegridexpand') || target.classList.contains('e-treegridcollapse'))) {\n                args.cancel = true;\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(getObject('name', args), args, function (cellselectingArgs) {\n                callBackPromise.resolve(cellselectingArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.beginEdit = function (args) {\n            if (!isNullOrUndefined(args.row) && args.row.classList.contains('e-summaryrow')) {\n                args.cancel = true;\n                return;\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.beginEdit, args, function (begineditArgs) {\n                callBackPromise.resolve(begineditArgs);\n            });\n            return callBackPromise;\n        };\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        this.grid.dataStateChange = function (args) {\n            if (_this.isExpandRefresh) {\n                _this.isExpandRefresh = false;\n                _this.grid.dataSource = { result: _this.flatData, count: getValue('count', _this.grid.dataSource) };\n            }\n            else {\n                if (args.action.requestType !== 'infiniteScroll') {\n                    _this.infiniteScrollData = [];\n                }\n                _this.trigger(events.dataStateChange, args);\n            }\n        };\n        this.grid.cellSave = function (args) {\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.cellSave, args, function (cellsaveArgs) {\n                if (!cellsaveArgs.cancel) {\n                    _this.notify(events.cellSave, cellsaveArgs);\n                }\n                callBackPromise.resolve(cellsaveArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSaved = function (args) {\n            _this.trigger(events.cellSaved, args);\n            _this.notify(events.cellSaved, args);\n        };\n        this.grid.cellEdit = function (args) {\n            var prom = 'promise';\n            var promise = new Deferred();\n            args[\"\" + prom] = promise;\n            _this.notify(events.cellEdit, args);\n            return promise;\n        };\n        this.grid.batchAdd = function (args) {\n            _this.trigger(events.batchAdd, args);\n            _this.notify(events.batchAdd, args);\n        };\n        this.grid.beforeBatchSave = function (args) {\n            _this.trigger(events.beforeBatchSave, args);\n            _this.notify(events.beforeBatchSave, args);\n        };\n        this.grid.beforeBatchAdd = function (args) {\n            _this.trigger(events.beforeBatchAdd, args);\n            _this.notify(events.beforeBatchAdd, args);\n        };\n        this.grid.batchDelete = function (args) {\n            _this.trigger(events.batchDelete, args);\n            _this.notify(events.batchDelete, args);\n        };\n        this.grid.beforeBatchDelete = function (args) {\n            _this.trigger(events.beforeBatchDelete, args);\n            _this.notify(events.beforeBatchDelete, args);\n        };\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function () {\n        var _this = this;\n        if (this.rowTemplate) {\n            if (this.isReact && this.getContentTable().rows.length === 0) {\n                setTimeout(function () {\n                    _this.treeColumnRowTemplate();\n                    if (_this.enableCollapseAll) {\n                        var currentData = _this.getCurrentViewRecords();\n                        var rows = _this.getContentTable().rows;\n                        for (var i = 0; i < rows.length; i++) {\n                            var args = { data: currentData[parseInt(i.toString(), 10)],\n                                row: rows[parseInt(i.toString(), 10)] };\n                            _this.renderModule.RowModifier(args);\n                        }\n                    }\n                }, 0);\n            }\n            else {\n                this.treeColumnRowTemplate();\n            }\n        }\n    };\n    TreeGrid.prototype.bindedDataSource = function () {\n        var dataSource = 'dataSource';\n        var isDataAvailable = 'isDataAvailable';\n        var adaptor = 'adaptor';\n        var ready = 'ready';\n        if (this.dataSource && isCountRequired(this)) {\n            var data = this.flatData;\n            var datacount = getValue('count', this.dataSource);\n            this.grid.dataSource = { result: data, count: datacount };\n        }\n        else {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[\"\" + dataSource].json = extendArray(this.dataSource[\"\" + dataSource].json);\n            this.grid.dataSource[\"\" + ready] = this.dataSource.ready;\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            var proxy_1 = this;\n            if (!isNullOrUndefined(this.grid.dataSource[\"\" + ready])) {\n                this.grid.dataSource[\"\" + ready].then(function (e) {\n                    var dm = proxy_1.grid.dataSource;\n                    dm[\"\" + dataSource].offline = true;\n                    dm[\"\" + isDataAvailable] = true;\n                    dm[\"\" + dataSource].json = e.result;\n                    dm[\"\" + adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    };\n    TreeGrid.prototype.extendedGridActionEvents = function () {\n        var _this = this;\n        this.grid.actionBegin = function (args) {\n            if (args.requestType === 'sorting' && args.target && args.target.parentElement &&\n                args.target.parentElement.classList.contains('e-hierarchycheckbox')) {\n                args.cancel = true;\n            }\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            if (isRemoteData(_this) && _this.enableVirtualization) {\n                if (args.requestType === 'virtualscroll') {\n                    _this.query.expand('VirtualScrollingAction');\n                    _this.showSpinner();\n                }\n                else if (args.requestType === 'searching' && args.searchString === '') {\n                    _this.query.expand('ClearSearchingAction');\n                }\n                else if (args.action === 'clearFilter') {\n                    _this.query.expand('ClearFilteringAction');\n                }\n            }\n            _this.notify('actionBegin', { editAction: args });\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule) && !isCountRequired(_this)\n                && (_this.grid.filterSettings.columns.length === 0 && _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.setProperties({ dataSource: _this.dataResults.result }, true);\n                if (isNullOrUndefined(_this.grid['changedProperties'].dataSource)) {\n                    _this.grid.renderModule.data.dataManager = _this.grid.dataSource instanceof DataManager ?\n                        _this.grid.dataSource :\n                        (isNullOrUndefined(_this.grid.dataSource) ? new DataManager() : new DataManager(_this.grid.dataSource));\n                    _this.grid.renderModule.data.isQueryInvokedFromData = true;\n                    _this.grid.query = _this.grid.query instanceof Query ? _this.grid.query : new Query();\n                }\n            }\n            if (_this.action !== 'indenting' && _this.action !== 'outdenting') {\n                var callBackPromise_2 = new Deferred();\n                _this.trigger(events.actionBegin, args, function (actionArgs) {\n                    if (!actionArgs.cancel) {\n                        _this.notify(events.beginEdit, actionArgs);\n                    }\n                    callBackPromise_2.resolve(actionArgs);\n                });\n                return callBackPromise_2;\n            }\n        };\n        this.grid.actionComplete = function (args) {\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            _this.notify('actionComplete', { editAction: args });\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            if (args.requestType === 'save' && _this.aggregates.map(function (ag) { return ag.showChildSummary === true; }).length) {\n                _this.grid.refresh();\n            }\n            if (args.action === 'filter') {\n                if (_this.filterModule['currentFilterObject'] !== '' && _this.enableVirtualization && !_this.initialRender && !(isRemoteData(_this) && _this.enableVirtualization)) {\n                    _this.expandAll();\n                }\n            }\n            if (args.requestType === 'searching') {\n                if (_this.searchSettings.key !== '' && _this.enableVirtualization && !_this.initialRender && !(isRemoteData(_this) && _this.enableVirtualization)) {\n                    _this.expandAll();\n                }\n            }\n            if (args.action === 'clearFilter' && _this.enableCollapseAll) {\n                _this.collapseAll();\n            }\n            if (_this.action === 'indenting' || _this.action === 'outdenting') {\n                _this.action = _this.action === 'indenting' ? 'indented' : 'outdented';\n                var selectedItem_1 = [_this.selectedRecords];\n                var actionArgs = {\n                    data: selectedItem_1,\n                    dropIndex: _this.dropIndex,\n                    dropPosition: _this.dropPosition,\n                    modifiedRecords: _this.modifiedRecords,\n                    requestType: _this.action,\n                    row: _this.selectedRows\n                };\n                _this.trigger(events.actionComplete, actionArgs);\n                var currentPageItem = _this.getCurrentViewRecords().filter(function (e) {\n                    return e.uniqueID === selectedItem_1[0].uniqueID;\n                });\n                if (!currentPageItem.length) {\n                    _this.refreshToolbarItems();\n                }\n                _this.action = '';\n                _this.selectedRecords = _this.selectedRows = _this.modifiedRecords = [];\n            }\n            else {\n                if (_this.grid.isFrozenGrid() && _this.enableVirtualization && args['tableName'] === 'movable') {\n                    var movableContent = _this.grid.element.querySelector('.' + literals.movableContent);\n                    var frozenContent = _this.grid.element.querySelector('.' + literals.frozenContent);\n                    movableContent.style.height = frozenContent.style.height = 'auto';\n                }\n                _this.trigger(events.actionComplete, args);\n            }\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    TreeGrid.prototype.bindGridDragEvents = function () {\n        var _this = this;\n        this.grid.rowDragStartHelper = function (args) {\n            _this.trigger(events.rowDragStartHelper, args);\n        };\n        this.grid.rowDragStart = function (args) {\n            _this.trigger(events.rowDragStart, args);\n        };\n        this.grid.rowDrag = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            _this.notify(events.rowdraging, args);\n            _this.trigger(events.rowDrag, args);\n        };\n        this.grid.rowDrop = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            _this.notify(events.rowDropped, args);\n            args.cancel = true;\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n        var ref = 'viewContainerRef';\n        setValue('viewContainerRef', this[\"\" + ref], this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            this.columns = [];\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            var record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[parseInt(i.toString(), 10)]) === -1) {\n                    this.columns.push(keys[parseInt(i.toString(), 10)]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit.allowNextRowEdit = this.editSettings.allowNextRowEdit;\n        edit[\"\" + guid] = this.editSettings[\"\" + guid];\n        edit.dialog = this.editSettings.dialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Batch':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     *\n     * @hidden\n     * @returns {Object[]} - returns context menu items\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                switch (this.contextMenuItems[parseInt(i.toString(), 10)]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: this.l10n.getConstant('AddRow'),\n                            target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: this.l10n.getConstant('Above'), id: 'Above' }, { text: this.l10n.getConstant('Below'), id: 'Below' }, { text: this.l10n.getConstant('Child'), id: 'Child' }] });\n                        break;\n                    case 'Indent':\n                    case ContextMenuItems.RowIndent:\n                        items.push({ text: this.l10n.getConstant('RowIndent'),\n                            target: '.e-content', iconCss: 'e-indent e-icons', id: this.element.id + '_gridcontrol_cmenu_Indent' });\n                        break;\n                    case 'Outdent':\n                    case ContextMenuItems.RowOutdent:\n                        items.push({ text: this.l10n.getConstant('RowOutdent'),\n                            target: '.e-content', iconCss: 'e-outdent e-icons', id: this.element.id + '_gridcontrol_cmenu_Outdent' });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[parseInt(i.toString(), 10)]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     *\n     * @hidden\n     * @returns {Object[]} - Returns toolbar items\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n            var items = [];\n            var tooltipText = void 0;\n            for (var i = 0; i < this.toolbar.length; i++) {\n                switch (this.toolbar[parseInt(i.toString(), 10)]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        tooltipText = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltipText,\n                            tooltipText: tooltipText, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    case 'Indent':\n                    case ToolbarItem.RowIndent:\n                        tooltipText = this.l10n.getConstant('RowIndent');\n                        items.push({\n                            text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-indent', id: this.element.id + '_gridcontrol_indent'\n                        });\n                        break;\n                    case 'Outdent':\n                    case ToolbarItem.RowOutdent:\n                        tooltipText = this.l10n.getConstant('RowOutdent');\n                        items.push({\n                            text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-outdent', id: this.element.id + '_gridcontrol_outdent'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[parseInt(i.toString(), 10)]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    TreeGrid.prototype.getGridColumns = function (columns, isEmptyColumnModel, index) {\n        if (isEmptyColumnModel === void 0) { isEmptyColumnModel = true; }\n        if (index === void 0) { index = 0; }\n        var column = columns;\n        var stackedColumn = 'columns';\n        if (isEmptyColumnModel) {\n            this.columnModel = [];\n        }\n        var treeGridColumn;\n        var gridColumn;\n        if (this.columnModel.length === 0) {\n            index = index === 0 ? -1 : index;\n        }\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            index = index + 1;\n            var treeColumn = this.grid.getColumnByUid(column[parseInt(i.toString(), 10)].uid);\n            gridColumn = treeColumn ? treeColumn : {};\n            treeGridColumn = {};\n            if (typeof this.columns[parseInt(i.toString(), 10)] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[parseInt(i.toString(), 10)];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[parseInt(i.toString(), 10)]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    if (index === this.treeColumnIndex && prop === 'template') {\n                        treeGridColumn[\"\" + prop] = column[parseInt(i.toString(), 10)][\"\" + prop];\n                    }\n                    else if (prop === 'columns' && !isNullOrUndefined(column[parseInt(i.toString(), 10)][\"\" + prop])) {\n                        gridColumn[\"\" + prop] = this.getGridColumns(column[parseInt(i.toString(), 10)][\"\" + prop], false, this.columnModel.length - 1);\n                        treeGridColumn[\"\" + prop] = column[parseInt(i.toString(), 10)][\"\" + prop];\n                    }\n                    else if (this.initialRender && !isNullOrUndefined(treeColumn) && this.enablePersistence && prop === 'edit') {\n                        gridColumn[\"\" + prop] = treeGridColumn[\"\" + prop] = treeColumn[\"\" + prop];\n                    }\n                    else if (!(treeColumn) || prop !== 'sortComparer') {\n                        gridColumn[\"\" + prop] = treeGridColumn[\"\" + prop] = column[parseInt(i.toString(), 10)][\"\" + prop];\n                    }\n                }\n            }\n            if (!treeGridColumn[\"\" + stackedColumn]) {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n            if (!isNullOrUndefined(this.columnModel[this.treeColumnIndex]) && this.enableRtl) {\n                if (gridColumn.field === this.columnModel[this.treeColumnIndex].field) {\n                    if (isNullOrUndefined(this.treeColumnTextAlign)) {\n                        this.treeColumnTextAlign = this.columnModel[this.treeColumnIndex].textAlign;\n                        this.treeColumnField = this.columnModel[this.treeColumnIndex].field;\n                    }\n                    gridColumn.textAlign = 'Right';\n                }\n            }\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @param {TreeGridModel} newProp - properties details which has to be modified\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.onPropertyChanged = function (newProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    this.grid.columns = this.getGridColumns(this.columns);\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'enableColumnVirtualization':\n                    this.grid.enableColumnVirtualization = this.enableColumnVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    if (!this.initialRender) {\n                        this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    }\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n                    break;\n                case 'aggregates':\n                    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'enableInfiniteScrolling':\n                    this.grid.enableInfiniteScrolling = this.enableInfiniteScrolling;\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        if (isCountRequired(this)) {\n                            var count = getValue('count', this.dataSource);\n                            this.grid.dataSource = { result: this.flatData, count: count };\n                        }\n                        else {\n                            var data = this.dataSource;\n                            this.grid.dataSource = !(data instanceof DataManager) ?\n                                this.flatData : new DataManager(data.dataSource, data.defaultQuery, data.adaptor);\n                        }\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.isDataSourceChanged = true;\n                        }\n                    }\n                    else {\n                        this.bindedDataSource();\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.removeEventListener();\n                            this.grid.contentModule.eventListener('on');\n                            this.grid.contentModule.renderTable();\n                        }\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[\"\" + prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.grid.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'frozenRows':\n                    this.grid.frozenRows = this.frozenRows;\n                    break;\n                case 'frozenColumns':\n                    this.grid.frozenColumns = this.frozenColumns;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    this.TreeGridLocale();\n                    this.grid.toolbar = this.getGridToolbar();\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'enableAutoFill':\n                    this.grid.enableAutoFill = this.enableAutoFill;\n                    break;\n                case 'enableAdaptiveUI':\n                    this.grid.enableAdaptiveUI = this.enableAdaptiveUI;\n                    break;\n                case 'enableImmutableMode':\n                    this.grid.enableImmutableMode = this.enableImmutableMode;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    if (!isNullOrUndefined(this.treeColumnField)) {\n                        this.updateTreeColumnTextAlign();\n                    }\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.grid.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'showColumnChooser':\n                    this.grid.showColumnChooser = this.showColumnChooser;\n                    break;\n                case 'detailTemplate':\n                    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[\"\" + prop].mode &&\n                        (newProp[\"\" + prop].mode === 'Cell' || newProp[\"\" + prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.grid.refresh();\n            }\n        }\n    };\n    TreeGrid.prototype.updateTreeColumnTextAlign = function () {\n        var gridColumn = this.grid.getColumnByField(this.treeColumnField);\n        gridColumn.textAlign = this.enableRtl ? 'Right' : this.treeColumnTextAlign;\n        this.grid.refreshColumns();\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     *\n     * @method destroy\n     * @returns {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        var treeGridElement = this.element;\n        if (!treeGridElement) {\n            return;\n        }\n        var hasTreeGridChild = treeGridElement.querySelector('.' + 'e-gridheader') &&\n            treeGridElement.querySelector('.' + 'e-gridcontent') ? true : false;\n        if (hasTreeGridChild) {\n            this.unwireEvents();\n        }\n        this.removeListener();\n        if (hasTreeGridChild) {\n            _super.prototype.destroy.call(this);\n        }\n        if (this.grid) {\n            this.grid.destroy();\n        }\n        if (this.dataModule) {\n            this.dataModule.destroy();\n        }\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule', 'clipboardModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow', 'rowDragAndDropModule', 'freezeModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[parseInt(i.toString(), 10)]]) {\n                this[modules[parseInt(i.toString(), 10)]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     *\n     * @method dataBind\n     * @returns {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        if (isNullOrUndefined(this.grid)) {\n            return;\n        }\n        if (!isNullOrUndefined(this.rowDropSettings.targetID) &&\n            isNullOrUndefined(document.getElementById(this.grid.rowDropSettings.targetID))) {\n            document.getElementById(this.rowDropSettings.targetID).id = this.grid.rowDropSettings.targetID;\n            this.rowDropSettings.targetID = this.grid.rowDropSettings.targetID;\n        }\n        _super.prototype.dataBind.call(this);\n        this.grid.dataBind();\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string} - Returns persist properties details\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex', 'treeColumnIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        for (var i = 0; i < keyEntity.length; i++) {\n            var currentObject = this[keyEntity[parseInt(i.toString(), 10)]];\n            for (var k = 0, val = ignoreOnPersist[keyEntity[parseInt(i.toString(), 10)]]; (!isNullOrUndefined(val) && k < val.length); k++) {\n                var objVal = val[parseInt(k.toString(), 10)];\n                delete currentObject[\"\" + objVal];\n            }\n        }\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[parseInt(i.toString(), 10)].columns) {\n                this.ignoreInColumn(ignoreOnColumn, columns[parseInt(i.toString(), 10)]);\n                this.ignoreInArrays(ignoreOnColumn, columns[parseInt(i.toString(), 10)].columns);\n            }\n            else {\n                this.ignoreInColumn(ignoreOnColumn, columns[parseInt(i.toString(), 10)]);\n            }\n        }\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        if (isNullOrUndefined(column.template)) {\n            for (var i = 0; i < ignoreOnColumn.length; i++) {\n                delete column[ignoreOnColumn[parseInt(i.toString(), 10)]];\n                column.filter = {};\n            }\n        }\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if ((target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && (!this.isEditCollapse && !this.grid.isEdit)) {\n            this.expandCollapseRequest(target);\n        }\n        this.isEditCollapse = false;\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     *\n     * @returns {HTMLTableRowElement[]} - Returns row elements collection\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     *\n     * @returns {Element} - Returns pager element\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     *\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     * @returns {void}\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        if (this.editModule) {\n            var isAddedRowByMethod = 'isAddedRowByMethod';\n            this.editModule[\"\" + isAddedRowByMethod] = true;\n            this.editModule.addRecord(data, index, position);\n        }\n    };\n    /**\n     * Cancels edited state.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.closeEdit();\n        }\n    };\n    /**\n     * Saves the cell that is currently edited. It does not save the value to the DataSource.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.saveCell = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.saveCell();\n        }\n    };\n    /**\n     * To update the specified cell by given value without changing into edited state.\n     *\n     * @param {number} rowIndex Defines the row index.\n     * @param {string} field Defines the column field.\n     * @param {string | number | boolean | Date} value - Defines the value to be changed.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateCell = function (rowIndex, field, value) {\n        if (this.grid.editModule) {\n            this.grid.editModule.updateCell(rowIndex, field, value);\n        }\n    };\n    /**\n     * To update the specified row by given values without changing into edited state.\n     *\n     * @param {number} index Defines the row index.\n     * @param {Object} data Defines the data object to be updated.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateRow = function (index, data) {\n        if (this.grid.editModule) {\n            if (!isNullOrUndefined(index)) {\n                var griddata = this.grid.getCurrentViewRecords()[parseInt(index.toString(), 10)];\n                extend(griddata, data);\n                this.grid.editModule.updateRow(index, griddata);\n            }\n            else {\n                this.grid.editModule.updateRow(index, data);\n            }\n        }\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     *\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     * @returns {void}\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRecord(fieldName, data);\n        }\n    };\n    /**\n     * To edit any particular row by TR element.\n     *\n     * @param {HTMLTableRowElement} row - Defines the table row to be edited.\n     * @returns {void}\n     */\n    TreeGrid.prototype.startEdit = function (row) {\n        if (this.grid.editModule) {\n            this.grid.editModule.startEdit(row);\n        }\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     *\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     * @returns {void}\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        if (this.editModule) {\n            this.editModule.editCell(rowIndex, field);\n        }\n    };\n    /**\n     * Enables or disables ToolBar items.\n     *\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @returns {void}\n     */\n    TreeGrid.prototype.enableToolbarItems = function (items, isEnable) {\n        if (this.grid.toolbarModule) {\n            this.grid.toolbarModule.enableItems(items, isEnable);\n        }\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.endEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.endEdit();\n        }\n    };\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     *\n     * @param {number} x - Defines the X axis.\n     * @param {number} y - Defines the Y axis.\n     * @returns {void}\n     */\n    TreeGrid.prototype.openColumnChooser = function (x, y) {\n        if (this.columnChooserModule) {\n            this.columnChooserModule.openColumnChooser(x, y);\n        }\n    };\n    /**\n     * Delete any visible row by TR element.\n     *\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     * @returns {void}\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRow(tr);\n        }\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     *\n     * @returns {string[]} - Returns primary key collection\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     * @returns {void}\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n        var rowIndex = this.grid.getRowIndexByPrimaryKey(key);\n        var record = this.getCurrentViewRecords()[parseInt(rowIndex.toString(), 10)];\n        if (!isNullOrUndefined(record)) {\n            editAction({ value: record, action: 'edit' }, this, this.isSelfReference, record.index, this.grid.selectedRowIndex, field);\n        }\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     * @returns {void}\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        var currentRecords = this.getCurrentViewRecords();\n        var primaryKey = this.grid.getPrimaryKeyFieldNames()[0];\n        var level = 0;\n        var record = {};\n        currentRecords.some(function (value) {\n            if (value[\"\" + primaryKey] === key) {\n                record = value;\n                return true;\n            }\n            else {\n                return false;\n            }\n        });\n        level = record.level;\n        rowData.level = level;\n        rowData.index = record.index;\n        rowData.childRecords = record.childRecords;\n        rowData.taskData = record.taskData;\n        rowData.uniqueID = record.uniqueID;\n        rowData.parentItem = record.parentItem;\n        rowData.checkboxState = record.checkboxState;\n        rowData.hasChildRecords = record.hasChildRecords;\n        rowData.parentUniqueID = record.parentUniqueID;\n        rowData.expanded = record.expanded;\n        this.grid.setRowData(key, rowData);\n        var visibleRecords = this.getVisibleRecords();\n        if (visibleRecords.length > 0 && key === (visibleRecords[visibleRecords.length - 1])[\"\" + primaryKey]) {\n            var table = this.getContentTable();\n            var sHeight = table.scrollHeight;\n            var clientHeight = this.getContent().clientHeight;\n            this.lastRowBorder(this.getRows()[currentRecords.indexOf(record)], sHeight <= clientHeight);\n        }\n    };\n    /**\n     * Navigates to the specified target page.\n     *\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @returns {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        if (this.grid.pagerModule) {\n            this.grid.pagerModule.goToPage(pageNo);\n        }\n    };\n    /**\n     * Defines the text of external message.\n     *\n     * @param  {string} message - Defines the message to update.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} - Returns cell element in grid content\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {Column} - Returns tree grid column\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        return iterateArrayOrObject(this.columnModel, function (item) {\n            if (item.field === field) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets a column by UID.\n     *\n     * @param  {string} uid - Specifies the column UID.\n     * @returns {Column} - Returns tree grid column\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        var Columns = this.initialRender ? this.grid.columns : this.columns;\n        var columnModel = 'columnModel';\n        if (this.grid.columns.length !== this.columnModel.length) {\n            Columns = this.grid[\"\" + columnModel];\n        }\n        return iterateArrayOrObject(Columns, function (item) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets the collection of column fields.\n     *\n     * @returns {string[]} - Returns column field name as collection\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     *\n     * @returns {Element} - Returns footer content div element\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     *\n     * @returns {Element} - Returns footer content table element\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     *\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @returns {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        this.grid.showColumns(keys, showBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Hides a column by column name.\n     *\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @returns {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        this.grid.hideColumns(keys, hideBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Gets a column header by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     *\n     * @param {string} uid - Specifies the column uid.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {number} - Returns column index\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    TreeGrid.prototype.getVirtualColIndexByUid = function (uid) {\n        var columnModel = 'columnModel';\n        var index = iterateArrayOrObject(this.grid[\"\" + columnModel], function (item, index) {\n            if (item.uid === uid) {\n                return index;\n            }\n            return undefined;\n        })[0];\n        return !isNullOrUndefined(index) ? index : -1;\n    };\n    /**\n     * Gets a column index by UID.\n     *\n     * @param  {string} uid - Specifies the column UID.\n     * @returns {number} - Returns column index\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     *\n     * @param {boolean} isRefresh - Defined whether to update DOM\n     * @returns {Column[]} - Returns treegrid columns collection\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        this.updateColumnModel(this.grid.getColumns(isRefresh));\n        return this.columnModel;\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        var temp;\n        var field;\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        if (this.treeColumnIndex !== -1 && this.columnModel[this.treeColumnIndex] &&\n            !isNullOrUndefined(this.columnModel[this.treeColumnIndex].template)) {\n            temp = this.columnModel[this.treeColumnIndex].template;\n            field = this.columnModel[this.treeColumnIndex].field;\n        }\n        var gridColumn;\n        if (!this.enableColumnVirtualization || (this.enableColumnVirtualization && this.columnModel.length === gridColumns.length)) {\n            this.columnModel = [];\n            for (var i = 0; i < gridColumns.length; i++) {\n                gridColumn = {};\n                for (var _i = 0, _a = Object.keys(gridColumns[parseInt(i.toString(), 10)]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    gridColumn[\"\" + prop] = gridColumns[parseInt(i.toString(), 10)][\"\" + prop];\n                }\n                this.columnModel.push(new Column(gridColumn));\n                if (field === this.columnModel[parseInt(i.toString(), 10)].field && this.columnModel[parseInt(i.toString(), 10)].type !== 'checkbox' && (!isNullOrUndefined(temp) && temp !== '')) {\n                    this.columnModel[parseInt(i.toString(), 10)].template = temp;\n                }\n            }\n        }\n        var deepMerge = 'deepMerge';\n        this[\"\" + deepMerge] = ['columns']; // Workaround for blazor updateModel\n        if (this.grid.columns.length !== this.columnModel.length) {\n            this.stackedHeader = true;\n        }\n        if (this.stackedHeader && this.allowResizing) {\n            this.updateColumnsWidth(this.columns);\n        }\n        if (!this.stackedHeader) {\n            merge(this.columns, this.columnModel);\n        }\n        this[\"\" + deepMerge] = undefined; // Workaround for blazor updateModel\n        return this.columnModel;\n    };\n    TreeGrid.prototype.updateColumnsWidth = function (columns) {\n        var _this = this;\n        columns.forEach(function (column) {\n            if (column.columns) {\n                _this.updateColumnsWidth(column.columns);\n            }\n            else if (column.field) {\n                var currentColumn = _this.grid.getColumnByField(column.field);\n                column.width = currentColumn.width;\n            }\n        });\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     *\n     * @returns {Element} - Return tree grid content element\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.mergePersistTreeGridData = function () {\n        var persist1 = 'mergePersistGridData';\n        this.grid[\"\" + persist1].apply(this);\n    };\n    TreeGrid.prototype.mergeColumns = function (storedColumn, columns) {\n        var persist2 = 'mergeColumns';\n        this.grid[\"\" + persist2].apply(this, [storedColumn, columns]);\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n        this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n        this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n        this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     *\n     * @returns {Element} - Returns content table element\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     *\n     * @returns {Element[]} - Returns row elements\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[parseInt(i.toString(), 10)].classList.contains('e-summaryrow')) {\n                dRows.push(rows[parseInt(i.toString(), 10)]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     *\n     * @returns {Object[]} - Returns current view records\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        var isSummaryRow = 'isSummaryRow';\n        return this.grid.currentViewData.filter(function (e) { return isNullOrUndefined(e[\"\" + isSummaryRow]); });\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     *\n     * @returns {Object} - Returns batch changes\n     */\n    TreeGrid.prototype.getBatchChanges = function () {\n        return this.grid.editModule.getBatchChanges();\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     *\n     * @returns {Element} - Returns Header content element\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     *\n     * @returns {Element} - Return header table element\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} - Returns row element\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     *\n     * @param {Element | EventTarget} target - Target row element\n     * @returns {RowInfo} - Returns row information in a JSON object\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {string} - Returns unique id based on column field name given\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     *\n     * @returns {Column[]} - Returns visible columns collection\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.uniqueIDCollection = {};\n        this.convertTreeData(this.dataSource);\n        if (!isCountRequired(this)) {\n            if (!(this.dataSource instanceof DataManager)) {\n                this.grid.dataSource = this.flatData;\n            }\n            else {\n                this.grid.setProperties({\n                    dataSource: new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor)\n                }, true);\n            }\n        }\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     *\n     * @returns {Object[]} - Returns records that has been checked\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the visible records corresponding to rows visually displayed.\n     *\n     * @returns {Object[]} - Returns visible records based on collapse state of rows\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getVisibleRecords = function () {\n        var visibleRecords = [];\n        var currentViewRecords = this.getCurrentViewRecords();\n        if (!this.allowPaging) {\n            for (var i = 0; i < currentViewRecords.length; i++) {\n                visibleRecords.push(currentViewRecords[parseInt(i.toString(), 10)]);\n                if (!currentViewRecords[parseInt(i.toString(), 10)].expanded) {\n                    i += findChildrenRecords(currentViewRecords[parseInt(i.toString(), 10)]).length;\n                }\n            }\n        }\n        else {\n            visibleRecords = currentViewRecords;\n        }\n        return visibleRecords;\n    };\n    /**\n     * Get the indexes of checked rows.\n     *\n     * @returns {number[]} - Returns checked row indexes\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     *\n     * @param {number[]} indexes - row indexes\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     *\n     * @param {boolean} refreshUI - Defined whether to refresh the DOM\n     * @returns {void}\n     */\n    TreeGrid.prototype.refreshColumns = function (refreshUI) {\n        if (isNullOrUndefined(refreshUI) || refreshUI) {\n            this.grid.columns = this.getGridColumns(this.columns);\n            this.grid.refreshColumns();\n        }\n        else {\n            this.grid.setProperties({ columns: this.getGridColumns(this.columns) }, true);\n        }\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     *\n     * @param {HTMLElement} target - Expand collapse icon cell as target element\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.editSettings.mode === 'Batch') {\n            var obj = 'dialogObj';\n            var showDialog = 'showDialog';\n            if ((this.getBatchChanges()[this.changedRecords].length || this.getBatchChanges()[this.deletedRecords].length ||\n                this.getBatchChanges()[this.addedRecords].length) && this.editSettings.showConfirmDialog) {\n                var dialogObj = this.grid.editModule[\"\" + obj];\n                this.grid.editModule[\"\" + showDialog]('CancelEdit', dialogObj);\n                this.targetElement = target;\n                return;\n            }\n        }\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo_1 = this.grid.getRowInfo(target);\n            var record = rowInfo_1.rowData;\n            if (this.grid.isFrozenGrid() && this.enableVirtualization && !Object.keys(record).length) {\n                var freezeRows = 'freezeRows';\n                record = this.grid.contentModule[\"\" + freezeRows].filter(function (e) { return e.uid === rowInfo_1.row.getAttribute('data-uid'); })[0].data;\n            }\n            if (this.enableImmutableMode) {\n                record = this.getCurrentViewRecords()[rowInfo_1.rowIndex];\n            }\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo_1.row, record);\n            }\n            else {\n                this.expandRow(rowInfo_1.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     *\n     * @param {HTMLTableRowElement} row - Expands the given row\n     * @param {Object} record - Expands the given record\n     * @param {Object} key - Primary key value\n     * @param {number} level - Specifies the hierarchical level of the record\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record, key, level) {\n        var _this = this;\n        var parentRec = this.parentData;\n        if (!this.enableVirtualization) {\n            parentRec = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        record = this.getCollapseExpandRecords(row, record);\n        if (!isNullOrUndefined(row) && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        if (this.isExpandAll && !isRemoteData(this)) {\n            var args = { data: parentRec, row: row, cancel: false };\n            var pagerValuePresent = false;\n            if (this.grid.pagerModule && !isNullOrUndefined(this.grid.pagerModule.pagerObj.pagerdropdownModule)) {\n                pagerValuePresent = this.grid.pagerModule.pagerObj.pagerdropdownModule['dropDownListObject'].value ? true : false;\n            }\n            if (!this.isExpandingEventTriggered) {\n                this.trigger(events.expanding, args, function (expandingArgs) {\n                    _this.expandAllPrevent = expandingArgs.cancel;\n                    if (!expandingArgs.cancel) {\n                        if (expandingArgs.expandAll) {\n                            _this.expandCollapseAllChildren(record, 'expand', key, level);\n                        }\n                        _this.expandRows(row, record, parentRec, key, level);\n                    }\n                });\n            }\n            else if ((!this.allowPaging || (pagerValuePresent && this.grid.pagerModule.pagerObj.pagerdropdownModule['dropDownListObject'].value === 'All')) &&\n                !this.expandAllPrevent && this.isExpandingEventTriggered) {\n                this.expandRows(row, record, parentRec, key, level);\n            }\n            this.isExpandingEventTriggered = true;\n        }\n        else if (!this.isExpandAll || (this.isExpandAll && isRemoteData(this))) {\n            var args = { data: record, row: row, cancel: false };\n            this.trigger(events.expanding, args, function (expandingArgs) {\n                if (!expandingArgs.cancel) {\n                    if (expandingArgs.expandAll) {\n                        _this.expandCollapseAllChildren(record, 'expand', key, level);\n                    }\n                    _this.expandRows(row, record, parentRec, key, level);\n                }\n            });\n        }\n    };\n    // Internal method to handle the rows expand\n    TreeGrid.prototype.expandRows = function (row, record, parentRec, key, level) {\n        this.expandCollapse('expand', row, record);\n        var children = 'Children';\n        if (!(isRemoteData(this) && !isOffline(this)) && (!isCountRequired(this) || !isNullOrUndefined(record[\"\" + children]))) {\n            var expandArgs = { data: record, row: row };\n            this.setHeightForFrozenContent();\n            if (!isNullOrUndefined(this.expandStateMapping)) {\n                this.updateExpandStateMapping(expandArgs.data, true);\n            }\n            if (this.isExpandAll && !this.isExpandedEventTriggered) {\n                this.isExpandedEventTriggered = true;\n                expandArgs = { data: parentRec, row: row };\n                this.trigger(events.expanded, expandArgs);\n            }\n            else if (!this.isExpandAll) {\n                this.trigger(events.expanded, expandArgs);\n            }\n        }\n    };\n    TreeGrid.prototype.expandCollapseAllChildren = function (record, action, key, level) {\n        if ((!isNullOrUndefined(key) && record[this.getPrimaryKeyFieldNames()[0]] !== key) ||\n            (!isNullOrUndefined(level) && level !== record.level)) {\n            return;\n        }\n        var records = findChildrenRecords(record).filter(function (e) {\n            return e.hasChildRecords;\n        });\n        records.unshift(record);\n        for (var i = 0; i < records.length; i++) {\n            this.expandCollapse(action, null, records[parseInt(i.toString(), 10)]);\n        }\n    };\n    TreeGrid.prototype.setHeightForFrozenContent = function () {\n        var freeze = (this.grid.getFrozenLeftColumnsCount() > 0 || this.grid.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (this.grid.getFrozenColumns() > 0 || freeze) {\n            this.grid.contentModule.refreshScrollOffset();\n        }\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record) &&\n            !isRemoteData(this)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            if (this.detailTemplate) {\n                record = this.grid.getCurrentViewRecords()[row.getAttribute('data-rowindex')];\n            }\n            else {\n                if (this.enableVirtualization && this.isCollapseAll) {\n                    if (this.isExpandAll && row.rowIndex === -1) {\n                        record = this.grid.getCurrentViewRecords()[parseInt(row.getAttribute('data-rowindex'), 10)];\n                    }\n                    else {\n                        record = this.grid.getCurrentViewRecords()[row.rowIndex];\n                    }\n                }\n                else {\n                    record = this.grid.getCurrentViewRecords()[parseInt(row.getAttribute('data-rowindex'), 10)];\n                }\n            }\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     *\n     * @param {HTMLTableRowElement} row - Collapse the given row\n     * @param {Object} record - Collapse the given record\n     * @param {Object} key - Primary key value\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record, key) {\n        var _this = this;\n        var parentRec = this.parentData;\n        if (!this.enableVirtualization) {\n            parentRec = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        record = this.getCollapseExpandRecords(row, record);\n        if (this.isCollapseAll && !isRemoteData(this)) {\n            var args = { data: parentRec, row: row, cancel: false };\n            if (!this.isCollapsingEventTriggered) {\n                this.trigger(events.collapsing, args, function (collapsingArgs) {\n                    _this.collapseAllPrevent = collapsingArgs.cancel;\n                    if (!collapsingArgs.cancel) {\n                        if (collapsingArgs.collapseAll) {\n                            _this.expandCollapseAllChildren(record, 'collapse', key);\n                        }\n                        _this.collapseRows(row, record, parentRec, key);\n                    }\n                });\n            }\n            else if (!this.allowPaging && !this.collapseAllPrevent && this.isCollapsingEventTriggered) {\n                this.collapseRows(row, record, parentRec, key);\n            }\n            this.isCollapsingEventTriggered = true;\n        }\n        else if (!this.isCollapseAll || (this.isCollapseAll && isRemoteData(this))) {\n            var args = { data: record, row: row, cancel: false };\n            this.trigger(events.collapsing, args, function (collapsingArgs) {\n                if (!collapsingArgs.cancel) {\n                    _this.collapseRows(row, record, parentRec, key);\n                }\n            });\n        }\n    };\n    // Internal method for handling the rows collapse\n    TreeGrid.prototype.collapseRows = function (row, record, parentRec, key) {\n        this.expandCollapse('collapse', row, record);\n        var collapseArgs = { data: record, row: row };\n        if (!isRemoteData(this)) {\n            this.setHeightForFrozenContent();\n            if (!isNullOrUndefined(this.expandStateMapping)) {\n                this.updateExpandStateMapping(collapseArgs.data, false);\n            }\n            if (this.isCollapseAll && !this.isCollapsedEventTriggered) {\n                this.isCollapsedEventTriggered = true;\n                collapseArgs = { data: parentRec, row: row };\n                this.trigger(events.collapsed, collapseArgs);\n            }\n            else if (!this.isCollapseAll) {\n                this.trigger(events.collapsed, collapseArgs);\n            }\n            if (this.enableInfiniteScrolling) {\n                var scrollHeight = this.grid.getContent().firstElementChild.scrollHeight;\n                var scrollTop = this.grid.getContent().firstElementChild.scrollTop;\n                if ((scrollHeight - scrollTop) < this.grid.getRowHeight() + +this.height) {\n                    this.grid.getContent().firstElementChild.scrollBy(0, this.grid.getRowHeight());\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.updateExpandStateMapping = function (record, state) {\n        var totalRecords = record;\n        if (totalRecords.length) {\n            for (var i = 0; i < totalRecords.length; i++) {\n                totalRecords[parseInt(i.toString(), 10)][this.expandStateMapping] = state;\n                editAction({ value: totalRecords[parseInt(i.toString(), 10)], action: 'edit' }, this, this.isSelfReference, totalRecords[parseInt(i.toString(), 10)].index, this.grid.selectedRowIndex, this.expandStateMapping);\n            }\n        }\n        else {\n            record[\"\" + this.expandStateMapping] = state;\n            editAction({ value: record, action: 'edit' }, this, this.isSelfReference, record.index, this.grid.selectedRowIndex, this.expandStateMapping);\n        }\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     *\n     * @param {number} level - Expands the parent rows at given level\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandAction(rec, null, level, true);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var record = getObject('records', rec);\n            this.expandAction(record, null, level);\n        }\n    };\n    /**\n     * Expands the records by given primary key value\n     *\n     * @param {Object} key - Expands the parent rows with given primary key value\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandByKey = function (key) {\n        this.expandCollapseActionByKey(key, 'Expand');\n    };\n    TreeGrid.prototype.expandAction = function (record, key, level, isPaging) {\n        if (isPaging === void 0) { isPaging = false; }\n        var _loop_1 = function (i) {\n            if (!isNullOrUndefined(record[parseInt(i.toString(), 10)].parentItem)) {\n                var puniqueID_1 = record[parseInt(i.toString(), 10)].parentItem.uniqueID;\n                var parentItem = this_1.flatData.filter(function (e) {\n                    return e.uniqueID === puniqueID_1;\n                });\n                if (isRemoteData(this_1)) {\n                    parentItem = this_1.getCurrentViewRecords().filter(function (e) {\n                        return e.uniqueID === puniqueID_1;\n                    });\n                }\n                if (parentItem[0].expanded === false) {\n                    record.push(parentItem[0]);\n                    parentItem[0].expanded = true;\n                }\n                else {\n                    if (!getExpandStatus(this_1, parentItem[0], this_1.parentData)) {\n                        if (parentItem[0].expanded && parentItem[0].parentItem !== undefined) {\n                            record.push(parentItem[0]);\n                        }\n                    }\n                }\n            }\n            if (!isPaging) {\n                this_1.expandRow(null, record[parseInt(i.toString(), 10)], key, level);\n            }\n        };\n        var this_1 = this;\n        for (var i = 0; i < record.length; i++) {\n            _loop_1(i);\n        }\n        if (isPaging) {\n            this.expandRow(null, record, key, level);\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) {\n            return e.level === level && e.hasChildRecords;\n        });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     *\n     * @param {number} level - Define the parent row level which needs to be collapsed\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseAction(record, null, true);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var records = getObject('records', rec);\n            this.collapseAction(records);\n        }\n    };\n    /**\n     * Collapses the records by given primary key value\n     *\n     * @param {Object} key - Collapses the parent rows with given primary key value\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseByKey = function (key) {\n        this.expandCollapseActionByKey(key, 'Collapse');\n    };\n    TreeGrid.prototype.expandCollapseActionByKey = function (key, action) {\n        var primaryKeyField = this.getPrimaryKeyFieldNames()[0];\n        var dataSource = isRemoteData(this) ? this.getCurrentViewRecords() : this.grid.dataSource;\n        if (!isNullOrUndefined(primaryKeyField)) {\n            var rec = dataSource.filter(function (e) {\n                return e[\"\" + primaryKeyField].toString() === key.toString();\n            });\n            if (action === 'Expand') {\n                this.expandAction(rec, key, null);\n            }\n            else {\n                this.collapseAction(rec, key);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseAction = function (record, key, isPaging) {\n        if (isPaging === void 0) { isPaging = false; }\n        if (isPaging) {\n            this.collapseRow(null, record);\n        }\n        else {\n            for (var i = 0; i < record.length; i++) {\n                this.collapseRow(null, record[parseInt(i.toString(), 10)], key);\n            }\n        }\n        if (!this.grid.contentModule.isDataSourceChanged && this.enableVirtualization && this.getRows()\n            && this.parentData.length === this.getRows().length) {\n            var endIndex = 'endIndex';\n            this.grid.contentModule.startIndex = -1;\n            this.grid.contentModule[\"\" + endIndex] = -1;\n        }\n    };\n    /**\n     * Expands All the rows\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.isExpandedEventTriggered = false;\n        this.isExpandingEventTriggered = false;\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.isCollapsedEventTriggered = false;\n        this.isCollapsingEventTriggered = false;\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        if (!rows.length && this.getRows().length) {\n            rows.push(this.getRows()[0]);\n        }\n        this.isExpandAll = true;\n        this.isCollapseAll = true;\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization || this.enableInfiniteScrolling) && !isRemoteData(this)) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            if (rows.length) {\n                for (var i = 0; i < rows.length; i++) {\n                    if (action === 'collapse') {\n                        if (!isNullOrUndefined(this.getCurrentViewRecords()[rows[parseInt(i.toString(), 10)].rowIndex])) {\n                            this.collapseRow(rows[parseInt(i.toString(), 10)]);\n                        }\n                    }\n                    else {\n                        if (!this.enableVirtualization) {\n                            this.expandRow(rows[parseInt(i.toString(), 10)]);\n                        }\n                        else if (rows[0].getAttribute('aria-expanded') !== 'true') {\n                            this.expandRow(rows[0]);\n                        }\n                    }\n                }\n            }\n            else if (this.allowPaging) {\n                var isExpandCollapseall = this.enableCollapseAll;\n                this.setProperties({ enableCollapseAll: true }, true);\n                this.grid.pagerModule.goToPage(1);\n                this.setProperties({ enableCollapseAll: isExpandCollapseall }, true);\n            }\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                if (action === 'collapse') {\n                    this.collapseRow(rows[parseInt(i.toString(), 10)]);\n                }\n                else {\n                    this.expandRow(rows[parseInt(i.toString(), 10)]);\n                }\n            }\n        }\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var _this = this;\n        var expandingArgs = { row: row, data: record, childData: [], requestType: action };\n        var childRecords = this.grid.currentViewData.filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        var targetEle;\n        if ((!isRemoteData(this) && action === 'expand' && this.isSelfReference && isCountRequired(this) && !childRecords.length) || (action === 'collapse' || (this.isExpandAll && this.loadChildOnDemand) && !isRemoteData(this) && this.isSelfReference && isCountRequired(this))) {\n            this.updateChildOnDemand(expandingArgs);\n        }\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.grid.currentViewData.indexOf(record);\n            row = gridRows[parseInt(rowIndex.toString(), 10)];\n        }\n        else {\n            rowIndex = +row.getAttribute('data-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization || this.enableInfiniteScrolling) && !isRemoteData(this)\n            && !isCountRequired(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                if (!isNullOrUndefined(row)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridexpand')) {\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild || isCountRequired(this)) {\n                    record.expanded = false;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                if (!isNullOrUndefined(row)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    !record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridcollapse')) {\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            row.querySelectorAll('.e-treerowcell')[0].setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n            var detailrows = gridRows.filter(function (r) {\n                return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n            });\n            if (isRemoteData(this) && !isOffline(this)) {\n                this.remoteExpand(action, row, record);\n            }\n            else {\n                if ((!isCountRequired(this) || childRecords.length) || action === 'collapse') {\n                    this.localExpand(action, row, record);\n                }\n                var lastrowIdx = this.getVisibleRecords()[this.getVisibleRecords().length - 1]['index'];\n                var lastRow = this.getRowByIndex(lastrowIdx);\n                if (this.grid.getContentTable().clientHeight <= this.grid.getContent().clientHeight && !isNullOrUndefined(lastRow) && !lastRow.cells[0].classList.contains('e-lastrowcell')) {\n                    this.lastRowBorder(lastRow, true);\n                }\n            }\n            if (isCountRequired(this) && action === 'expand') {\n                var currentData = this.getCurrentViewRecords();\n                var visibleRecords = currentData.filter(function (e) {\n                    return getExpandStatus(_this, e, _this.parentData);\n                });\n                this.dataResults.result = visibleRecords;\n            }\n            if (!isNullOrUndefined(targetEle) && targetEle.closest('.e-treerowcell').classList.contains('e-cellselectionbackground')) {\n                targetEle.closest('.e-treerowcell').classList.remove('e-cellselectionbackground');\n                targetEle.closest('.e-treerowcell').removeAttribute('aria-selected');\n            }\n            if (this.isPixelHeight() && !row.cells[0].classList.contains('e-lastrowcell')) {\n                var totalRows = this.getRows();\n                var rows = this.getContentTable().rows;\n                totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i >= 0; i--) {\n                    if (!isHidden(totalRows[parseInt(i.toString(), 10)])) {\n                        var table = this.getContentTable();\n                        var sHeight = table.scrollHeight;\n                        var clientHeight = this.getContent().clientHeight;\n                        this.lastRowBorder(totalRows[parseInt(i.toString(), 10)], sHeight <= clientHeight);\n                        break;\n                    }\n                }\n            }\n            this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction, record: record, row: row });\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateChildOnDemand = function (expandingArgs) {\n        var _this = this;\n        if (expandingArgs.requestType === 'collapse' && isCountRequired(this)) {\n            var flatDataRecords = this.flatData.slice();\n            for (var i = 0; i < flatDataRecords.length; i++) {\n                if (flatDataRecords[parseInt(i.toString(), 10)]['parentUniqueID'] === expandingArgs.data['uniqueID']) {\n                    flatDataRecords.splice(i, 1);\n                    i = i - 1;\n                }\n            }\n            this.dataResults.result = flatDataRecords;\n            return;\n        }\n        var deff = new Deferred();\n        var childDataBind = 'childDataBind';\n        expandingArgs[\"\" + childDataBind] = deff.resolve;\n        var record = expandingArgs.data;\n        this.trigger(events.dataStateChange, expandingArgs);\n        deff.promise.then(function () {\n            if (expandingArgs.childData.length) {\n                if (isCountRequired(_this)) {\n                    _this.flatData = _this.dataResults.result;\n                }\n                if (_this.enableInfiniteScrolling && isCountRequired(_this)) {\n                    _this.flatData = _this.infiniteScrollData;\n                }\n                var currentData = (_this.flatData);\n                var index = 0;\n                for (var i = 0; i < currentData.length; i++) {\n                    if (currentData[parseInt(i.toString(), 10)].taskData === record.taskData) {\n                        index = i;\n                        break;\n                    }\n                }\n                var data_1 = getValue('result', _this.dataSource);\n                var childData = extendArray(expandingArgs.childData);\n                var length_1 = record[_this.childMapping] ? record[_this.childMapping].length > childData.length ?\n                    record[_this.childMapping].length : childData.length : childData.length;\n                for (var i = 0; i < length_1; i++) {\n                    if (record[_this.childMapping]) {\n                        data_1.filter(function (e, i) {\n                            if (e[_this.parentIdMapping] === record[_this.idMapping]) {\n                                data_1.splice(i, 1);\n                            }\n                        });\n                    }\n                    if (childData[parseInt(i.toString(), 10)]) {\n                        childData[parseInt(i.toString(), 10)].level = record.level + 1;\n                        childData[parseInt(i.toString(), 10)].index = Math.ceil(Math.random() * 1000);\n                        childData[parseInt(i.toString(), 10)].parentItem = extend({}, record);\n                        childData[parseInt(i.toString(), 10)].taskData = extend({}, childData[parseInt(i.toString(), 10)]);\n                        delete childData[parseInt(i.toString(), 10)].parentItem.childRecords;\n                        delete childData[parseInt(i.toString(), 10)].taskData.parentItem;\n                        childData[parseInt(i.toString(), 10)].parentUniqueID = record.uniqueID;\n                        childData[parseInt(i.toString(), 10)].uniqueID = getUid(_this.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + childData[parseInt(i.toString(), 10)].uniqueID, childData[parseInt(i.toString(), 10)], _this);\n                        if (!isNullOrUndefined(childData[parseInt(i.toString(), 10)][_this.childMapping]) ||\n                            (childData[parseInt(i.toString(), 10)][_this.hasChildMapping] && isCountRequired(_this))) {\n                            childData[parseInt(i.toString(), 10)].hasChildRecords = true;\n                        }\n                        if (isCountRequired(_this) && record[_this.childMapping] && record[_this.childMapping][parseInt(i.toString(), 10)]) {\n                            currentData.splice(index + 1 + i, 0, childData[parseInt(i.toString(), 10)]);\n                        }\n                        else {\n                            currentData.splice(index + 1 + i, record[_this.childMapping] &&\n                                record[_this.childMapping][parseInt(i.toString(), 10)] ? 1 : 0, childData[parseInt(i.toString(), 10)]);\n                        }\n                    }\n                    else {\n                        currentData.splice(index + 1 + i, 1);\n                    }\n                }\n                currentData[parseInt(index.toString(), 10)][\"\" + _this.childMapping] = childData;\n                currentData[parseInt(index.toString(), 10)].childRecords = childData;\n                currentData[parseInt(index.toString(), 10)].expanded = true;\n                setValue('uniqueIDCollection.' + currentData[parseInt(index.toString(), 10)].uniqueID, currentData[parseInt(index.toString(), 10)], _this);\n                for (var j = 0; j < expandingArgs.childData.length; j++) {\n                    data_1.push(expandingArgs.childData[parseInt(j.toString(), 10)]);\n                }\n            }\n            if (isCountRequired(_this) && _this.loadChildOnDemand && expandingArgs.requestType === 'expand') {\n                _this.dataResults['expandRecord'] = {};\n                _this.dataResults['expandRecord'] = expandingArgs.data;\n            }\n            _this.isExpandRefresh = true;\n            var scrollHeightBeforeRefresh = _this.getContentTable().parentElement.scrollTop;\n            _this.grid.refresh();\n            _this.setHeightForFrozenContent();\n            if (_this.enableInfiniteScrolling) {\n                _this.getContentTable().parentElement.scrollTop = scrollHeightBeforeRefresh;\n            }\n            _this.trigger(events.expanded, expandingArgs);\n        });\n    };\n    TreeGrid.prototype.remoteExpand = function (action, row, record) {\n        var gridRows = this.getRows();\n        var fetchRemoteChildData = 'fetchRemoteChildData';\n        if (this.rowTemplate) {\n            var rows_1 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_1);\n        }\n        var args = { data: record, row: row };\n        var rows = [];\n        rows = gridRows.filter(function (r) {\n            return ((r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1))) || (r.querySelector('.e-gridrowindex' + record.index + 'level0' + '.e-summarycell')));\n        });\n        if (action === 'expand') {\n            this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n            var args_1 = { row: row, data: record };\n            if (rows.length > 0) {\n                this.setHeightForFrozenContent();\n                this.trigger(events.expanded, args_1);\n            }\n        }\n        else if (action === 'collapse' && this.enableVirtualization) {\n            this.dataModule[\"\" + fetchRemoteChildData]({ action: action, record: args.data, rows: null, parentRow: args.row });\n        }\n        else {\n            this.collapseRemoteChild({ record: record, rows: rows });\n            this.setHeightForFrozenContent();\n            this.trigger(events.collapsed, args);\n        }\n    };\n    TreeGrid.prototype.localExpand = function (action, row, record) {\n        var rows;\n        var childRecords = this.grid.currentViewData.filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        if (this.isPixelHeight() && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var movableRows;\n        var freezeRightRows;\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_2 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_2);\n        }\n        var displayAction = (action === 'expand') ? 'table-row' : 'none';\n        var primaryKeyField = this.getPrimaryKeyFieldNames()[0];\n        if (this.enableImmutableMode && !this.allowPaging) {\n            rows = [];\n            for (var i = 0; i < childRecords.length; i++) {\n                var rowIndex = this.grid.getRowIndexByPrimaryKey(childRecords[parseInt(i.toString(), 10)][\"\" + primaryKeyField]);\n                rows.push(this.getRows()[parseInt(rowIndex.toString(), 10)]);\n            }\n        }\n        else {\n            rows = gridRows.filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        var freeze = (this.grid.getFrozenLeftColumnsCount() > 0 || this.grid.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (this.frozenRows || this.frozenColumns || this.getFrozenColumns() || freeze) {\n            movableRows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        if (freeze) {\n            freezeRightRows = this.getFrozenRightRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        var gridRowsObject = this.grid.getRowsObject();\n        var currentViewData = this.grid.currentViewData;\n        var currentRecord = currentViewData.filter(function (e) {\n            return e.uniqueID === record.uniqueID;\n        });\n        var currentIndex = currentViewData.indexOf(currentRecord[0]);\n        if (!isNullOrUndefined(gridRowsObject[parseInt(currentIndex.toString(), 10)].visible) &&\n            gridRowsObject[parseInt(currentIndex.toString(), 10)].visible !== false) {\n            gridRowsObject[parseInt(currentIndex.toString(), 10)].visible = true;\n        }\n        var detailrows = gridRows.filter(function (r) {\n            return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        for (var i = 0; i < rows.length; i++) {\n            if (!isNullOrUndefined(rows[parseInt(i.toString(), 10)])) {\n                rows[parseInt(i.toString(), 10)].style.display = displayAction;\n            }\n            if (!isNullOrUndefined(rows[parseInt(i.toString(), 10)]) && !this.allowPaging && !(this.enableVirtualization\n                || this.enableInfiniteScrolling || isRemoteData(this) || isCountRequired(this))) {\n                gridRowsObject[rows[parseInt(i.toString(), 10)].rowIndex].visible = displayAction !== 'none' ? true : false;\n                var parentRecord = currentViewData.filter(function (e) {\n                    return e.uniqueID === currentRecord[0].parentUniqueID;\n                });\n                if (!isNullOrUndefined(parentRecord[0]) && gridRows[currentViewData.indexOf(parentRecord[0])].getElementsByClassName('e-treegridcollapse').length) {\n                    gridRowsObject[parseInt(currentIndex.toString(), 10)].visible = false;\n                }\n            }\n            if (!isNullOrUndefined(movableRows)) {\n                movableRows[parseInt(i.toString(), 10)].style.display = displayAction;\n            }\n            if (!isNullOrUndefined(freezeRightRows)) {\n                freezeRightRows[parseInt(i.toString(), 10)].style.display = displayAction;\n            }\n            this.notify('childRowExpand', { row: rows[parseInt(i.toString(), 10)] });\n            if ((!isNullOrUndefined(childRecords[parseInt(i.toString(), 10)].childRecords) && childRecords[parseInt(i.toString(), 10)].childRecords.length > 0) && (action !== 'expand' ||\n                isNullOrUndefined(childRecords[parseInt(i.toString(), 10)].expanded) || childRecords[parseInt(i.toString(), 10)].expanded)) {\n                this.expandCollapse(action, rows[parseInt(i.toString(), 10)], childRecords[parseInt(i.toString(), 10)], true);\n                if (this.frozenColumns <= this.treeColumnIndex && !isNullOrUndefined(movableRows)) {\n                    this.expandCollapse(action, movableRows[parseInt(i.toString(), 10)], childRecords[parseInt(i.toString(), 10)], true);\n                }\n            }\n        }\n        for (var i = 0; i < detailrows.length; i++) {\n            if (!isNullOrUndefined(detailrows[parseInt(i.toString(), 10)]) && !this.allowPaging && !(this.enableVirtualization ||\n                this.enableInfiniteScrolling || isRemoteData(this) || isCountRequired(this))) {\n                gridRowsObject[detailrows[parseInt(i.toString(), 10)].rowIndex].visible = displayAction !== 'none' ? true : false;\n                detailrows[parseInt(i.toString(), 10)].style.display = displayAction;\n            }\n        }\n        if (!this.allowPaging && !(this.enableVirtualization || this.enableInfiniteScrolling || isRemoteData(this)\n            || isCountRequired(this))) {\n            this.grid.notify('refresh-Expand-and-Collapse', { rows: this.grid.getRowsObject() });\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[parseInt(i.toString(), 10)];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function () {\n        var rows = this.getContentTable().rows;\n        rows = [].slice.call(rows);\n        for (var i = 0; i < rows.length; i++) {\n            var rcell = this.grid.getContentTable().rows[parseInt(i.toString(), 10)]\n                .cells[this.treeColumnIndex];\n            var row = rows[parseInt(i.toString(), 10)];\n            var rowData = this.grid.getRowsObject()[parseInt(i.toString(), 10)].data;\n            var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n            this.renderModule.cellRender(arg);\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rowDetails, isChild) {\n        if (!isChild) {\n            rowDetails.record.expanded = false;\n        }\n        var rows = rowDetails.rows;\n        var row;\n        var childRecord;\n        var movablerows = [];\n        var rightrows = [];\n        var freeze = (this.getFrozenLeftColumnsCount() > 0 || this.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            movablerows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + rowDetails.record.index + 'level' + (rowDetails.record.level + 1));\n            });\n            rightrows = this.getFrozenRightRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + rowDetails.record.index + 'level' + (rowDetails.record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            rows[parseInt(i.toString(), 10)].style.display = 'none';\n            row = rows[parseInt(i.toString(), 10)];\n            var collapsingTd = rows[parseInt(i.toString(), 10)].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (freeze) {\n                movablerows[parseInt(i.toString(), 10)].style.display = 'none';\n                rightrows[parseInt(i.toString(), 10)].style.display = 'none';\n                if (!rows[parseInt(i.toString(), 10)].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                    if (movablerows[parseInt(i.toString(), 10)].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                        row = movablerows[parseInt(i.toString(), 10)];\n                    }\n                    else if (rightrows[parseInt(i.toString(), 10)].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                        row = rightrows[parseInt(i.toString(), 10)];\n                    }\n                }\n            }\n            if (row.querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = row.querySelector('.e-treecolumn-container .e-treegridexpand');\n                childRecord = this.rowTemplate ? this.grid.getCurrentViewRecords()[rows[parseInt(i.toString(), 10)].rowIndex] :\n                    this.grid.getRowObjectFromUID(rows[parseInt(i.toString(), 10)].getAttribute('data-Uid')).data;\n                if (!isNullOrUndefined(expandElement) && childRecord.expanded) {\n                    removeClass([expandElement], 'e-treegridexpand');\n                    addClass([expandElement], 'e-treegridcollapse');\n                }\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[parseInt(i_1.toString(), 10)].querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1))) {\n                        cRow.push(eRows[parseInt(i_1.toString(), 10)]);\n                    }\n                }\n                if (cRow.length && childRecord.expanded) {\n                    this.collapseRemoteChild({ record: childRecord, rows: cRow }, false);\n                }\n            }\n        }\n    };\n    /**\n     * Method to sanitize html element\n     *\n     * @param {any} value - Specifies the html value to sanitize\n     * @returns {any} Returns the sanitized html value\n     * @hidden\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeGrid.prototype.sanitize = function (value) {\n        if (this.enableHtmlSanitizer && typeof (value) === 'string') {\n            return SanitizeHtmlHelper.sanitize(value);\n        }\n        return value;\n    };\n    /**\n     * Updates the rows and cells\n     *\n     * @param {Object[]} records - Updates the given records\n     * @param {HTMLTableRowElement[]} rows - Updates the given rows\n     * @param {number} index -  Updates the given cell index\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateRowAndCellElements = function (records, rows, index) {\n        for (var i = 0; i < records.length; i++) {\n            this.renderModule.cellRender({\n                data: records[parseInt(i.toString(), 10)], cell: rows[parseInt(i.toString(), 10)].cells[parseInt(index.toString(), 10)],\n                column: this.grid.getColumns()[this.treeColumnIndex],\n                requestType: 'rowDragAndDrop'\n            });\n            if (this['action'] === 'indenting' || this['action'] === 'outdenting') {\n                this.renderModule.RowModifier({\n                    data: records[parseInt(i.toString(), 10)], row: rows[parseInt(i.toString(), 10)]\n                });\n            }\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n        this.grid.on('initial-end', this.afterGridRender, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n        this.grid.off('initial-end', this.afterGridRender);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     *\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, the TreeGrid filters the records with exact match. if false, it filters\n     * case insensitive records (uppercase and lowercase letters are treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent is set to true,\n     * then filter ignores diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for filter column.\n     * @returns {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     *\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     *\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     *\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     *\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     * @returns {void}\n     */\n    TreeGrid.prototype.copy = function (withHeader) {\n        this.clipboardModule.copy(withHeader);\n    };\n    /**\n     * Paste data from clipboard to selected cells.\n     *\n     * @param {boolean} data - Specifies the date for paste.\n     * @param {boolean} rowIndex - Specifies the row index.\n     * @param {boolean} colIndex - Specifies the column index.\n     * @returns {void}\n     */\n    TreeGrid.prototype.paste = function (data, rowIndex, colIndex) {\n        this.clipboardModule.paste(data, rowIndex, colIndex);\n    };\n    /**\n     * Selects a cell by the given index.\n     *\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     *\n     * @returns {Element[]} - Returns selected row elements collection\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} - Returns movable cell element from the indexes passed\n     */\n    TreeGrid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getMovableCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets all the TreeGrid's movable table data rows.\n     *\n     * @returns {Element[]} - Returns element collection of movable rows\n     */\n    TreeGrid.prototype.getMovableDataRows = function () {\n        return this.grid.getMovableDataRows();\n    };\n    /**\n     * Gets a movable tables row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} - Returns movable row based on index passed\n     */\n    TreeGrid.prototype.getMovableRowByIndex = function (index) {\n        return this.grid.getMovableRowByIndex(index);\n    };\n    /**\n     * Gets the TreeGrid's movable content rows from frozen treegrid.\n     *\n     * @returns {Element[]}: Returns movable row element\n     */\n    TreeGrid.prototype.getMovableRows = function () {\n        return this.grid.getMovableRows();\n    };\n    /**\n     * Gets a frozen right tables row element by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} returns the element\n     */\n    TreeGrid.prototype.getFrozenRightRowByIndex = function (index) {\n        return this.grid.getFrozenRightRowByIndex(index);\n    };\n    /**\n     * Gets the Tree Grid's frozen right content rows from frozen Tree Grid.\n     *\n     * @returns {Element[]} returns the element\n     */\n    TreeGrid.prototype.getFrozenRightRows = function () {\n        return this.grid.getFrozenRightRows();\n    };\n    /**\n     * Gets all the Tree Grid's frozen right table data rows.\n     *\n     * @returns {Element[]} Returns the Element\n     */\n    TreeGrid.prototype.getFrozenRightDataRows = function () {\n        return this.grid.getFrozenRightDataRows();\n    };\n    /**\n     * Gets a frozen right table cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    TreeGrid.prototype.getFrozenRightCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getFrozenRightCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a frozen left column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    TreeGrid.prototype.getFrozenLeftColumnHeaderByIndex = function (index) {\n        return this.grid.getFrozenLeftColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a frozen right column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    TreeGrid.prototype.getFrozenRightColumnHeaderByIndex = function (index) {\n        return this.grid.getFrozenRightColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a movable column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    TreeGrid.prototype.getMovableColumnHeaderByIndex = function (index) {\n        return this.grid.getMovableColumnHeaderByIndex(index);\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the movable column count\n     */\n    TreeGrid.prototype.getMovableColumnsCount = function () {\n        return this.grid.getMovableColumnsCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the Frozen Left column\n     */\n    TreeGrid.prototype.getFrozenLeftColumnsCount = function () {\n        return this.grid.getFrozenLeftColumnsCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the Frozen Right column count\n     */\n    TreeGrid.prototype.getFrozenRightColumnsCount = function () {\n        return this.grid.getFrozenRightColumnsCount();\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    TreeGrid.prototype.getFrozenLeftColumns = function () {\n        this.updateColumnModel(this.grid.getFrozenLeftColumns());\n        return this.columnModel;\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    TreeGrid.prototype.getFrozenRightColumns = function () {\n        this.updateColumnModel(this.grid.getFrozenRightColumns());\n        return this.columnModel;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible movable count\n     */\n    TreeGrid.prototype.getVisibleMovableCount = function () {\n        return this.grid.getVisibleMovableCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible Frozen Right count\n     */\n    TreeGrid.prototype.getVisibleFrozenRightCount = function () {\n        return this.grid.getVisibleFrozenRightCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible Frozen left count\n     */\n    TreeGrid.prototype.getVisibleFrozenLeftCount = function () {\n        return this.grid.getVisibleFrozenLeftCount();\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    TreeGrid.prototype.getMovableColumns = function () {\n        this.updateColumnModel(this.grid.getMovableColumns());\n        return this.columnModel;\n    };\n    /**\n     * Gets the number of frozen column in tree grid\n     *\n     * @hidden\n     * @returns {number} - Returns frozen column count\n     */\n    TreeGrid.prototype.getFrozenColumns = function () {\n        return this.getFrozenCount(this.columns, 0) + this.frozenColumns;\n    };\n    TreeGrid.prototype.getFrozenCount = function (cols, cnt) {\n        for (var j = 0, len = cols.length; j < len; j++) {\n            if (cols[parseInt(j.toString(), 10)].columns) {\n                cnt = this.getFrozenCount(cols[parseInt(j.toString(), 10)].columns, cnt);\n            }\n            else {\n                if (cols[parseInt(j.toString(), 10)].isFrozen) {\n                    cnt++;\n                }\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     *\n     * @returns {number[]} - Returns selected rows index collection\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     *\n     * @returns {ISelectedCell[]} - Returns selected cell's index details\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     *\n     * @isGenericType true\n     * @returns {Object[]} - Returns selected records collection\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     *\n     * @returns {{baseModule: Data, treeModule: DataManipulation}}: Returns grid and treegrid data module\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     *\n     * @param {number[]} fromIndexes - Source indexes of rows\n     * @param {number} toIndex - Destination index of row\n     * @param {string} position - Defines drop position as above or below or child\n     * @returns {void}\n     */\n    TreeGrid.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex, position);\n    };\n    /**\n     * Indents the record to one level of hierarchy. Moves the selected row as the last child of its previous row.\n     *\n     * @param {Object} record – specifies the record to do indented\n     * @returns {void}\n     */\n    TreeGrid.prototype.indent = function (record) {\n        if (!isNullOrUndefined(this.rowDragAndDropModule)) {\n            record = record;\n            this.rowDragAndDropModule[this.indentOutdentAction](record, 'indent');\n        }\n    };\n    /**\n     * Outdent the record to one level of hierarchy. Moves the selected row as sibling to its parent row.\n     *\n     * @param {Object} record – specifies the record to do outdented\n     * @returns {void}\n     */\n    TreeGrid.prototype.outdent = function (record) {\n        if (!isNullOrUndefined(this.rowDragAndDropModule)) {\n            record = record;\n            this.rowDragAndDropModule[this.indentOutdentAction](record, 'outdent');\n        }\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property('Ellipsis')\n    ], TreeGrid.prototype, \"clipMode\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"loadChildOnDemand\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], TreeGrid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnChooser\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property('Parent')\n    ], TreeGrid.prototype, \"copyHierarchyMode\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAutoFill\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAdaptiveUI\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableImmutableMode\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Complex({}, LoadingIndicator)\n    ], TreeGrid.prototype, \"loadingIndicator\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableVirtualMaskRow\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableColumnVirtualization\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableInfiniteScrolling\", void 0);\n    __decorate([\n        Complex({}, InfiniteScrollSettings)\n    ], TreeGrid.prototype, \"infiniteScrollSettings\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSaved\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchCancel\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeCopy\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePaste\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n *\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Reorder(parent) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Reorder module name\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var columnModel = 'columnModel';\n        var treeColumn = this.parent[\"\" + columnModel][this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[parseInt(f.toString(), 10)]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n *\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     *\n     * @param  {string|string[]} fName - Defines the field name.\n     * @returns {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Resize module name\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { Grid, RowDD as GridDragDrop, parentsUntil } from '@syncfusion/ej2-grids';\nimport { getObject, Scroll } from '@syncfusion/ej2-grids';\nimport { closest, isNullOrUndefined, classList, setValue, extend, getValue, removeClass, addClass, setStyleAttribute } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nimport { getParentData, findChildrenRecords, isRemoteData, isOffline, isCountRequired } from '../utils';\n/**\n * TreeGrid RowDragAndDrop module\n *\n * @hidden\n */\nvar RowDD = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function RowDD(parent) {\n        /** @hidden */\n        this.canDrop = true;\n        /** @hidden */\n        this.isDraggedWithChild = false;\n        /** @hidden */\n        this.modifiedRecords = 'modifiedRecords';\n        /** @hidden */\n        this.selectedRecords = 'selectedRecords';\n        /** @hidden */\n        this.selectedRows = 'selectedRows';\n        /** @hidden */\n        this.hasDropItem = true;\n        /** @hidden */\n        this.isaddtoBottom = false;\n        Grid.Inject(GridDragDrop);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    RowDD.prototype.getChildrecordsByParentID = function (id) {\n        var treeGridDataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            treeGridDataSource = this.parent.grid.dataSource.dataSource.json;\n        }\n        else {\n            treeGridDataSource = this.parent.grid.dataSource;\n        }\n        var record = treeGridDataSource.filter(function (e) {\n            return e.uniqueID === id;\n        });\n        return record;\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    RowDD.prototype.addEventListener = function () {\n        this.parent.on(events.rowdraging, this.Rowdraging, this);\n        this.parent.on(events.rowDropped, this.rowDropped, this);\n        this.parent.on(events.rowsAdd, this.rowsAdded, this);\n        this.parent.on(events.rowsRemove, this.rowsRemoved, this);\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     *\n     * @returns {void}\n     * @param {number[]} fromIndexes - source indexes of rows to be re-ordered\n     * @param {number} toIndex - Destination row index\n     * @param {string} position - Drop position as above or below or child\n     */\n    RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        var tObj = this.parent;\n        var action = 'action';\n        var dropPosition = 'dropPosition';\n        var updateRowAndCellElements = 'updateRowAndCellElements';\n        if (fromIndexes[0] !== toIndex && ['above', 'below', 'child'].indexOf(position) !== -1) {\n            if (position === 'above') {\n                this.dropPosition = 'topSegment';\n            }\n            if (position === 'below') {\n                this.dropPosition = 'bottomSegment';\n            }\n            if (position === 'child') {\n                this.dropPosition = 'middleSegment';\n            }\n            this.parent[\"\" + dropPosition] = this.dropPosition;\n            var data = [];\n            for (var i = 0; i < fromIndexes.length; i++) {\n                var index = this.parent.getRowByIndex(fromIndexes[parseInt(i.toString(), 10)]).rowIndex;\n                data[parseInt(i.toString(), 10)] = this.parent.getCurrentViewRecords()[parseInt(index.toString(), 10)];\n            }\n            var isByMethod = true;\n            var args = {\n                data: data,\n                dropIndex: toIndex\n            };\n            if (!isCountRequired(this.parent)) {\n                this.dropRows(args, isByMethod);\n            }\n            //this.refreshGridDataSource();\n            if (tObj.isLocalData) {\n                tObj.flatData = this.orderToIndex(tObj.flatData);\n            }\n            if (this.parent[\"\" + action] === 'outdenting') {\n                if (!isNullOrUndefined(data[0].parentItem)) {\n                    data[0].level = data[0].parentItem.level + 1;\n                }\n            }\n            this.parent.grid.refresh();\n            if (this.parent.enableImmutableMode && this.dropPosition === 'middleSegment') {\n                var index = void 0;\n                if (this.parent.allowRowDragAndDrop) {\n                    index = this.parent.treeColumnIndex + 1;\n                }\n                else if (this.parent[\"\" + action] === 'indenting') {\n                    index = this.parent.treeColumnIndex;\n                }\n                var row = this.parent.getRows()[fromIndexes[0]];\n                var dropData = args.data[0];\n                var totalRecord = [];\n                var rows = [];\n                totalRecord.push(dropData);\n                rows.push(row);\n                var parentUniqueID = 'parentUniqueID';\n                var parentData = getParentData(this.parent, args.data[0][\"\" + parentUniqueID]);\n                var parentrow = this.parent.getRows()[parseInt(toIndex.toString(), 10)];\n                totalRecord.push(parentData);\n                rows.push(parentrow);\n                this.parent[\"\" + updateRowAndCellElements](totalRecord, rows, index);\n            }\n            if (this.parent.enableImmutableMode && this.parent[\"\" + action] === 'outdenting') {\n                var index = void 0;\n                if (this.parent.allowRowDragAndDrop) {\n                    index = this.parent.treeColumnIndex + 1;\n                }\n                else if (this.parent[\"\" + action] === 'outdenting') {\n                    index = this.parent.treeColumnIndex;\n                }\n                var record = args.data[0];\n                var row = this.parent.getRows()[fromIndexes[0]];\n                var totalRecord = [];\n                var rows = [];\n                totalRecord.push(record);\n                rows.push(row);\n                this.parent[\"\" + updateRowAndCellElements](totalRecord, rows, index);\n            }\n        }\n        else {\n            return;\n        }\n    };\n    RowDD.prototype.indentOutdentAction = function (record, request) {\n        var tObj = this.parent;\n        var action = 'action';\n        var droppedIndex = 'dropIndex';\n        var selectedItemIndex = -1;\n        if (isNullOrUndefined(record) && this.parent.selectedRowIndex === -1) {\n            return;\n        }\n        else {\n            if (this.parent.enableVirtualization && this.parent.selectedRowIndex !== -1) {\n                selectedItemIndex = this.parent.getSelectedRows()[0].rowIndex;\n            }\n            else if (this.parent.selectedRowIndex !== -1) {\n                selectedItemIndex = this.parent.selectedRowIndex;\n            }\n            this.selectedItem = isNullOrUndefined(record) ?\n                tObj.getCurrentViewRecords()[parseInt(selectedItemIndex.toString(), 10)] : record;\n            var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n            var rowIndex = this.parent.grid.getRowIndexByPrimaryKey(this.selectedItem[\"\" + primaryKeyField]);\n            this.selectedRow = this.parent[this.selectedRows] = selectedItemIndex !== -1 ?\n                this.parent.getSelectedRows()[0]\n                : this.parent.grid.getRowByIndex(rowIndex);\n            this.selectedRecord = this.parent[this.selectedRecords] = selectedItemIndex !== -1 ?\n                tObj.getCurrentViewRecords()[parseInt(selectedItemIndex.toString(), 10)]\n                : this.selectedItem;\n            if (request === 'indent') {\n                var record_1 = tObj.getCurrentViewRecords()[this.selectedRow.rowIndex - 1];\n                var dropIndex = void 0;\n                if (this.selectedRow.rowIndex === 0 || this.selectedRow.rowIndex === -1 ||\n                    tObj.getCurrentViewRecords()[this.selectedRow.rowIndex].level - record_1.level === 1) {\n                    return;\n                }\n                if (record_1.level > this.selectedRecord.level) {\n                    for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                        if (tObj.getCurrentViewRecords()[parseInt(i.toString(), 10)].taskData ===\n                            record_1.parentItem.taskData) {\n                            dropIndex = i;\n                            if (tObj.enableVirtualization) {\n                                dropIndex = parseInt(tObj.getRows()[parseInt(i.toString(), 10)].getAttribute('data-rowindex'), 10);\n                            }\n                        }\n                    }\n                }\n                else {\n                    dropIndex = this.selectedRow.rowIndex - 1;\n                }\n                if (this.parent.enableVirtualization && this.selectedRecord && !(record_1.level > this.selectedRecord.level)) {\n                    dropIndex = parseInt(this.selectedRow.getAttribute('data-rowindex'), 10) - 1;\n                }\n                tObj[\"\" + action] = 'indenting';\n                tObj[\"\" + droppedIndex] = dropIndex;\n                this.eventTrigger('indenting', dropIndex);\n            }\n            else if (request === 'outdent') {\n                if (this.selectedRow.rowIndex === -1 || this.selectedRow.rowIndex === 0 ||\n                    tObj.getCurrentViewRecords()[this.selectedRow.rowIndex].level === 0) {\n                    return;\n                }\n                var dropIndex = void 0;\n                var parentItem = this.selectedRecord.parentItem;\n                for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                    if (tObj.getCurrentViewRecords()[parseInt(i.toString(), 10)].uniqueID === parentItem.uniqueID) {\n                        dropIndex = i;\n                    }\n                }\n                if (this.parent.enableVirtualization && this.selectedRecord) {\n                    dropIndex = parseInt(this.parent.getRows()[parseInt(dropIndex.toString(), 10)].getAttribute('data-rowindex'), 10);\n                }\n                tObj[\"\" + action] = 'outdenting';\n                tObj[\"\" + droppedIndex] = dropIndex;\n                this.eventTrigger('outdenting', dropIndex);\n            }\n        }\n    };\n    RowDD.prototype.eventTrigger = function (action, dropIndex) {\n        var _this = this;\n        var actionArgs = {\n            action: action,\n            cancel: false,\n            data: [this.parent[this.selectedRecords]],\n            row: this.parent[this.selectedRows]\n        };\n        this.parent.trigger(events.actionBegin, actionArgs, function (actionArgs) {\n            if (!actionArgs.cancel) {\n                if (actionArgs.action === 'indenting') {\n                    if (_this.parent.enableVirtualization) {\n                        _this.reorderRows([parseInt(_this.selectedRow.getAttribute('data-rowindex'), 10)], dropIndex, 'child');\n                    }\n                    else {\n                        _this.reorderRows([_this.selectedRow.rowIndex], dropIndex, 'child');\n                    }\n                }\n                else if (actionArgs.action === 'outdenting') {\n                    if (_this.parent.enableVirtualization) {\n                        _this.reorderRows([parseInt(_this.selectedRow.getAttribute('data-rowindex'), 10)], dropIndex, 'below');\n                    }\n                    else {\n                        _this.reorderRows([_this.selectedRow.rowIndex], dropIndex, 'below');\n                    }\n                }\n            }\n        });\n    };\n    RowDD.prototype.orderToIndex = function (currentData) {\n        for (var i = 0; i < currentData.length; i++) {\n            currentData[parseInt(i.toString(), 10)].index = i;\n            if (!isNullOrUndefined(currentData[parseInt(i.toString(), 10)].parentItem)) {\n                var updatedParent = getValue('uniqueIDCollection.' + currentData[parseInt(i.toString(), 10)].parentUniqueID, this.parent);\n                currentData[parseInt(i.toString(), 10)].parentItem.index = updatedParent.index;\n            }\n        }\n        return currentData;\n    };\n    RowDD.prototype.rowsAdded = function (e) {\n        var draggedRecord;\n        var dragRecords = e.records;\n        for (var i = e.records.length - 1; i > -1; i--) {\n            draggedRecord = dragRecords[parseInt(i.toString(), 10)];\n            if (draggedRecord.parentUniqueID) {\n                var record = dragRecords.filter(function (data) {\n                    return data.uniqueID === draggedRecord.parentUniqueID;\n                });\n                if (record.length) {\n                    var index = record[0].childRecords.indexOf(draggedRecord);\n                    var parentRecord = record[0];\n                    if (index !== -1) {\n                        if (isNullOrUndefined(this.parent.idMapping)) {\n                            parentRecord.childRecords.splice(index, 1);\n                            if (!parentRecord.childRecords.length) {\n                                parentRecord.hasChildRecords = false;\n                                parentRecord.hasFilteredChildRecords = false;\n                            }\n                        }\n                        this.isDraggedWithChild = true;\n                    }\n                }\n            }\n        }\n        if (isNullOrUndefined(this.parent.dataSource) || !this.parent.dataSource.length) {\n            var tObj = this.parent;\n            var draggedRecord_1;\n            var dragRecords_1 = e.records;\n            var dragLength = e.records.length;\n            for (var i = dragLength - 1; i > -1; i--) {\n                draggedRecord_1 = dragRecords_1[parseInt(i.toString(), 10)];\n                if (!i && draggedRecord_1.hasChildRecords) {\n                    draggedRecord_1.taskData[this.parent.parentIdMapping] = null;\n                }\n                var recordIndex1 = 0;\n                if (!isNullOrUndefined(tObj.parentIdMapping)) {\n                    tObj.childMapping = null;\n                }\n                if (!isNullOrUndefined(draggedRecord_1.taskData) && !isNullOrUndefined(tObj.childMapping) &&\n                    !Object.prototype.hasOwnProperty.call(draggedRecord_1.taskData, tObj.childMapping)) {\n                    draggedRecord_1.taskData[tObj.childMapping] = [];\n                }\n                if (Object.prototype.hasOwnProperty.call(draggedRecord_1, tObj.childMapping) &&\n                    (draggedRecord_1[tObj.childMapping]).length && !this.isDraggedWithChild &&\n                    !isNullOrUndefined(tObj.parentIdMapping)) {\n                    var childData = (draggedRecord_1[tObj.childMapping]);\n                    for (var j = 0; j < childData.length; j++) {\n                        if (dragRecords_1.indexOf(childData[parseInt(j.toString(), 10)]) === -1) {\n                            dragRecords_1.splice(j, 0, childData[parseInt(j.toString(), 10)]);\n                            childData[parseInt(j.toString(), 10)].taskData = extend({}, childData[parseInt(j.toString(), 10)]);\n                            i += 1;\n                        }\n                    }\n                }\n                if (Object.prototype.hasOwnProperty.call(draggedRecord_1, tObj.parentIdMapping)\n                    && draggedRecord_1[tObj.parentIdMapping] !== null\n                    && !this.isDraggedWithChild) {\n                    draggedRecord_1.taskData[tObj.parentIdMapping] = null;\n                    delete draggedRecord_1.parentItem;\n                    delete draggedRecord_1.parentUniqueID;\n                }\n                if (isNullOrUndefined(tObj.dataSource)) {\n                    tObj.dataSource = [];\n                }\n                tObj.dataSource.splice(recordIndex1, 0, draggedRecord_1.taskData);\n            }\n            tObj.setProperties({ dataSource: tObj.dataSource }, false);\n        }\n        else {\n            for (var i = 0; i < dragRecords.length; i++) {\n                setValue('uniqueIDCollection.' + dragRecords[parseInt(i.toString(), 10)].uniqueID, dragRecords[parseInt(i.toString(), 10)], this.parent);\n            }\n            var args = { data: e.records, dropIndex: e.toIndex };\n            if (this.parent.dataSource instanceof DataManager) {\n                this.treeGridData = this.parent.dataSource.dataSource.json;\n                this.treeData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                this.treeGridData = this.parent.grid.dataSource;\n                this.treeData = this.parent.dataSource;\n            }\n            if (isNullOrUndefined(this.dropPosition)) {\n                this.dropPosition = 'bottomSegment';\n                args.dropIndex = this.parent.getCurrentViewRecords().length > 1 ? this.parent.getCurrentViewRecords().length - 1 :\n                    args.dropIndex;\n                args.data = args.data.map(function (i) {\n                    if (i.hasChildRecords && isNullOrUndefined(i.parentItem)) {\n                        i.level = 0;\n                        return i;\n                    }\n                    else {\n                        delete i.parentItem;\n                        delete i.parentUniqueID;\n                        i.level = 0;\n                        return i;\n                    }\n                });\n            }\n            this.dropRows(args);\n        }\n    };\n    RowDD.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            this.draggedRecord = e.records[parseInt(i.toString(), 10)];\n            if (this.draggedRecord.hasChildRecords || this.draggedRecord.parentItem &&\n                this.parent.grid.dataSource.\n                    indexOf(this.getChildrecordsByParentID(this.draggedRecord.parentUniqueID)[0]) !== -1 ||\n                this.draggedRecord.level === 0) {\n                this.deleteDragRow();\n            }\n        }\n    };\n    RowDD.prototype.refreshGridDataSource = function () {\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var proxy = this.parent;\n        var tempDataSource;\n        var idx;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            tempDataSource = proxy.dataSource.dataSource.json;\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        // eslint-disable-next-line max-len\n        if (tempDataSource && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem) && !isNullOrUndefined(droppedRecord.taskData)) {\n            var keys = Object.keys(tempDataSource);\n            for (var i = 0; i < keys.length; i++) {\n                if (tempDataSource[parseInt(i.toString(), 10)][this.parent.childMapping] ===\n                    droppedRecord.taskData[this.parent.childMapping]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.parentIdMapping && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var record = this.getChildrecordsByParentID(droppedRecord.parentUniqueID)[0];\n                var childRecords = record.childRecords;\n                for (var i = 0; i < childRecords.length; i++) {\n                    droppedRecord.parentItem.taskData[this.parent.childMapping][parseInt(i.toString(), 10)]\n                        = childRecords[parseInt(i.toString(), 10)].taskData;\n                }\n            }\n        }\n        if (this.parent.parentIdMapping) {\n            if (draggedRecord.parentItem) {\n                if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                }\n                else {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                }\n            }\n            else {\n                draggedRecord.taskData[this.parent.parentIdMapping] = null;\n                draggedRecord[this.parent.parentIdMapping] = null;\n            }\n        }\n    };\n    RowDD.prototype.removeFirstrowBorder = function (element) {\n        var canremove = this.dropPosition === 'bottomSegment';\n        if (this.parent.element.getElementsByClassName('e-firstrow-border').length > 0 && element &&\n            (element.rowIndex !== 0 || canremove)) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.removeLastrowBorder = function (element) {\n        var isEmptyRow = element && (element.classList.contains('e-emptyrow') || element.classList.contains('e-columnheader')\n            || element.classList.contains('e-detailrow'));\n        var islastRowIndex;\n        if (this.parent.enableVirtualization) {\n            islastRowIndex = element && !isEmptyRow &&\n                this.parent.getRows()[this.parent.getCurrentViewRecords().length - 1].getAttribute('data-uid') !==\n                    element.getAttribute('data-uid');\n        }\n        else {\n            islastRowIndex = element && !isEmptyRow &&\n                this.parent.getRowByIndex(this.parent.getCurrentViewRecords().length - 1).getAttribute('data-uid') !==\n                    element.getAttribute('data-uid');\n        }\n        var canremove = islastRowIndex || this.dropPosition === 'topSegment';\n        if (this.parent.element.getElementsByClassName('e-lastrow-border').length > 0 && element && (islastRowIndex || canremove)) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.updateIcon = function (row, index, args) {\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        this.dropPosition = undefined;\n        var rowPositionHeight = 0;\n        this.removeFirstrowBorder(rowEle);\n        this.removeLastrowBorder(rowEle);\n        for (var i = 0; i < args.rows.length; i++) {\n            if (!isNullOrUndefined(rowEle) && rowEle.getAttribute('data-uid') === args.rows[parseInt(i.toString(), 10)].getAttribute('data-uid')\n                || !parentsUntil(args.target, 'e-gridcontent')) {\n                this.dropPosition = 'Invalid';\n                this.addErrorElem();\n            }\n        }\n        // To get the corresponding drop position related to mouse position\n        var tObj = this.parent;\n        var rowTop = 0;\n        var roundOff = 0;\n        var toolHeight = tObj.toolbar && tObj.toolbar.length ?\n            document.getElementById(tObj.element.id + '_gridcontrol_toolbarItems').offsetHeight : 0;\n        // tObj.lastRow = tObj.getRowByIndex(tObj.getCurrentViewRecords().length - 1);\n        var positionOffSet = this.getOffset(tObj.element);\n        // let contentHeight1: number = (tObj.element.offsetHeight  - (tObj.getContent() as HTMLElement).offsetHeight) + positionOffSet.top;\n        var contentHeight = tObj.getHeaderContent().offsetHeight + positionOffSet.top + toolHeight;\n        var scrollTop = tObj.getContent().firstElementChild.scrollTop;\n        if (!isNullOrUndefined(rowEle)) {\n            rowPositionHeight = rowEle.offsetTop - scrollTop;\n        }\n        // let scrollTop = (tObj.grid.scrollModule as any).content.scrollTop;\n        if (this.parent.enableVirtualization) {\n            rowTop = rowEle.getBoundingClientRect().top;\n        }\n        else {\n            rowTop = rowPositionHeight + contentHeight + roundOff;\n        }\n        var rowBottom = rowTop + row[0].offsetHeight;\n        var difference = rowBottom - rowTop;\n        var divide = difference / 3;\n        var topRowSegment = rowTop + divide;\n        var middleRowSegment = topRowSegment + divide;\n        var bottomRowSegment = middleRowSegment + divide;\n        var mouseEvent = getObject('originalEvent.event', args);\n        var touchEvent = getObject('originalEvent.event', args);\n        var posy = (mouseEvent.type === 'mousemove') ? mouseEvent.pageY : ((!isNullOrUndefined(touchEvent) &&\n            !isNullOrUndefined(touchEvent.changedTouches)) ? touchEvent.changedTouches[0].pageY : null);\n        var isTopSegment = posy <= topRowSegment;\n        var isMiddleRowSegment = (posy > topRowSegment && posy <= middleRowSegment);\n        var isBottomRowSegment = (posy > middleRowSegment && posy <= bottomRowSegment);\n        if (isTopSegment || isMiddleRowSegment || isBottomRowSegment) {\n            if (isTopSegment && this.dropPosition !== 'Invalid') {\n                this.removeChildBorder();\n                this.dropPosition = 'topSegment';\n                this.removetopOrBottomBorder();\n                this.addFirstrowBorder(rowEle);\n                this.removeErrorElem();\n                this.removeLastrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n            if (isMiddleRowSegment && this.dropPosition !== 'Invalid') {\n                this.removetopOrBottomBorder();\n                var rowElement = [];\n                var element = closest(args.target, 'tr');\n                rowElement = [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse'));\n                if (rowElement.length > 0) {\n                    this.addRemoveClasses(rowElement, true, 'e-childborder');\n                }\n                this.addLastRowborder(rowEle);\n                this.addFirstrowBorder(rowEle);\n                this.dropPosition = 'middleSegment';\n            }\n            if (isBottomRowSegment && this.dropPosition !== 'Invalid') {\n                this.removeErrorElem();\n                this.removetopOrBottomBorder();\n                this.removeChildBorder();\n                this.dropPosition = 'bottomSegment';\n                this.addLastRowborder(rowEle);\n                this.removeFirstrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n        }\n        return this.dropPosition;\n    };\n    RowDD.prototype.removeChildBorder = function () {\n        var borderElem = [];\n        borderElem = [].slice.call(this.parent.element.querySelectorAll('.e-childborder'));\n        if (borderElem.length > 0) {\n            this.addRemoveClasses(borderElem, false, 'e-childborder');\n        }\n    };\n    RowDD.prototype.addFirstrowBorder = function (targetRow) {\n        var node = this.parent.element;\n        var tObj = this.parent;\n        if (targetRow && targetRow.rowIndex === 0 && !targetRow.classList.contains('e-emptyrow')) {\n            var div = this.parent.createElement('div', { className: 'e-firstrow-border' });\n            var gridheaderEle = this.parent.getHeaderContent();\n            var toolbarHeight = 0;\n            if (tObj.toolbar) {\n                toolbarHeight = tObj.toolbarModule.getToolbar().offsetHeight;\n            }\n            var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n            if (multiplegrid) {\n                div.style.top = this.parent.grid.element.getElementsByClassName('e-gridheader')[0].offsetHeight\n                    + toolbarHeight + 'px';\n            }\n            div.style.width = multiplegrid ? node.offsetWidth + 'px' :\n                node.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridheaderEle.querySelectorAll('.e-firstrow-border').length) {\n                gridheaderEle.appendChild(div);\n            }\n        }\n    };\n    RowDD.prototype.addLastRowborder = function (trElement) {\n        var isEmptyRow = trElement && (trElement.classList.contains('e-emptyrow') ||\n            trElement.classList.contains('e-columnheader') || trElement.classList.contains('e-detailrow'));\n        if (trElement && !isEmptyRow && this.parent.getRows()[this.parent.getCurrentViewRecords().length - 1].getAttribute('data-uid') ===\n            trElement.getAttribute('data-uid')) {\n            var bottomborder = this.parent.createElement('div', { className: 'e-lastrow-border' });\n            var gridcontentEle = this.parent.getContent();\n            bottomborder.style.width = this.parent.element.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridcontentEle.querySelectorAll('.e-lastrow-border').length) {\n                gridcontentEle.classList.add('e-treegrid-relative');\n                gridcontentEle.appendChild(bottomborder);\n                bottomborder.style.bottom = this.getScrollWidth() + 'px';\n            }\n        }\n    };\n    RowDD.prototype.getScrollWidth = function () {\n        var scrollElem = this.parent.getContent().firstElementChild;\n        return scrollElem.scrollWidth > scrollElem.offsetWidth ? Scroll.getScrollBarWidth() : 0;\n    };\n    RowDD.prototype.addErrorElem = function () {\n        var dragelem = document.getElementsByClassName('e-cloneproperties')[0];\n        var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        var sanitize = 'sanitize';\n        if (!errorelem && !this.parent.rowDropSettings.targetID) {\n            var ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            var errorVal = dragelem.querySelector('.errorValue');\n            var content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = this.parent[\"\" + sanitize](errorVal.innerHTML);\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            var spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = this.parent[\"\" + sanitize](content);\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n            var dropItemSpan = document.querySelector('.e-dropitemscount');\n            if (this.hasDropItem && dropItemSpan) {\n                var dropItemLeft = parseInt(dropItemSpan.style.left, 10) + ele.offsetWidth + 16;\n                var spanLeft = !this.parent.enableRtl ? dropItemLeft : 0;\n                dropItemSpan.style.left = spanLeft + \"px\";\n                this.hasDropItem = false;\n            }\n        }\n    };\n    RowDD.prototype.removeErrorElem = function () {\n        var errorelem = document.querySelector('.e-errorelem');\n        var errorValue = document.querySelector('.errorValue');\n        var dropItemSpan = document.querySelector('.e-dropitemscount');\n        if (errorelem) {\n            if (dropItemSpan) {\n                var dropItemLeft = parseInt(dropItemSpan.style.left, 10) - errorelem.offsetWidth - 16;\n                setStyleAttribute(errorValue, {\n                    paddingLeft: '0px'\n                });\n                if (!this.parent.enableRtl) {\n                    setStyleAttribute(dropItemSpan, {\n                        left: dropItemLeft + \"px\"\n                    });\n                }\n            }\n            errorelem.remove();\n        }\n        this.hasDropItem = true;\n    };\n    RowDD.prototype.topOrBottomBorder = function (target) {\n        var rowElement = [];\n        var element = closest(target, 'tr');\n        rowElement = element ? [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse')) : [];\n        if (rowElement.length) {\n            if (this.dropPosition === 'topSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-droptop');\n                if (this.parent.element.getElementsByClassName('e-lastrow-dragborder').length > 0) {\n                    this.parent.element.getElementsByClassName('e-lastrow-dragborder')[0].remove();\n                }\n            }\n            if (this.dropPosition === 'bottomSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-dropbottom');\n            }\n        }\n    };\n    RowDD.prototype.removetopOrBottomBorder = function () {\n        var border = [];\n        border = [].slice.call(this.parent.element.querySelectorAll('.e-dropbottom, .e-droptop'));\n        if (border.length) {\n            this.addRemoveClasses(border, false, 'e-dropbottom');\n            this.addRemoveClasses(border, false, 'e-droptop');\n        }\n    };\n    RowDD.prototype.addRemoveClasses = function (cells, add, className) {\n        for (var i = 0, len = cells.length; i < len; i++) {\n            if (add) {\n                cells[parseInt(i.toString(), 10)].classList.add(className);\n            }\n            else {\n                cells[parseInt(i.toString(), 10)].classList.remove(className);\n            }\n        }\n    };\n    RowDD.prototype.getOffset = function (element) {\n        var box = element.getBoundingClientRect();\n        var body = document.body;\n        var docElem = document.documentElement;\n        var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n        var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n        var clientTop = docElem.clientTop || body.clientTop || 0;\n        var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n    RowDD.prototype.Rowdraging = function (args) {\n        var tObj = this.parent;\n        var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.cursor = '';\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        var rowIdx = rowEle ? rowEle.rowIndex : -1;\n        var dragRecords = [];\n        var droppedRecord = tObj.getCurrentViewRecords()[parseInt(rowIdx.toString(), 10)];\n        this.removeErrorElem();\n        this.canDrop = true;\n        if (!args.data[0]) {\n            dragRecords.push(args.data);\n        }\n        else {\n            dragRecords = args.data;\n        }\n        if (rowIdx !== -1) {\n            this.ensuredropPosition(dragRecords, droppedRecord);\n        }\n        else {\n            this.canDrop = false;\n            this.addErrorElem();\n        }\n        if (!tObj.rowDropSettings.targetID && this.canDrop) {\n            tObj.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n        }\n        if (tObj.rowDropSettings.targetID) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n                var srcControl = dropElement.ej2_instances[0];\n                srcControl.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n            }\n        }\n        if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID)) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (!dropElement) {\n                cloneElement.style.cursor = 'default';\n            }\n        }\n    };\n    RowDD.prototype.rowDropped = function (args) {\n        var tObj = this.parent;\n        var parentItem = 'parentItem';\n        if (!tObj.rowDropSettings.targetID) {\n            if (parentsUntil(args.target, 'e-content')) {\n                if (this.parent.element.querySelector('.e-errorelem')) {\n                    this.dropPosition = 'Invalid';\n                }\n                setValue('dropPosition', this.dropPosition, args);\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel) {\n                    if (!isCountRequired(this.parent)) {\n                        this.dropRows(args);\n                    }\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                    tObj.grid.refresh();\n                    if (!isNullOrUndefined(tObj.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                        tObj.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                    }\n                }\n            }\n        }\n        else {\n            if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID) || parentsUntil(args.target, 'e-treegrid') &&\n                parentsUntil(args.target, 'e-treegrid').id === tObj.rowDropSettings.targetID || args.target && document.getElementById(tObj.rowDropSettings.targetID)) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel && tObj.rowDropSettings.targetID) {\n                    this.dragDropGrid(args);\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                }\n            }\n        }\n        this.removetopOrBottomBorder();\n        this.removeChildBorder();\n        if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-firstrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n        else if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-lastrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n        if (this.parent.enableImmutableMode && !this.parent.allowPaging && !isNullOrUndefined(args.data[0][\"\" + parentItem])) {\n            var index = this.parent.treeColumnIndex;\n            index = index + 1;\n            var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n            var rowIndex = this.parent.grid.getRowIndexByPrimaryKey(args.data[0][\"\" + primaryKeyField]);\n            var row = this.parent.getRows()[parseInt(rowIndex.toString(), 10)];\n            var data = args.data[0];\n            if (this.dropPosition === 'middleSegment') {\n                var record = [];\n                var rows = [];\n                record.push(data);\n                rows.push(row);\n                var parentUniqueID = 'parentUniqueID';\n                data = getParentData(this.parent, args.data[0][\"\" + parentUniqueID]);\n                rowIndex = this.parent.grid.getRowIndexByPrimaryKey(data[\"\" + primaryKeyField]);\n                var parentrow = this.parent.getRows()[parseInt(rowIndex.toString(), 10)];\n                record.push(data);\n                rows.push(parentrow);\n                for (var i = 0; i < record.length; i++) {\n                    this.parent.renderModule.cellRender({\n                        data: record[parseInt(i.toString(), 10)],\n                        cell: rows[parseInt(i.toString(), 10)].cells[parseInt(index.toString(), 10)],\n                        column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                        requestType: 'rowDragAndDrop'\n                    });\n                }\n                var targetEle = parentrow.getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n            else {\n                this.parent.renderModule.cellRender({\n                    data: data, cell: row.cells[parseInt(index.toString(), 10)],\n                    column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                    requestType: 'rowDragAndDrop'\n                });\n            }\n        }\n    };\n    RowDD.prototype.dragDropGrid = function (args) {\n        var tObj = this.parent;\n        var targetRow = closest(args.target, 'tr');\n        var targetIndex = isNaN(this.getTargetIdx(targetRow)) ? 0 : this.getTargetIdx(targetRow);\n        var dropElement = parentsUntil(args.target, 'e-treegrid');\n        var srcControl;\n        if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID && !isRemoteData(this.parent)\n            && !isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            var records = tObj.getSelectedRecords();\n            var indexes = [];\n            for (var i = 0; i < records.length; i++) {\n                indexes[parseInt(i.toString(), 10)] = records[parseInt(i.toString(), 10)].index;\n            }\n            var data = srcControl.dataSource;\n            if (this.parent.idMapping !== null && (isNullOrUndefined(this.dropPosition) || this.dropPosition === 'bottomSegment' || this.dropPosition === 'Invalid') && !(data.length)) {\n                var actualData = [];\n                for (var i = 0; i < records.length; i++) {\n                    if (records[parseInt(i.toString(), 10)].hasChildRecords) {\n                        actualData.push(records[parseInt(i.toString(), 10)]);\n                        var child = findChildrenRecords(records[parseInt(i.toString(), 10)]);\n                        for (var i_1 = 0; i_1 < child.length; i_1++) {\n                            actualData.push(child[parseInt(i_1.toString(), 10)]); // push child records to drop the parent record along with its child records\n                        }\n                    }\n                }\n                if (actualData.length) {\n                    records = actualData;\n                }\n            }\n            tObj.notify(events.rowsRemove, { indexes: indexes, records: records });\n            srcControl.notify(events.rowsAdd, { toIndex: targetIndex, records: records });\n            var srcControlFlatData = srcControl.rowDragAndDropModule.treeGridData;\n            if (!isNullOrUndefined(srcControlFlatData)) {\n                for (var i = 0; i < srcControlFlatData.length; i++) {\n                    srcControlFlatData[parseInt(i.toString(), 10)].index = i;\n                    if (!isNullOrUndefined(srcControlFlatData[parseInt(i.toString(), 10)].parentItem)) {\n                        var actualIndex = getValue('uniqueIDCollection.' + srcControlFlatData[parseInt(i.toString(), 10)].parentUniqueID + '.index', srcControl);\n                        srcControlFlatData[parseInt(i.toString(), 10)].parentItem.index = actualIndex;\n                    }\n                }\n            }\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n            if (srcControl.grid.dataSource.length > 1) {\n                srcControl.grid.refresh();\n                if (!isNullOrUndefined(srcControl.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                    srcControl.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                }\n                if (!isNullOrUndefined(srcControl.getContent().querySelector('.e-lastrow-border'))) {\n                    srcControl.getContent().querySelector('.e-lastrow-border').remove();\n                }\n            }\n        }\n        if (isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n        }\n    };\n    RowDD.prototype.getTargetIdx = function (targetRow) {\n        return targetRow ? parseInt(targetRow.getAttribute('data-rowindex'), 10) : 0;\n    };\n    RowDD.prototype.getParentData = function (record, data) {\n        var parentItem = record.parentItem;\n        var selectedItemIndex = -1;\n        if (this.parent.enableVirtualization && this.parent.selectedRowIndex !== -1) {\n            selectedItemIndex = this.parent.getSelectedRows()[0].rowIndex;\n        }\n        else if (this.parent.selectedRowIndex !== -1) {\n            selectedItemIndex = this.parent.selectedRowIndex;\n        }\n        if (this.dropPosition === 'bottomSegment') {\n            var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n            var rowIndex = selectedItemIndex === -1 ?\n                (this.parent.grid.getRowIndexByPrimaryKey(data[0][\"\" + primaryKeyField]))\n                : this.parent.getSelectedRowIndexes()[0];\n            var selectedRecord = this.parent.getCurrentViewRecords()[parseInt(rowIndex.toString(), 10)];\n            this.droppedRecord = getParentData(this.parent, selectedRecord.parentItem.uniqueID);\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var level = this.parent.getCurrentViewRecords()[parseInt(selectedItemIndex.toString(), 10)].level;\n            if (level === parentItem.level) {\n                this.droppedRecord = getParentData(this.parent, parentItem.uniqueID);\n            }\n            else {\n                this.getParentData(parentItem);\n            }\n        }\n    };\n    RowDD.prototype.dropRows = function (args, isByMethod) {\n        if (this.dropPosition !== 'Invalid' && !isRemoteData(this.parent)) {\n            var tObj = this.parent;\n            var draggedRecord_2;\n            var droppedRecord = void 0;\n            if (isNullOrUndefined(args.dropIndex)) {\n                var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n                var rowIndex = tObj.selectedRowIndex === -1 ?\n                    (this.parent.grid.getRowIndexByPrimaryKey(args.data[0][\"\" + primaryKeyField])) - 1\n                    : tObj.getSelectedRowIndexes()[0] - 1;\n                var record = tObj.getCurrentViewRecords()[parseInt(rowIndex.toString(), 10)];\n                this.getParentData(record, args.data);\n            }\n            else {\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                if (this.parent.enableVirtualization) {\n                    var index = this.parent.getRowByIndex(args.dropIndex).rowIndex;\n                    this.droppedRecord = tObj.getCurrentViewRecords()[parseInt(index.toString(), 10)];\n                }\n                else {\n                    this.droppedRecord = tObj.getCurrentViewRecords()[args.dropIndex];\n                }\n            }\n            var dragRecords = [];\n            droppedRecord = this.droppedRecord;\n            if (!args.data[0]) {\n                dragRecords.push(args.data);\n            }\n            else {\n                dragRecords = args.data;\n            }\n            this.parent[this.modifiedRecords].push(args.data[0], droppedRecord);\n            var count = 0;\n            var multiplegrid = this.parent.rowDropSettings.targetID;\n            this.isMultipleGrid = multiplegrid;\n            if (!multiplegrid) {\n                this.ensuredropPosition(dragRecords, droppedRecord);\n            }\n            else {\n                this.isaddtoBottom = multiplegrid && this.isDraggedWithChild;\n            }\n            var dragLength = dragRecords.length;\n            if (!isNullOrUndefined(this.parent.idMapping)) {\n                dragRecords.reverse();\n            }\n            var _loop_1 = function (i) {\n                draggedRecord_2 = dragRecords[parseInt(i.toString(), 10)];\n                this_1.draggedRecord = draggedRecord_2;\n                if (this_1.dropPosition !== 'Invalid') {\n                    if (!tObj.rowDropSettings.targetID || isByMethod) {\n                        this_1.deleteDragRow();\n                    }\n                    if (this_1.draggedRecord === this_1.droppedRecord) {\n                        var correctIndex = this_1.getTargetIdx(args.target.offsetParent.parentElement);\n                        if (isNaN(correctIndex)) {\n                            correctIndex = this_1.getTargetIdx(args.target.parentElement);\n                        }\n                        args.dropIndex = correctIndex;\n                        droppedRecord = this_1.droppedRecord = this_1.parent.getCurrentViewRecords()[args.dropIndex];\n                    }\n                    if (droppedRecord.parentItem || this_1.dropPosition === 'middleSegment') {\n                        var parentRecords = tObj.parentData;\n                        var newParentIndex = parentRecords.indexOf(this_1.draggedRecord);\n                        if (newParentIndex !== -1) {\n                            parentRecords.splice(newParentIndex, 1);\n                        }\n                    }\n                    var recordIndex1 = this_1.treeGridData.indexOf(droppedRecord);\n                    this_1.dropAtTop(recordIndex1);\n                    if (this_1.dropPosition === 'bottomSegment') {\n                        if (!droppedRecord.hasChildRecords) {\n                            if (this_1.parent.parentIdMapping) {\n                                this_1.treeData.splice(recordIndex1 + 1, 0, this_1.draggedRecord.taskData);\n                            }\n                            this_1.treeGridData.splice(recordIndex1 + 1, 0, this_1.draggedRecord);\n                        }\n                        else {\n                            count = this_1.getChildCount(droppedRecord, 0);\n                            if (this_1.parent.parentIdMapping) {\n                                this_1.treeData.splice(recordIndex1 + count + 1, 0, this_1.draggedRecord.taskData);\n                            }\n                            this_1.treeGridData.splice(recordIndex1 + count + 1, 0, this_1.draggedRecord);\n                        }\n                        if (isNullOrUndefined(droppedRecord.parentItem)) {\n                            delete draggedRecord_2.parentItem;\n                            delete draggedRecord_2.parentUniqueID;\n                            draggedRecord_2.level = 0;\n                            if (this_1.parent.parentIdMapping) {\n                                draggedRecord_2[this_1.parent.parentIdMapping] = null;\n                            }\n                        }\n                        if (droppedRecord.parentItem) {\n                            var rec = this_1.getChildrecordsByParentID(droppedRecord.parentUniqueID);\n                            var childRecords = rec[0].childRecords;\n                            var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                            childRecords.splice(droppedRecordIndex, 0, draggedRecord_2);\n                            draggedRecord_2.parentItem = droppedRecord.parentItem;\n                            draggedRecord_2.parentUniqueID = droppedRecord.parentUniqueID;\n                            draggedRecord_2.level = droppedRecord.level;\n                            if (this_1.parent.parentIdMapping) {\n                                draggedRecord_2[this_1.parent.parentIdMapping] = droppedRecord[this_1.parent.parentIdMapping];\n                                draggedRecord_2.parentItem = droppedRecord.parentItem;\n                                draggedRecord_2.level = droppedRecord.level;\n                            }\n                        }\n                        if (draggedRecord_2.hasChildRecords) {\n                            var level = 1;\n                            this_1.updateChildRecordLevel(draggedRecord_2, level);\n                            this_1.updateChildRecord(draggedRecord_2, recordIndex1 + count + 1);\n                        }\n                    }\n                    this_1.dropMiddle(recordIndex1);\n                }\n                if (isNullOrUndefined(draggedRecord_2.parentItem)) {\n                    var parentRecords = tObj.parentData;\n                    var newParentIndex = parentRecords.indexOf(this_1.droppedRecord);\n                    var nonRepeat_1 = 0;\n                    parentRecords.filter(function (e) {\n                        if (draggedRecord_2.uniqueID === e.uniqueID) {\n                            nonRepeat_1++;\n                        }\n                    });\n                    if (this_1.dropPosition === 'bottomSegment' && nonRepeat_1 === 0) {\n                        parentRecords.splice(newParentIndex + 1, 0, draggedRecord_2);\n                    }\n                    else if (this_1.dropPosition === 'topSegment' && nonRepeat_1 === 0) {\n                        parentRecords.splice(newParentIndex, 0, draggedRecord_2);\n                    }\n                }\n                tObj.rowDragAndDropModule.refreshGridDataSource();\n            };\n            var this_1 = this;\n            for (var i = 0; i < dragLength; i++) {\n                _loop_1(i);\n            }\n        }\n    };\n    RowDD.prototype.dropMiddle = function (recordIndex) {\n        var tObj = this.parent;\n        var childRecords = findChildrenRecords(this.droppedRecord);\n        var childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords.length === 0) ? recordIndex + 1 :\n            childRecords.length + recordIndex + 1;\n        if (this.dropPosition === 'middleSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            else {\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            this.recordLevel();\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength);\n            }\n        }\n    };\n    RowDD.prototype.dropAtTop = function (recordIndex1) {\n        var tObj = this.parent;\n        if (this.dropPosition === 'topSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(recordIndex1, 0, this.draggedRecord.taskData);\n            }\n            this.draggedRecord.parentItem = this.treeGridData[parseInt(recordIndex1.toString(), 10)].parentItem;\n            this.draggedRecord.parentUniqueID = this.treeGridData[parseInt(recordIndex1.toString(), 10)].parentUniqueID;\n            this.draggedRecord.level = this.treeGridData[parseInt(recordIndex1.toString(), 10)].level;\n            this.treeGridData.splice(parseInt(recordIndex1.toString(), 10), 0, this.draggedRecord);\n            if (this.draggedRecord.hasChildRecords) {\n                var level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                var rec = this.getChildrecordsByParentID(this.droppedRecord.parentUniqueID);\n                var childRecords = rec[0].childRecords;\n                var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n        }\n    };\n    RowDD.prototype.recordLevel = function () {\n        var tObj = this.parent;\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var childItem = tObj.childMapping;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            droppedRecord.hasFilteredChildRecords = true;\n            if (isNullOrUndefined(droppedRecord.childRecords) || droppedRecord.childRecords.length === 0) {\n                droppedRecord.childRecords = [];\n                if (!tObj.parentIdMapping && isNullOrUndefined(droppedRecord.taskData[\"\" + childItem])) {\n                    droppedRecord.taskData[\"\" + childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            draggedRecord.parentItem = parentItem;\n            draggedRecord.parentUniqueID = droppedRecord.uniqueID;\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            var isSelfReference = 'isSelfReference';\n            if (tObj[\"\" + isSelfReference]) {\n                droppedRecord[tObj.childMapping] = [];\n                droppedRecord[tObj.childMapping].splice(droppedRecord[tObj.childMapping].length, 0, draggedRecord);\n            }\n            if (!isNullOrUndefined(draggedRecord) && !tObj.parentIdMapping && !isNullOrUndefined(droppedRecord.taskData[\"\" + childItem])) {\n                droppedRecord.taskData[tObj.childMapping].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n        }\n    };\n    RowDD.prototype.deleteDragRow = function () {\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            this.treeGridData = this.parent.grid.dataSource.dataSource.json;\n            this.treeData = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            this.treeGridData = this.parent.grid.dataSource;\n            this.treeData = this.parent.dataSource;\n        }\n        var deletedRow = getParentData(this.parent, this.draggedRecord.uniqueID);\n        if (!isNullOrUndefined(deletedRow.childRecords) && deletedRow.childRecords.length) {\n            deletedRow.hasChildRecords = true;\n        }\n        this.removeRecords(deletedRow);\n    };\n    RowDD.prototype.updateChildRecord = function (record, count) {\n        var currentRecord;\n        var tObj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            if (!this.isMultipleGrid) {\n                currentRecord = getValue('uniqueIDCollection.' + record.childRecords[parseInt(i.toString(), 10)].uniqueID, tObj);\n            }\n            else {\n                currentRecord = record.childRecords[parseInt(i.toString(), 10)];\n            }\n            count++;\n            tObj.flatData.splice(count, 0, currentRecord);\n            setValue('uniqueIDCollection.' + currentRecord.uniqueID, currentRecord, this.parent);\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.updateChildRecordLevel = function (record, level) {\n        var length = 0;\n        var currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            if (!this.isMultipleGrid) {\n                currentRecord = getValue('uniqueIDCollection.' + record.childRecords[parseInt(i.toString(), 10)].uniqueID, this.parent);\n            }\n            else {\n                currentRecord = record.childRecords[parseInt(i.toString(), 10)];\n            }\n            var parentData = void 0;\n            if (record.parentItem) {\n                parentData = getParentData(this.parent, record.parentItem.uniqueID);\n            }\n            if (isNullOrUndefined(parentData) && !isNullOrUndefined(record.parentItem)) {\n                parentData = record.parentItem;\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    };\n    RowDD.prototype.removeRecords = function (record) {\n        var tObj = this.parent;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        var deletedRow = record;\n        var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n        var flatParentData = this.getChildrecordsByParentID(deletedRow.parentUniqueID)[0];\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var childRecords = flatParentData ? flatParentData.childRecords : [];\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.parentIdMapping || tObj.enableImmutableMode) {\n                        editAction({ value: deletedRow, action: 'delete' }, this.parent, isSelfReference, deletedRow.index, deletedRow.index);\n                    }\n                }\n            }\n            if (tObj.parentIdMapping) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                var idx = void 0;\n                var idz = void 0;\n                var treeGridData = dataSource;\n                for (var i = 0; i < treeGridData.length; i++) {\n                    if (treeGridData[parseInt(i.toString(), 10)][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idx = i;\n                    }\n                }\n                for (var i = 0; i < this.treeGridData.length; i++) {\n                    if (this.treeGridData[parseInt(i.toString(), 10)][this.parent.idMapping]\n                        === deletedRow.taskData[this.parent.idMapping]) {\n                        idz = i;\n                    }\n                }\n                if (idx !== -1 && !isNullOrUndefined(idx)) {\n                    dataSource.splice(idx, 1);\n                }\n                if (idz !== -1 && !isNullOrUndefined(idz)) {\n                    this.treeGridData.splice(idz, 1);\n                }\n            }\n            var recordIndex = this.treeGridData.indexOf(deletedRow);\n            if (!tObj.parentIdMapping) {\n                var parentIndex = this.parent.parentData.indexOf(deletedRow);\n                if (parentIndex !== -1) {\n                    tObj.parentData.splice(parentIndex, 1);\n                    dataSource.splice(parentIndex, 1);\n                }\n            }\n            if (recordIndex === -1 && !tObj.parentIdMapping) {\n                var primaryKeyField = tObj.getPrimaryKeyFieldNames()[0];\n                for (var j = 0; j < this.treeGridData.length; j++) {\n                    if (this.treeGridData[parseInt(j.toString(), 10)][\"\" + primaryKeyField] === deletedRow[\"\" + primaryKeyField]) {\n                        recordIndex = j;\n                    }\n                }\n            }\n            if (!tObj.parentIdMapping) {\n                var deletedRecordCount = this.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex, deletedRecordCount + 1);\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n                flatParentData.hasFilteredChildRecords = false;\n            }\n            if (this.parent[this.modifiedRecords].indexOf(flatParentData) === -1 && !isNullOrUndefined(flatParentData)) {\n                this.parent[this.modifiedRecords].push(flatParentData);\n            }\n            if (!isNullOrUndefined(flatParentData)) {\n                this.updateModifiedRecords(flatParentData);\n            }\n        }\n    };\n    RowDD.prototype.updateModifiedRecords = function (record) {\n        var parentData = getParentData(this.parent, record.parentUniqueID);\n        if (!isNullOrUndefined(parentData)) {\n            this.parent[this.modifiedRecords].push(parentData);\n            this.updateModifiedRecords(parentData);\n        }\n    };\n    RowDD.prototype.removeChildItem = function (record) {\n        var currentRecord;\n        var idx;\n        var idz;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[parseInt(i.toString(), 10)];\n            if (!isNullOrUndefined(currentRecord.childRecords) && currentRecord.childRecords.length) {\n                currentRecord.hasChildRecords = true;\n            }\n            var treeGridData = void 0;\n            if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n                treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                treeGridData = this.parent.dataSource;\n            }\n            for (var i_2 = 0; i_2 < treeGridData.length; i_2++) {\n                if (treeGridData[parseInt(i_2.toString(), 10)][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idx = i_2;\n                }\n            }\n            for (var i_3 = 0; i_3 < this.treeGridData.length; i_3++) {\n                if (this.treeGridData[parseInt(i_3.toString(), 10)][this.parent.idMapping]\n                    === currentRecord.taskData[this.parent.idMapping]) {\n                    idz = i_3;\n                    break;\n                }\n            }\n            if (idx !== -1 && !isNullOrUndefined(idx)) {\n                dataSource.splice(idx, 1);\n            }\n            if (idz !== -1 && !isNullOrUndefined(idz)) {\n                this.treeGridData.splice(idz, 1);\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    };\n    RowDD.prototype.getChildCount = function (record, count) {\n        var currentRecord;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[parseInt(i.toString(), 10)];\n            count++;\n            if (currentRecord.hasChildRecords) {\n                count = this.getChildCount(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.ensuredropPosition = function (draggedRecords, currentRecord) {\n        var _this = this;\n        draggedRecords.filter(function (e) {\n            if (e.hasChildRecords && !isNullOrUndefined(e.childRecords)) {\n                var valid = e.childRecords.indexOf(currentRecord);\n                if (valid === -1) {\n                    _this.ensuredropPosition(e.childRecords, currentRecord);\n                }\n                else {\n                    _this.dropPosition = 'Invalid';\n                    _this.addErrorElem();\n                    _this.canDrop = false;\n                    return;\n                }\n            }\n        });\n    };\n    RowDD.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    RowDD.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowdraging, this.Rowdraging);\n        this.parent.off(events.rowDropped, this.rowDropped);\n        this.parent.off(events.rowsAdd, this.rowsAdded);\n        this.parent.off(events.rowsRemove, this.rowsRemoved);\n    };\n    /**\n     * hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns RowDragAndDrop module name\n     */\n    RowDD.prototype.getModuleName = function () {\n        return 'rowDragAndDrop';\n    };\n    return RowDD;\n}());\nexport { RowDD };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the row drop settings of the TreeGrid.\n */\nvar RowDropSettings = /** @class */ (function (_super) {\n    __extends(RowDropSettings, _super);\n    function RowDropSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], RowDropSettings.prototype, \"targetID\", void 0);\n    return RowDropSettings;\n}(ChildProperty));\nexport { RowDropSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\n/**\n * RowModelGenerator is used to generate grid data rows.\n *\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.getDataInfo = function () {\n        return _super.prototype.getData.call(this);\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        if (!isNullOrUndefined(notifyArgs.virtualInfo) && notifyArgs.virtualInfo.loadNext &&\n            notifyArgs.virtualInfo.nextInfo.page !== this.parent.pageSettings.currentPage) {\n            this.parent.setProperties({ pageSettings: { currentPage: notifyArgs.virtualInfo.nextInfo.page } }, true);\n        }\n        else if (!isNullOrUndefined(notifyArgs.virtualInfo) && !notifyArgs.virtualInfo.loadNext &&\n            notifyArgs.virtualInfo.page !== this.parent.pageSettings.currentPage) {\n            this.parent.setProperties({ pageSettings: { currentPage: notifyArgs.virtualInfo.page } }, true);\n        }\n        var info = this.getDataInfo();\n        if (!isNullOrUndefined(notifyArgs.virtualInfo)) {\n            if (notifyArgs.virtualInfo.direction !== 'right' && notifyArgs.virtualInfo.direction !== 'left') {\n                if (!((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n                    && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent))\n                    || notifyArgs.virtualInfo.blockIndexes.length === 1) {\n                    notifyArgs.virtualInfo.blockIndexes = info.blockIndexes;\n                }\n            }\n            else {\n                notifyArgs.virtualInfo.blockIndexes = this.getBlockIndexes(notifyArgs.virtualInfo.page);\n            }\n        }\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            return _super.prototype.generateRows.call(this, data, notifyArgs);\n        }\n        else {\n            if (!isNullOrUndefined(notifyArgs.requestType) && notifyArgs.requestType.toString() === 'collapseAll') {\n                notifyArgs.requestType = 'refresh';\n            }\n            var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n            for (var r = 0; r < rows.length; r++) {\n                rows[parseInt(r.toString(), 10)].index = (this.visualData).indexOf(rows[parseInt(r.toString(), 10)].data);\n            }\n            return rows;\n        }\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            var model = 'model';\n            var currentPage = this[\"\" + model].currentPage;\n            if (clear) {\n                this.cache = {};\n                this.movableCache = {};\n                this.frozenRightCache = {};\n                this.data = {};\n                this.groups = {};\n            }\n            else if (action === 'virtualscroll' && this.cache[parseInt(currentPage.toString(), 10)] &&\n                this.cache[parseInt(currentPage.toString(), 10)].length >\n                    (this.parent.contentModule).getBlockSize()) {\n                delete this.cache[parseInt(currentPage.toString(), 10)];\n            }\n        }\n        else {\n            if (clear || action === 'virtualscroll') {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n                this.movableCache = {};\n                this.frozenRightCache = {};\n            }\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n *\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Filter module name\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *\n     * @param {{data: Object} } dataDetails - Filtered data collection\n     * @param {Object} dataDetails.data - Fliltered data collection\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[parseInt(f.toString(), 10)];\n            this.addParentRecord(rec);\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n                : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'None') &&\n                (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== ''))) {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n                if (parRecord && parRecord.parentItem) {\n                    this.updateParentFilteredRecord(parRecord);\n                }\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.updateParentFilteredRecord = function (record) {\n        var parRecord = getParentData(this.parent, record.parentItem.uniqueID, true);\n        var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n        if (parRecord && Object.prototype.hasOwnProperty.call(uniqueIDValue, parRecord.uniqueID)) {\n            setValue('hasFilteredChildRecords', true, parRecord);\n        }\n        if (parRecord && parRecord.parentItem) {\n            this.updateParentFilteredRecord(parRecord);\n        }\n    };\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n            : this.parent.searchSettings.hierarchyMode;\n        if (hierarchyMode === 'None' && (this.parent.grid.filterSettings.columns.length !== 0\n            || this.parent.grid.searchSettings.key !== '')) {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                var hierarchyMode_1 = this.parent.grid.searchSettings.key === '' ?\n                    this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n                if (hierarchyMode_1 === 'Child' && (this.parent.grid.filterSettings.columns.length !== 0\n                    || this.parent.grid.searchSettings.key !== '')) {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[parseInt(count.toString(), 10)].childRecords;\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ?\n                this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'Both') && (this.parent.grid.filterSettings.columns.length !== 0\n                || this.parent.grid.searchSettings.key !== ''))) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!Object.prototype.hasOwnProperty.call(uniqueIDValue, childRec[parseInt(count.toString(), 10)].uniqueID)) {\n                    this.filteredResult.push(childRec[parseInt(count.toString(), 10)]);\n                    setValue('uniqueIDFilterCollection.' + childRec[parseInt(count.toString(), 10)].uniqueID, childRec[parseInt(count.toString(), 10)], this.parent);\n                    isExist = true;\n                }\n            }\n            if ((hierarchyMode === 'None')\n                && (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== '')) {\n                if (this.flatFilteredData.indexOf(childRec[parseInt(count.toString(), 10)]) !== -1) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[parseInt(count.toString(), 10)]);\n            }\n            if ((hierarchyMode === 'Child' || hierarchyMode === 'Both') && childRec.length) {\n                isExist = true;\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[parseInt(c.toString(), 10)].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[parseInt(c.toString(), 10)].parentUniqueID, true);\n                record[parseInt(c.toString(), 10)].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[parseInt(c.toString(), 10)].filterLevel = 0;\n                this.filteredParentRecs.push(record[parseInt(c.toString(), 10)]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[parseInt(count.toString(), 10)];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, getParentData, getExpandStatus } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n *\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function ExcelExport(parent) {\n        this.isCollapsedStatePersist = false;\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ExcelExport module name\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n        this.parent.grid.on('export-RowDataBound', this.exportRowDataBound, this);\n        this.parent.grid.on('finalPageSetup', this.finalPageSetup, this);\n    };\n    /**\n     * To destroy the Excel Export\n     *\n     * @returns {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n        this.parent.grid.off('export-RowDataBound', this.exportRowDataBound);\n        this.parent.grid.off('finalPageSetup', this.finalPageSetup);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* eslint-disable-next-line */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        if (!isNullOrUndefined(excelExportProperties)) {\n            this.isCollapsedStatePersist = excelExportProperties.isCollapsedStatePersist;\n        }\n        return new Promise(function (resolve) {\n            var dm = _this.isLocal() && !(dataSource instanceof DataManager) ? new DataManager(dataSource)\n                : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customData = null;\n                if (!isNullOrUndefined(excelExportProperties) && !isNullOrUndefined(excelExportProperties.dataSource)) {\n                    customData = excelExportProperties.dataSource;\n                }\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob).then(function (book) {\n                    if (customData != null) {\n                        excelExportProperties.dataSource = customData;\n                    }\n                    else {\n                        delete excelExportProperties.dataSource;\n                    }\n                    resolve(book);\n                });\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal()) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        if (property && property.dataSource && this.isLocal()) {\n            var flatsData = this.parent.flatData;\n            var dataSrc = property.dataSource instanceof DataManager ? property.dataSource.dataSource.json : property.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatsData;\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     *\n     * @param {ExcelQueryCellInfoEventArgs} args - current cell details\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.exportRowDataBound = function (excelRow) {\n        if (excelRow.type === 'excel') {\n            var excelrowobj = excelRow.rowObj.data;\n            var filtercolumnlength = this.parent.grid.filterSettings.columns.length;\n            var rowlength = excelRow.excelRows.length;\n            var rowlevel = excelrowobj.level;\n            if (excelrowobj.parentItem && getParentData(this.parent, excelrowobj.parentItem.uniqueID, Boolean(filtercolumnlength))) {\n                var expandedStatus = false;\n                var sublevelState = false;\n                var state = getExpandStatus(this.parent, excelrowobj, this.parent.parentData);\n                if (this.isCollapsedStatePersist && (!state || !this.parent.isLocalData)) {\n                    expandedStatus = true;\n                    sublevelState = excelrowobj.expanded ? false : true;\n                }\n                excelRow.excelRows[rowlength - 1].grouping = { outlineLevel: rowlevel, isCollapsed: sublevelState,\n                    isHidden: expandedStatus };\n            }\n            else if (excelrowobj.hasChildRecords && isNullOrUndefined(excelrowobj.parentItem)) {\n                excelRow.excelRows[rowlength - 1].grouping = { outlineLevel: rowlevel };\n            }\n        }\n    };\n    /* eslint-disable-next-line */\n    ExcelExport.prototype.finalPageSetup = function (workbook) {\n        for (var i = 0; i < workbook.worksheets.length; i++) {\n            if (workbook.worksheets[parseInt(i.toString(), 10)].rows) {\n                workbook.worksheets[parseInt(i.toString(), 10)].pageSetup = { isSummaryRowBelow: false };\n            }\n        }\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n *\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} PdfExport module name\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     *\n     * @returns {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve) {\n            var dm = isLocal && !(dtSrc instanceof DataManager) ? new DataManager(dtSrc)\n                : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customsData = null;\n                if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.dataSource)) {\n                    customsData = pdfExportProperties.dataSource;\n                }\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob).then(function (document) {\n                    if (customsData != null) {\n                        pdfExportProperties.dataSource = customsData;\n                    }\n                    else {\n                        delete pdfExportProperties.dataSource;\n                    }\n                    resolve(document);\n                });\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        setValue('isPdfExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.isCollapsedStatePersist)) {\n            setValue('isCollapsedStatePersist', prop.isCollapsedStatePersist, args);\n        }\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        if (prop && prop.dataSource && isLocal) {\n            var flatDatas = this.parent.flatData;\n            var dataSrc = prop.dataSource instanceof DataManager ? prop.dataSource.dataSource.json : prop.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatDatas;\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     *\n     * @param {PdfQueryCellInfoEventArgs} args - Current cell details\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n *\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Pager module name\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     *\n     * @returns {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     *\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @returns {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     *\n     * @param  {string} message - Defines the message to update.\n     * @returns {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @param {{action: string, row: HTMLTableRowElement, record: ITreeData, args: RowCollapsedEventArgs}} rowDetails - Expand Collapse details arguments\n     * @param {string} rowDetails.action - Expand Collapse action type\n     * @param {HTMLTableRowElement} rowDetails.row - Row element\n     * @param {ITreeData} rowDetails.record - Row object data\n     * @param {RowCollapsedEventArgs} rowDetails.args - Expand Collapse event arguments\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        this.parent.flatData.map(function (e) { return e.expanded = e.uniqueID === rowDetails.record.uniqueID &&\n            e.expanded !== rowDetails.record.expanded ? rowDetails.record.expanded : e.expanded; });\n        if (this.parent.enableImmutableMode) {\n            var primaryKeyField_1 = this.parent.getPrimaryKeyFieldNames()[0];\n            var record = this.parent.flatData.filter(function (e) {\n                return e[\"\" + primaryKeyField_1] === rowDetails.record[\"\" + primaryKeyField_1];\n            });\n            if (record.length) {\n                record[0].expanded = rowDetails.record.expanded;\n            }\n        }\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n        if (this.parent.enableImmutableMode) {\n            var row = 'row';\n            var action = 'action';\n            var targetEle = void 0;\n            if (ret[\"\" + action] === 'collapse') {\n                targetEle = ret[\"\" + row].getElementsByClassName('e-treegridexpand')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridexpand');\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n            }\n            else if (ret[\"\" + action] === 'expand') {\n                targetEle = ret[\"\" + row].getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n        }\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[parseInt(t.toString(), 10)]);\n            var res = [];\n            if (temp[parseInt(t.toString(), 10)].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[parseInt(t.toString(), 10)].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.updatePageSize = function (pageingDetails) {\n        var updateSize = pageingDetails.result.length;\n        var gridPagerModule = this.parent.grid.pagerModule;\n        if (this.parent.pageSettings.pageSizes === true) {\n            if (gridPagerModule.pagerObj.pagerdropdownModule['dropDownListObject'].value === gridPagerModule.pagerObj.getLocalizedLabel('All')) {\n                gridPagerModule['pagerObj'].totalRecordsCount = updateSize;\n                this.parent.grid.pageSettings.pageSize = updateSize;\n            }\n        }\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = void 0;\n            if (isFilterChildHierarchy(this.parent) && ((this.parent.searchSettings.key !== this.parent.grid.searchSettings.key) ||\n                (this.parent.filterSettings.columns.length !== this.parent.grid.filterSettings.columns.length))) {\n                visualData = parents_1;\n            }\n            else {\n                visualData = parents_1.filter(function (e) {\n                    return getExpandStatus(_this.parent, e, parents_1);\n                });\n            }\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            this.updatePageSize(pageingDetails);\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Toolbar Module for TreeGrid\n *\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Toolbar module name\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.rowSelected, this.refreshToolbar, this);\n        this.parent.on(events.rowDeselected, this.refreshToolbar, this);\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowSelected, this.refreshToolbar);\n        this.parent.off(events.rowDeselected, this.refreshToolbar);\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.refreshToolbar = function (args) {\n        var toolbarElement = this.parent.grid.toolbarModule.getToolbar();\n        if (!isNullOrUndefined(toolbarElement)) {\n            var tObj = this.parent;\n            var indentElement = void 0;\n            var outdentElement = void 0;\n            var indentID = tObj.element.id + '_gridcontrol_indent';\n            var outdentID = tObj.element.id + '_gridcontrol_outdent';\n            var indentEle = toolbarElement.querySelector('#' + indentID);\n            var outdentEle = toolbarElement.querySelector('#' + outdentID);\n            var row = args.row;\n            var selectedrow = tObj.getSelectedRows()[0];\n            if (!isNullOrUndefined(row[0])) {\n                row = row[0];\n            }\n            row = (!isNullOrUndefined(selectedrow) && selectedrow.rowIndex !== row.rowIndex) ? selectedrow : row;\n            if (indentEle !== null && outdentEle !== null) {\n                indentElement = toolbarElement.querySelector('#' + indentID).parentElement;\n                outdentElement = toolbarElement.querySelector('#' + outdentID).parentElement;\n                if (row.rowIndex === 0 || tObj.getSelectedRowIndexes().length > 1) {\n                    indentElement.classList.add('e-hidden');\n                    outdentElement.classList.add('e-hidden');\n                }\n                else if (args['name'] !== 'rowDeselected' || (!isNullOrUndefined(selectedrow) && tObj.grid.isCheckBoxSelection)) {\n                    var selectedItem = tObj.getCurrentViewRecords()[row.rowIndex];\n                    if (!isNullOrUndefined(selectedItem)) {\n                        if ((selectedItem.level > tObj.getCurrentViewRecords()[row.rowIndex - 1].level)) {\n                            indentElement.classList.add('e-hidden');\n                        }\n                        else {\n                            indentElement.classList.remove('e-hidden');\n                        }\n                        if (selectedItem.level === tObj.getCurrentViewRecords()[row.rowIndex - 1].level) {\n                            indentElement.classList.remove('e-hidden');\n                        }\n                        if (selectedItem.level === 0) {\n                            outdentElement.classList.add('e-hidden');\n                        }\n                        if (selectedItem.level !== 0) {\n                            outdentElement.classList.remove('e-hidden');\n                        }\n                    }\n                }\n                if (args['name'] === 'rowDeselected' && isNullOrUndefined(selectedrow) && !tObj.grid.isCheckBoxSelection) {\n                    if (this.parent.toolbar['includes']('Indent')) {\n                        indentElement.classList.add('e-hidden');\n                    }\n                    if (this.parent.toolbar['includes']('Outdent')) {\n                        outdentElement.classList.add('e-hidden');\n                    }\n                }\n            }\n        }\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        var tObj = this.parent;\n        var indentOutdentAction = 'indentOutdentAction';\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n        if (args.item.id === tObj.grid.element.id + '_indent' && tObj.getSelectedRecords().length\n            && !isNullOrUndefined(tObj.rowDragAndDropModule)) {\n            this.parent.rowDragAndDropModule[\"\" + indentOutdentAction](null, 'indent');\n        }\n        if (args.item.id === tObj.grid.element.id + '_outdent' && tObj.getSelectedRecords().length\n            && !isNullOrUndefined(tObj.rowDragAndDropModule)) {\n            this.parent.rowDragAndDropModule[\"\" + indentOutdentAction](null, 'outdent');\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     *\n     * @returns {Element} - Returns Toolbar element\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     *\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @returns {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     *\n     * @method destroy\n     * @returns {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n *\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Summary module name\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *\n     * @param {QueryOptions[]} summaryQuery - DataManager query for aggregate operations\n     * @param {Object[]} filteredData - Filtered data collection\n     * @param {boolean} isSort - Specified whether sorting operation performed\n     * @hidden\n     * @returns {Object[]} -  return flat records with summary values\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[parseInt(p.toString(), 10)]);\n            if (!summaryRow) {\n                parentData.push(filteredData[parseInt(p.toString(), 10)]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords = parentData.slice();\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        var columns = this.parent.getColumns();\n        if (this.parent.aggregates.filter(function (x) { return x.showChildSummary; }).length) {\n            for (var i = 0, len = dataLength; i < len; i++) {\n                parentRecord = parentRecords[parseInt(i.toString(), 10)];\n                childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n                if (childRecordsLength) {\n                    var _loop_1 = function (summaryRowIndex, len_1) {\n                        var item = void 0;\n                        item = {};\n                        for (var i_1 = 0; i_1 < columns.length; i_1++) {\n                            var field = (isNullOrUndefined(getObject('field', columns[parseInt(i_1.toString(), 10)]))) ?\n                                columns[parseInt(i_1.toString(), 10)] : getObject('field', (columns[parseInt(i_1.toString(), 10)]));\n                            item[\"\" + field] = null;\n                        }\n                        item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                        if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                            var idx_1;\n                            flatRecords.map(function (e, i) {\n                                if (e.uniqueID === parentRecord.uniqueID) {\n                                    idx_1 = i;\n                                    return;\n                                }\n                            });\n                            var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                            var summaryParent = extend({}, parentRecord);\n                            delete summaryParent.childRecords;\n                            delete summaryParent[this_1.parent.childMapping];\n                            setValue('parentItem', summaryParent, item);\n                            var level = getObject('level', summaryParent);\n                            setValue('level', level + 1, item);\n                            setValue('isSummaryRow', true, item);\n                            setValue('parentUniqueID', summaryParent.uniqueID, item);\n                            if (isSort) {\n                                var childRecords = getObject('childRecords', parentRecord);\n                                if (childRecords.length) {\n                                    childRecords.push(item);\n                                }\n                            }\n                            flatRecords.splice(currentIndex, 0, item);\n                        }\n                        else {\n                            return \"continue\";\n                        }\n                    };\n                    var this_1 = this;\n                    for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                        _loop_1(summaryRowIndex, len_1);\n                    }\n                    this.flatChildRecords = [];\n                }\n            }\n        }\n        else {\n            var items = {};\n            for (var columnIndex = 0, length_1 = columns.length; columnIndex < length_1; columnIndex++) {\n                var fields = isNullOrUndefined(getObject('field', columns[parseInt(columnIndex.toString(), 10)])) ?\n                    columns[parseInt(columnIndex.toString(), 10)] : getObject('field', columns[parseInt(columnIndex.toString(), 10)]);\n                items[\"\" + fields] = null;\n            }\n            for (var summaryRowIndex = 1, length_2 = summaryLength; summaryRowIndex <= length_2; summaryRowIndex++) {\n                this.createSummaryItem(items, this.parent.aggregates[summaryRowIndex - 1]);\n            }\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[parseInt(i.toString(), 10)];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[parseInt(i.toString(), 10)].columnName) ?\n                summary.columns[parseInt(i.toString(), 10)].field : summary.columns[parseInt(i.toString(), 10)].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    if (this.flatChildRecords.length) {\n                        itemData[\"\" + key] = this.getSummaryValues(summary.columns[parseInt(i.toString(), 10)], this.flatChildRecords);\n                    }\n                    else if (this.parent.isLocalData) {\n                        var data = this.parent.dataSource instanceof DataManager ? this.parent.dataSource.dataSource.json\n                            : this.parent.flatData;\n                        itemData[\"\" + key] = this.getSummaryValues(summary.columns[parseInt(i.toString(), 10)], data);\n                    }\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var qry = new Query();\n        var single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        for (var i = 0; i < types.length; i++) {\n            summaryKey = types[parseInt(i.toString(), 10)];\n            var key = summaryColumn.field + ' - ' + types[parseInt(i.toString(), 10)].toLowerCase();\n            var val = types[parseInt(i.toString(), 10)] !== 'Custom' ? getObject('aggregates', sumData) :\n                /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                calculateAggregate(types[parseInt(i.toString(), 10)], sumData, summaryColumn, this.parent);\n            var disp = summaryColumn.columnName;\n            var value_1 = types[parseInt(i.toString(), 10)] !== 'Custom' ? val[\"\" + key] : val;\n            single[\"\" + disp] = single[\"\" + disp] || {};\n            single[\"\" + disp][\"\" + key] = value_1;\n            single[\"\" + disp][types[parseInt(i.toString(), 10)]] = !isNullOrUndefined(val) ? formatFn(value_1) : ' ';\n        }\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        if (this.parent.isReact) {\n            var renderReactTemplates = 'renderReactTemplates';\n            tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property, '', null, null, cellElement);\n            this.parent[\"\" + renderReactTemplates]();\n        }\n        else {\n            appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        }\n        var value = single[\"\" + summaryColumn.columnName][\"\" + summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n *\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Sort module name\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[parseInt(d.toString(), 10)].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[parseInt(d.toString(), 10)];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[parseInt(d.toString(), 10)];\n            }\n            if (data[parseInt(d.toString(), 10)].hasChildRecords) {\n                var childSort = (new DataManager(data[parseInt(d.toString(), 10)].childRecords)\n                    .executeLocal(srtQry));\n                if (this.parent.allowRowDragAndDrop && data[parseInt(d.toString(), 10)].childRecords.indexOf(this.parent.rowDragAndDropModule['draggedRecord']) !== -1 && this.parent.rowDragAndDropModule['dropPosition'] !== 'middleSegment') {\n                    var dragdIndex = childSort.indexOf(this.parent.rowDragAndDropModule['draggedRecord']);\n                    childSort.splice(dragdIndex, 1);\n                    var dropdIndex = childSort.indexOf(this.parent.rowDragAndDropModule['droppedRecord']);\n                    if (this.parent.rowDragAndDropModule['dropPosition'] === 'topSegment') {\n                        childSort.splice(dropdIndex, 0, this.parent.rowDragAndDropModule['draggedRecord']);\n                    }\n                    else if (this.parent.rowDragAndDropModule['dropPosition'] === 'bottomSegment') {\n                        childSort.splice(dropdIndex + 1, 0, this.parent.rowDragAndDropModule['draggedRecord']);\n                    }\n                }\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     *\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @returns {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n *\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ColumnMenu module name\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, select } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n *\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = select('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow', args.element);\n        var editRecord = select('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit', args.element);\n        var indent = select('#' + this.parent.element.id + '_gridcontrol_cmenu_Indent', args.element);\n        var outdent = select('#' + this.parent.element.id + '_gridcontrol_cmenu_Outdent', args.element);\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false || this.parent.grid.isEdit) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if ((this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch')\n            && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n        var tObj = this.parent;\n        var selectedrow = tObj.getSelectedRows()[0];\n        if ((indent || outdent) && !isNullOrUndefined(selectedrow)) {\n            var targetElement = args.event.target.closest('td');\n            if (isNullOrUndefined(targetElement) || (!isNullOrUndefined(targetElement) && !targetElement.classList.contains('e-rowcell'))) {\n                indent.style.display = outdent.style.display = 'none';\n            }\n            else {\n                if (selectedrow.rowIndex === 0 || tObj.getSelectedRowIndexes().length > 1) {\n                    indent.style.display = outdent.style.display = 'none';\n                }\n                else if (args['name'] !== 'rowDeselected' || (!isNullOrUndefined(selectedrow) && tObj.grid.isCheckBoxSelection)) {\n                    var selectedItem = tObj.getCurrentViewRecords()[selectedrow.rowIndex];\n                    if (!isNullOrUndefined(selectedItem)) {\n                        if ((selectedItem.level > tObj.getCurrentViewRecords()[selectedrow.rowIndex - 1].level) || this.parent.editSettings.mode === 'Batch'\n                            || this.parent.editSettings.mode === 'Cell') {\n                            indent.style.display = 'none';\n                        }\n                        else {\n                            indent.style.display = 'block';\n                        }\n                        if ((selectedItem.level === tObj.getCurrentViewRecords()[selectedrow.rowIndex - 1].level) && this.parent.editSettings.mode !== 'Batch'\n                            && this.parent.editSettings.mode !== 'Cell') {\n                            indent.style.display = 'block';\n                        }\n                        if ((selectedItem.level === 0) || this.parent.editSettings.mode === 'Batch'\n                            || this.parent.editSettings.mode === 'Cell') {\n                            outdent.style.display = 'none';\n                        }\n                        else {\n                            outdent.style.display = 'block';\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            if (tObj.grid.isEdit && isNullOrUndefined(selectedrow)) {\n                indent.style.display = 'none';\n                outdent.style.display = 'none';\n            }\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below' || args.item.id === 'Child') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.editModule['isAddedRowByContextMenu'] = true;\n            this.parent.addRecord();\n        }\n        if (args.item.id === this.parent.element.id + '_gridcontrol_cmenu_Indent' || args.item.id === this.parent.element.id + '_gridcontrol_cmenu_Outdent') {\n            if (!isNullOrUndefined(this.parent.rowDragAndDropModule)) {\n                var indentOutdentAction = 'indentOutdentAction';\n                var action = args.item.id === this.parent.element.id + '_gridcontrol_cmenu_Indent' ? 'indent' : 'outdent';\n                this.parent.rowDragAndDropModule[\"\" + indentOutdentAction](null, action);\n            }\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ContextMenu module name\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     *\n     * @returns {Element} Return Context Menu root element.\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { isNullOrUndefined, extend, setValue, getValue, merge } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, extendArray } from '../utils';\nimport { getUid } from '@syncfusion/ej2-grids';\nimport { updateParentRow, editAction } from './crud-actions';\nimport { classList } from '@syncfusion/ej2-base';\n/**\n * `BatchEdit` module is used to handle batch editing actions.\n *\n * @hidden\n */\nvar BatchEdit = /** @class */ (function () {\n    function BatchEdit(parent) {\n        this.batchChildCount = 0;\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.batchAddedRecords = [];\n        this.batchDeletedRecords = [];\n        this.batchAddRowRecord = [];\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.batchRecords = [];\n        this.currentViewRecords = [];\n        this.isAdd = false;\n        this.addEventListener();\n    }\n    BatchEdit.prototype.addEventListener = function () {\n        this.parent.on(events.cellSaved, this.cellSaved, this);\n        this.parent.on(events.batchAdd, this.batchAdd, this);\n        this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.on(events.beforeBatchDelete, this.beforeBatchDelete, this);\n        this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        this.parent.on('batchPageAction', this.batchPageAction, this);\n        this.parent.on('batchCancelAction', this.batchCancelAction, this);\n        this.parent.grid.on('immutable-batch-cancel', this.immutableBatchAction, this);\n        this.parent.grid.on('next-cell-index', this.nextCellIndex, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    BatchEdit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.cellSaved, this.cellSaved);\n        this.parent.off(events.batchAdd, this.batchAdd);\n        this.parent.off(events.batchSave, this.batchSave);\n        this.parent.off(events.beforeBatchAdd, this.beforeBatchAdd);\n        this.parent.off(events.beforeBatchDelete, this.beforeBatchDelete);\n        this.parent.off(events.beforeBatchSave, this.beforeBatchSave);\n        this.parent.off('batchPageAction', this.batchPageAction);\n        this.parent.off('batchCancelAction', this.batchCancelAction);\n        this.parent.grid.off('immutable-batch-cancel', this.immutableBatchAction);\n        this.parent.grid.off('next-cell-index', this.nextCellIndex);\n    };\n    /**\n     * To destroy the editModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    BatchEdit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {Object[]} Returns modified records in batch editing.\n     */\n    BatchEdit.prototype.getBatchRecords = function () {\n        return this.batchRecords;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns index of newly add row\n     */\n    BatchEdit.prototype.getAddRowIndex = function () {\n        return this.addRowIndex;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns selected row index\n     */\n    BatchEdit.prototype.getSelectedIndex = function () {\n        return this.selectedIndex;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns newly added child count\n     */\n    BatchEdit.prototype.getBatchChildCount = function () {\n        return this.batchChildCount;\n    };\n    BatchEdit.prototype.batchPageAction = function () {\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var index;\n        if (!isNullOrUndefined(this.batchAddedRecords) && this.batchAddedRecords.length) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[\"\" + primaryKey]; }).indexOf(this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + primaryKey]);\n                data.splice(index, 1);\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.cellSaved = function (args) {\n        var actualCellIndex = args.column.index;\n        var frozenCols = this.parent.frozenColumns || this.parent.getFrozenColumns();\n        if (frozenCols && args.columnObject.index > frozenCols) {\n            actualCellIndex = actualCellIndex + frozenCols;\n        }\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n            this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            var colCount = this.parent.getFrozenLeftColumnsCount() + actualCellIndex;\n            if (colCount === this.parent.treeColumnIndex) {\n                this.parent.renderModule.cellRender({ data: args.rowData, cell: args.cell,\n                    column: this.parent.grid.getColumnByIndex(args.column.index)\n                });\n            }\n        }\n        else if (actualCellIndex === this.parent.treeColumnIndex) {\n            this.parent.renderModule.cellRender({ data: args.rowData, cell: args.cell,\n                column: this.parent.grid.getColumnByIndex(args.column.index)\n            });\n        }\n        if (this.isAdd && this.parent.editSettings.mode === 'Batch' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var added = void 0;\n            var level = 'level';\n            var primaryKey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var currentDataIndex = void 0;\n            var indexvalue = void 0;\n            var parentItem = 'parentItem';\n            var uniqueID = 'uniqueID';\n            var parentRecord = this.selectedIndex > -1 ? this.batchRecords[parseInt(this.addRowIndex.toString(), 10)][\"\" + parentItem] : null;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentIdMapping = void 0;\n            var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Top' || this.selectedIndex === -1 ? 0 :\n                this.parent.editSettings.newRowPosition === 'Above' ? this.addRowIndex\n                    : this.addRowIndex + 1;\n            rowObjectIndex = this.getActualRowObjectIndex(rowObjectIndex);\n            if (this.newBatchRowAdded) {\n                if (this.batchRecords.length) {\n                    idMapping = this.batchRecords[this.addRowIndex][this.parent.idMapping];\n                    parentIdMapping = this.batchRecords[this.addRowIndex][this.parent.parentIdMapping];\n                    if (this.batchRecords[parseInt(this.addRowIndex.toString(), 10)][\"\" + parentItem]) {\n                        parentUniqueID = this.batchRecords[parseInt(this.addRowIndex.toString(), 10)][\"\" + parentItem][\"\" + uniqueID];\n                    }\n                }\n                this.batchAddedRecords = extendArray(this.batchAddedRecords);\n                this.batchAddRowRecord = extendArray(this.batchAddRowRecord);\n                this.batchAddRowRecord.push(this.batchRecords[this.addRowIndex]);\n                added = this.parent.grid.getRowsObject()[parseInt(rowObjectIndex.toString(), 10)].changes;\n                added.uniqueID = getUid(this.parent.element.id + '_data_');\n                setValue('uniqueIDCollection.' + added.uniqueID, added, this.parent);\n                if (!Object.prototype.hasOwnProperty.call(added, 'level')) {\n                    this.batchIndex = this.selectedIndex === -1 ? 0 : this.batchIndex;\n                    if (this.parent.editSettings.newRowPosition === 'Child') {\n                        added.primaryParent = parentRecord;\n                        if (this.selectedIndex > -1) {\n                            added.parentItem = extend({}, this.batchRecords[this.addRowIndex]);\n                            added.parentUniqueID = added.parentItem.uniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                            added.level = added.parentItem.level + 1;\n                            added.index = this.batchIndex;\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[\"\" + primaryKey_1]; }).indexOf(record[\"\" + primaryKey_1]);\n                            if (this.isSelfReference) {\n                                added[this.parent.parentIdMapping] = idMapping;\n                            }\n                            updateParentRow(primaryKey_1, added.parentItem, 'add', this.parent, this.isSelfReference, added);\n                        }\n                    }\n                    else if ((this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below')\n                        && !isNullOrUndefined(this.batchRecords[this.addRowIndex])) {\n                        added.level = this.batchRecords[parseInt(this.addRowIndex.toString(), 10)][\"\" + level];\n                        if (added.level && this.selectedIndex > -1) {\n                            added.parentItem = parentRecord;\n                            added.parentUniqueID = parentUniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                        }\n                        added.index = this.parent.editSettings.newRowPosition === 'Below' ? this.batchIndex : this.batchIndex - 1;\n                        if (this.parent.editSettings.newRowPosition === 'Below' && this.selectedIndex > -1) {\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[\"\" + primaryKey_1]; }).indexOf(record[\"\" + primaryKey_1]);\n                        }\n                        if (this.parent.editSettings.newRowPosition === 'Above' && this.selectedIndex > -1) {\n                            var record = this.batchRecords[this.addRowIndex];\n                            currentDataIndex = data.map(function (e) { return e[\"\" + primaryKey_1]; }).indexOf(record[\"\" + primaryKey_1]);\n                        }\n                        if (this.isSelfReference) {\n                            added[this.parent.parentIdMapping] = parentIdMapping;\n                        }\n                    }\n                    added.index = added.index === -1 ? 0 : added.index;\n                    added.hasChildRecords = false;\n                    added.childRecords = [];\n                    this.batchRecords.splice(added.index, 0, added);\n                    this.currentViewRecords.splice(added.index, 0, added);\n                    if (currentDataIndex) {\n                        indexvalue = currentDataIndex;\n                    }\n                    else {\n                        indexvalue = added.index;\n                    }\n                    if (this.parent.editSettings.newRowPosition !== 'Above') {\n                        indexvalue = added.index === 0 ? indexvalue : indexvalue + 1;\n                    }\n                    data.splice(indexvalue, 0, added);\n                    this.batchAddedRecords.push(added);\n                }\n                this.parent.grid.getRowsObject()[parseInt(rowObjectIndex.toString(), 10)].data = added;\n                this.newBatchRowAdded = false;\n            }\n            if (this.parent.frozenColumns || this.parent.getFrozenColumns()\n                && this.parent.grid.getRowsObject()[parseInt(rowObjectIndex.toString(), 10)].edit === 'add') {\n                merge(this.currentViewRecords[parseInt(rowObjectIndex.toString(), 10)], this.parent.grid.getRowsObject()[parseInt(rowObjectIndex.toString(), 10)].changes);\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchAdd = function (e) {\n        var isTabLastRow = 'isTabLastRow';\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.editModule[\"\" + isTabLastRow]) {\n            e.cancel = true;\n            this.parent.editModule[\"\" + isTabLastRow] = false;\n            return;\n        }\n        if (this.parent.editModule['isAddedRowByMethod'] && !isNullOrUndefined(this.parent.editModule['addRowIndex']) &&\n            !this.parent.editModule['isAddedRowByContextMenu'] && (this.parent.grid.selectedRowIndex === -1 || this.parent.editModule['batchEditModule'].isAdd)) {\n            this.selectedIndex = this.parent.editModule['selectedIndex'];\n            this.addRowIndex = this.parent.editModule['addRowIndex'];\n            this.addRowRecord = this.batchRecords.length ? this.batchRecords[this.selectedIndex]\n                : this.parent.getCurrentViewRecords()[this.selectedIndex];\n        }\n        else {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            this.parent.editModule['addRowIndex'] = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n    };\n    BatchEdit.prototype.batchAdd = function (e) {\n        if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n            this.isAdd = true;\n            this.newBatchRowAdded = true;\n            var actualIndex = 0;\n            if (!this.batchRecords.length) {\n                this.batchAddedRecords = [];\n                this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n                this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            }\n            if (this.parent.editModule['isAddedRowByMethod'] && !isNullOrUndefined(this.parent.editModule['addRowIndex'])) {\n                classList(this.parent.grid.getDataRows()[0], ['e-batchrow'], []);\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                var records = this.parent.grid.getCurrentViewRecords();\n                if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                    records = this.batchRecords;\n                }\n                this.updateChildCount(records);\n                this.parent.notify(events.beginAdd, {});\n                this.batchChildCount = 0;\n            }\n            this.updateRowIndex();\n            // update focus module, need to refix this once grid source modified.\n            var focusModule = getValue('focusModule', this.parent.grid);\n            var table = this.parent.getContentTable();\n            if (this.parent.getBatchChanges()[this.deletedRecords].length && this.parent.editSettings.newRowPosition === 'Above') {\n                actualIndex = e.row.rowIndex;\n                focusModule.getContent().matrix.matrix = this.matrix;\n            }\n            else {\n                actualIndex = table.getElementsByClassName('e-batchrow')[0].rowIndex;\n                // if (this.parent.frozenRows || this.parent.frozenColumns) {\n                //   actualIndex = this.batchIndex;\n                // }\n            }\n            focusModule.getContent().matrix.current = [actualIndex, focusModule.getContent().matrix.current[1]];\n            if (this.parent.editModule['isAddedRowByMethod'] && !isNullOrUndefined(this.parent.editModule['addRowIndex']) && !this.parent.editModule['isAddedRowByContextMenu']) {\n                var newlyAddedRecords = this.parent.getBatchChanges()['addedRecords'];\n                var index = parseInt(this.parent.getContentTable().getElementsByClassName('e-insertedrow')[newlyAddedRecords.length - 1].getAttribute('data-rowindex'), 10);\n                this.batchRecords.splice(index, 0, newlyAddedRecords[newlyAddedRecords.length - 1]);\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchDelete = function (args) {\n        if (!this.batchRecords.length) {\n            this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        }\n        var focusModule = getValue('focusModule', this.parent.grid);\n        this.matrix = focusModule.getContent().matrix.matrix;\n        var row = [];\n        var records = [];\n        var primarykey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var data;\n        var childs;\n        var uid;\n        if (!isNullOrUndefined(args.row) && this.parent.getSelectedRows().indexOf(args.row) === -1) {\n            data = args.rowData;\n            childs = findChildrenRecords(data);\n            uid = args.row.getAttribute('data-uid');\n        }\n        else {\n            data = this.parent.grid.getSelectedRecords()[this.parent.grid.getSelectedRecords().length - 1];\n            childs = findChildrenRecords(data);\n            uid = this.parent.getSelectedRows()[0].getAttribute('data-uid');\n        }\n        var parentRowIndex = parseInt(this.parent.grid.getRowElementByUID(uid).getAttribute('data-rowindex'), 10);\n        if (childs.length) {\n            var totalCount = parentRowIndex + childs.length;\n            var firstChildIndex = parentRowIndex + 1;\n            for (var i = firstChildIndex; i <= totalCount; i++) {\n                row.push(this.parent.grid.getDataRows()[parseInt(i.toString(), 10)]);\n                if (this.parent.frozenRows || this.parent.frozenColumns || this.parent.getFrozenColumns()) {\n                    row.push(this.parent.grid.getMovableRows()[parseInt(i.toString(), 10)]);\n                }\n            }\n        }\n        if (!isNullOrUndefined(data.parentItem)) {\n            var parentItem = getParentData(this.parent, data.parentItem.uniqueID);\n            if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                var childIndex = parentItem.childRecords.indexOf(data);\n                parentItem.childRecords.splice(childIndex, 1);\n            }\n            this.batchDeletedRecords = extendArray(this.batchDeletedRecords);\n            this.batchDeletedRecords.push(data);\n        }\n        childs.push(data);\n        records = childs;\n        for (var i = 0; i < records.length; i++) {\n            var indexvalue = this.batchRecords.map(function (e) { return e[\"\" + primarykey]; }).indexOf(records[parseInt(i.toString(), 10)][\"\" + primarykey]);\n            if (indexvalue !== -1) {\n                this.batchRecords.splice(indexvalue, 1);\n            }\n        }\n        for (var i = 0; i < row.length; i++) {\n            if (!isNullOrUndefined(row[parseInt(i.toString(), 10)])) {\n                this.parent.grid.selectionModule.selectedRecords.push(row[parseInt(i.toString(), 10)]);\n            }\n        }\n    };\n    BatchEdit.prototype.updateRowIndex = function () {\n        var rows = this.parent.grid.getDataRows();\n        for (var i = 0; i < rows.length; i++) {\n            rows[parseInt(i.toString(), 10)].setAttribute('data-rowindex', i.toString());\n        }\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n            this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns || freeze) {\n            var mRows = this.parent.grid.getMovableDataRows();\n            var freezeRightRows = this.parent.grid.getFrozenRightDataRows();\n            for (var i = 0; i < mRows.length; i++) {\n                mRows[parseInt(i.toString(), 10)].setAttribute('data-rowindex', i.toString());\n                if (freeze) {\n                    freezeRightRows[parseInt(i.toString(), 10)].setAttribute('data-rowindex', i.toString());\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.updateChildCount = function (records) {\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var addedRecords = 'addedRecords';\n        var parentItem = this.parent.editSettings.newRowPosition === 'Child' ? 'primaryParent' : 'parentItem';\n        for (var i = 0; i < this.parent.getBatchChanges()[\"\" + addedRecords].length; i++) {\n            if (!isNullOrUndefined(this.parent.getBatchChanges()[\"\" + addedRecords][parseInt(i.toString(), 10)][\"\" + parentItem])) {\n                if (this.parent.getBatchChanges()[\"\" + addedRecords][parseInt(i.toString(), 10)][\"\" + parentItem][\"\" + primaryKey] === records[parseInt(this.addRowIndex.toString(), 10)][\"\" + primaryKey]) {\n                    this.batchChildCount = this.batchChildCount + 1;\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchSave = function (e) {\n        var changeRecords = 'changedRecords';\n        var deleterecords = 'deletedRecords';\n        var changedRecords = e.batchChanges[\"\" + changeRecords];\n        if (e.batchChanges[\"\" + changeRecords].length) {\n            var columnName = void 0;\n            for (var i = 0; i < changedRecords.length; i++) {\n                editAction({ value: changedRecords[parseInt(i.toString(), 10)], action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName);\n            }\n        }\n        if (e.batchChanges[\"\" + deleterecords].length) {\n            var deletedRecords = e.batchChanges[\"\" + deleterecords];\n            var record = deletedRecords;\n            for (var i = 0; i < record.length; i++) {\n                this.deleteUniqueID(record[parseInt(i.toString(), 10)].uniqueID);\n                var childs = findChildrenRecords(record[parseInt(i.toString(), 10)]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[parseInt(c.toString(), 10)].uniqueID);\n                }\n                e.batchChanges[\"\" + deleterecords] = e.batchChanges[\"\" + deleterecords].concat(childs);\n            }\n        }\n        this.isAdd = false;\n    };\n    BatchEdit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[\"\" + idFilter][\"\" + value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[\"\" + id][\"\" + value];\n    };\n    BatchEdit.prototype.batchCancelAction = function () {\n        var targetElement = 'targetElement';\n        var index;\n        var parentItem = 'parentItem';\n        var indexvalue = 'index';\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        var childRecords = 'childRecords';\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        if (!isNullOrUndefined(this.batchAddedRecords)) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[\"\" + primaryKey]; }).indexOf(this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + primaryKey]);\n                if (index !== -1) {\n                    data.splice(index, 1);\n                }\n                if (this.parent.editSettings.newRowPosition === 'Child') {\n                    index = currentViewRecords.map(function (e) { return e[\"\" + primaryKey]; })\n                        .indexOf(this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + parentItem] ? this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + parentItem][\"\" + primaryKey]\n                        : this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + primaryKey]);\n                    if (!isNullOrUndefined(currentViewRecords[parseInt(index.toString(), 10)])) {\n                        var children = currentViewRecords[parseInt(index.toString(), 10)][\"\" + childRecords];\n                        for (var j = 0; children && j < children.length; j++) {\n                            if (children[parseInt(j.toString(), 10)][\"\" + primaryKey] === this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + primaryKey]) {\n                                currentViewRecords[parseInt(index.toString(), 10)][\"\" + childRecords].splice(j, 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (!isNullOrUndefined(this.parent[\"\" + targetElement])) {\n            var row = this.parent[\"\" + targetElement].closest('tr');\n            this.parent.collapseRow(row);\n            this.parent[\"\" + targetElement] = null;\n        }\n        if (!isNullOrUndefined(this.batchDeletedRecords)) {\n            for (var i = 0; i < this.batchDeletedRecords.length; i++) {\n                if (!isNullOrUndefined(this.batchDeletedRecords[parseInt(i.toString(), 10)][\"\" + parentItem])) {\n                    index = currentViewRecords.map(function (e) { return e[\"\" + primaryKey]; })\n                        .indexOf(this.batchDeletedRecords[parseInt(i.toString(), 10)][\"\" + parentItem][\"\" + primaryKey]);\n                    var positionIndex = this.batchDeletedRecords[parseInt(i.toString(), 10)][\"\" + indexvalue] === 0 ? this.batchDeletedRecords[parseInt(i.toString(), 10)][\"\" + indexvalue] :\n                        this.batchDeletedRecords[parseInt(i.toString(), 10)][\"\" + indexvalue] - 1;\n                    if (!isNullOrUndefined(currentViewRecords[parseInt(index.toString(), 10)])) {\n                        currentViewRecords[parseInt(index.toString(), 10)][\"\" + childRecords].splice(positionIndex, 0, this.batchDeletedRecords[parseInt(i.toString(), 10)]);\n                    }\n                }\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.currentViewRecords = [];\n        this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchIndex = 0;\n        this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchDeletedRecords = [];\n        this.parent.grid.renderModule.refresh();\n    };\n    BatchEdit.prototype.batchSave = function (args) {\n        if (this.parent.editSettings.mode === 'Batch') {\n            var i = void 0;\n            var batchChanges = Object.hasOwnProperty.call(args, 'updatedRecords') ? args.updatedRecords : this.parent.getBatchChanges();\n            var deletedRecords = 'deletedRecords';\n            var addedRecords = 'addedRecords';\n            var index = 'index';\n            var uniqueID = 'uniqueID';\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n            var primarykey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var level = 'level';\n            var addRecords = batchChanges[\"\" + addedRecords];\n            var parentItem = 'parentItem';\n            var selectedIndex = void 0;\n            var addRowIndex = void 0;\n            var columnName = void 0;\n            var addRowRecord = void 0;\n            var childRecords = 'childRecords';\n            if (addRecords.length > 1 && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                addRecords.reverse();\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Bottom' && !Object.hasOwnProperty.call(args, 'updatedRecords')) {\n                data.splice(data.length - addRecords.length, addRecords.length);\n                if (this.parent.editModule['isAddedRowByMethod'] && addRecords.length && !isNullOrUndefined(this.parent.editModule['addRowIndex']) && !this.parent.editModule['isAddedRowByContextMenu']) {\n                    addRecords.reverse();\n                    for (var i_1 = 0; i_1 < addRecords.length; i_1++) {\n                        var index_1 = parseInt(this.parent.getContentTable().getElementsByClassName('e-insertedrow')[parseInt(i_1.toString(), 10)].getAttribute('data-rowindex'), 10);\n                        data.splice(index_1, 0, addRecords[parseInt(i_1.toString(), 10)]);\n                    }\n                }\n                if (!this.parent.allowPaging && data.length !== currentViewRecords.length) {\n                    if (currentViewRecords.length > addRecords.length) {\n                        currentViewRecords.splice(currentViewRecords.length - addRecords.length, addRecords.length);\n                    }\n                }\n                else {\n                    var totalRecords = extendArray(data);\n                    if (totalRecords.length) {\n                        var startIndex = totalRecords.map(function (e) { return e[\"\" + primarykey_1]; })\n                            .indexOf(currentViewRecords[0][\"\" + primarykey_1]);\n                        var endIndex = startIndex + this.parent.grid.pageSettings.pageSize;\n                        currentViewRecords = totalRecords.splice(startIndex, endIndex);\n                    }\n                }\n            }\n            if (this.batchAddRowRecord.length === 0) {\n                this.batchAddRowRecord.push(this.parent.flatData[args.index]);\n            }\n            if (this.parent.editModule['isAddedRowByContextMenu']) {\n                addRecords.reverse();\n            }\n            for (i = 0; i < addRecords.length; i++) {\n                var taskData = extend({}, addRecords[parseInt(i.toString(), 10)]);\n                delete taskData.parentItem;\n                delete taskData.uniqueID;\n                delete taskData.index;\n                delete taskData.level;\n                delete taskData.hasChildRecords;\n                delete taskData.childRecords;\n                delete taskData.parentUniqueID;\n                if (!isNullOrUndefined(taskData.primaryParent)) {\n                    delete taskData.primaryParent;\n                }\n                if (addRecords.length > 1 && this.parent.editModule['isAddedRowByContextMenu']) {\n                    var rowPosition = this.parent.editSettings.newRowPosition;\n                    this.parent.editSettings.newRowPosition = this.parent.editModule['previousNewRowPosition'];\n                    this.parent.editModule['previousNewRowPosition'] = rowPosition;\n                }\n                addRecords[parseInt(i.toString(), 10)].taskData = taskData;\n                addRowRecord = this.batchAddRowRecord[parseInt(i.toString(), 10)];\n                if (isNullOrUndefined(addRowRecord)) {\n                    addRowRecord = this.batchAddRowRecord[i - 1];\n                }\n                if (this.isSelfReference) {\n                    if (!isNullOrUndefined(addRecords[parseInt(i.toString(), 10)].parentItem)) {\n                        updateParentRow(primarykey_1, addRecords[parseInt(i.toString(), 10)].parentItem, 'add', this.parent, this.isSelfReference, addRecords[parseInt(i.toString(), 10)]);\n                    }\n                }\n                if (!isNullOrUndefined(addRowRecord)) {\n                    addRowIndex = addRowRecord.index;\n                }\n                if (this.parent.editSettings.newRowPosition !== 'Top' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    if (isNullOrUndefined(addRecords[parseInt(i.toString(), 10)].parentItem) && this.selectedIndex === -1) {\n                        selectedIndex = -1;\n                        addRowRecord = null;\n                    }\n                }\n                editAction({ value: addRecords[parseInt(i.toString(), 10)], action: 'add' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                selectedIndex = null;\n                if (this.parent.editSettings.newRowPosition === 'Child' && !isNullOrUndefined(addRecords[parseInt(i.toString(), 10)][\"\" + parentItem]) &&\n                    (isNullOrUndefined(this.parent.editModule['addRowIndex']) || this.isSelfReference)) {\n                    var indexValue = currentViewRecords.map(function (e) { return e[\"\" + primarykey_1]; })\n                        .indexOf(addRecords[parseInt(i.toString(), 10)][\"\" + parentItem][\"\" + primarykey_1]);\n                    var children = currentViewRecords[parseInt(indexValue.toString(), 10)][\"\" + childRecords];\n                    for (var j = 0; j < children.length; j++) {\n                        if (children[parseInt(j.toString(), 10)][\"\" + primarykey_1] === addRecords[parseInt(i.toString(), 10)][\"\" + primarykey_1]) {\n                            currentViewRecords[parseInt(indexValue.toString(), 10)][\"\" + childRecords].splice(j, 1);\n                        }\n                    }\n                }\n            }\n            if (batchChanges[\"\" + deletedRecords].length) {\n                for (i = 0; i < batchChanges[\"\" + deletedRecords].length; i++) {\n                    editAction({ value: batchChanges[\"\" + deletedRecords][parseInt(i.toString(), 10)], action: 'delete' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                }\n            }\n            this.parent.parentData = [];\n            for (var i_2 = 0; i_2 < data.length; i_2++) {\n                data[parseInt(i_2.toString(), 10)][\"\" + index] = i_2;\n                setValue('uniqueIDCollection.' + data[parseInt(i_2.toString(), 10)][\"\" + uniqueID] + '.index', i_2, this.parent);\n                if (!data[parseInt(i_2.toString(), 10)][\"\" + level]) {\n                    this.parent.parentData.push(data[parseInt(i_2.toString(), 10)]);\n                }\n            }\n        }\n        this.batchAddRowRecord = this.batchAddedRecords = this.batchRecords = this.batchDeletedRecords = this.currentViewRecords = [];\n        if (this.parent.editModule['isAddedRowByContextMenu']) {\n            this.parent.editModule['isAddedRowByContextMenu'] = false;\n        }\n    };\n    BatchEdit.prototype.getActualRowObjectIndex = function (index) {\n        var rows = this.parent.grid.getDataRows();\n        if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n            && this.selectedIndex > -1) {\n            if (!isNullOrUndefined(this.batchRecords[this.addRowIndex]) && this.batchRecords[this.addRowIndex].expanded) {\n                if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                    if (this.parent.editSettings.newRowPosition !== 'Child') {\n                        var batchChildCount = this.getBatchChildCount();\n                        index = index + batchChildCount;\n                    }\n                }\n                else {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                }\n            }\n            if (index >= rows.length) {\n                index = rows.length - 1;\n            }\n            this.updateChildCount(this.parent.grid.getCurrentViewRecords());\n            if (this.batchChildCount) {\n                index += this.batchChildCount;\n            }\n            this.batchChildCount = 0;\n        }\n        return index;\n    };\n    BatchEdit.prototype.immutableBatchAction = function (e) {\n        e.args.cancel = true;\n        var changes = this.parent.grid.getBatchChanges();\n        var addedRecords = [];\n        var index = 'index';\n        if (Object.keys(changes).length) {\n            addedRecords = changes.addedRecords;\n        }\n        for (var i = 0; i < addedRecords.length; i++) {\n            e.rows.splice(addedRecords[parseInt(i.toString(), 10)][\"\" + index], 1);\n        }\n    };\n    BatchEdit.prototype.nextCellIndex = function (args) {\n        var index = 'index';\n        var rowIndex = 'rowIndex';\n        if (this.parent.getSelectedRows().length) {\n            args[\"\" + index] = this.parent.getSelectedRows()[0][\"\" + rowIndex];\n        }\n        else {\n            args[\"\" + index] = this.batchIndex;\n        }\n    };\n    return BatchEdit;\n}());\nexport { BatchEdit };\n","import { Grid, Edit as GridEdit, getUid, getObject, resetRowIndex } from '@syncfusion/ej2-grids';\nimport { parentsUntil } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isCountRequired, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\nimport { BatchEdit } from './batch-edit';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Edit(parent) {\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.prevAriaRowIndex = '-1';\n        this.isAddedRowByMethod = false;\n        this.isAddedRowByContextMenu = false;\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.batchEditModule = new BatchEdit(this.parent);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Edit module name\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('batchedit-form', this.lastCellTab, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.on('actionBegin', this.editActionEvents, this);\n        this.parent.on('actionComplete', this.editActionEvents, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.grid.on('dblclick', this.gridDblClick, this);\n        this.parent.grid.on('recordAdded', this.customCellSave, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        this.parent.grid.on('reset-edit-props', this.resetIsOnBatch, this);\n        this.parent.grid.on('get-row-position', this.getRowPosition, this);\n    };\n    Edit.prototype.gridDblClick = function (e) {\n        this.doubleClickTarget = e.target;\n        if (e.target.classList.contains('e-frame') && this.parent.getCurrentViewRecords().length === 0) {\n            this.doubleClickTarget = null;\n        }\n        if (e.target.classList.contains('e-treegridcollapse') || e.target.classList.contains('e-treegridexpand')) {\n            var tr = parentsUntil(e.target, 'e-row');\n            var rowIndex = tr && parseInt(tr.getAttribute('data-rowindex'), 10);\n            if (!isNullOrUndefined(rowIndex) && rowIndex >= 0 && this.parent.allowPaging) {\n                /* eslint-disable-next-line */\n                this.parent.grid.getDataRows()[rowIndex].dataset.uid = this.parent.grid.contentModule.getRows()[rowIndex].uid;\n            }\n        }\n    };\n    Edit.prototype.getRowPosition = function (addArgs) {\n        addArgs.newRowPosition = this.parent.editSettings.newRowPosition;\n        addArgs.addRowIndex = this.addRowIndex;\n        addArgs.dataRowIndex = +this.prevAriaRowIndex;\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.trigger(events.actionBegin, args);\n        }\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.trigger(events.actionComplete, args);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('batchedit-form', this.lastCellTab);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.off('actionBegin', this.editActionEvents);\n        this.parent.off('actionComplete', this.editActionEvents);\n        this.parent.grid.off('recordAdded', this.customCellSave);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        this.parent.grid.off('dblclick', this.gridDblClick);\n        this.parent.grid.off('reset-edit-props', this.resetIsOnBatch);\n        this.parent.grid.off('get-row-position', this.getRowPosition);\n        //this.parent.grid.off('click', this.gridSingleClick);\n    };\n    /**\n     * To destroy the editModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @param {Column[]} cols - Column property Collection\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.editActionEvents = function (args) {\n        var eventArgs = getObject('editAction', args);\n        var eventName = getObject('name', eventArgs);\n        var treeObj = this.parent;\n        var adaptor = treeObj.dataSource.adaptor;\n        if ((isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) &&\n            (eventArgs.requestType === 'save' && eventArgs.action === 'add') &&\n            (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below'\n                || treeObj.editSettings.newRowPosition === 'Above')) {\n            if (eventName === 'actionBegin') {\n                var rowIndex = isNullOrUndefined(eventArgs.row) || !Object.keys(eventArgs.row).length ? this.selectedIndex :\n                    eventArgs.row.rowIndex - 1;\n                var keyData = (!isNullOrUndefined(rowIndex) && rowIndex !== -1) ?\n                    treeObj.getCurrentViewRecords()[parseInt(rowIndex.toString(), 10)][treeObj.getPrimaryKeyFieldNames()[0]] : -1;\n                treeObj.grid.query.addParams('relationalKey', keyData);\n            }\n            else if (eventName === 'actionComplete') {\n                var paramsLength = treeObj.grid.query.params.length;\n                for (var i = 0; i < paramsLength; i++) {\n                    if (treeObj.grid.query.params[parseInt(i.toString(), 10)].key === 'relationalKey') {\n                        treeObj.grid.query.params.splice(i);\n                    }\n                }\n            }\n        }\n        if (this.parent.enableInfiniteScrolling && eventName === 'actionComplete') {\n            this.infiniteAddAction(eventArgs);\n        }\n        if (this.parent.editSettings.mode === 'Batch' && eventArgs.requestType === 'paging') {\n            this.parent.notify('batchPageAction', {});\n        }\n    };\n    Edit.prototype.infiniteAddAction = function (args) {\n        if ((args.requestType === 'save' && args.action === 'add') || args.requestType === 'delete') {\n            if (this.parent.editSettings.newRowPosition !== 'Top' && this.selectedIndex !== -1\n                && (args.requestType === 'save' && args.action === 'add')) {\n                var rowObjects = this.parent.grid.getRowsObject();\n                var newRowObject = rowObjects.splice(0, 1)[0];\n                var newRowObjectIndex = this.addRowIndex;\n                var currentData = this.parent.getCurrentViewRecords();\n                if (this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                    newRowObjectIndex += findChildrenRecords(currentData[newRowObjectIndex + 1]).length;\n                }\n                newRowObjectIndex = this.parent.editSettings.newRowPosition === 'Below' ? newRowObjectIndex + 1 : newRowObjectIndex;\n                rowObjects.splice(newRowObjectIndex, 0, newRowObject);\n                var newRecord = currentData.splice(0, 1)[0];\n                currentData.splice(newRowObjectIndex, 0, newRecord);\n                this.updateInfiniteCurrentViewData(newRecord, this.addRowIndex);\n            }\n            var movableRows = this.parent.grid.getMovableRows();\n            var movableRowsObject = this.parent.grid.getMovableRowsObject();\n            var isCache = this.parent.infiniteScrollSettings.enableCache;\n            if (!isCache) {\n                resetRowIndex(this.parent.grid, this.parent.grid.getRowsObject(), this.parent.grid.getRows(), 0);\n                this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            }\n            if (!isCache && this.parent.getFrozenColumns() > 0) {\n                resetRowIndex(this.parent.grid, movableRowsObject, movableRows, 0);\n                this.updateIndex(this.parent.grid.dataSource, movableRows, this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    Edit.prototype.updateInfiniteCurrentViewData = function (newRecord, newRowIndex) {\n        var _this = this;\n        var infiniteData = 'infiniteCurrentViewData';\n        var updateCurrentViewData = 'updateCurrentViewData';\n        var size = Math.ceil(newRowIndex / this.parent.grid.pageSettings.pageSize);\n        var page = size > 0 ? size : 1;\n        var dataIndex = newRowIndex - ((page - 1) * this.parent.pageSettings.pageSize);\n        var infiniteCurrentViewData = this.parent.grid.infiniteScrollModule[\"\" + infiniteData];\n        infiniteCurrentViewData[1].splice(0, 1);\n        var data = infiniteCurrentViewData[parseInt(page.toString(), 10)];\n        if (!isNullOrUndefined(this.addRowRecord)) {\n            data.filter(function (e, index) {\n                if (e.uniqueID === _this.addRowRecord.uniqueID) {\n                    dataIndex = index;\n                }\n            });\n            if (this.addRowRecord.hasChildRecords && this.addRowRecord.childRecords.length &&\n                this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                dataIndex += findChildrenRecords(this.addRowRecord).length;\n            }\n        }\n        if (dataIndex >= this.parent.pageSettings.pageSize) {\n            page += 1;\n            data = infiniteCurrentViewData[parseInt(page.toString(), 10)];\n            dataIndex = dataIndex - this.parent.pageSettings.pageSize >= 0 ? dataIndex - this.parent.pageSettings.pageSize : 0;\n        }\n        dataIndex = this.parent.editSettings.newRowPosition === 'Below' ? dataIndex + 1 : dataIndex;\n        data.splice(dataIndex, 0, newRecord);\n        this.parent.grid.infiniteScrollModule[\"\" + updateCurrentViewData]();\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        if (!(this.parent.grid.editSettings.allowEditing) || this.parent.grid.isEdit) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('data-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            this.parent.editSettings.allowEditing && column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            if (this.parent.enableVirtualization) {\n                var tr = parentsUntil(args.target, 'e-row');\n                this.prevAriaRowIndex = tr.getAttribute('data-rowindex');\n                tr.setAttribute('data-rowindex', tr.rowIndex + '');\n            }\n            this.updateGridEditMode('Batch');\n        }\n        else if (this.parent.editSettings.mode === 'Cell' && (!column.allowEditing || column.isPrimaryKey)) {\n            this.isOnBatch = true;\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.resetIsOnBatch = function () {\n        if (this.parent.enableVirtualization && this.parent.editSettings.mode === 'Cell') {\n            this.isOnBatch = false;\n            this.updateGridEditMode('Normal');\n        }\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n        if (args.action === 'escape') {\n            this.parent.closeEdit();\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[\"\" + idFilter][\"\" + value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[\"\" + id][\"\" + value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[\"\" + promise];\n        delete args[\"\" + promise];\n        if (this.parent.enableVirtualization && !isNullOrUndefined(this.prevAriaRowIndex) && this.prevAriaRowIndex !== '-1') {\n            args.row.setAttribute('data-rowindex', this.prevAriaRowIndex);\n            this.prevAriaRowIndex = undefined;\n        }\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                else if (celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.isOnBatch = false;\n                    _this.updateGridEditMode('Normal');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-summarycell'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n                setValue('isEditCollapse', false, this.parent);\n            }\n            if (!args.columnObject.allowEditing) {\n                args.cancel = true;\n            }\n        }\n        if (this.parent.enableVirtualization) {\n            this.parent.grid.contentModule['editedRowIndex'] = this.parent.grid.editModule.editModule['index'];\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function () {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var treeCell = this.parent.getCellFromIndex(cellDetails.rowIndex, this.parent.treeColumnIndex);\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: treeCell,\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        if (this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify('batchCancelAction', {});\n        }\n    };\n    Edit.prototype.customCellSave = function (args) {\n        if (isCountRequired(this.parent) && this.parent.editSettings.mode === 'Cell' && args.action === 'edit') {\n            this.updateCell(args, args.rowIndex);\n            this.afterCellSave(args, args.row, args.rowIndex);\n        }\n    };\n    Edit.prototype.cellSave = function (args) {\n        var _this = this;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            var editModule = 'editModule';\n            setValue('isEdit', false, this.parent.grid);\n            setValue('isEditCollapse', true, this.parent);\n            args.rowData[args.columnName] = args.value;\n            var row_1;\n            if (isNullOrUndefined(args.cell)) {\n                row_1 = this.parent.grid.editModule[\"\" + editModule].form.parentElement.parentNode;\n            }\n            else {\n                row_1 = args.cell.parentNode;\n            }\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row_1)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n                    this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n                if (freeze) {\n                    if (this.parent.getRows().indexOf(row_1) !== -1) {\n                        rowIndex_1 = this.parent.getRows().indexOf(row_1);\n                    }\n                    else if (this.parent.getFrozenRightRows().indexOf(row_1) !== -1) {\n                        rowIndex_1 = this.parent.getFrozenRightRows().indexOf(row_1);\n                    }\n                    else {\n                        rowIndex_1 = this.parent.getMovableRows().indexOf(row_1);\n                    }\n                }\n                else {\n                    rowIndex_1 = (this.parent.getRows().indexOf(row_1) === -1 && (this.parent.getFrozenColumns() > 0)) ?\n                        this.parent.grid.getMovableRows().indexOf(row_1) : this.parent.getRows().indexOf(row_1);\n                }\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row_1 = this.parent.grid.getRows()[row_1.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                if ((row_1.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'tab') {\n                    this.isTabLastRow = true;\n                }\n                if (!isRemoteData(this.parent) &&\n                    !(this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    if (isCountRequired(this.parent)) {\n                        var eventPromise = 'eventPromise';\n                        var editArgs = { requestType: 'save', data: args.rowData, action: 'edit', row: row_1,\n                            rowIndex: rowIndex_1, rowData: args.rowData, columnName: args.columnName,\n                            filterChoiceCount: null, excelSearchOperator: null };\n                        this.parent.grid.getDataModule()[\"\" + eventPromise](editArgs, this.parent.grid.query);\n                    }\n                    else {\n                        this.updateCell(args, rowIndex_1);\n                        this.afterCellSave(args, row_1, rowIndex_1);\n                    }\n                }\n                else if (isRemoteData(this.parent) ||\n                    (this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    var query = this.parent.grid.query;\n                    if (this.parent['isGantt'] && !this.parent.loadChildOnDemand) {\n                        this.updateCell(args, rowIndex_1);\n                        this.afterCellSave(args, row_1, rowIndex_1);\n                    }\n                    else {\n                        var crud = null;\n                        crud = this.parent.grid.dataSource.update(primaryKeys_1[0], args.rowData, query.fromTable, query, args.previousValue);\n                        crud.then(function (e) {\n                            if (!isNullOrUndefined(e)) {\n                                args.rowData[args.columnName] = e[args.columnName];\n                            }\n                            _this.updateCell(args, rowIndex_1);\n                            _this.afterCellSave(args, row_1, rowIndex_1);\n                        });\n                    }\n                }\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n        if (this.parent.enableVirtualization) {\n            this.parent.grid.contentModule['virtualData'] = {};\n        }\n    };\n    Edit.prototype.afterCellSave = function (args, row, rowIndex) {\n        var mRow;\n        if (this.parent.grid.aggregateModule) {\n            this.parent.grid.aggregateModule.refresh(args.rowData);\n        }\n        this.parent.grid.editModule.destroyWidgets([this.parent.grid.getColumnByField(args.columnName)]);\n        this.parent.grid.editModule.formObj.destroy();\n        if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        this.enableToolbarItems('save');\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n            this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            if (args.cell.closest('.e-frozen-left-header') || args.cell.closest('.e-frozen-left-content')) {\n                mRow = this.parent.grid.getRows()[parseInt(rowIndex.toString(), 10)];\n            }\n            else if (args.cell.closest('.e-movableheader') || args.cell.closest('.e-movablecontent')) {\n                mRow = this.parent.grid.getMovableRows()[parseInt(rowIndex.toString(), 10)];\n            }\n            else {\n                mRow = this.parent.grid.getFrozenRightRows()[parseInt(rowIndex.toString(), 10)];\n            }\n            removeClass([mRow], ['e-editedrow', 'e-batchrow']);\n            removeClass(mRow.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        }\n        else if (this.parent.getFrozenColumns() > 0) {\n            if (args.cell.closest('.e-frozenheader') || args.cell.closest('.e-frozencontent')) {\n                mRow = this.parent.grid.getRows()[parseInt(rowIndex.toString(), 10)];\n            }\n            else {\n                mRow = this.parent.grid.getMovableRows()[parseInt(rowIndex.toString(), 10)];\n            }\n            removeClass([mRow], ['e-editedrow', 'e-batchrow']);\n            removeClass(mRow.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        }\n        removeClass([row], ['e-editedrow', 'e-batchrow']);\n        removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        if (this.parent['isCellSaveFocus'] !== false) {\n            this.parent.grid.focusModule.restoreFocus();\n        }\n        editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n        if ((row.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'enter') {\n            this.keyPress = null;\n        }\n        var saveArgs = {\n            type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n            previousData: args.previousValue, row: row, target: args.cell\n        };\n        if (this.parent.aggregates.map(function (ag) { return ag.showChildSummary === true; }).length) {\n            this.parent.grid.refresh();\n        }\n        this.parent.trigger(events.actionComplete, saveArgs);\n    };\n    Edit.prototype.lastCellTab = function () {\n        if (!this.parent.grid.isEdit && this.isOnBatch && this.keyPress === 'tab' && this.parent.editSettings.mode === 'Cell') {\n            if (!this.parent.editSettings.allowNextRowEdit) {\n                this.updateGridEditMode('Normal');\n                this.isOnBatch = false;\n                this.keyPress = null;\n            }\n            else {\n                this.enableToolbarItems('edit');\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateCell(rowIndex, args.columnName, args.rowData[args.columnName]);\n        this.parent.grid.getRowsObject()[parseInt(rowIndex.toString(), 10)].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[parseInt(i.toString(), 10)].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[\"\" + key] === data[parseInt(i.toString(), 10)][\"\" + key]) {\n                if (details.action === 'add') {\n                    data[parseInt(i.toString(), 10)].level = this.internalProperties.level;\n                    data[parseInt(i.toString(), 10)].taskData = this.internalProperties.taskData;\n                    data[parseInt(i.toString(), 10)].uniqueID = this.internalProperties.uniqueID;\n                    if (!isNullOrUndefined(this.internalProperties.parentItem)) {\n                        data[parseInt(i.toString(), 10)].parentItem = this.internalProperties.parentItem;\n                        data[parseInt(i.toString(), 10)].parentUniqueID = this.internalProperties.parentUniqueID;\n                    }\n                    data[parseInt(i.toString(), 10)].childRecords = this.internalProperties.childRecords;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[parseInt(i.toString(), 10)].uniqueID + '.index', i, this.parent);\n            var adaptor = this.parent.dataSource.adaptor;\n            if ((isRemoteData(this.parent) || adaptor instanceof RemoteSaveAdaptor)) {\n                setValue('uniqueIDCollection.' + data[parseInt(i.toString(), 10)].uniqueID, data[parseInt(i.toString(), 10)], this.parent);\n            }\n            if (!data[parseInt(i.toString(), 10)].level) {\n                this.parent.parentData.push(data[parseInt(i.toString(), 10)]);\n            }\n        }\n        if (!this.parent.enableInfiniteScrolling) {\n            if (details.action === 'add' && this.previousNewRowPosition != null) {\n                this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n                this.previousNewRowPosition = null;\n            }\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[parseInt(j.toString(), 10)];\n            if (!isNullOrUndefined(data1)) {\n                var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n                data1.index = index;\n                if (!isNullOrUndefined(data1.parentItem)) {\n                    var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                    data1.parentItem.index = parentIndex;\n                }\n            }\n        }\n        var count = -1;\n        var treeColIndex = this.parent.treeColumnIndex;\n        if (this.parent.getFrozenColumns() > 0) {\n            var cells = rows[0].querySelectorAll('.e-rowcell');\n            for (var l = 0; l < cells.length; l++) {\n                if (cells[parseInt(l.toString(), 10)].classList.contains('e-gridrowindex0level0')) {\n                    treeColIndex = l;\n                    break;\n                }\n            }\n        }\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[parseInt(k.toString(), 10)].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[parseInt(count.toString(), 10)];\n            if (!isNullOrUndefined(data2)) {\n                var index = data2.index;\n                var level = data2.level;\n                var row = rows[parseInt(k.toString(), 10)];\n                if (!isNullOrUndefined(data2.parentItem)) {\n                    index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n                }\n                var treecell = row.cells[parseInt(treeColIndex.toString(), 10)];\n                if (!isNullOrUndefined(treecell)) {\n                    for (var l = 0; l < treecell.classList.length; l++) {\n                        var value = treecell.classList[parseInt(l.toString(), 10)];\n                        var remove = /e-gridrowindex/i;\n                        var removed = /e-griddetailrowindex/i;\n                        var result = value.match(remove);\n                        var results = value.match(removed);\n                        if (result != null) {\n                            removeClass([treecell], value);\n                        }\n                        if (results != null) {\n                            removeClass([treecell], value);\n                        }\n                    }\n                    if (!rows[parseInt(k.toString(), 10)].classList.contains('e-detailrow')) {\n                        addClass([treecell], 'e-gridrowindex' + index + 'level' + level);\n                    }\n                    else {\n                        addClass([treecell], 'e-griddetailrowindex' + index + 'level' + level);\n                    }\n                }\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function () {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        if (this.parent.editSettings.mode === 'Batch') {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                records = this.batchEditModule.getBatchRecords();\n            }\n        }\n        var rows = this.parent.grid.getDataRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('data-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('data-rowindex') : 0;\n        var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n        var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                position = 'after';\n                if (!isNullOrUndefined(records[parseInt(index.toString(), 10)]) &&\n                    records[parseInt(index.toString(), 10)].expanded) {\n                    if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                        || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                        index += findChildrenRecords(records[parseInt(index.toString(), 10)]).length;\n                        if (this.parent.editSettings.newRowPosition !== 'Child') {\n                            var batchChildCount = this.batchEditModule.getBatchChildCount();\n                            index = index + batchChildCount;\n                        }\n                    }\n                    else if (!this.parent.enableVirtualization) {\n                        index += findChildrenRecords(records[parseInt(index.toString(), 10)]).length;\n                    }\n                }\n            }\n            if ((this.selectedIndex > -1 || isVirtualization) && withinRange\n                && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                    || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length - 1) {\n                    index = rows.length - 2;\n                }\n                var r = 'rows';\n                var newRowObject = this.parent.grid.contentModule[\"\" + r][0];\n                var focussedElement = document.activeElement;\n                rows[index + 1][\"\" + position](rows[0]);\n                setValue('batchIndex', index + 1, this.batchEditModule);\n                var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Above' ? index : index + 1;\n                if (this.parent.editSettings.mode === 'Batch') {\n                    this.parent.grid.contentModule[\"\" + r].splice(0, 1);\n                    this.parent.grid.contentModule[\"\" + r].splice(rowObjectIndex, 0, newRowObject);\n                }\n                var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n                    this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n                if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns || freeze) {\n                    var movableRows = this.parent.getMovableDataRows();\n                    var frows = 'freezeRows';\n                    var newFreezeRowObject = this.parent.grid.getRowsObject()[0];\n                    movableRows[index + 1][\"\" + position](movableRows[0]);\n                    if (freeze) {\n                        var rightFrozenRows = this.parent.getFrozenRightDataRows();\n                        rightFrozenRows[index + 1][\"\" + position](rightFrozenRows[0]);\n                    }\n                    if (this.parent.editSettings.mode === 'Batch') {\n                        this.parent.grid.contentModule[\"\" + frows].splice(0, 1);\n                        this.parent.grid.contentModule[\"\" + frows].splice(rowObjectIndex, 0, newFreezeRowObject);\n                    }\n                    setValue('batchIndex', index + 1, this.batchEditModule);\n                }\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[parseInt(i.toString(), 10)].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                if (isVirtualization) {\n                    this.prevAriaRowIndex = '-1';\n                }\n                if (!this.parent.enableVirtualization || this.parent.enableVirtualization && !Object.keys(this.parent.grid.contentModule['emptyRowData']).length) {\n                    focussedElement.focus();\n                }\n                if (this.parent.enableVirtualization && !Object.keys(this.parent.grid.contentModule['emptyRowData']).length) {\n                    this.parent.grid.contentModule['createEmptyRowdata']();\n                }\n            }\n        }\n        if (this.parent.editSettings.mode === 'Batch' && !isNullOrUndefined(this.addRowIndex) && this.addRowIndex !== -1 && this['isAddedRowByMethod'] && !this.isAddedRowByContextMenu) {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            var batchAddedRecords = this.parent.getBatchChanges()['addedRecords'];\n            var newlyAddedRecord = void 0;\n            if (batchAddedRecords.length) {\n                for (var i = 0; i < batchAddedRecords.length; i++) {\n                    if (isNullOrUndefined(batchAddedRecords[parseInt(i.toString(), 10)].uniqueID)) {\n                        newlyAddedRecord = batchAddedRecords[parseInt(i.toString(), 10)];\n                    }\n                }\n            }\n            var args = {\n                action: 'add',\n                data: newlyAddedRecord,\n                index: index,\n                seletedRow: 0\n            };\n            this.beginAddEdit(args);\n            this.batchEditModule['batchAddRowRecord'].push(this.batchEditModule['addRowRecord']);\n            this.batchEditModule['batchAddedRecords'].push(args['data']);\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data_1 = args.data;\n            if (isNullOrUndefined(args.data[0].uniqueID)) {\n                var primaryKeys_2 = this.parent.getPrimaryKeyFieldNames();\n                var _loop_1 = function (i) {\n                    this_1.parent.flatData.filter(function (e) {\n                        if (e[\"\" + primaryKeys_2[0]] === args.data[parseInt(i.toString(), 10)][primaryKeys_2[0]]) {\n                            data_1[parseInt(i.toString(), 10)] = e;\n                        }\n                    });\n                };\n                var this_1 = this;\n                for (var i = 0; i < data_1.length; i++) {\n                    _loop_1(i);\n                }\n            }\n            for (var i = 0; i < data_1.length; i++) {\n                this.deleteUniqueID(data_1[parseInt(i.toString(), 10)].uniqueID);\n                var childs = findChildrenRecords(data_1[parseInt(i.toString(), 10)]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[parseInt(c.toString(), 10)].uniqueID);\n                }\n                args.data = args.data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add' || (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling))) {\n            if (!(this.parent.grid.selectedRowIndex === -1 && this.isAddedRowByMethod)\n                && args.index === this.parent.grid.selectedRowIndex || args.index === 0) {\n                this.selectedIndex = this.parent.grid.selectedRowIndex;\n            }\n            if (this.parent.enableVirtualization) {\n                var selector = '.e-row[data-rowindex=\"' + this.selectedIndex + '\"]';\n                var row = void 0;\n                if (this.selectedIndex > -1 && this.parent.editSettings.newRowPosition !== 'Top' &&\n                    this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    this.prevAriaRowIndex = this.selectedIndex.toString();\n                    row = this.parent.getContent().querySelector(selector);\n                    this.addRowIndex = row ? row.rowIndex : 0;\n                }\n                else {\n                    if (this.prevAriaRowIndex && this.prevAriaRowIndex !== '-1') {\n                        selector = '.e-row[data-rowindex=\"' + this.prevAriaRowIndex + '\"]';\n                        row = this.parent.getContent().querySelector(selector);\n                        this.addRowIndex = row ? row.rowIndex : 0;\n                    }\n                    else {\n                        this.addRowIndex = 0;\n                    }\n                }\n            }\n            else {\n                if (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)) {\n                    if (args.index !== 0) {\n                        this.addRowIndex = args.index;\n                    }\n                    else {\n                        this.addRowIndex = this.parent.grid.selectedRowIndex;\n                    }\n                }\n                else {\n                    this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n                }\n            }\n            if ((this.isAddedRowByMethod || (this.isAddedRowByContextMenu && this.parent.grid.selectedRowIndex !== -1)) &&\n                (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)) {\n                this.addRowRecord = this.parent.flatData[this.parent.grid.selectedRowIndex];\n                if (this.parent.enableVirtualization && this.isAddedRowByContextMenu) {\n                    this.addRowRecord = this.parent.getCurrentViewRecords()[this.addRowIndex];\n                }\n            }\n            else {\n                this.addRowRecord = this.parent.getSelectedRecords()[0];\n            }\n        }\n        if (this.isAddedRowByMethod && args.index !== 0) {\n            this.addRowRecord = this.parent.flatData[args.index];\n            this.addRowIndex = args.index;\n        }\n        if (this.parent.editSettings.newRowPosition === 'Child' && isNullOrUndefined(this.addRowRecord)\n            && !isNullOrUndefined(this.parent.getSelectedRecords()[0])) {\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        if (isNullOrUndefined(this.addRowRecord) && this.parent.getCurrentViewRecords().length > this.addRowIndex &&\n            args.requestType === 'save' && this.parent.getSelectedRecords().length !== 0) {\n            this.addRowRecord = this.parent.getCurrentViewRecords()[this.addRowIndex];\n        }\n        this.isAddedRowByMethod = false;\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function () {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            var currentData = void 0;\n            if (this.parent.enableVirtualization && args.index !== 0) {\n                currentData = this.parent.flatData;\n            }\n            else if (this.parent.editSettings.mode === 'Batch' && this['isAddedRowByMethod'] && !isNullOrUndefined(this.addRowIndex)) {\n                currentData = this.batchEditModule['batchRecords'];\n            }\n            else {\n                currentData = this.parent.grid.getCurrentViewRecords();\n            }\n            if (this.parent.enableVirtualization && args.index !== 0) {\n                this.addRowIndex = this.parent.flatData.indexOf(this.addRowRecord);\n                this.selectedIndex = this.addRowIndex;\n            }\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n            var rows = this.parent.getRows();\n            var firstAriaIndex = rows.length ? currentData.indexOf(currentData[0]) : 0;\n            var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('data-rowindex') : 0;\n            var withinRange = this.parent.enableVirtualization && args.index !== 0 ? true :\n                this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n            if (currentData.length) {\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if ((this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    if (this.selectedIndex >= 0) {\n                        value.level = level + 1;\n                    }\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    if (this.isSelfReference) {\n                        if (!this.parent.isLocalData && this.parent.editModule.selectedIndex === -1) {\n                            value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = null;\n                        }\n                        else {\n                            value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        }\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if ((this.selectedIndex > -1 || isVirtualization) && level && withinRange) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem, uniqueID: value.uniqueID,\n                taskData: value.taskData, parentUniqueID: isNullOrUndefined(value.parentItem) ? undefined : value.parentItem.uniqueID,\n                childRecords: value.childRecords };\n        }\n        if (args.requestType === 'delete') {\n            var deletedValues = args.data;\n            for (var i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[parseInt(i.toString(), 10)].parentItem) {\n                    var parentItem = getParentData(this.parent, deletedValues[parseInt(i.toString(), 10)].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        var childIndex = parentItem.childRecords.indexOf(deletedValues[parseInt(i.toString(), 10)]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        if (this.parent.editSettings.newRowPosition === this.previousNewRowPosition || this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n        if (!this.isSelfReference && !isNullOrUndefined(data) && Object.hasOwnProperty.call(data, this.parent.childMapping)) {\n            var addRecords = [];\n            var previousEditMode = this.parent.editSettings.mode;\n            var previousGridEditMode = this.parent.grid.editSettings.mode;\n            addRecords.push(data);\n            this.parent.setProperties({ editSettings: { mode: 'Batch' } }, true);\n            this.parent.grid.setProperties({ editSettings: { mode: 'Batch' } }, true);\n            if (!isNullOrUndefined(position)) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            var updatedRecords = { addedRecords: addRecords, changedRecords: [], deletedRecords: [] };\n            this.parent.notify(events.batchSave, { updatedRecords: updatedRecords, index: index });\n            this.parent.setProperties({ editSettings: { mode: previousEditMode } }, true);\n            this.parent.grid.setProperties({ editSettings: { mode: previousGridEditMode } }, true);\n            this.parent.refresh();\n        }\n        else {\n            if (data) {\n                if (index > -1) {\n                    this.selectedIndex = index;\n                    this.addRowIndex = index;\n                }\n                else {\n                    this.selectedIndex = this.parent.selectedRowIndex;\n                    this.addRowIndex = this.parent.selectedRowIndex;\n                }\n                if (position) {\n                    this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n                }\n                this.parent.grid.editModule.addRecord(data, index);\n            }\n            else {\n                this.parent.grid.editModule.addRecord(data, index);\n            }\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     *\n     * @returns {boolean} Returns form validation results\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save'\n                || (this.parent.editSettings.mode === 'Batch' && e.args.requestType.toString() === 'batchsave'))) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                if (this.parent.grid.dataSource.length === this.parent.getMovableDataRows().length) {\n                    this.updateIndex(this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n                }\n            }\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch') {\n            if (this.parent.editSettings.mode !== 'Batch') {\n                this.isOnBatch = true;\n                this.updateGridEditMode('Batch');\n            }\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n *\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns CommandColumn module name\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isRemoteData } from '../utils';\n/**\n * TreeGrid Detail Row module\n *\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns DetailRow module name\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.grid.on('detail-indentcell-info', this.setIndentVisibility, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n        this.parent.grid.off('detail-indentcell-info', this.setIndentVisibility);\n    };\n    DetailRow.prototype.setIndentVisibility = function (args) {\n        var visible = 'visible';\n        args[\"\" + visible] = false;\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[parseInt(i.toString(), 10)].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[parseInt(i.toString(), 10)].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[parseInt(i.toString(), 10)]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        if (isRemoteData(this.parent)) {\n            return;\n        }\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[parseInt(i.toString(), 10)].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        var data = args.data;\n        var row = args.detailElement.parentElement.previousSibling;\n        var index = !isNullOrUndefined(data.parentItem) ? data.parentItem.index : data.index;\n        var expandClass = 'e-gridrowindex' + index + 'level' + data.level;\n        var classlist = row.querySelector('.' + expandClass).classList;\n        var gridClas = [].slice.call(classlist).filter(function (gridclass) { return (gridclass === expandClass); });\n        var newNo = gridClas[0].length;\n        var slicedclas = gridClas.toString().slice(6, newNo);\n        var detailClass = 'e-griddetail' + slicedclas;\n        addClass([args.detailElement.parentElement], detailClass);\n    };\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[parseInt(i.toString(), 10)].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[\"\" + matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Cell, CellType } from '@syncfusion/ej2-grids';\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport * as literals from '../base/constant';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue, Browser, debounce } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        _this.recordAdded = false;\n        /** @hidden */\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.preTranslate = 0;\n        _this.isRemoteExpand = false;\n        /** @hidden */\n        _this.isDataSourceChanged = false;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('data-rowindex'), 10) === index; })[0];\n    };\n    VirtualTreeContentRenderer.prototype.getMovableVirtualRowByIndex = function (index) {\n        return this.getRowCollection(index, true);\n    };\n    VirtualTreeContentRenderer.prototype.getFrozenRightVirtualRowByIndex = function (index) {\n        return this.getRowCollection(index, false, false, true);\n    };\n    VirtualTreeContentRenderer.prototype.getRowCollection = function (index, isMovable, isRowObject, isFrozenRight) {\n        var startIdx = parseInt(this.parent.getRows()[0].getAttribute(literals.dataRowIndex), 10);\n        var rowCollection = isMovable ? this.parent.getMovableDataRows() : this.parent.getDataRows();\n        rowCollection = isFrozenRight ? this.parent.getFrozenRightDataRows() : rowCollection;\n        var collection = isRowObject ? this.parent.getCurrentViewRecords() : rowCollection;\n        var selectedRow = collection[index - startIdx];\n        if (this.parent.frozenRows && this.parent.pageSettings.currentPage > 1) {\n            if (!isRowObject) {\n                selectedRow = index <= this.parent.frozenRows ? rowCollection[parseInt(index.toString(), 10)]\n                    : rowCollection[(index - startIdx) + this.parent.frozenRows];\n            }\n            else {\n                selectedRow = index <= this.parent.frozenRows ?\n                    this.parent.getRowsObject()[parseInt(index.toString(), 10)].data : selectedRow;\n            }\n        }\n        return selectedRow;\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        var content = this.parent.getContent().querySelector('.e-content');\n        if ((this.recordAdded || args.requestType === 'delete' && this.endIndex > args.count - this.parent.pageSettings.pageSize) && this.startIndex > -1 && this.endIndex > -1) {\n            if (this.endIndex > args.count - this.parent.pageSettings.pageSize) {\n                var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n                var lastIndex = nextSetResIndex + this.parent.getRows().length;\n                if (lastIndex > args.count) {\n                    lastIndex = nextSetResIndex +\n                        (args.count - nextSetResIndex);\n                }\n                this.startIndex = lastIndex - this.parent.getRows().length;\n                this.endIndex = lastIndex;\n            }\n            else if (this.parent.root.editSettings.newRowPosition !== 'Top' && this.parent.root.editModule.selectedIndex !== -1 || this.parent.root.editModule.selectedIndex !== -1) {\n                this.startIndex += 1;\n                this.endIndex += 1;\n            }\n            this.recordAdded = false;\n        }\n        if (this.isDataSourceChanged) {\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        if ((this.endIndex - this.startIndex !== this.parent.pageSettings.pageSize) &&\n            (this.totalRecords > this.parent.pageSettings.pageSize) &&\n            (this.endIndex === this.totalRecords)) {\n            args.startIndex = this.endIndex - this.parent.pageSettings.pageSize;\n            args.endIndex = this.endIndex;\n        }\n        else {\n            args.startIndex = this.startIndex;\n            args.endIndex = this.endIndex;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            this.parent[\"\" + action]('data-ready', this.onDataReady, this);\n            this.parent[\"\" + action]('refresh-virtual-block', this.refreshContentRows, this);\n            this.fn = function () {\n                _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); }, _this.onEnteredAction(), _this.parent);\n                _this.parent.off('content-ready', _this.fn);\n            };\n            this.parent.addEventListener('dataBound', this.dataBoundEvent.bind(this));\n            this.parent.addEventListener('rowSelected', this.rowSelectedEvent.bind(this));\n            this.parent[\"\" + action]('select-virtual-Row', this.toSelectVirtualRow, this);\n            this.parent.on('content-ready', this.fn, this);\n            this.parent.addEventListener(events.actionComplete, this.onActionComplete.bind(this));\n            this.parent[\"\" + action]('virtual-scroll-edit-action-begin', this.beginEdit, this);\n            this.parent[\"\" + action]('virtual-scroll-add-action-begin', this.beginAdd, this);\n            this.parent[\"\" + action]('virtual-scroll-edit-success', this.virtualEditSuccess, this);\n            this.parent[\"\" + action]('edit-reset', this.resetIseditValue, this);\n            this.parent[\"\" + action]('get-virtual-data', this.getData, this);\n            this.parent[\"\" + action]('virtual-scroll-edit-cancel', this.cancelEdit, this);\n            this.parent[\"\" + action]('select-row-on-context-open', this.toSelectRowOnContextOpen, this);\n            this.parent[\"\" + action]('refresh-virtual-editform-cells', this.refreshCell, this);\n            this.parent[\"\" + action]('virtaul-cell-focus', this.cellFocus, this);\n        }\n        else {\n            _super.prototype.eventListener.call(this, 'on');\n        }\n    };\n    VirtualTreeContentRenderer.prototype.cellFocus = function (e) {\n        var virtualCellFocus = 'virtualCellFocus';\n        _super.prototype[\"\" + virtualCellFocus].call(this, e);\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            if (!isNullOrUndefined(e.count)) {\n                this.totalRecords = e.count;\n                // To overcome the white space issue in last page when records collapsed\n                if (this.parent.isFrozenGrid() && e.count < Object.keys(this.parent.dataSource).length) {\n                    var width = this.parent.enableColumnVirtualization ?\n                        this.getColumnOffset(this.parent.columns.length - 1) + 'px' : '100%';\n                    var height = (this.parent.getRowHeight() * e.count) -\n                        (this.parent.getRowHeight() * this.parent.pageSettings.pageSize);\n                    getValue('virtualEle', this).setVirtualHeight(height, width);\n                }\n                if (!this.parent.enableColumnVirtualization && !this.parent.isFrozenGrid()) {\n                    getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n                }\n            }\n            if ((!isNullOrUndefined(e.requestType) && e.requestType.toString() === 'collapseAll') || (this.isDataSourceChanged && (this.startIndex === -1 || this.startIndex === 0 && this['preStartIndex'] === 0))) {\n                this.contents.scrollTop = 0;\n                this.isDataSourceChanged = false;\n            }\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            getValue('observer', this).options.debounceEvent = false;\n            this.observers = new TreeInterSectionObserver(getValue('observer', this).element, getValue('observer', this).options);\n            this.contents = this.getPanel().firstChild;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getTranslateY = function (sTop, cHeight, info, isOnenter) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            if (this.isRemoteExpand) {\n                this.isRemoteExpand = false;\n                return this.preTranslate;\n            }\n            else {\n                this.preTranslate = _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n                return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n            }\n        }\n        else {\n            return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.dataBoundEvent = function () {\n        var dataBoundEve = 'dataBound';\n        var initialRowTop = 'initialRowTop';\n        if (!isNullOrUndefined(this.parent.getRowByIndex(0)) && this.parent.getRows().length && !this[\"\" + initialRowTop]) {\n            var rowTop = this.parent.getRowByIndex(0).getBoundingClientRect().top;\n            var gridTop = this.parent.element.getBoundingClientRect().top;\n            if (rowTop > 0) {\n                this[\"\" + initialRowTop] = this.parent.getRowByIndex(0).getBoundingClientRect().top - gridTop;\n            }\n            else {\n                this[\"\" + initialRowTop] = this.content.getBoundingClientRect().top -\n                    this.parent.getRowByIndex(0).getBoundingClientRect().height;\n            }\n        }\n        _super.prototype[\"\" + dataBoundEve].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.rowSelectedEvent = function (args) {\n        var rowSelected = 'rowSelected';\n        _super.prototype[\"\" + rowSelected].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.toSelectVirtualRow = function (args) {\n        if (this.parent.isEdit) {\n            return;\n        }\n        var selectVirtualRow = 'selectVirtualRow';\n        var containerRect = 'containerRect';\n        if (isNullOrUndefined(this.observer[\"\" + containerRect])) {\n            this.observer[\"\" + containerRect] = this.observers[\"\" + containerRect];\n        }\n        if (isNullOrUndefined(this.parent['clipboardModule'].treeGridParent.editModule) || args.selectedIndex !== 0 ||\n            isNullOrUndefined(this.parent['clipboardModule'].treeGridParent.editModule['addRowIndex'])) {\n            _super.prototype[\"\" + selectVirtualRow].call(this, args);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.refreshCell = function (rowObj) {\n        rowObj.cells = this.generateCells();\n    };\n    VirtualTreeContentRenderer.prototype.generateCells = function () {\n        var cells = [];\n        for (var i = 0; i < this.parent.columns.length; i++) {\n            cells.push(this.generateCell(this.parent.columns[parseInt(i.toString(), 10)]));\n        }\n        return cells;\n    };\n    VirtualTreeContentRenderer.prototype.generateCell = function (col, rowId, cellType, colSpan, oIndex, foreignKeyData) {\n        var opt = {\n            'visible': col.visible,\n            'isDataCell': !isNullOrUndefined(col.field || col.template),\n            'isTemplate': !isNullOrUndefined(col.template),\n            'rowID': rowId,\n            'column': col,\n            'cellType': !isNullOrUndefined(cellType) ? cellType : CellType.Data,\n            'colSpan': colSpan,\n            'commands': col.commands,\n            'isForeignKey': col.isForeignColumn && col.isForeignColumn(),\n            'foreignKeyData': col.isForeignColumn && col.isForeignColumn() && getValue(col.field, foreignKeyData)\n        };\n        if (opt.isDataCell || opt.column.type === 'checkbox' || opt.commands) {\n            opt.index = oIndex;\n        }\n        return new Cell(opt);\n    };\n    VirtualTreeContentRenderer.prototype.beginEdit = function (e) {\n        this['editedRowIndex'] = e.index;\n        var selector = '.e-row[data-rowindex=\"' + e.index + '\"]';\n        var index = this.parent.getContent().querySelector(selector).rowIndex;\n        var rowData = this.parent.getCurrentViewRecords()[parseInt(index.toString(), 10)];\n        e.data = rowData;\n    };\n    VirtualTreeContentRenderer.prototype.beginAdd = function (args) {\n        var addAction = 'addActionBegin';\n        var isAdd = 'isAdd';\n        var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, dataRowIndex: this.dataRowIndex };\n        this.parent.notify('get-row-position', addArgs);\n        this.rowPosition = addArgs.newRowPosition;\n        this.addRowIndex = addArgs.addRowIndex;\n        this.dataRowIndex = addArgs.dataRowIndex;\n        var rows = this.parent.getRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('data-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('data-rowindex') : 0;\n        var withInRange = this.parent.selectedRowIndex >= firstAriaIndex && this.parent.selectedRowIndex <= lastAriaIndex;\n        if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n            this[\"\" + isAdd] = true;\n        }\n        if (this.rowPosition === 'Top' || this.rowPosition === 'Bottom' ||\n            ((!this.addRowIndex || this.addRowIndex === -1) && (this.parent.selectedRowIndex === -1 || !withInRange))) {\n            _super.prototype[\"\" + addAction].call(this, args);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.restoreEditState = function () {\n        var restoreEdit = 'restoreEdit';\n        _super.prototype[\"\" + restoreEdit].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.resetIseditValue = function () {\n        var resetIsEdit = 'resetIsedit';\n        var isAdd = 'isAdd';\n        this.parent.notify('reset-edit-props', {});\n        if ((this.rowPosition === 'Top' || this.rowPosition === 'Bottom') && this[\"\" + isAdd]) {\n            _super.prototype[\"\" + resetIsEdit].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.virtualEditSuccess = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[\"\" + isAdd] && content.querySelector('.e-addedrow')) {\n            this.recordAdded = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.cancelEdit = function (args) {\n        var editCancel = 'editCancel';\n        _super.prototype[\"\" + editCancel].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.toSelectRowOnContextOpen = function (args) {\n        var selectRowOnContextOpen = 'selectRowOnContextOpen';\n        _super.prototype[\"\" + selectRowOnContextOpen].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.restoreNewRow = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[\"\" + isAdd] && !content.querySelector('.e-addedrow')) {\n            this.parent.isEdit = false;\n            this.parent.editModule.addRecord(null, this.parent.root.editModule.selectedIndex);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getData = function (data) {\n        var getVirtualData = 'getVirtualData';\n        _super.prototype[\"\" + getVirtualData].call(this, data);\n    };\n    VirtualTreeContentRenderer.prototype.onActionComplete = function (args) {\n        if (args.requestType === 'add') {\n            var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, dataRowIndex: this.dataRowIndex };\n            this.parent.notify('get-row-position', addArgs);\n            this.rowPosition = addArgs.newRowPosition;\n            this.addRowIndex = addArgs.addRowIndex;\n            this.dataRowIndex = this.parent.root.editModule.selectedIndex;\n        }\n        var actionComplete = 'actionComplete';\n        _super.prototype[\"\" + actionComplete].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.onEnteredAction = function () {\n        var _this = this;\n        return function (element, current, direction, e, isWheel, check) {\n            var directVirtualRender = 'directVirtualRender';\n            if (!_this.parent[\"\" + directVirtualRender]) { // with this property, columns are rendered without debouncing on horizontal scroll.\n                var preventEvent = 'preventEvent';\n                if (Browser.isIE && !isWheel && check && !_this[\"\" + preventEvent] && !_this.parent.enableVirtualMaskRow) {\n                    _this.parent.showSpinner();\n                }\n                if (_this.parent.enableVirtualMaskRow && !_this[\"\" + preventEvent]) {\n                    setTimeout(function () {\n                        _this.parent.showMaskRow(current.axis);\n                        _this.parent.notify('showGanttShimmer', { requestType: 'showShimmer' });\n                    }, 0);\n                }\n                var height = _this.content.getBoundingClientRect().height;\n                var top_1 = _this.prevInfo.offsets ? _this.prevInfo.offsets.top : null;\n                var xAxis = current.axis === 'X';\n                var x = _this.getColumnOffset(xAxis ? _this.vgenerator.getColumnIndexes()[0] - 1 : _this.prevInfo.columnIndexes[0]\n                    - 1);\n                if (xAxis) {\n                    var idx = Object.keys(_this.vgenerator.cOffsets).length - _this.prevInfo.columnIndexes.length;\n                    var maxLeft = _this.vgenerator.cOffsets[idx - 1];\n                    x = x > maxLeft ? maxLeft : x; //TODO: This fix horizontal scrollbar jumping issue in column virtualization.\n                }\n                var y = _this.getTranslateY(e.top, height, xAxis && top_1 === e.top ? _this.prevInfo : undefined, true);\n                if (!_this.parent.isFrozenGrid() || _this.parent.enableVirtualMaskRow) {\n                    if (_this.parent.enableVirtualMaskRow) {\n                        var upScroll = (e.top - _this.translateY) < 0;\n                        y = (Math.round(_this.translateY) > y && !upScroll) ? Math.round(_this.translateY) : y;\n                        _this.virtualEle.adjustTable(x, y);\n                    }\n                    else {\n                        _this.virtualEle.adjustTable(x, _this.translateY);\n                    }\n                    if (_this.parent.enableColumnVirtualization) {\n                        _this.header.virtualEle.adjustTable(x, 0);\n                    }\n                }\n            }\n        };\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        this['scrollAfterEdit']();\n        var info = scrollArgs.sentinel;\n        var rowHeight = this.parent.getRowHeight();\n        var outBuffer = this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 2);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * rowHeight;\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = Math.ceil(scrollArgs.offset.top - this.translateY) + rowHeight >= scrollHeight;\n        var selectedRowIndex = 'selectedRowIndex';\n        var currentViewData = this.parent.currentViewData;\n        var indexValue = 'index';\n        if (upScroll && (scrollArgs.direction !== 'right' && scrollArgs.direction !== 'left')) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? parseInt(this.parent.height.toString(), 10) :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / rowHeight)\n                + Math.ceil(vHeight / rowHeight))\n                - this.parent.pageSettings.pageSize;\n            index = (index > 0) ? index : 0;\n            if (!isNullOrUndefined(this[\"\" + selectedRowIndex]) && this[\"\" + selectedRowIndex] !== -1 && index !== this[\"\" + selectedRowIndex]) {\n                index = this[\"\" + selectedRowIndex];\n            }\n            this.startIndex = index;\n            this.endIndex = index + this.parent.pageSettings.pageSize;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = (this.startIndex - remains) < 0 ? 0 : (this.startIndex - remains);\n            }\n            if (currentViewData.length && (currentViewData[0][\"\" + indexValue] >= this.parent.pageSettings.pageSize / 2) &&\n                ((currentViewData[0][\"\" + indexValue] - this.startIndex) < (this.parent.pageSettings.pageSize / 2)) && this.parent.selectionModule.isRowSelected) {\n                this.startIndex = currentViewData[0][\"\" + indexValue] - (this.parent.pageSettings.pageSize / 2);\n                this.endIndex = this.startIndex + this.parent.pageSettings.pageSize;\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / rowHeight);\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[parseInt(rowPt.toString(), 10)]) &&\n                !isNullOrUndefined(this.parent.getContent().querySelectorAll('.e-content tr')[parseInt(rowPt.toString(), 10)])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[parseInt(rowPt.toString(), 10)]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('data-rowindex');\n            }\n            if (firsttdinx === 0) {\n                scrollArgs.offset.top = content.scrollTop;\n                if (this.parent.allowRowDragAndDrop) {\n                    this.translateY = scrollArgs.offset.top - rowHeight * 2;\n                }\n                else {\n                    this.translateY = scrollArgs.offset.top;\n                }\n            }\n            else {\n                this.translateY = (scrollArgs.offset.top - (outBuffer * rowHeight) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * rowHeight) + 10 : 0;\n            }\n        }\n        else if (downScroll && (scrollArgs.direction !== 'right' && scrollArgs.direction !== 'left')) {\n            var nextSetResIndex = ~~(content.scrollTop / rowHeight);\n            var isLastBlock = (this[\"\" + selectedRowIndex] + this.parent.pageSettings.pageSize) < this.totalRecords ? false : true;\n            if (!isNullOrUndefined(this[\"\" + selectedRowIndex]) && this[\"\" + selectedRowIndex] !== -1 &&\n                nextSetResIndex !== this[\"\" + selectedRowIndex] && !isLastBlock) {\n                nextSetResIndex = this[\"\" + selectedRowIndex];\n            }\n            var lastIndex = nextSetResIndex + this.parent.pageSettings.pageSize;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = !isLastBlock || isNullOrUndefined(this['' + selectedRowIndex]) ? lastIndex - this.parent.pageSettings.pageSize : nextSetResIndex;\n            this.endIndex = lastIndex;\n            if ((nextSetResIndex + this.parent.pageSettings.pageSize) > this.totalRecords && (this.endIndex - this.startIndex) <\n                (this.parent.pageSettings.pageSize / 2) && (this.endIndex - nextSetResIndex) < (this.parent.pageSettings.pageSize / 2)) {\n                this.startIndex = lastIndex - (this.parent.pageSettings.pageSize / 2);\n            }\n            if (currentViewData.length && this.startIndex > currentViewData[0][\"\" + indexValue] &&\n                ((this.startIndex - currentViewData[0][\"\" + indexValue]) < (this.parent.pageSettings.pageSize / 2)) && this.parent.selectionModule.isRowSelected) {\n                this.startIndex = currentViewData[0][\"\" + indexValue] + (this.parent.pageSettings.pageSize / 2);\n            }\n            if (scrollArgs.offset.top > (rowHeight * this.totalRecords)) {\n                this.translateY = this.getTranslateY(scrollArgs.offset.top, content.getBoundingClientRect().height);\n            }\n            else {\n                if (this.totalRecords === this.endIndex) {\n                    this.translateY = (this.totalRecords * rowHeight) - ((this.endIndex - this.startIndex) * rowHeight);\n                }\n                else {\n                    if (this.parent.allowRowDragAndDrop) {\n                        this.translateY = scrollArgs.offset.top - rowHeight * 2;\n                    }\n                    else {\n                        this.translateY = scrollArgs.offset.top;\n                    }\n                }\n            }\n        }\n        if (((downScroll && (scrollArgs.offset.top < (rowHeight * this.totalRecords)))\n            || (upScroll)) || (scrollArgs.direction === 'right' || scrollArgs.direction === 'left') ||\n            ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n                && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') && (downScroll || upScroll) || isCountRequired(this.parent))) {\n            var viewInfo = this.currentInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.previousInfo = viewInfo;\n            this.parent.setColumnIndexesInView(this.parent.enableColumnVirtualization ? viewInfo.columnIndexes : []);\n            var page = viewInfo.loadNext && !viewInfo.loadSelf ? viewInfo.nextInfo.page : viewInfo.page;\n            this.parent.setProperties({ pageSettings: { currentPage: page } }, true);\n            this.requestType = 'virtualscroll';\n            if (scrollArgs.direction !== 'right' && scrollArgs.direction !== 'left') {\n                viewInfo.event = viewInfo.event === 'refresh-virtual-block' ? 'model-changed' : viewInfo.event;\n            }\n            if (this.parent.enableVirtualMaskRow) {\n                this.parent.showMaskRow(info.axis);\n                this.parent.addShimmerEffect();\n                this.parent.notify('showGanttShimmer', { requestType: 'showShimmer' });\n            }\n            this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', virtualInfo: viewInfo, focusElement: scrollArgs.focusElement });\n        }\n        else {\n            if (this.parent.enableVirtualMaskRow) {\n                this.parent.removeMaskRow();\n                this.parent.notify('removeGanttShimmer', { requestType: 'hideShimmer' });\n            }\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        var isFrozen = this.parent.isFrozenGrid();\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent) || this.parent.isFrozenGrid()) {\n            if (getValue('isExpandCollapse', e)) {\n                this.isRemoteExpand = true;\n            }\n            if (isFrozen && ((isNullOrUndefined(this.requestType) && getValue('requestTypes', this).indexOf('isFrozen') === -1) ||\n                (this.parent.enableVirtualMaskRow && this.requestType === 'virtualscroll'))) {\n                getValue('requestTypes', this).push('isFrozen');\n                this.requestType = 'isFrozen';\n            }\n            _super.prototype.appendContent.call(this, target, newChild, e);\n            if (getValue('requestTypes', this).indexOf('isFrozen') !== -1) {\n                getValue('requestTypes', this).splice(getValue('requestTypes', this).indexOf('isFrozen'), 1);\n                this.requestType = this.requestType === 'isFrozen' ? undefined : this.requestType;\n            }\n            if (isFrozen && (!this.isExpandCollapse || this.translateY === 0)) {\n                this.translateY = this.translateY < 0 ? 0 : this.translateY;\n                getValue('virtualEle', this).adjustTable(0, this.translateY);\n            }\n            else {\n                this.isExpandCollapse = false;\n            }\n        }\n        else {\n            var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' &&\n                getValue('currentInfo', this).page && getValue('currentInfo', this).page !== e.virtualInfo.page ?\n                getValue('currentInfo', this) : e.virtualInfo;\n            var cBlock = (info.columnIndexes[0]) - 1;\n            var cOffset = this.getColumnOffset(cBlock);\n            var width = void 0;\n            if (this.parent.enableColumnVirtualization) {\n                this.header.virtualEle.adjustTable(cOffset, 0);\n                var cIndex = info.columnIndexes;\n                width = this.getColumnOffset(cIndex[cIndex.length - 1]) - this.getColumnOffset(cIndex[0] - 1) + '';\n                this.header.virtualEle.setWrapperWidth(width);\n            }\n            this.virtualEle.setWrapperWidth(width, (Browser.isIE || Browser.info.name === 'edge'));\n            target = this.parent.createElement('tbody');\n            target.appendChild(newChild);\n            var replace = 'replaceWith';\n            this.getTable().querySelector('tbody')[\"\" + replace](target);\n            if (!this.isExpandCollapse || this.translateY === 0) {\n                this.translateY = this.translateY < 0 ? 0 : this.translateY;\n                getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n            }\n            else {\n                this.isExpandCollapse = false;\n            }\n            setValue('prevInfo', this.previousInfo ? this.previousInfo : info, this);\n            if (e.requestType === 'virtualscroll' && e.virtualInfo.sentinelInfo.axis === 'X') {\n                this.parent.notify(events.autoCol, {});\n            }\n            var focusCell = 'focusCell';\n            var restoreAdd = 'restoreAdd';\n            var ensureSelectedRowPosition = 'ensureSelectedRowPosition';\n            _super.prototype[\"\" + focusCell].call(this, e);\n            var isAdd = 'isAdd';\n            if (this[\"\" + isAdd] && !this.parent.getContent().querySelector('.e-content').querySelector('.e-addedrow')) {\n                if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n                    if (this.dataRowIndex >= this.startIndex) {\n                        this.restoreNewRow();\n                    }\n                    else if (this.addRowIndex && this.addRowIndex > -1) {\n                        this[\"\" + isAdd] = false;\n                        this.parent.isEdit = false;\n                    }\n                }\n            }\n            this.restoreEditState();\n            _super.prototype[\"\" + restoreAdd].call(this);\n            _super.prototype[\"\" + ensureSelectedRowPosition].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('data-ready', this.onDataReady);\n        this.parent.off('content-ready', this.fn);\n        this.parent.off('select-virtual-Row', this.toSelectVirtualRow);\n        this.parent.off('dataBound', this.dataBoundEvent);\n        this.parent.off('rowSelected', this.rowSelectedEvent);\n        this.parent.off(events.virtualActionArgs, this.virtualOtherAction);\n        this.parent.off(events.indexModifier, this.indexModifier);\n        this.parent.off('virtual-scroll-edit-action-begin', this.beginEdit);\n        this.parent.off('virtual-scroll-add-action-begin', this.beginAdd);\n        this.parent.off('virtual-scroll-edit-success', this.virtualEditSuccess);\n        this.parent.off('edit-reset', this.resetIseditValue);\n        this.parent.off('get-virtual-data', this.getData);\n        this.parent.off('virtual-scroll-edit-cancel', this.cancelEdit);\n        this.parent.off('select-row-on-context-open', this.toSelectRowOnContextOpen);\n        this.parent.off('refresh-virtual-editform-cells', this.refreshCell);\n        this.parent.off('virtaul-cell-focus', this.cellFocus);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback, onEnterCallback, instance) {\n        var containerRect = 'containerRect';\n        _super.prototype[\"\" + containerRect] = getValue('options', this).container.getBoundingClientRect();\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback, onEnterCallback, instance), this);\n        if (getValue('options', this).movableContainer) {\n            var movableContainerRect = 'movableContainerRect';\n            _super.prototype[\"\" + movableContainerRect] = getValue('options', this).movableContainer.getBoundingClientRect();\n            EventHandler.add(getValue('options', this).movableContainer, 'scroll', this.virtualScrollHandlers(callback, onEnterCallback, instance), this);\n        }\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback, onEnterCallback, instance) {\n        var _this = this;\n        var delay = Browser.info.name === 'chrome' ? 200 : 100;\n        var options = 'options';\n        var movableEle = 'movableEle';\n        var element = 'element';\n        var fromWheel = 'fromWheel';\n        var debounced100 = debounce(callback, delay);\n        var debounced50 = debounce(callback, 50);\n        this[\"\" + options].prevTop = this[\"\" + options].prevLeft = 0;\n        return function (e) {\n            var top = _this[\"\" + options].movableContainer ? _this[\"\" + options].container.scrollTop : e.target.scrollTop;\n            var left = _this[\"\" + options].movableContainer ? _this[\"\" + options].scrollbar.scrollLeft : e.target.scrollLeft;\n            var direction = _this[\"\" + options].prevTop < top ? 'down' : 'up';\n            direction = _this[\"\" + options].prevLeft === left ? direction : _this[\"\" + options].prevLeft < left ? 'right' : 'left';\n            _this[\"\" + options].prevTop = top;\n            _this[\"\" + options].prevLeft = left;\n            var current = _this.sentinelInfo[\"\" + direction];\n            var delta = 0;\n            _this.newPos = top;\n            if (_this.lastPos != null) { // && newPos < maxScroll\n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            if (_this[\"\" + options].axes.indexOf(current.axis) === -1) {\n                return;\n            }\n            var containerRect = 'containerRect';\n            _this[\"\" + containerRect] = _this[\"\" + options].container.getBoundingClientRect();\n            var check = _this.check(direction);\n            if (current.entered && (current.axis === 'X' || instance.enableVirtualMaskRow)) {\n                if (_this[\"\" + movableEle] && (direction === 'right' || direction === 'left')) {\n                    onEnterCallback(_this[\"\" + movableEle], current, direction, { top: top, left: left }, _this[\"\" + fromWheel], check);\n                }\n                else {\n                    onEnterCallback(_this[\"\" + element], current, direction, { top: top, left: left }, _this[\"\" + fromWheel], check);\n                }\n            }\n            if (check) {\n                var fn = debounced50;\n                if (current.axis === 'X') {\n                    fn({ direction: direction, sentinel: current, offset: { top: top, left: left },\n                        focusElement: document.activeElement });\n                }\n                else {\n                    if ((instance.dataSource instanceof DataManager && instance.dataSource.dataSource.url !== undefined\n                        && !instance.dataSource.dataSource.offline && instance.dataSource.dataSource.url !== '') || isCountRequired(instance)\n                        || instance.enableVirtualMaskRow) {\n                        fn = instance.enableVirtualMaskRow ? debounced100 : fn;\n                        fn({ direction: direction, sentinel: current, offset: { top: top, left: left },\n                            focusElement: document.activeElement });\n                    }\n                    else {\n                        callback({ direction: direction, sentinel: current, offset: { top: top, left: left },\n                            focusElement: document.activeElement });\n                    }\n                }\n            }\n            _this[\"\" + fromWheel] = false;\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\nimport { VirtualHeaderRenderer, getTransformValues } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n *\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns VirtualScroll module name\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n        this.parent.on(events.destroy, this.destroy, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n        this.parent.off(events.destroy, this.destroy);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        if (this.parent.enableVirtualization && this.parent.selectionSettings.mode === 'Cell' ||\n            this.parent.selectionSettings.mode === 'Row' && !this.parent.selectionSettings.persistSelection) {\n            this.parent.grid.clearSelection();\n        }\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        pageingDetails.count = visualData.length;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1, count: pageingDetails.count, requestType: pageingDetails.actionArgs.requestType };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering' || requestType === 'collapseAll' || requestType === 'searching' ||\n                (requestType === 'refresh' && this.parent.enableCollapseAll && endIndex > visualData.length)) {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.getContent().firstElementChild.scrollTop = 0;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            if ((requestType === 'save' && (pageingDetails.actionArgs.index >= (counts.count - this.parent.grid.pageSettings.pageSize)) || (requestType === 'refresh' && this.parent['isGantt'] && this.parent['isAddedFromGantt']) && (counts.count === this.prevendIndex + 1))) {\n                startIndex = counts.startIndex + (counts.count - counts.endIndex);\n                endIndex = counts.count;\n                this.parent['isAddedFromGantt'] = false;\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) &&\n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            var virtualWrapperElement = this.parent.grid.contentModule.virtualEle.wrapper;\n            var translateY = getTransformValues(virtualWrapperElement).height;\n            if (!isNullOrUndefined(this.expandCollapseRec) && (pageingDetails.actionArgs.requestType === 'virtualscroll' ||\n                (pageingDetails.actionArgs.requestType === 'refresh' && startIndex !== this.prevstartIndex)) &&\n                (startIndex < this.parent.getRows().length && endIndex <= startIndex + this.parent.getRows().length) && translateY === 0) {\n                startIndex = 0;\n            }\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length && sIndex >= 0 && startIndex !== 0) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                else if (getValue('isCollapseAll', this.parent)) {\n                    startIndex = 0;\n                    endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                    this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n                }\n            }\n            //}\n            if ((this.parent.enableCollapseAll || this.parent.expandStateMapping) && !isNullOrUndefined(this.expandCollapseRec)) {\n                if (pageingDetails.count < this.parent.getRows()[0].getBoundingClientRect().height) {\n                    startIndex = 0;\n                }\n                else if (!this.parent['isExpandAll']) {\n                    startIndex = this.prevstartIndex === -1 ? 0 : this.prevstartIndex;\n                }\n            }\n            this.expandCollapseRec = null;\n            startIndex = startIndex < 0 ? 0 : startIndex;\n            pageingDetails.result = visualData.slice(startIndex, endIndex);\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.getModuleName = function () {\n        return 'treeVirtualScroll';\n    };\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        var parentGrid = getValue('parent', this);\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        if (!parentGrid.isFrozenGrid()) {\n            if (parentGrid.enableColumnVirtualization) {\n                getValue('addRenderer', renderer)\n                    .apply(renderer, [RenderType.Header, new VirtualHeaderRenderer(getValue('parent', this), getValue('locator', this))]);\n            }\n            getValue('addRenderer', renderer)\n                .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        }\n        //renderer.addRenderer(RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this)));\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        if (!isNullOrUndefined(parentGrid.height) && typeof (parentGrid.height) === 'string' && parentGrid.height.indexOf('%') !== -1) {\n            parentGrid.element.style.height = parentGrid.height;\n        }\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parseInt(parentGrid.height.toString(), 10) :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        var height = blockSize * 2;\n        var size = parentGrid.pageSettings.pageSize;\n        parentGrid.setProperties({ pageSettings: { pageSize: size < height ? height : size } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { ColumnFreezeContentRenderer, FreezeContentRender, FreezeRowModelGenerator, RenderType } from '@syncfusion/ej2-grids';\nimport * as literals from '../base/constant';\nimport { ColumnVirtualFreezeRenderer, setDebounce, VirtualFreezeHdrRenderer, VirtualFreezeRenderer } from '@syncfusion/ej2-grids';\nimport { TreeInterSectionObserver, VirtualTreeContentRenderer } from './virtual-tree-content-render';\nimport { getValue } from '@syncfusion/ej2-base';\n/**\n * VirtualTreeFreezeRenderer is used to render the virtual table within the frozen and movable content table\n *\n * @hidden\n */\nvar VirtualTreeFreezeRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeFreezeRenderer, _super);\n    function VirtualTreeFreezeRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    VirtualTreeFreezeRenderer.prototype.renderTable = function () {\n        this.freezeRowGenerator = new FreezeRowModelGenerator(this.parent);\n        this.virtualRenderer = new VirtualTreeContentRenderer(this.parent, this.serviceLoc);\n        this.virtualRenderer.header = this.serviceLoc.getService('rendererFactory')\n            .getRenderer(RenderType.Header).virtualHdrRenderer;\n        FreezeContentRender.prototype.renderTable.call(this);\n        this.virtualRenderer.setPanel(this.parent.getContent());\n        this.scrollbar = this.parent.getContent().querySelector('.e-movablescrollbar');\n        var movableCont = this.getMovableContent();\n        var minHeight = this.parent.height;\n        this.virtualRenderer.virtualEle.content = this.virtualRenderer.content = this.getPanel().querySelector('.' + literals.content);\n        this.virtualRenderer.virtualEle.content.style.overflowX = 'hidden';\n        this.virtualRenderer.virtualEle.renderFrozenWrapper(minHeight);\n        this.virtualRenderer.virtualEle.renderFrozenPlaceHolder();\n        if (this.parent.enableColumnVirtualization) {\n            this.virtualRenderer.virtualEle.movableContent = this.virtualRenderer.movableContent\n                = this.getPanel().querySelector('.' + literals.movableContent);\n            this.virtualRenderer.virtualEle.renderMovableWrapper(minHeight);\n            this.virtualRenderer.virtualEle.renderMovablePlaceHolder();\n            var tbl = movableCont.querySelector('table');\n            this.virtualRenderer.virtualEle.movableTable = tbl;\n            this.virtualRenderer.virtualEle.movableWrapper.appendChild(tbl);\n            movableCont.appendChild(this.virtualRenderer.virtualEle.movableWrapper);\n            movableCont.appendChild(this.virtualRenderer.virtualEle.movablePlaceholder);\n        }\n        this.virtualRenderer.virtualEle.wrapper.appendChild(this.getFrozenContent());\n        this.virtualRenderer.virtualEle.wrapper.appendChild(movableCont);\n        this.virtualRenderer.virtualEle.table = this.getTable();\n        setDebounce(this.parent, this.virtualRenderer, this.scrollbar, this.getMovableContent());\n    };\n    /**\n     * @param {HTMLElement} target - specifies the target\n     * @param {DocumentFragment} newChild - specifies the newChild\n     * @param {NotifyArgs} e - specifies the notifyargs\n     * @returns {void}\n     * @hidden\n     */\n    VirtualTreeFreezeRenderer.prototype.appendContent = function (target, newChild, e) {\n        getValue('observer', this.virtualRenderer).options.debounceEvent = false;\n        this.virtualRenderer['observers'] = new TreeInterSectionObserver(getValue('observer', this.virtualRenderer).element, getValue('observer', this.virtualRenderer).options, getValue('observer', this.virtualRenderer).movableEle);\n        this.virtualRenderer['contents'] = this.getPanel().firstChild;\n        _super.prototype.appendContent.call(this, target, newChild, e);\n    };\n    /**\n     * @param {Object[]} data - specifies the data\n     * @param {NotifyArgs} e - specifies the notifyargs\n     * @returns {Row<Column>[]} returns the row\n     * @hidden\n     */\n    VirtualTreeFreezeRenderer.prototype.generateRows = function (data, e) {\n        return _super.prototype.generateRows.call(this, data, e);\n    };\n    return VirtualTreeFreezeRenderer;\n}(VirtualFreezeRenderer));\nexport { VirtualTreeFreezeRenderer };\n/**\n * ColumnVirtualTreeFreezeRenderer is used to render the virtual table within the frozen and movable content table\n *\n * @hidden\n */\nvar ColumnVirtualTreeFreezeRenderer = /** @class */ (function (_super) {\n    __extends(ColumnVirtualTreeFreezeRenderer, _super);\n    function ColumnVirtualTreeFreezeRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.serviceLoc = locator;\n        _this.eventListener('on');\n        return _this;\n    }\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    ColumnVirtualTreeFreezeRenderer.prototype.renderTable = function () {\n        this.virtualRenderer = new VirtualTreeContentRenderer(this.parent, this.serviceLoc);\n        this.virtualRenderer.header = this.serviceLoc.getService('rendererFactory')\n            .getRenderer(RenderType.Header).virtualHdrRenderer;\n        this.freezeRowGenerator = new FreezeRowModelGenerator(this.parent);\n        ColumnFreezeContentRenderer.prototype.renderTable.call(this);\n        this.virtualRenderer.setPanel(this.parent.getContent());\n        this.scrollbar = this.parent.getContent().querySelector('.e-movablescrollbar');\n        var frozenRightCont = this.getFrozenRightContent();\n        var frzCont = this.getFrozenContent();\n        var movableCont = this.getMovableContent();\n        if (this.parent.getFrozenMode() === 'Right') {\n            frzCont = frozenRightCont;\n        }\n        this.virtualRenderer.virtualEle.content = this.virtualRenderer.content = this.getPanel().querySelector('.' + literals.content);\n        this.virtualRenderer.virtualEle.content.style.overflowX = 'hidden';\n        var minHeight = this.parent.height;\n        this.virtualRenderer.virtualEle.renderFrozenWrapper(minHeight);\n        this.virtualRenderer.virtualEle.renderFrozenPlaceHolder();\n        _super.prototype['renderVirtualFrozenLeft'].call(this, frzCont, movableCont);\n        _super.prototype['renderVirtualFrozenRight'].call(this, frzCont, movableCont);\n        _super.prototype['renderVirtualFrozenLeftRight'].call(this, frzCont, movableCont, frozenRightCont);\n        this.virtualRenderer.virtualEle.table = this.getTable();\n        setDebounce(this.parent, this.virtualRenderer, this.scrollbar, this.getMovableContent());\n    };\n    ColumnVirtualTreeFreezeRenderer.prototype.appendContent = function (target, newChild, e) {\n        getValue('observer', this.virtualRenderer).options.debounceEvent = false;\n        this.virtualRenderer['observers'] = new TreeInterSectionObserver(getValue('observer', this.virtualRenderer).element, getValue('observer', this.virtualRenderer).options, getValue('observer', this.virtualRenderer).movableEle);\n        this.virtualRenderer['contents'] = this.getPanel().firstChild;\n        _super.prototype.appendContent.call(this, target, newChild, e);\n    };\n    return ColumnVirtualTreeFreezeRenderer;\n}(ColumnVirtualFreezeRenderer));\nexport { ColumnVirtualTreeFreezeRenderer };\n/**\n * VirtualTreeFreezeHdrRenderer is used to render the virtual table within the frozen and movable header table\n *\n * @hidden\n */\nvar VirtualTreeFreezeHdrRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeFreezeHdrRenderer, _super);\n    function VirtualTreeFreezeHdrRenderer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    VirtualTreeFreezeHdrRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n    };\n    VirtualTreeFreezeHdrRenderer.prototype.rfshMovable = function () {\n        _super.prototype.rfshMovable.call(this);\n    };\n    return VirtualTreeFreezeHdrRenderer;\n}(VirtualFreezeHdrRenderer));\nexport { VirtualTreeFreezeHdrRenderer };\n","import { ColumnFreezeContentRenderer, ColumnFreezeHeaderRenderer, FreezeRender, parentsUntil, RenderType } from '@syncfusion/ej2-grids';\nimport { Grid, Freeze as FreezeColumn } from '@syncfusion/ej2-grids';\nimport { addClass, getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { ColumnVirtualTreeFreezeRenderer, VirtualTreeFreezeRenderer, VirtualTreeFreezeHdrRenderer } from '../renderer/virtual-tree-freeze-render';\n/**\n * TreeGrid Freeze module\n *\n * @hidden\n */\nvar Freeze = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Freeze(parent) {\n        Grid.Inject(FreezeColumn);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    Freeze.prototype.addEventListener = function () {\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.grid.on('dblclick', this.dblClickHandler, this);\n        this.parent.grid.on('initial-load', this.instantiateRenderer, this);\n    };\n    Freeze.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.grid.off('dblclick', this.dblClickHandler);\n        this.parent.grid.off('initial-load', this.instantiateRenderer);\n    };\n    Freeze.prototype.instantiateRenderer = function () {\n        var renderer = getValue('serviceLocator', this.parent.grid).getService('rendererFactory');\n        if (this.parent.getFrozenColumns()) {\n            if (this.parent.enableColumnVirtualization) {\n                getValue('addRenderer', renderer)\n                    .apply(renderer, [RenderType.Header, new VirtualTreeFreezeHdrRenderer(getValue('grid', this.parent), getValue('serviceLocator', this.parent.grid))]);\n            }\n            else {\n                getValue('addRenderer', renderer)\n                    .apply(renderer, [RenderType.Header, new FreezeRender(getValue('grid', this.parent), getValue('serviceLocator', this.parent.grid))]);\n            }\n            if (this.parent.enableVirtualization) {\n                getValue('addRenderer', renderer)\n                    .apply(renderer, [RenderType.Content, new VirtualTreeFreezeRenderer(getValue('grid', this.parent), getValue('serviceLocator', this.parent.grid))]);\n            }\n        }\n        if (this.parent.getFrozenLeftColumnsCount() || this.parent.getFrozenRightColumnsCount()) {\n            getValue('addRenderer', renderer)\n                .apply(renderer, [RenderType.Header, new ColumnFreezeHeaderRenderer(getValue('grid', this.parent), getValue('serviceLocator', this.parent.grid))]);\n            if (this.parent.enableVirtualization) {\n                getValue('addRenderer', renderer)\n                    .apply(renderer, [RenderType.Content, new ColumnVirtualTreeFreezeRenderer(getValue('grid', this.parent), getValue('serviceLocator', this.parent.grid))]);\n            }\n            else {\n                getValue('addRenderer', renderer)\n                    .apply(renderer, [RenderType.Content, new ColumnFreezeContentRenderer(getValue('grid', this.parent), getValue('serviceLocator', this.parent.grid))]);\n            }\n        }\n    };\n    Freeze.prototype.rowExpandCollapse = function (args) {\n        var movableRows = this.parent.getMovableDataRows();\n        var frozenrows = this.parent.getRows();\n        var rows;\n        var frozenRightRows;\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n            this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            frozenRightRows = this.parent.getFrozenRightRows().filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        if (!args.detailrows.length) {\n            rows = movableRows.filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        else {\n            rows = args.detailrows;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            var row = rows[parseInt(i.toString(), 10)];\n            var rData = this.parent.grid.getRowObjectFromUID(row.getAttribute('data-Uid')).data;\n            if (!isNullOrUndefined(movableRows) && row.parentElement.firstElementChild.clientHeight > 0) {\n                row.style.height = row.parentElement.firstElementChild.clientHeight + 'px';\n            }\n            row.style.display = args.action;\n            if (freeze && frozenRightRows.length) {\n                frozenRightRows[parseInt(i.toString(), 10)].style.display = args.action;\n            }\n            var queryselector = args.action === 'none' ? '.e-treecolumn-container .e-treegridcollapse'\n                : '.e-treecolumn-container .e-treegridexpand';\n            if (frozenrows[row.rowIndex].querySelector(queryselector)) {\n                var cRow = [];\n                for (var i_1 = 0; i_1 < movableRows.length; i_1++) {\n                    if (movableRows[parseInt(i_1.toString(), 10)].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(movableRows[parseInt(i_1.toString(), 10)]);\n                    }\n                }\n                if (cRow.length) {\n                    var data = this.parent.getCurrentViewRecords()[cRow[0].rowIndex];\n                    this.rowExpandCollapse({ detailrows: cRow, action: args.action, record: data });\n                }\n            }\n        }\n    };\n    Freeze.prototype.dblClickHandler = function (e) {\n        if (parentsUntil(e.target, 'e-rowcell') &&\n            this.parent.grid.editSettings.allowEditOnDblClick && this.parent.editSettings.mode !== 'Cell' && (!e.target['classList'].contains('e-treegridcollapse') && !e.target['classList'].contains('e-treegridexpand'))) {\n            this.parent.grid.editModule.startEdit(parentsUntil(e.target, 'e-row'));\n        }\n    };\n    Freeze.prototype.dataBoundArg = function () {\n        var checkboxColumn = this.parent.getColumns().filter(function (e) {\n            return e.showCheckbox;\n        });\n        if (checkboxColumn.length && this.parent.freezeModule && this.parent.initialRender) {\n            addClass([this.parent.element.getElementsByClassName('e-grid')[0]], 'e-checkselection');\n        }\n    };\n    Freeze.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Freeze module name\n     */\n    Freeze.prototype.getModuleName = function () {\n        return 'freeze';\n    };\n    return Freeze;\n}());\nexport { Freeze };\n","import { Grid, ColumnChooser as GridColumnChooser } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnChooser module\n *\n * @hidden\n */\nvar ColumnChooser = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance.\n     */\n    function ColumnChooser(parent) {\n        Grid.Inject(GridColumnChooser);\n        this.parent = parent;\n    }\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     *\n     * @param  {number} X - Defines the X axis.\n     * @param  {number} Y - Defines the Y axis.\n     * @returns {void}\n     */\n    ColumnChooser.prototype.openColumnChooser = function (X, Y) {\n        return this.parent.grid.columnChooserModule.openColumnChooser(X, Y);\n    };\n    /**\n     * Destroys the openColumnChooser.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    ColumnChooser.prototype.destroy = function () {\n        //this.parent.grid.ColumnChooserModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ColumnChooser module name\n     */\n    ColumnChooser.prototype.getModuleName = function () {\n        return 'ColumnChooser';\n    };\n    return ColumnChooser;\n}());\nexport { ColumnChooser };\n","import { Grid, InfiniteScroll as GridInfiniteScroll } from '@syncfusion/ej2-grids';\nimport { RowRenderer, resetRowIndex } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined, remove } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getExpandStatus } from '../utils';\n/**\n * TreeGrid Infinite Scroll module will handle Infinite Scrolling.\n *\n * @hidden\n */\nvar InfiniteScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function InfiniteScroll(parent) {\n        this.parent = parent;\n        Grid.Inject(GridInfiniteScroll);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Logger module name\n     */\n    InfiniteScroll.prototype.getModuleName = function () {\n        return 'infiniteScroll';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.addEventListener = function () {\n        this.parent.on(events.pagingActions, this.infinitePageAction, this);\n        this.parent.on('infinite-remote-expand', this.infiniteRemoteExpand, this);\n        this.parent.grid.on('delete-complete', this.infiniteDeleteHandler, this);\n        this.parent.grid.on('infinite-edit-handler', this.infiniteEditHandler, this);\n        this.parent.grid.on('infinite-crud-cancel', this.createRows, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandInfinitechilds, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('infinite-remote-expand', this.infiniteRemoteExpand);\n        this.parent.grid.off('delete-complete', this.infiniteDeleteHandler);\n        this.parent.grid.off('infinite-edit-handler', this.infiniteEditHandler);\n        this.parent.off(events.pagingActions, this.infinitePageAction);\n        this.parent.grid.off('infinite-crud-cancel', this.createRows);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandInfinitechilds);\n    };\n    /**\n     * Handles the Expand Collapse action for Remote data with infinite scrolling.\n     *\n     * @param {{ index: number, childData: ITreeData[] }} args - expanded row index and its child data\n     * @param { number } args.index - expanded row index\n     * @param { ITreeData[] } args.childData - child data of expanded row\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteRemoteExpand = function (args) {\n        var rowObjects = this.parent.grid.getRowsObject();\n        var locator = 'serviceLocator';\n        var generateRows = 'generateRows';\n        var serviceLocator = this.parent.grid.infiniteScrollModule[\"\" + locator];\n        var rowRenderer = new RowRenderer(serviceLocator, null, this.parent.grid);\n        var rows = this.parent.getRows();\n        var position = args.index === rows.length - 1 ? 'after' : 'before';\n        var cols = this.parent.grid.getColumns();\n        var childRowObjects = this.parent.grid.infiniteScrollModule[\"\" + generateRows](args.childData, args);\n        var childRowElements = [];\n        for (var i = 0; i < childRowObjects.length; i++) {\n            childRowElements.push(rowRenderer.render(childRowObjects[parseInt(i.toString(), 10)], cols));\n        }\n        rowObjects.splice.apply(rowObjects, [args.index + 1, 0].concat(childRowObjects));\n        for (var i = 0; i < childRowElements.length; i++) {\n            if (position === 'after') {\n                rows[args.index + i][\"\" + position](childRowElements[parseInt(i.toString(), 10)]);\n            }\n            else {\n                rows[args.index + i + 1][\"\" + position](childRowElements[parseInt(i.toString(), 10)]);\n            }\n            rows.splice(args.index + 1 + i, 0, childRowElements[parseInt(i.toString(), 10)]);\n        }\n        resetRowIndex(this.parent.grid, this.parent.grid.getRowsObject(), this.parent.grid.getRows(), 0);\n    };\n    /**\n     * Resetted the row index for expand collapse action for cache support.\n     *\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.contentready = function () {\n        if (this.parent.infiniteScrollSettings.enableCache && !isNullOrUndefined(this.parent.editModule)) {\n            var updateIndex = 'updateIndex';\n            this.parent.editModule[\"\" + updateIndex](this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.getFrozenColumns()) {\n                this.parent.editModule[\"\" + updateIndex](this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    InfiniteScroll.prototype.collapseExpandInfinitechilds = function (row) {\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    /**\n     * Handles the page query for Data operations and CRUD actions.\n     *\n     * @param {{ result: ITreeData[], count: number, actionArgs: object }} pageingDetails - data, its count and action details\n     * @param {ITreeData[]} pageingDetails.result - data on scroll action\n     * @param {number} pageingDetails.count - data count on scroll action\n     * @param {Object} pageingDetails.actionArgs - scroll action details\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infinitePageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var infiniteParents = dm.executeLocal(new Query().where(expanded));\n        var visualData = infiniteParents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, infiniteParents);\n        });\n        var actionArgs = getValue('actionArgs', pageingDetails.actionArgs);\n        var actions = getValue('actions', this.parent.grid.infiniteScrollModule);\n        if (this.parent.grid.infiniteScrollModule['isInitialRender'] && !this.parent.initialRender) {\n            this.parent.grid.pageSettings.currentPage = 1;\n        }\n        var initial = actions.some(function (value) { return value === actionArgs.requestType; });\n        var initialRender = initial ? true : this.parent.initialRender ? true : false;\n        this.visualData = visualData;\n        pageingDetails.count = visualData.length;\n        if (getValue('isPrinting', pageingDetails.actionArgs)) {\n            pageingDetails.result = visualData;\n        }\n        else {\n            var query = new Query();\n            var isCache = this.parent.infiniteScrollSettings.enableCache;\n            if (isCache && this.parent.infiniteScrollSettings.initialBlocks > this.parent.infiniteScrollSettings.maxBlocks) {\n                this.parent.infiniteScrollSettings.initialBlocks = this.parent.infiniteScrollSettings.maxBlocks;\n            }\n            var size = initialRender ?\n                this.parent.grid.pageSettings.pageSize * this.parent.infiniteScrollSettings.initialBlocks :\n                this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (!isNullOrUndefined(actionArgs)) {\n                var lastIndex = getValue('lastIndex', this.parent.grid.infiniteScrollModule);\n                var firstIndex = getValue('firstIndex', this.parent.grid.infiniteScrollModule);\n                if (!isCache && actionArgs.requestType === 'delete') {\n                    var skip = lastIndex - actionArgs.data.length + 1;\n                    var take = actionArgs.data.length;\n                    query = query.skip(skip).take(take);\n                }\n                else if (isCache && actionArgs.requestType === 'delete' ||\n                    (actionArgs.requestType === 'save' && actionArgs.action === 'add')) {\n                    query = query.skip(firstIndex);\n                    query = query.take(this.parent.infiniteScrollSettings.initialBlocks * this.parent.pageSettings.pageSize);\n                }\n                else {\n                    if ((pageingDetails.actionArgs['action'] === 'expand' || pageingDetails.actionArgs['action'] === 'collapse') && this.parent.grid.pageSettings.currentPage !== 1) {\n                        current = 1;\n                        size = this.parent.grid.pageSettings.pageSize * this.parent.grid.pageSettings.currentPage;\n                    }\n                    query = query.page(current, size);\n                }\n            }\n            else {\n                query = query.page(current, size);\n            }\n            dm.dataSource.json = visualData;\n            if (!isCache && !isNullOrUndefined(actionArgs) && actionArgs.requestType === 'save' && actionArgs.action === 'add') {\n                pageingDetails.result = [actionArgs.data];\n            }\n            else {\n                pageingDetails.result = dm.executeLocal(query);\n            }\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * Handles the currentviewdata for delete operation.\n     *\n     * @param {{ e: InfiniteScrollArgs, result: Object[] }} args - Scroller and data details\n     * @param {InfiniteScrollArgs} args.e -  scroller details while CRUD\n     * @param {Object[]} args.result - data details while CRUD\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteEditHandler = function (args) {\n        var infiniteData = 'infiniteCurrentViewData';\n        var infiniteCurrentViewData = this.parent.grid.infiniteScrollModule[\"\" + infiniteData];\n        var keys = Object.keys(infiniteCurrentViewData);\n        if (args.e.requestType === 'delete' && args.result.length > 1) {\n            for (var i = 1; i < args.result.length; i++) {\n                infiniteCurrentViewData[keys[keys.length - 1]].push(args.result[parseInt(i.toString(), 10)]);\n            }\n        }\n    };\n    /**\n     * Handles the row objects for delete operation.\n     *\n     * @param {ActionEventArgs} args - crud action details\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteDeleteHandler = function (args) {\n        if (args.requestType === 'delete') {\n            var rows = this.parent.grid.getRowsObject();\n            var rowElms = this.parent.getRows();\n            var data = args.data instanceof Array ? args.data : [args.data];\n            var keyField = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            this.removeRows(rowElms, rows, data, keyField, true);\n            if (this.parent.getFrozenColumns() > 0) {\n                var mRows = this.parent.grid.getMovableRowsObject();\n                var mRowElms = this.parent.grid.getMovableRows();\n                this.removeRows(mRowElms, mRows, data, keyField);\n            }\n        }\n    };\n    /**\n     * Handles the row objects for delete operation.\n     *\n     * @param {Element[]} rowElms - row elements\n     * @param {Row<Column>[]} rows - Row object collection\n     * @param {Object[]} data - data collection\n     * @param {string} keyField - primary key name\n     * @param { boolean} isFrozen - Specifies whether frozen column enabled\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.removeRows = function (rowElms, rows, data, keyField, isFrozen) {\n        var _this = this;\n        var resetInfiniteCurrentViewData = 'resetInfiniteCurrentViewData';\n        var _loop_1 = function (i) {\n            rows.filter(function (e, index) {\n                if (e.data[\"\" + keyField] === data[parseInt(i.toString(), 10)][\"\" + keyField]) {\n                    if (isFrozen) {\n                        var page = Math.ceil((index + 1) / _this.parent.grid.pageSettings.pageSize);\n                        _this.parent.grid.infiniteScrollModule[\"\" + resetInfiniteCurrentViewData](page, index);\n                    }\n                    rows.splice(index, 1);\n                    remove(rowElms[parseInt(index.toString(), 10)]);\n                    rowElms.splice(index, 1);\n                }\n            });\n        };\n        for (var i = 0; i < data.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * Handles the row objects for Add operation.\n     */\n    InfiniteScroll.prototype.createRows = function (eventArgs) {\n        var locator = 'serviceLocator';\n        var actionArgs = eventArgs.args.e;\n        var row = eventArgs.row;\n        var serviceLocator = this.parent.grid.infiniteScrollModule[\"\" + locator];\n        var rowRenderer = new RowRenderer(serviceLocator, null, this.parent.grid);\n        var tbody;\n        var currentData = this.parent.getCurrentViewRecords();\n        var currentRows = eventArgs.isMovable ? this.parent.grid.getMovableRows()\n            : this.parent.grid.getDataRows();\n        if (eventArgs.isFrozenRight) {\n            tbody = this.parent.element.querySelector('.e-frozen-right-content').querySelector('tbody');\n        }\n        else {\n            tbody = !this.parent.grid.isFrozenGrid() ? this.parent.getContent().querySelector('tbody') : eventArgs.isMovable\n                ? this.parent.grid.getMovableVirtualContent().querySelector('tbody')\n                : this.parent.grid.getFrozenVirtualContent().querySelector('tbody');\n        }\n        if (this.parent.frozenRows) {\n            tbody = eventArgs.isFrozenRows && this.parent.grid.infiniteScrollModule.requestType !== 'add'\n                || !eventArgs.isFrozenRows && this.parent.grid.infiniteScrollModule.requestType === 'add'\n                ? !this.parent.grid.isFrozenGrid() ? this.parent.getHeaderContent().querySelector('tbody')\n                    : eventArgs.isMovable ? this.parent.grid.getMovableVirtualHeader().querySelector('tbody')\n                        : eventArgs.isFrozenRight ? this.parent.element.querySelector('.e-frozen-right-header').querySelector('tbody')\n                            : this.parent.grid.getFrozenVirtualHeader().querySelector('tbody') : tbody;\n        }\n        var position;\n        var addRowIndex = 'addRowIndex';\n        var newRowIndex = this.parent.editModule[\"\" + addRowIndex];\n        for (var i = 0; i < row.length; i++) {\n            var newRow = rowRenderer.render(row[parseInt(i.toString(), 10)], this.parent.grid.getColumns());\n            if (actionArgs.requestType === 'save' && actionArgs.action === 'add') {\n                if (getValue('selectedIndex', this.parent.editModule) !== -1 && this.parent.editSettings.newRowPosition !== 'Top') {\n                    if (this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                        position = 'after';\n                        newRowIndex += findChildrenRecords(currentData[parseInt(newRowIndex.toString(), 10)]).length;\n                        if (this.parent.editSettings.newRowPosition === 'Child') {\n                            newRowIndex -= 1; //// for child position already child record is added in childRecords so subtracting 1\n                        }\n                        currentRows[parseInt(newRowIndex.toString(), 10)][\"\" + position](newRow);\n                    }\n                    else if (this.parent.editSettings.newRowPosition === 'Above') {\n                        position = 'before';\n                        currentRows[this.parent.editModule[\"\" + addRowIndex]][\"\" + position](newRow);\n                    }\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    tbody.appendChild(newRow);\n                }\n                else {\n                    tbody.insertBefore(newRow, tbody.firstElementChild);\n                }\n            }\n            else if (actionArgs.requestType === 'delete') {\n                tbody.appendChild(newRow);\n            }\n        }\n        eventArgs.cancel = true;\n    };\n    /**\n     * To destroy the infiniteScroll module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    InfiniteScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return InfiniteScroll;\n}());\nexport { InfiniteScroll };\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","isCountRequired","isCheckboxcolumn","i","columns","length","parseInt","toString","showCheckbox","isFilterChildHierarchy","isNullOrUndefined","grid","searchSettings","key","hierarchyMode","allowFiltering","filterSettings","findParentRecords","records","datas","len","Object","keys","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","filter","item","isSummaryRow","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","taskData","requireFilter","isHidden","el","style","window","getComputedStyle","display","visibility","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","batchChanges","action","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","editSettings","mode","editModule","getBatchChanges","addAct","currentViewRecords","getCurrentViewRecords","extend","newRowPosition","unshift","primaryKeys","currentdata","addAction","Array","k","_loop_1","prototype","hasOwnProperty","call","editedData","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","e","p","enableImmutableMode","removeChildRecords","isChildAll","editRowIndex","updateCurrentViewData","child","index_1","currentRecords","map","enableVirtualization","updatedParent","getValue","parentUniqueID","sortSettings","indexOf","data","setRowData","row","getRowByIndex","getRows","getRowIndexByPrimaryKey","movableRow","frozenRows","getFrozenColumns","getMovableRowByIndex","index_2","treeColumnIndex","allowRowDragAndDrop","renderModule","cellRender","cell","cells","column","getColumns","requestType","RowModifier","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","this","constructor","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Column","options","allowEditing","edit","disableHtmlEncode","allowReordering","showColumnMenu","allowSorting","allowResizing","merge","setProperties","clipboardModule","uid","TreeGridColumn","_super","apply","Property","StackedColumn","LoadingIndicator","ChildProperty","Predicate","FilterSettings","Collection","TextWrapSettings","DOC_URL","BASE_DOC_URL","IsRowDDEnabled","Logger","Grid","Inject","GridLogger","getModuleName","log","types","args","type","detailLists","cOp","check","success","message","generateMessage","replace","gridurl","substring","treeGridObj","dataStateChange","console","logType","treeLog","treeGrid","isPrimaryKey","treeGridDetails","mapping_fields_missing","opt","ERROR","rowDataBound","queryCellInfo","beforeDataBound","actionBegin","actionComplete","rowSelected","checkboxChange","rowDeselected","toolbarClick","beforeExcelExport","beforePdfExport","expanding","collapsed","collapsing","remoteExpand","localPagedExpandCollapse","pagingActions","printGridInit","contextMenuOpen","contextMenuClick","crudAction","beginEdit","beginAdd","recordDoubleClick","cellSave","cellSaved","cellEdit","batchDelete","batchCancel","batchAdd","beforeBatchDelete","beforeBatchAdd","beforeBatchSave","batchSave","keyPressed","doubleTap","virtualActionArgs","dataListener","indexModifier","beforeStartEdit","beforeBatchCancel","detailDataBound","rowDragStartHelper","rowsAdd","rowsRemove","rowdraging","rowDropped","rowDeselecting","movableContent","frozenContent","content","dataRowIndex","TreeClipboard","serviceLocator","_this","treeCopyContent","copiedUniqueIdCollection","treeGridParent","setCopyData","withHeader","copyContent","getSelection","clipBoardTextArea","rows","selectionSettings","selectedIndexes","getSelectedRowIndexes","sort","a","classList","contains","slice","querySelectorAll","uniqueid","getSelectedRecords","copyHierarchyMode","parentContentData","childContentData","headerTextArray","getVisibleColumns","headerText","cancel","trigger","Browser","userAgent","match","setSelectionRange","select","treeLevel","copy","paste","rowIndex","colIndex","destroy","childData","GridClipboard","Selection","selectedItems","filteredList","searchingRecords","addEventListener","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","checkBox","checkWrap","parentsUntil","querySelector","closest","selectCheckboxes","triggerChkChangeEvent","nextElementSibling","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","checked","rowData","getCheckedRecords","events.checkboxChange","getCheckboxcolumnIndex","mappingUid","columnIndex","col","headerCelllength","getHeaderContent","getAttribute","headerElement","rowChkBox","createElement","className","attrs","createCheckBox","label","add","insertBefore","cloneNode","firstChild","renderColumnCheckbox","aria-label","setAttribute","checkboxState","allowTextWrap","width","checkbox","removeClass","container","containerELe","spanEle","innerHTML","divEle","appendChild","rowIndexes","flatRecord","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","indeter","checkChildRecords","checkBoxRecord","hasFilteredChildRecords","checkAll","multiFilterCheckState","filterResult","rec","currentRecord","checkedRecord","currentViewData","recordIndex","checkboxRecord","tr","movableTr","getMovableDataRows","checkedIndex","checkBoxclass","childLength","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","Print","GridPrint","events.printGridInit","printTreeGrid","printGrid","gridElement","events.queryCellInfo","events.rowDataBound","events.beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","reactTemplateRender","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","rowsObj","getRowsObject","isFrozenGrid","visible","proxy_1","parentrec","rowDragAndDropModule","getContentTable","scrollHeight","getContent","clientHeight","getVisibleRecords","cellElement","pad","filterLevel","totalIconsWidth","getColumnByUid","summaryRow","frozenColumns","enableColumnVirtualization","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","loadChildOnDemand","expandIcon","expand","updateTreeCell","getFrozenLeftColumnsCount","getFrozenRightColumnsCount","freezerightColumns","getFrozenRightColumns","freezeLeftColumns","getFrozenLeftColumns","movableColumns","getMovableColumns","field","notify","checkboxElement","summaryData","template","rowTemplate","treeColumn","templateFn","colindex","templateCompiler","textContent","appendChildren","children","tempID","element","id","isReact","result","refreshReactColumnTemplateByUid","columnUid","clearTemplate","undefined","indent","getIndentCount","cellIndex","getNormalizedColumnIndex","isDataRow","cellRenderer","CellRenderer","td","getCellFromIndex","refreshTD","treecell","DataManipulation","addedRecords","parentItems","taskIds","hierarchyData","storedIndex","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","events.remoteExpand","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","filterKey","params","param","where","addParams","hasChildMapping","qry","clone","queries","executeQuery","then","DataUtil","distinct","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","convertJSONData","tempData","selfData","mappingData","executeLocal","group","groupData","items","selfReferenceUpdate","createRecords","referenceData","shift","actionArgs","searchString","expands","isExpandCollapse","this_1","childRecords_1","parent_1","getUid","Math","ceil","random","aggregates","summaryQuery","q","fn","summaryModule","calculateSummaryValue","rowDetails","isChild","gridRows","childRecord","targetEle","getElementsByClassName","getRowObjectFromUID","childRows","parentRow","expandingTd","detailRowModule","fetchRemoteChildData","getDataModule","generateQuery","clonequries","take","pageSize","expandDetail","filterqry","predicates","showSpinner","remoteExpandedData","remoteCollapsedData","inx","haveChild","resultChildData","events.actionComplete","gridQuery","aggregateQuery","totalRecordsCount","virtualArgs","remoteVirtualAction","notifyArgs","enableInfiniteScrolling","events.expanded","contentModule","currentInfo","prevInfo","loadNext","currentPage","nextInfo","page","sortBy","parentRecords","treeGridData","currentData","dataObj","isExport","expresults","exportType","isPrinting","actionData","actionAddArgs","primaryKeyColumnName","dataValue","isLocalData","updateAction","filterQuery","searchQuery","results","fltrQuery","srchQuery","filteredData","gridQuery_1","srtQry","srt","compFun","sortComparer","bind","direction","dragdIndex","dropdIndex","sortArgs","temp","paging","printMode","actArgs","events.pagingActions","isCollapsedStatePersist","actualResults","dataResult","events.crudAction","events.batchSave","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","AggregateRow","EditSettings","SortDescriptor","SortSettings","InfiniteScrollSettings","TreeGrid","uniqueIDCollection","uniqueIDFilterCollection","changedRecords","deletedRecords","indentOutdentAction","modifiedRecords","stackedHeader","objectEqualityChecker","old","current","isEqual","excludeKeys","Date","getTime","TreeGrid_1","TreeGridSelection","mergePersistTreeGridData","injectedModules","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","Child","AddRow","ExpandAll","CollapseAll","RowIndent","RowOutdent","l10n","L10n","locale","sortByColumn","isMultiSort","sortModule","sortColumn","clearSorting","removeSortColumn","search","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","parentTarget","summaryElement","expandAll","collapseAll","expandCollapseRequest","parentElement","getColumnByIndex","editType","findnextRowElement","selectRow","cellIndex_1","row_1","clearSelection","findPreviousRowElement","rIndex","cIndex","summaryRowElement","previousElementSibling","infiniteScrollData","columnModel","isExpandAll","isCollapseAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","getGridColumns","member","toolbar","contextMenuItems","allowExcelExport","freezePresent","detailTemplate","allowPdfExport","showColumnChooser","extendRequiredModules","IsRowDDInjected","isIndentEnabled","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","remove","loggerModule","render","portals","isVue","vueInstance","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","rowDropSettings","targetID","addListener","gridContainer","height","gridRequiredModules","appendTo","refreshToolbarItems","renderComplete","destroyTemplateFn","toolbarElement","toolbarModule","getToolbar","indentID","outdentID","indentElement","outdentElement","afterGridRender","griddata","bindGridProperties","bindedDataSource","enableRtl","columnQueryMode","getActualProperties","pagerTemplate","infiniteScrollSettings","enableVirtualMaskRow","loadingIndicator","enableAltRow","enableHover","enableAutoFill","enableAdaptiveUI","rowHeight","gridLines","getGridToolbar","toolbarTemplate","textWrapSettings","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","clipMode","templateInstance","enableHtmlSanitizer","triggerEvents","IsExpandCollapseClicked","checkboxOnly","bindGridEvents","rowSelecting","events.rowDeselecting","isHeaderCheckboxClicked","selectionModule","selectedRowIndexes","events.rowSelected","events.rowDeselected","resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","cellDeselected","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","beforeCopy","beforePaste","TreeLogger","printComplete","actionFailure","extendedGridDataBoundEvent","extendedGridEvents","extendedGridActionEvents","extendedGridEditEvents","bindGridDragEvents","bindCallBackEvents","lastRowBorder","visiblerow","isAddBorder","isPixelHeight","dataBound","updateRowTemplate","updateAltRow","req","totalRows","persistSelection","callBackPromise_1","Deferred","beforeDataBoundArgs","resolve","callBackPromise","events.toolbarClick","toolbarargs","cellSelecting","cellselectingArgs","events.beginEdit","begineditArgs","isExpandRefresh","events.dataStateChange","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","events.cellSave","cellsaveArgs","events.cellSaved","promise","events.cellEdit","events.batchAdd","events.beforeBatchSave","events.beforeBatchAdd","events.batchDelete","events.beforeBatchDelete","events.batchCancel","setTimeout","treeColumnRowTemplate","datacount","defaultQuery","JsonAdaptor","dataManager","isQueryInvokedFromData","callBackPromise_2","events.actionBegin","updateTreeGridModel","events.beginAdd","ag","showChildSummary","refresh","selectedItem_1","selectedRecords","dropIndex","dropPosition","selectedRows","literals.movableContent","literals.frozenContent","events.recordDoubleClick","events.detailDataBound","events.contextMenuClick","events.contextMenuOpen","events.rowDragStartHelper","rowDragStart","rowDrag","isEdit","events.rowdraging","rowDrop","events.rowDropped","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","allowNextRowEdit","dialog","text","getConstant","iconCss","tooltipText","Search","prefixIcon","isEmptyColumnModel","treeGridColumn","gridColumn","gridColumnCollection","_i","_a","enablePersistence","treeColumnTextAlign","textAlign","treeColumnField","onPropertyChanged","newProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","isDataSourceChanged","eventListener","renderTable","updateTreeColumnTextAlign","closeEdit","getColumnByField","treeGridElement","hasTreeGridChild","removeListener","dataBind","document","getElementById","getPersistData","keyEntity","ignoreOnPersist","currentObject","val","ignoreInArrays","addOnPersist","ignoreOnColumn","ignoreInColumn","touches","isEditCollapse","getPager","addRecord","position","saveCell","updateCell","updateRow","deleteRecord","fieldName","startEdit","editCell","enableToolbarItems","isEnable","enableItems","endEdit","openColumnChooser","x","y","columnChooserModule","deleteRow","setCellValue","primaryKey","visibleRecords","sHeight","goToPage","pageNo","pagerModule","updateExternalMessage","iterateArrayOrObject","Columns","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","getVirtualColIndexByUid","isRefresh","gridColumns","updateColumnsWidth","currentColumn","mergeColumns","storedColumn","getDataRows","dRows","getHeaderTable","getRowInfo","getUidByColumnField","cols","indexes","refreshUI","refreshHeader","dialogObj","targetElement","rowInfo","collapseRow","expandRow","rowInfo_1","parentRec","getCollapseExpandRecords","pagerValuePresent","pagerObj","pagerdropdownModule","isExpandingEventTriggered","expandAllPrevent","expandRows","events.expanding","expandingArgs","expandCollapseAllChildren","expandCollapse","expandArgs","setHeightForFrozenContent","updateExpandStateMapping","isExpandedEventTriggered","freeze","refreshScrollOffset","isCollapsingEventTriggered","collapseAllPrevent","collapseRows","events.collapsing","collapsingArgs","collapseArgs","isCollapsedEventTriggered","events.collapsed","firstElementChild","scrollTop","getRowHeight","scrollBy","state","totalRecords","expandAtLevel","expandAction","getRecordDetails","expandByKey","expandCollapseActionByKey","isPaging","puniqueID_1","collapseAtLevel","collapseAction","collapseByKey","primaryKeyField","startIndex","expandCollapseAll","isExpandCollapseall","updateChildOnDemand","displayAction","detailrows","localExpand","lastrowIdx","lastRow","removeAttribute","events.localPagedExpandCollapse","flatDataRecords","deff","data_1","length_1","scrollHeightBeforeRefresh","rows_1","args_1","collapseRemoteChild","movableRows","freezeRightRows","rows_2","getMovableRows","getFrozenRightRows","gridRowsObject","currentIndex","visibleRowCount","gridRow","rcell","arg","movablerows","rightrows","collapsingTd","collapse","expandElement","cRow","eRows","i_1","sanitize","SanitizeHtmlHelper","updateRowAndCellElements","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getMovableCellFromIndex","getFrozenRightRowByIndex","getFrozenRightDataRows","getFrozenRightCellFromIndex","getFrozenLeftColumnHeaderByIndex","getFrozenRightColumnHeaderByIndex","getMovableColumnHeaderByIndex","getMovableColumnsCount","getVisibleMovableCount","getVisibleFrozenRightCount","getVisibleFrozenLeftCount","getFrozenCount","cnt","isFrozen","getSelectedRowCellIndexes","baseModule","treeModule","reorderRows","fromIndexes","toIndex","outdent","Complex","RowDropSettings","Event","NotifyPropertyChanges","Component","Reorder","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","RowDD","canDrop","isDraggedWithChild","hasDropItem","isaddtoBottom","GridDragDrop","getChildrecordsByParentID","Rowdraging","events.rowsAdd","rowsAdded","events.rowsRemove","rowsRemoved","tObj","dropRows","orderToIndex","dropData","totalRecord","parentrow","request","selectedItemIndex","selectedItem","selectedRow","selectedRecord","record_1","eventTrigger","draggedRecord","dragRecords","draggedRecord_1","dragRecords_1","deleteDragRow","refreshGridDataSource","tempDataSource","idx","droppedRecord","proxy","removeFirstrowBorder","canremove","removeLastrowBorder","islastRowIndex","isEmptyRow","updateIcon","rowEle","rowPositionHeight","addErrorElem","rowTop","toolHeight","offsetHeight","positionOffSet","getOffset","contentHeight","top","offsetTop","divide","getBoundingClientRect","topRowSegment","middleRowSegment","bottomRowSegment","mouseEvent","touchEvent","posy","pageY","changedTouches","isTopSegment","isMiddleRowSegment","isBottomRowSegment","removeChildBorder","removetopOrBottomBorder","addFirstrowBorder","removeErrorElem","topOrBottomBorder","addRemoveClasses","addLastRowborder","borderElem","targetRow","node","div","gridheaderEle","toolbarHeight","multiplegrid","offsetWidth","getScrollWidth","trElement","bottomborder","gridcontentEle","bottom","scrollElem","scrollWidth","Scroll","getScrollBarWidth","dragelem","ele","errorVal","parentNode","removeChild","spanContent","paddingLeft","dropItemSpan","dropItemLeft","left","spanLeft","errorelem","errorValue","setStyleAttribute","border","box","body","docElem","documentElement","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","round","cloneElement","cursor","rowIdx","ensuredropPosition","dropElement","ej2_instances","dragDropGrid","fromIndex","getTargetIdx","srcControl","targetIndex","isNaN","actualData","srcControlFlatData","actualIndex","isByMethod","draggedRecord_2","isMultipleGrid","dragLength","reverse","correctIndex","offsetParent","newParentIndex","recordIndex1","dropAtTop","getChildCount","droppedRecordIndex","updateChildRecordLevel","updateChildRecord","dropMiddle","nonRepeat_1","childRecordsLength","recordLevel","childItem","deletedRow","removeRecords","flatParentData","childIndex","removeChildItem","idz","parentIndex","deletedRecordCount","updateModifiedRecords","i_2","i_3","draggedRecords","TreeVirtualRowModelGenerator","events.dataListener","getDatas","visualData","getDataInfo","getData","generateRows","virtualInfo","info","url","blockIndexes","getBlockIndexes","checkAndResetCache","clear","cache","movableCache","frozenRightCache","groups","getBlockSize","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","ischild","checkChildExsist","parRecord","updateParentFilteredRecord","updateFilterLevel","uniqueIDValue","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","GridExcel","updateExcelResultModel","exportRowDataBound","finalPageSetup","isCsv","Promise","isLocal","event.beforeExcelExport","customData","manipulateExportProperties","book","dtSrc","queryResult","flatsData","dataSrc","excelRow","excelrowobj","rowObj","filtercolumnlength","rowlength","excelRows","rowlevel","Boolean","expandedStatus","sublevelState","grouping","outlineLevel","isCollapsed","worksheets","pageSetup","isSummaryRowBelow","PdfExport","GridPdf","updatePdfResultModel","event.beforePdfExport","customsData","manipulatePdfProperties","flatDatas","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","primaryKeyField_1","ret","pageRoot","pagedResults","newResults","t","res","updatePageSize","pageingDetails","updateSize","gridPagerModule","pageSizes","getLocalizedLabel","propname","skip","size","dm_1","or","parents_1","floor","Toolbar","tool","refreshToolbar","toolbarClickHandler","indentEle","outdentEle","selectedrow","isCheckBoxSelection","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","summaryLength","dataLength","getChildRecordsLength","summaryRowIndex","len_1","createSummaryItem","idx_1","summaryParent","length_2","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","tempObj","requiresCount","summaryKey","sumData","toLowerCase","calculateAggregate","disp","value_1","summaryformat","Sort","GridSort","flatSortedData","updateModel","createdSortedRecords","sortParams","iterateSort","childSort","ColumnMenu","GridColumnMenu","getColumnMenu","columnMenuModule","ContextMenu","cmenu","addRow","editRecord","event","BatchEdit","batchChildCount","batchAddedRecords","batchDeletedRecords","batchAddRowRecord","batchRecords","isAdd","batchPageAction","batchCancelAction","immutableBatchAction","nextCellIndex","getBatchRecords","getAddRowIndex","getSelectedIndex","getBatchChildCount","actualCellIndex","frozenCols","columnObject","added","primaryKey_1","currentDataIndex","indexvalue","rowObjectIndex","getActualRowObjectIndex","newBatchRowAdded","changes","batchIndex","primaryParent","childRecordCount","updateChildCount","updateRowIndex","focusModule","table","matrix","newlyAddedRecords","childs","primarykey","parentRowIndex","getRowElementByUID","totalCount","mRows","deleterecords","deleteUniqueID","positionIndex","updatedRecords","primarykey_1","addRecords","endIndex","rowPosition","indexValue","Edit","prevAriaRowIndex","isAddedRowByMethod","isAddedRowByContextMenu","GridEdit","previousNewRowPosition","internalProperties","batchEditModule","events.keyPressed","lastCellTab","contentready","editActionEvents","events.doubleTap","gridDblClick","customCellSave","savePreviousRowPosition","events.beforeStartEdit","events.beforeBatchCancel","resetIsOnBatch","getRowPosition","doubleClickTarget","dataset","addArgs","applyFormValidation","eventArgs","treeObj","keyData","paramsLength","infiniteAddAction","rowObjects","newRowObject","newRowObjectIndex","newRecord","updateInfiniteCurrentViewData","movableRowsObject","getMovableRowsObject","isCache","enableCache","resetRowIndex","updateIndex","newRowIndex","dataIndex","infiniteCurrentViewData","infiniteScrollModule","isOnBatch","updateGridEditMode","keyPress","prom","celleditArgs","toolbarID","cellDetails","treeCell","afterCellSave","form","rowIndex_1","primaryKeys_1","isTabLastRow","update","fromTable","previousValue","editArgs","filterChoiceCount","excelSearchOperator","mRow","aggregateModule","destroyWidgets","formObj","restoreFocus","saveArgs","previousData","data1","treeColIndex","l","data2","firstAriaIndex","lastAriaIndex","withinRange","isVirtualization","focussedElement","activeElement","newFreezeRowObject","rightFrozenRows","errors","focus","newlyAddedRecord","seletedRow","beginAddEdit","primaryKeys_2","selector","childRecordCount1","currentDataIndex1","deletedValues","previousEditMode","previousGridEditMode","editFormValidate","destroyForm","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","setIndentVisibility","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowElement","detailElement","previousSibling","expandClass","classlist","gridClas","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","VirtualTreeContentRenderer","locator","translateY","maxiPage","recordAdded","preTranslate","isRemoteExpand","getModelGenerator","getMovableVirtualRowByIndex","getRowCollection","getFrozenRightVirtualRowByIndex","isMovable","isRowObject","isFrozenRight","startIdx","literals.dataRowIndex","rowCollection","events.virtualActionArgs","virtualOtherAction","events.indexModifier","setTop","nextSetResIndex","lastIndex","root","onDataReady","refreshContentRows","observers","observes","scrollArgs","scrollListeners","onEnteredAction","dataBoundEvent","rowSelectedEvent","toSelectVirtualRow","onActionComplete","virtualEditSuccess","resetIseditValue","cancelEdit","toSelectRowOnContextOpen","refreshCell","cellFocus","getColumnOffset","setVirtualHeight","contents","debounceEvent","TreeInterSectionObserver","getPanel","getTranslateY","sTop","cHeight","isOnenter","initialRowTop","gridTop","containerRect","observer","generateCells","generateCell","rowId","cellType","colSpan","oIndex","foreignKeyData","isDataCell","isTemplate","rowID","Data","isForeignKey","isForeignColumn","Cell","withInRange","restoreEditState","restoreNewRow","isWheel","isIE","showMaskRow","axis","top_1","offsets","xAxis","vgenerator","getColumnIndexes","columnIndexes","cOffsets","maxLeft","upScroll","virtualEle","adjustTable","header","sentinel","outBuffer","offset","downScroll","vHeight","lastInx","remains","isRowSelected","rowPt","firsttdinx","isLastBlock","viewInfo","previousInfo","setColumnIndexesInView","loadSelf","addShimmerEffect","removeMaskRow","appendContent","newChild","sentinelInfo","cBlock","cOffset","setWrapperWidth","name","getTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","onEnterCallback","instance","virtualScrollHandlers","movableContainer","delay","debounced100","debounce","debounced50","prevTop","prevLeft","scrollbar","delta","clearTimeout","preventDefault","returnValue","axes","entered","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","virtualWrapperElement","wrapper","getTransformValues","resourceCount","sIndex","instantiateRenderers","parentGrid","renderer","getService","RenderType","Header","VirtualHeaderRenderer","Content","ensurePageSize","GridVirtualScroll","VirtualTreeFreezeRenderer","freezeRowGenerator","FreezeRowModelGenerator","virtualRenderer","serviceLoc","getRenderer","virtualHdrRenderer","FreezeContentRender","setPanel","movableCont","getMovableContent","minHeight","literals.content","overflowX","renderFrozenWrapper","renderFrozenPlaceHolder","renderMovableWrapper","renderMovablePlaceHolder","tbl","movableTable","movableWrapper","movablePlaceholder","getFrozenContent","setDebounce","movableEle","VirtualFreezeRenderer","ColumnVirtualTreeFreezeRenderer","ColumnFreezeContentRenderer","frozenRightCont","getFrozenRightContent","frzCont","getFrozenMode","ColumnVirtualFreezeRenderer","VirtualTreeFreezeHdrRenderer","rfshMovable","VirtualFreezeHdrRenderer","Freeze","FreezeColumn","dblClickHandler","instantiateRenderer","FreezeRender","ColumnFreezeHeaderRenderer","frozenRightRows","frozenrows","rData","queryselector","freezeModule","ColumnChooser","GridColumnChooser","X","Y","InfiniteScroll","GridInfiniteScroll","infinitePageAction","infiniteRemoteExpand","infiniteDeleteHandler","infiniteEditHandler","createRows","collapseExpandInfinitechilds","rowRenderer","RowRenderer","childRowObjects","childRowElements","infiniteParents","actions","initialBlocks","maxBlocks","firstIndex","rowElms","keyField","removeRows","mRowElms","tbody","currentRows","getMovableVirtualContent","getFrozenVirtualContent","isFrozenRows","getMovableVirtualHeader","getFrozenVirtualHeader","newRow"],"mappings":"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"}