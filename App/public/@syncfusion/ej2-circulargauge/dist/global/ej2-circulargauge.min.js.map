{"version":3,"file":"ej2-circulargauge.min.js","sources":["../../src/circular-gauge/utils/helper-common.js","../../src/circular-gauge/utils/helper-circular-gauge.js","../../src/circular-gauge/model/theme.js","../../src/circular-gauge/utils/helper-tooltip.js","../../src/circular-gauge/utils/helper-axis-panel.js","../../src/circular-gauge/utils/helper-axis-renderer.js","../../src/circular-gauge/utils/helper-pointer-renderer.js","../../src/circular-gauge/utils/helper-legend.js","../../src/circular-gauge/model/base.js","../../src/circular-gauge/axes/axis.js","../../src/circular-gauge/annotations/annotations.js","../../src/circular-gauge/model/constants.js","../../src/circular-gauge/user-interaction/tooltip.js","../../src/circular-gauge/axes/axis-renderer.js","../../src/circular-gauge/axes/pointer-renderer.js","../../src/circular-gauge/axes/axis-panel.js","../../src/circular-gauge/legend/legend.js","../../src/circular-gauge/model/pdf-export.js","../../src/circular-gauge/model/image-export.js","../../src/circular-gauge/model/print.js","../../src/circular-gauge/axes/gradient.js","../../src/circular-gauge/circular-gauge.js","../../src/global.js"],"sourcesContent":["/* eslint-disable max-len */\n/**\n * Specifies Circular-Gauge Common Helper methods\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { compile as templateComplier, isNullOrUndefined, remove, createElement, merge } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\n/**\n * Function to measure the height and width of the text.\n *\n * @param  {string} text - Specifies the text.\n * @param  {FontModel} font - Specifies the font.\n * @returns {Size} - Returns the size of the text.\n * @private\n */\nexport function measureText(text, font) {\n    var htmlObject = document.getElementById('gauge-measuretext');\n    if (htmlObject === null) {\n        htmlObject = createElement('text', { id: 'gauge-measuretext' });\n        document.body.appendChild(htmlObject);\n    }\n    var style = 'position: absolute; visibility: hidden;' +\n        ';left: 0px; top: -100px; white-space: nowrap;' + getFontStyle(font);\n    htmlObject.innerText = text;\n    htmlObject.style.cssText = style;\n    return new Size(htmlObject.clientWidth, htmlObject.clientHeight);\n}\n/**\n * Function to find number from string\n *\n * @param {string} value - Specifies the value.\n * @param {number} maxDimension - Specifies the  maximum dimension.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function toPixel(value, maxDimension) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (maxDimension / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Function to get the style from FontModel.\n *\n * @param {FontModel} font - Specifies the font.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function getFontStyle(font) {\n    var style = '';\n    style = 'font-size:' + font.size +\n        '; font-style:' + font.fontStyle + '; font-weight:' + font.fontWeight +\n        '; font-family:' + font.fontFamily + ';opacity:' + font.opacity +\n        '; color:' + font.color + ';';\n    return style;\n}\n/**\n * Function to create the text element.\n *\n * @param {TextOption} options - Specifies the options.\n * @param {FontModel} font - Specifies the font.\n * @param {string} color - Specifies the color.\n * @param {HTMLElement | Element} parent - Specifies the html element.\n * @param {string} styles - Specifies the style.\n * @returns {Element} - Returns the element.\n * @private\n */\nexport function textElement(options, font, color, parent, styles) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var renderOptions = {};\n    var renderer = new SvgRenderer('');\n    var style = styles + ' font-size:' + font.size + '; font-style:' + font.fontStyle +\n        ' ; font-weight:' + font.fontWeight + '; font-family:' + font.fontFamily + ';';\n    renderOptions = {\n        'id': options.id,\n        'x': options.x,\n        'y': options.y,\n        'fill': color,\n        'text-anchor': options.anchor,\n        'transform': options.transform,\n        'opacity': font.opacity,\n        'dominant-baseline': options.baseLine,\n        'style': style\n    };\n    var htmlObject = renderer.createText(renderOptions, options.text);\n    parent.appendChild(htmlObject);\n    return htmlObject;\n}\n/**\n * Function to append the path to the element.\n *\n * @param {PathOption} options - Specifies the options.\n * @param {Element} element - Specifies the element.\n * @param {CircularGauge} gauge - Specifies the gauge.\n * @param {string} functionName - Specifies the function name.\n * @returns {Element} - Returns the element.\n * @private\n */\nexport function appendPath(options, element, gauge, functionName) {\n    functionName = functionName ? functionName : 'Path';\n    var htmlObject = gauge.renderer['draw' + functionName](options);\n    htmlObject.setAttribute('transform', options.transform);\n    htmlObject.style.cssText = options.style;\n    element.appendChild(htmlObject);\n    return htmlObject;\n}\n/**\n * Function to check whether it's a complete circle for circular gauge.\n *\n * @param {number} startAngle - Specifies the startAngle.\n * @param {number} endAngle - Specifies the endAngle.\n * @returns {boolean} Returns the boolean value.\n * @private\n */\nexport function isCompleteAngle(startAngle, endAngle) {\n    var totalAngle = endAngle - startAngle;\n    totalAngle = totalAngle <= 0 ? (totalAngle + 360) : totalAngle;\n    return Math.floor(totalAngle / 360) !== 0;\n}\n/**\n * Function to get the degree for circular gauge.\n *\n * @param {number} startAngle - Specifies the startAngle.\n * @param {number} endAngle - Specifies the endAngle.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function getDegree(startAngle, endAngle) {\n    var degree = endAngle - startAngle;\n    return degree < 0 ? (degree + 360) : degree;\n}\n/**\n * Function to get the angle from value for circular gauge.\n *\n * @param {number} value - Specifies the value.\n * @param {number} maximumValue - Specifies the maximumValue.\n * @param {number} minimumValue - Specifies the minimumValue.\n * @param {number} startAngle - Specifies the startAngle.\n * @param {number} endAngle - Specifies the endAngle.\n * @param {boolean} isClockWise - Specifies the isClockWise.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function getAngleFromValue(value, maximumValue, minimumValue, startAngle, endAngle, isClockWise) {\n    var angle;\n    endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n    startAngle -= 90;\n    endAngle -= 90;\n    if (isClockWise) {\n        angle = ((value - minimumValue) * (getDegree(startAngle, endAngle) / (maximumValue - minimumValue))) + startAngle;\n    }\n    else {\n        angle = endAngle - ((value - minimumValue) * (getDegree(startAngle, endAngle) / (maximumValue - minimumValue)));\n        angle = angle < 0 ? 360 + angle : angle;\n    }\n    angle = Math.round(angle) >= 360 ? (angle - 360) : Math.round(angle) < 0 ? (360 + angle) : angle;\n    return angle;\n}\n/**\n * Function to get angle from location for circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center.\n * @param {GaugeLocation} point - Specifies the point.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function getAngleFromLocation(center, point) {\n    var angle = Math.atan2((point.y - center.y), (point.x - center.x));\n    angle = Math.round((angle < 0 ? (6.283 + angle) : angle) * (180 / Math.PI)) - 270;\n    angle += angle < 0 ? 360 : 0;\n    return angle;\n}\n/**\n * Function to get the location from angle for circular gauge.\n *\n * @param {number} degree - Specifies the degree.\n * @param {number} radius - Specifies the radius.\n * @param {GaugeLocation} center - Specifies the center.\n * @returns {GaugeLocation} - Returns the gauge location.\n * @private\n */\nexport function getLocationFromAngle(degree, radius, center) {\n    var radian = (degree * Math.PI) / 180;\n    return new GaugeLocation(Math.cos(radian) * radius + center.x, Math.sin(radian) * radius + center.y);\n}\n/**\n * Function to get the path direction of the circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center.\n * @param {number} start - Specifies the start.\n * @param {number} end - Specifies the end.\n * @param {number} radius - Specifies the radius.\n * @param {number} startWidth - Specifies the startWidth.\n * @param {number} endWidth - Specifies the endWidth.\n * @param {Range} range - Specifies the range.\n * @param {Axis} axis - Specifies the axis.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function getPathArc(center, start, end, radius, startWidth, endWidth, range, axis) {\n    if (isNullOrUndefined(range) || (range.start !== range.end)) {\n        end -= isCompleteAngle(start, end) ? 0.0001 : 0;\n    }\n    var degree = getDegree(start, end);\n    var startRadius = !isNullOrUndefined(range) ? (range.position === 'Outside' && !range.isLinearCircularGradient\n        ? radius + startWidth : range.position === 'Cross'\n        && axis.direction === 'AntiClockWise' ? radius - (endWidth + startWidth) / 2 : radius - startWidth) : radius - startWidth;\n    var endRadius = !isNullOrUndefined(range) ? (range.position === 'Outside'\n        && !range.isLinearCircularGradient ? radius + endWidth : range.position === 'Cross' &&\n        axis.direction === 'ClockWise' ? radius - (endWidth + startWidth) / 2 : radius - endWidth) : radius - endWidth;\n    var arcRadius = !isNullOrUndefined(range) ? (range.position === 'Outside' && !range.isLinearCircularGradient\n        ? radius + ((startWidth + endWidth) / 2) :\n        range.position === 'Cross' ? (radius - ((startWidth + endWidth) / 4) - (axis.direction === 'ClockWise' ? startWidth : endWidth)\n            / 2) : radius - ((startWidth + endWidth) / 2)) : radius - ((startWidth + endWidth) / 2);\n    var insideArcRadius = !isNullOrUndefined(range) && range.position === 'Cross' ?\n        radius + ((startWidth + endWidth) / 4)\n            - (axis.direction === 'ClockWise' ? startWidth : endWidth) / 2 : radius;\n    var insideEndRadius = !isNullOrUndefined(range) && range.position === 'Cross' && axis.direction === 'ClockWise' ?\n        radius - ((startWidth - endWidth) / 2) : radius;\n    var insideStartRadius = !isNullOrUndefined(range) && range.position === 'Cross' && axis.direction === 'AntiClockWise' ?\n        radius + ((startWidth - endWidth) / 2) : radius;\n    if (startWidth !== undefined && endWidth !== undefined) {\n        insideEndRadius = range.position === 'Cross' ? (degree > 325 ? insideStartRadius : insideEndRadius) : insideEndRadius;\n        return getRangePath(getLocationFromAngle(start, insideStartRadius, center), getLocationFromAngle(end, insideEndRadius, center), getLocationFromAngle(start, startRadius, center), getLocationFromAngle(end, endRadius, center), insideArcRadius, startRadius, endRadius, arcRadius, (degree < 180) ? 0 : 1, center, degree, range, axis);\n    }\n    else {\n        return getCirclePath(getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), radius, (degree < 180) ? 0 : 1);\n    }\n}\n/**\n * Function to get the range path arc direction of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start.\n * @param {GaugeLocation} end - Specifies the end.\n * @param {number} radius - Specifies the radius.\n * @param {number} arcStartOne - Specifies the arcStartOne.\n * @param {number} arcEndOne - Specifies the arcEndOne.\n * @param {number} arcStartTwo - Specifies the arcStartTwo.\n * @param {number} arcEndTwo - Specifies the arcEndTwo.\n * @param {number} clockWise - Specifies the clockWise.\n * @param {GaugeLocation} innerStart - Specifies the innerStart.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd.\n * @param {GaugeLocation} pointPosition - Specifies the pointPosition.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function arcPath(start, end, radius, arcStartOne, arcEndOne, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, pointPosition) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y + ' L ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + arcStartOne + ' ' + arcEndOne + ' 0 ' + clockWise + ' 0 ' + pointPosition.x\n        + ' ' + pointPosition.y + ' ' + ' A ' + arcStartTwo + ' ' + arcEndTwo\n        + ' 0 ' + clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y + ' Z ';\n}\n/**\n * Function to get the range path arc direction of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start.\n * @param {GaugeLocation} end - Specifies the end.\n * @param {number} radius - Specifies the radius.\n * @param {GaugeLocation} outerOldEnd - Specifies the outerOldEnd.\n * @param {GaugeLocation} innerOldEnd - Specifies the innerOldEnd.\n * @param {number} arcStartOne - Specifies the arcStartOne.\n * @param {number} arcEndOne - Specifies the arcEndOne.\n * @param {number} arcStartTwo - Specifies the arcStartTwo.\n * @param {number} arcEndTwo - Specifies the arcEndTwo.\n * @param {number} clockWise - Specifies the clockWise.\n * @param {GaugeLocation} innerStart - Specifies the innerStart.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd.\n * @param {GaugeLocation} innerOldStart - Specifies the innerOldStart.\n * @param {GaugeLocation} outerOldStart - Specifies the outerOldStart.\n * @param {GaugeLocation} pointPosition - Specifies the pointPosition.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function arcRoundedPath(start, end, radius, outerOldEnd, innerOldEnd, arcStartOne, arcEndOne, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, innerOldStart, outerOldStart, pointPosition) {\n    var roundedPath = 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y + ' C ' + outerOldEnd.x + ' ' + outerOldEnd.y + ' ' + innerOldEnd.x + ' ' +\n        innerOldEnd.y + ' ' + innerEnd.x + ' ' + innerEnd.y;\n    if (isNullOrUndefined(arcStartTwo) && isNullOrUndefined(arcEndTwo)) {\n        return roundedPath + ' A ' + arcStartOne + ' ' + arcEndOne + ' 0 ' + clockWise + ' 0 ' + innerStart.x + ' '\n            + innerStart.y + ' C ' + innerOldStart.x + ' ' + innerOldStart.y + ' ' + outerOldStart.x + ' ' +\n            outerOldStart.y + ' ' + start.x + ' ' + start.y + ' Z';\n    }\n    else {\n        return roundedPath + ' A ' + arcStartOne + ' ' + arcEndOne + ' 0 ' + clockWise + ' 0 '\n            + pointPosition.x + ' ' + pointPosition.y + ' ' + ' A ' + arcStartTwo + ' ' + arcEndTwo + ' 0 ' + clockWise + ' 0 '\n            + innerStart.x + ' ' + innerStart.y + ' C ' + innerOldStart.x + ' ' + innerOldStart.y + ' ' + outerOldStart.x + ' ' +\n            outerOldStart.y + ' ' + start.x + ' ' + start.y + ' Z';\n    }\n}\n/**\n * Function to get the range path direction for different start and end width of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the options.\n * @param {GaugeLocation} end - Specifies the end.\n * @param {GaugeLocation} innerStart - Specifies the innerStart.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd.\n * @param {number} radius - Specifies the radius.\n * @param {number} startRadius - Specifies the startRadius.\n * @param {number} endRadius - Specifies the endRadius.\n * @param {number} clockWise - Specifies the clockWise.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y +\n        ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y +\n        ' L ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + endRadius + ' ' + startRadius + ' 0 ' +\n        clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y + ' Z';\n}\n/**\n * Function to get the range path direction of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start values.\n * @param {GaugeLocation} end - Specifies the end values.\n * @param {GaugeLocation} innerStart - Specifies the innerStart values.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd values.\n * @param {number} radius - Specifies the radius value.\n * @param {number} startRadius - Specifies the startRadius value.\n * @param {number} endRadius - Specifies the endRadius value.\n * @param {number} arcRadius - Specifies the arcRadius value.\n * @param {number} clockWise - Specifies the clockWise value.\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {number} degree - Specifies the degree value.\n * @param {Range} range - Specifies the range value.\n * @param {Axis} axis - Specifies the axis value.\n * @returns {string} - Returns the string value.\n * @private\n */\nexport function getRangePath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, arcRadius, clockWise, center, degree, range, axis) {\n    var startWidth = range.startWidth;\n    var endWidth = range.endWidth;\n    var widthDifference = Math.abs(startWidth - endWidth);\n    var endArc;\n    var startArc;\n    if (startWidth > endWidth && degree <= 260 && range.position !== 'Cross' && range.position !== 'Outside') {\n        endArc = (endRadius + (axis.direction === 'ClockWise' ? -(widthDifference / 2) : (widthDifference / 2)));\n        startArc = (startRadius + (axis.direction === 'ClockWise' ? (widthDifference / 2) : -(widthDifference / 2)));\n        return arcWidthPath(start, end, innerStart, innerEnd, radius, startArc, endArc, clockWise);\n    }\n    else if (endWidth > startWidth && degree <= 260 && range.position !== 'Cross' && range.position !== 'Outside') {\n        endArc = (startRadius + (axis.direction === 'ClockWise' ? -(widthDifference / 2) : (widthDifference / 2)));\n        startArc = (endRadius + (axis.direction === 'ClockWise' ? (widthDifference / 2) : -(widthDifference / 2)));\n        return arcWidthPath(start, end, innerStart, innerEnd, radius, startArc, endArc, clockWise);\n    }\n    else if ((endWidth === startWidth) && (axis.startAngle !== 0 || axis.endAngle !== 0)) {\n        return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n    }\n    else if ((degree > 260) || (!range.isLinearCircularGradient && axis.startAngle === 0 && axis.endAngle === 0)) {\n        if (range.roundedCornerRadius <= 0 && range.startWidth === range.endWidth) {\n            return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n        }\n        else {\n            return arcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, arcRadius, clockWise, center, null, null, null, null, startWidth, endWidth, degree, range, axis);\n        }\n    }\n    else {\n        if (range.position === 'Cross' || range.position === 'Outside') {\n            return arcWidthPath(start, end, innerStart, innerEnd, radius, arcRadius, arcRadius, clockWise);\n        }\n        else {\n            return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n        }\n    }\n}\n/**\n * Function to get start and end width range path calculation to the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start value.\n * @param {GaugeLocation} end - Specifies the end value.\n * @param {GaugeLocation} innerStart - Specifies the innerStart value.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} startRadius - Specifies the startRadius value.\n * @param {number} endRadius - Specifies the endRadius value.\n * @param {number} arcRadius - Specifies the arcRadius value.\n * @param {number} clockWise - Specifies the clockWise value.\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {GaugeLocation} outerOldEnd - Specifies the outerOldEnd value.\n * @param {GaugeLocation} innerOldEnd - Specifies the innerOldEnd value.\n * @param {GaugeLocation} outerOldStart - Specifies the outerOldStart value.\n * @param {GaugeLocation} innerOldStart - Specifies the innerOldStart value.\n * @param {number} startWidth - Specifies the startWidth value.\n * @param {number} endWidth - Specifies the endWidth value.\n * @param {number} degree - Specifies the degree value.\n * @param {Range} range - Specifies the range value.\n * @param {Axis} axis - Specifies the axis value.\n * @returns {string} - Returns the svg path.\n * @private\n */\nexport function arcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, arcRadius, clockWise, center, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart, startWidth, endWidth, degree, range, axis) {\n    if (!isNullOrUndefined(range)) {\n        var arcStartOne = void 0;\n        var arcEndOne = void 0;\n        var widthDifference = Math.abs(startWidth - endWidth);\n        var arcStartTwo = void 0;\n        var arcEndTwo = void 0;\n        var startValueToAngle = getAngleFromValue(((range.start + range.end) / 2), axis.maximum, axis.minimum, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        var pointPosition = (startWidth < ((endWidth))) ?\n            getLocationFromAngle(startValueToAngle, endRadius, center) : getLocationFromAngle(startValueToAngle, startRadius, center);\n        var endDistance = Math.sqrt((Math.pow((innerEnd.x - pointPosition.x), 2)) + (Math.pow((innerEnd.y - pointPosition.y), 2)));\n        var endRadii = endDistance / 2;\n        var centerStartDistance = Math.sqrt((Math.pow((center.x - innerStart.x), 2)) + (Math.pow((center.y - innerStart.y), 2)));\n        var centerDistance = Math.sqrt((Math.pow((center.x - pointPosition.x), 2)) + (Math.pow((center.y - pointPosition.y), 2)));\n        if (range.roundedCornerRadius <= 0) {\n            widthDifference = widthDifference === 0 ? 1 : widthDifference;\n            innerEnd.y = (range.position === 'Cross' && axis.direction === 'ClockWise') ? degree > 325 ?\n                innerEnd.y - (widthDifference / 2) : innerEnd.y : innerEnd.y;\n            var degreeValue = range.position === 'Cross' ? 330 : 325;\n            if (((degreeValue <= degree && degree <= 360))) {\n                arcStartTwo = (axis.direction === 'ClockWise' ? (centerDistance / 2)\n                    : (degree >= 345 ? (startRadius - (widthDifference / 2) - (endWidth / 2))\n                        : range.position === 'Cross' ? (startRadius + (widthDifference / 4) - (startWidth / 2))\n                            : (startRadius - (widthDifference / 2) - (startWidth / 2))));\n                arcEndTwo = (axis.direction === 'ClockWise' ? (centerStartDistance / 2)\n                    : range.position === 'Cross' ?\n                        (endRadius + (widthDifference / 4)) - (endWidth / 4) :\n                        (range.position === 'Outside' && axis.direction === 'AntiClockWise') ? degree < 345 ?\n                            (startRadius - (widthDifference) - (endWidth / 4))\n                            : (startRadius - (widthDifference / 2))\n                            : (endRadius + (widthDifference / 2)) - (endWidth / 2));\n                return arcPath(start, end, radius, endRadii, endRadii, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, pointPosition);\n            }\n            else if ((degree > 260 && degree < 325) && range.position !== 'Cross' && range.position !== 'Outside') {\n                var arcStart = (arcRadius - (widthDifference / 2));\n                var arcEnd = (arcRadius - (widthDifference / 2));\n                var angleValueDirection = axis.direction === 'ClockWise' ? degree >= 310 : degree < 345;\n                if (degree < 310) {\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, arcStart, arcEnd, clockWise);\n                }\n                else if (degree >= 310 || angleValueDirection) {\n                    arcStart = (arcRadius - (widthDifference));\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, arcEnd, arcStart, clockWise);\n                }\n                else {\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n                }\n            }\n            else {\n                if (range.position === 'Cross') {\n                    var endRadiusValue = axis.direction === 'ClockWise' ? degree <= 300 && degree >= 260 ?\n                        endRadius - (widthDifference / 2) - (startWidth / 4) : endRadius\n                        - (widthDifference) - (startWidth / 2) : degree <= 300 && degree >= 260 ?\n                        endRadius + (widthDifference / 4) - (startWidth / 4) :\n                        endRadius + (widthDifference / 4) - (startWidth / 2);\n                    var startRadiusValue = axis.direction === 'ClockWise' ? degree > 325 ? degree > 340 ? (startRadius - startWidth)\n                        - (widthDifference / 4) : startRadius - (widthDifference / 4)\n                        : startRadius : startRadius - (widthDifference / 4);\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadiusValue, endRadiusValue, clockWise);\n                }\n                else if (range.position === 'Outside') {\n                    if (degree < 325 && degree > 285) {\n                        var arcTwo = void 0;\n                        var startGreater = startWidth / 2;\n                        var endGreater = endWidth / 2;\n                        var arcOne = arcTwo = arcRadius + (widthDifference / 2) + startGreater + endGreater;\n                        innerEnd.y = axis.direction === 'ClockWise' && startWidth !== endWidth && startWidth > widthDifference ?\n                            innerEnd.y - (widthDifference / 2) : innerEnd.y + startGreater;\n                        return arcWidthPath(start, end, innerStart, innerEnd, radius, arcOne, arcTwo, clockWise);\n                    }\n                    else {\n                        return arcWidthPath(start, end, innerStart, innerEnd, radius, arcRadius, arcRadius, clockWise);\n                    }\n                }\n                else {\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n                }\n            }\n        }\n        else {\n            var degreeAngle = axis.endAngle < 4 ? 356 : 360;\n            clockWise = degree > degreeAngle ? 0 : clockWise;\n            var degreeValueOne = axis.direction === 'ClockWise' ? 327 : 322;\n            var degreeValueTwo = axis.direction === 'ClockWise' ? 328 : 325;\n            if ((endWidth === startWidth) && (axis.startAngle !== 0 || axis.endAngle !== 0)) {\n                return roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart);\n            }\n            else if ((degree <= degreeAngle && degree > degreeValueOne) && range.roundedCornerRadius > 0) {\n                arcStartOne = axis.direction === 'ClockWise' ? degree < 334 && degree > 324 ? endRadii - (widthDifference / 2) :\n                    endRadii - (widthDifference / 4) : endRadii;\n                arcStartTwo = (centerDistance / 2);\n                arcEndTwo = axis.direction === 'ClockWise' ? ((centerStartDistance / 2) + (widthDifference / 2)) :\n                    (centerStartDistance / 2);\n                return arcRoundedPath(start, end, radius, outerOldEnd, innerOldEnd, arcStartOne, endRadii, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, innerOldStart, outerOldStart, pointPosition);\n            }\n            else if (degree > 270 && degree < degreeValueTwo) {\n                var startAddArc = endRadius + (widthDifference / 2) - (endWidth / 2);\n                var startSubArc = endRadius - (widthDifference / 2) - (endWidth / 2);\n                arcStartOne = (startRadius - (widthDifference / 2) - (startWidth / 2));\n                arcEndOne = (axis.direction === 'ClockWise' ? startSubArc : startAddArc);\n                return arcRoundedPath(start, end, radius, outerOldEnd, innerOldEnd, arcStartOne, arcEndOne, null, null, clockWise, innerStart, innerEnd, innerOldStart, outerOldStart, null);\n            }\n            else {\n                return roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart);\n            }\n        }\n    }\n    else {\n        return roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart);\n    }\n}\n/**\n * Function to get start and end width range rounded path calculation to the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start value.\n * @param {GaugeLocation} end - Specifies the end value.\n * @param {GaugeLocation} innerStart - Specifies the innerStart value.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} startRadius - Specifies the startRadius value.\n * @param {number} endRadius - Specifies the endRadius value.\n * @param {number} clockWise - Specifies the clockWise value.\n * @param {GaugeLocation} outerOldEnd - Specifies the outerOldEnd value.\n * @param {GaugeLocation} innerOldEnd - Specifies the innerOldEnd value.\n * @param {GaugeLocation} outerOldStart - Specifies the outerOldStart value.\n * @param {GaugeLocation} innerOldStart - Specifies the innerOldStart value.\n * @returns {string} - Returns the path value.\n * @private\n */\nexport function roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y + ' C ' + outerOldEnd.x + ' ' + outerOldEnd.y + ' ' + innerOldEnd.x + ' ' +\n        innerOldEnd.y + ' ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + endRadius + ' ' + startRadius + ' 0 ' +\n        clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y +\n        ' C ' + innerOldStart.x + ' ' + innerOldStart.y + ' ' + outerOldStart.x + ' ' +\n        outerOldStart.y + ' ' + start.x + ' ' + start.y + ' Z';\n}\n/**\n * Function to get the rounded path direction of the circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {number} actualStart - Specifies the actualStart value.\n * @param {number} actualEnd - Specifies the actualEnd value.\n * @param {number} oldStart - Specifies the oldStart value.\n * @param {number} oldEnd - Specifies the oldEnd value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} startWidth - Specifies the startWidth value.\n * @param {number} endWidth - Specifies the endWidth value.\n * @param {Range} range - Specifies the range value.\n * @param {Axis} axis - Specifies the axis value.\n * @returns {string} - Returns the path value.\n * @private\n */\nexport function getRoundedPathArc(center, actualStart, actualEnd, oldStart, oldEnd, radius, startWidth, endWidth, range, axis) {\n    actualEnd -= isCompleteAngle(actualStart, actualEnd) ? 0.0001 : 0;\n    var degree = getDegree(actualStart, actualEnd);\n    var startRadius = radius - startWidth;\n    var endRadius = radius - endWidth;\n    var arcRadius = radius - ((startWidth + endWidth) / 2);\n    return arcWidthPathCalculation(getLocationFromAngle(actualStart, radius, center), getLocationFromAngle(actualEnd, radius, center), getLocationFromAngle(actualStart, startRadius, center), getLocationFromAngle(actualEnd, endRadius, center), radius, arcRadius, arcRadius, arcRadius, (degree < 180) ? 0 : 1, center, getLocationFromAngle(oldEnd, radius, center), getLocationFromAngle(oldEnd, endRadius, center), getLocationFromAngle(oldStart, radius, center), getLocationFromAngle(oldStart, startRadius, center), startWidth, endWidth, degree, range, axis);\n}\n/**\n * Function to get the circular path direction of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start value.\n * @param {GaugeLocation} end - Specifies the end value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} clockWise - Specifies the clockWise.\n * @returns {string} - Returns the path.\n * @private\n */\nexport function getCirclePath(start, end, radius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' +\n        radius + ' 0 ' + clockWise + ' 1 ' + end.x + ' ' + end.y;\n}\n/**\n * Function to compile the template function for circular gauge.\n *\n * @param {string} template - Specifies the template.\n * @param {CircularGauge} gauge - Specifies the gauge instance.\n * @returns {Function} - Returns the template function.\n * @private\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getTemplateFunction(template, gauge) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var templateFn = null;\n    try {\n        if (typeof template === 'function') {\n            templateFn = templateComplier(template);\n        }\n        else if (isNaN(parseFloat(template)) && document.querySelectorAll(template).length) {\n            if ((template.charAt(0) !== 'a' || template.charAt(0) !== 'A') && template.length !== 1) {\n                templateFn = templateComplier(document.querySelector(template).innerHTML.trim());\n            }\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        }\n        else if (gauge.isVue || gauge.isVue3) {\n            templateFn = templateComplier(template);\n        }\n    }\n    catch (e) {\n        templateFn = templateComplier(template);\n    }\n    return templateFn;\n}\n/**\n * Function to remove the element from id.\n *\n * @param {string} id Specifies the id\n * @returns {void}\n * @private\n */\nexport function removeElement(id) {\n    var element = getElement(id);\n    if (element) {\n        remove(element);\n    }\n}\n/**\n * Function to get element from id.\n *\n * @param {string} id - Specifies the id.\n * @returns {Element} - Returns the element.\n * @private\n */\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/**\n * Function to convert the number from string.\n *\n * @param {string} value - Specifies the value.\n * @param {number} containerSize - Specifies the container size.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Function to get current point for circular gauge using element id.\n *\n * @param {string} targetId - Specifies the target id.\n * @param {CircularGauge} gauge - Specifies the gauge instance.\n * @returns {IVisiblePointer} - Returns the pointer and axis index.\n * @private\n */\nexport function getPointer(targetId, gauge) {\n    var tempString = targetId.replace(gauge.element.id, '').split('_Axis_')[1];\n    return {\n        axisIndex: +tempString[0],\n        pointerIndex: +tempString[tempString.length - 1]\n    };\n}\n/**\n * Function to convert the label using format for cirular gauge.\n *\n * @param {string} format - Specifies the format.\n * @returns {string} - Returns th string.\n * @private\n */\nexport function getLabelFormat(format) {\n    var customLabelFormat = format && format.match('{value}') !== null;\n    var skeleton = customLabelFormat ? '' : format;\n    return skeleton;\n}\n/**\n * Function to calculate the marker shape for circular gauge.\n *\n * @param {GaugeLocation} location - Specifies the location.\n * @param {string} shape - Specifies the shape.\n * @param {Size} size - Specifies the size.\n * @param {string} url - Specifies the url.\n * @param {PathOption} options - Specifies the path option.\n * @returns {PathOption} - Returns the path.\n * @private\n */\nexport function calculateShapes(location, shape, size, url, options) {\n    var path;\n    var width = typeof size.width === 'string' ? parseFloat(size.width) : size.width;\n    var height = typeof size.height === 'string' ? parseFloat(size.height) : size.height;\n    var locX = location.x;\n    var locY = location.y;\n    var x = location.x + (-width / 2);\n    var y = location.y + (-height / 2);\n    var isLegend = options.id.indexOf('Shape') > -1;\n    var space;\n    switch (shape) {\n        case 'Circle':\n            merge(options, { 'rx': width / 2, 'ry': height / 2, 'cx': locX, 'cy': locY });\n            break;\n        case 'Diamond':\n            path = 'M' + ' ' + x + ' ' + locY + ' ' +\n                'L' + ' ' + locX + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + locY + ' ' +\n                'L' + ' ' + locX + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + locY + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Rectangle':\n            path = 'M' + ' ' + x + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (locY + (-height / 2)) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Triangle':\n            if (isLegend) {\n                path = 'M' + ' ' + (x + (width / 2)) + ' ' + y + ' ' + 'L' + ' ' + (x + width) + ' ' +\n                    (y + height) + 'L' + ' ' + x + ' ' + (y + height) + ' Z';\n            }\n            else {\n                path = 'M' + ' ' + locX + ' ' + locY + ' ' +\n                    'L' + ' ' + (locX - height) + ' ' + (locY - (width / 2)) +\n                    'L' + ' ' + (locX - height) + ' ' + (locY + (width / 2)) + ' Z';\n            }\n            merge(options, { 'd': path });\n            break;\n        case 'InvertedTriangle':\n            if (isLegend) {\n                path = 'M' + ' ' + (x + width) + ' ' + y + ' ' + 'L' + ' ' + (x + (width / 2)) + ' ' + (y + height) +\n                    'L' + ' ' + x + ' ' + (y) + ' Z';\n            }\n            else {\n                path = 'M' + ' ' + locX + ' ' + locY + ' ' +\n                    'L' + ' ' + (locX + height) + ' ' + (locY - (width / 2)) +\n                    'L' + ' ' + (locX + height) + ' ' + (locY + (width / 2)) + ' Z';\n            }\n            merge(options, { 'd': path });\n            break;\n        case 'Image':\n            merge(options, { 'href': url, 'height': height, 'width': width, x: x, y: y });\n            break;\n        case 'RightArrow':\n            space = 2;\n            path = 'M' + ' ' + (locX + (-width / 2)) + ' ' + (locY - (height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY) + ' ' + 'L' + ' ' +\n                (locX + (-width / 2)) + ' ' + (locY + (height / 2)) + ' L' + ' ' + (locX + (-width / 2)) + ' ' +\n                (locY + (height / 2) - space) + ' ' + 'L' + ' ' + (locX + (width / 2) - (2 * space)) + ' ' + (locY) +\n                ' L' + (locX + (-width / 2)) + ' ' + (locY - (height / 2) + space) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'LeftArrow':\n            options.fill = options.stroke;\n            options.stroke = 'transparent';\n            space = 2;\n            path = 'M' + ' ' + (locX + (width / 2)) + ' ' + (locY - (height / 2)) + ' ' +\n                'L' + ' ' + (locX + (-width / 2)) + ' ' + (locY) + ' ' + 'L' + ' ' +\n                (locX + (width / 2)) + ' ' + (locY + (height / 2)) + ' ' + 'L' + ' ' +\n                (locX + (width / 2)) + ' ' + (locY + (height / 2) - space) + ' L' + ' ' + (locX + (-width / 2) + (2 * space))\n                + ' ' + (locY) + ' L' + (locX + (width / 2)) + ' ' + (locY - (height / 2) + space) + ' Z';\n            merge(options, { 'd': path });\n            break;\n    }\n    return options;\n}\n/** @private */\nvar CustomizeOption = /** @class */ (function () {\n    function CustomizeOption(id) {\n        this.id = id;\n    }\n    return CustomizeOption;\n}());\nexport { CustomizeOption };\n/** @private */\nvar PathOption = /** @class */ (function (_super) {\n    __extends(PathOption, _super);\n    function PathOption(id, fill, width, color, opacity, dashArray, d, transform, style) {\n        if (transform === void 0) { transform = ''; }\n        if (style === void 0) { style = ''; }\n        var _this = _super.call(this, id) || this;\n        _this.opacity = opacity;\n        _this.fill = fill;\n        _this.stroke = color;\n        _this['stroke-width'] = width;\n        _this['stroke-dasharray'] = dashArray;\n        _this.d = d;\n        _this.transform = transform;\n        _this.style = style;\n        return _this;\n    }\n    return PathOption;\n}(CustomizeOption));\nexport { PathOption };\n/** @private */\nvar RectOption = /** @class */ (function (_super) {\n    __extends(RectOption, _super);\n    function RectOption(id, fill, border, opacity, rect) {\n        var _this = _super.call(this, id) || this;\n        _this.y = rect.y;\n        _this.x = rect.x;\n        _this.height = rect.height;\n        _this.width = rect.width;\n        _this.opacity = opacity;\n        _this.fill = fill;\n        _this.stroke = border.color;\n        _this['stroke-width'] = border.width;\n        _this['stroke-dasharray'] = border.dashArray;\n        return _this;\n    }\n    return RectOption;\n}(CustomizeOption));\nexport { RectOption };\n/**\n * Specifies the size information of an element.\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    return Size;\n}());\nexport { Size };\n/**\n * Specifies the location of the element in the circular gauge.\n */\nvar GaugeLocation = /** @class */ (function () {\n    function GaugeLocation(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return GaugeLocation;\n}());\nexport { GaugeLocation };\n/** @private */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return Rect;\n}());\nexport { Rect };\n/** @private */\nvar TextOption = /** @class */ (function (_super) {\n    __extends(TextOption, _super);\n    function TextOption(id, x, y, anchor, text, transform, baseLine) {\n        if (transform === void 0) { transform = ''; }\n        var _this = _super.call(this, id) || this;\n        _this.transform = '';\n        _this.baseLine = 'auto';\n        _this.x = x;\n        _this.y = y;\n        _this.anchor = anchor;\n        _this.text = text;\n        _this.transform = transform;\n        _this.baseLine = baseLine;\n        return _this;\n    }\n    return TextOption;\n}(CustomizeOption));\nexport { TextOption };\n/** @private */\nvar VisibleLabels = /** @class */ (function () {\n    function VisibleLabels(text, value, size) {\n        this.text = text;\n        this.value = value;\n        this.size = size;\n    }\n    return VisibleLabels;\n}());\nexport { VisibleLabels };\n","/**\n * Specifies Circular-Gauge Helper methods\n */\nimport { setStyleAttribute } from '@syncfusion/ej2-base';\nimport { isCompleteAngle, getDegree } from './helper-common';\n/**\n * Function to set style to the element.\n *\n * @param {HTMLElement} element - Specifies the element.\n * @param {string} fill - Specifies the fill of the element.\n * @param {BorderModel} border - Specifies the border of the element.\n * @returns {void}\n * @private\n */\nexport function setStyles(element, fill, border) {\n    setStyleAttribute(element, {\n        'stroke': border.color, 'stroke-width': border.width,\n        'fill': fill\n    });\n}\n/**\n * Function to get the value from angle for circular gauge.\n *\n * @param {number} angle - Specifies the angle.\n * @param {number} maximumValue - Specifies the maximumValue.\n * @param {number} minimumValue - Specifies the minimumValue.\n * @param {number} startAngle - Specifies the startAngle.\n * @param {number} endAngle - Specifies the endAngle.\n * @param {boolean} isClockWise - Specifies the isClockWise.\n * @returns {number} - Returs the number.\n * @private\n */\nexport function getValueFromAngle(angle, maximumValue, minimumValue, startAngle, endAngle, isClockWise) {\n    endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n    angle = angle < startAngle ? (angle + 360) : angle;\n    if (isClockWise) {\n        return (((angle - startAngle) / getDegree(startAngle, endAngle)) * (maximumValue - minimumValue)) + minimumValue;\n    }\n    else {\n        return maximumValue - ((((angle - startAngle) / getDegree(startAngle, endAngle)) * (maximumValue - minimumValue)));\n    }\n}\n/**\n * Function to get current point for circular gauge using element id.\n *\n * @param {string} targetId - Specifies the target id.\n * @param {CircularGauge} gauge - Specifies the gauge instance.\n * @returns {IVisibleRange} - Returns the current point.\n * @private\n */\nexport function getRange(targetId, gauge) {\n    var tempString = targetId.replace(gauge.element.id, '').split('_Axis_')[1];\n    return {\n        axisIndex: +tempString[0],\n        rangeIndex: +tempString.split('Range_')[1]\n    };\n}\n","/**\n * Specifies gauge Themes\n */\nexport var Theme;\n(function (Theme) {\n    /** @private */\n    Theme.axisLabelFont = {\n        size: '12px',\n        fontWeight: null,\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: null\n    };\n    Theme.legendLabelFont = {\n        size: '12px',\n        fontWeight: null,\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: null\n    };\n})(Theme || (Theme = {}));\n/**\n * @param {string} theme theme\n * @returns {string[]} palette\n * @private */\nexport function getRangePalette(theme) {\n    var palette = ['#50c917', '#27d5ff', '#fcde0b', '#ffb133', '#ff5985'];\n    switch (theme.toLowerCase()) {\n        case 'tailwind':\n            palette = ['#0369A1', '#14B8A6', '#15803D', '#334155', '#5A61F6',\n                '#65A30D', '#8B5CF6', '#9333EA', '#F59E0B', '#F97316'];\n            break;\n        case 'tailwinddark':\n            palette = ['#10B981', '#22D3EE', '#2DD4BF', '#4ADE80', '#8B5CF6',\n                '#E879F9', '#F472B6', '#F87171', '#F97316', '#FCD34D'];\n            break;\n        case 'bootstrap5':\n            palette = ['#262E0B', '#668E1F', '#AF6E10', '#862C0B', '#1F2D50',\n                '#64680B', '#311508', '#4C4C81', '#0C7DA0', '#862C0B'];\n            break;\n        case 'bootstrap5dark':\n            palette = ['#5ECB9B', '#A860F1', '#EBA844', '#557EF7', '#E9599B',\n                '#BFC529', '#3BC6CF', '#7A68EC', '#74B706', '#EA6266'];\n            break;\n        case 'fluent':\n            palette = ['#614570', '#4C6FB1', '#CC6952', '#3F579A', '#4EA09B',\n                '#6E7A89', '#D4515C', '#E6AF5D', '#639751', '#9D4D69'];\n            break;\n        case 'fluentdark':\n            palette = ['#8AB113', '#2A72D5', '#43B786', '#584EC6', '#E85F9C',\n                '#6E7A89', '#EA6266', '#EBA844', '#26BC7A', '#BC4870'];\n            break;\n        case 'material3':\n            palette = ['#6200EE', '#E77A16', '#82C100', '#7107DC', '#05BB3D',\n                '#D21020', '#FAD200', '#0085FF', '#9204EA', '#08EE9B'];\n            break;\n        case 'material3dark':\n            palette = ['#4EAAFF', '#FA4EAB', '#FFF500', '#17EA58', '#38FFE7',\n                '#FF9E45', '#B3F32F', '#B93CE4', '#FC5664', '#9B55FF'];\n            break;\n    }\n    return palette;\n}\n/**\n * Function to get ThemeStyle\n *\n * @param {GaugeTheme} theme theme\n * @returns {IThemeStyle} style\n * @private */\nexport function getThemeStyle(theme) {\n    var style;\n    switch (theme.toLowerCase()) {\n        case 'materialdark':\n        case 'fabricdark':\n        case 'bootstrapdark':\n            style = {\n                backgroundColor: '#333232',\n                titleFontColor: '#ffffff',\n                tooltipFillColor: '#FFFFFF',\n                tooltipFontColor: '#000000',\n                tooltipFontSize: '13px',\n                tooltipTextOpacity: 1,\n                labelColor: '#DADADA',\n                lineColor: '#C8C8C8',\n                majorTickColor: '#C8C8C8',\n                minorTickColor: '#9A9A9A',\n                pointerColor: '#9A9A9A',\n                capColor: '#9A9A9A',\n                needleColor: '#9A9A9A',\n                needleTailColor: '#9A9A9A',\n                fontSize: '15px',\n                labelFontFamily: 'Segoe UI',\n                fontFamily: 'Segoe UI',\n                fontWeight: 'Normal',\n                titleFontWeight: 'Normal'\n            };\n            break;\n        case 'highcontrast':\n            style = {\n                backgroundColor: '#000000',\n                titleFontColor: '#FFFFFF',\n                tooltipFillColor: '#ffffff',\n                tooltipFontColor: '#000000',\n                tooltipFontSize: '13px',\n                tooltipTextOpacity: 1,\n                labelColor: '#FFFFFF',\n                lineColor: '#FFFFFF',\n                majorTickColor: '#FFFFFF',\n                minorTickColor: '#FFFFFF',\n                pointerColor: '#FFFFFF',\n                capColor: '#FFFFFF',\n                needleColor: '#FFFFFF',\n                needleTailColor: '#FFFFFF',\n                fontSize: '15px',\n                labelFontFamily: 'Segoe UI',\n                fontFamily: 'Segoe UI',\n                fontWeight: 'Normal',\n                titleFontWeight: 'Normal'\n            };\n            break;\n        case 'bootstrap4':\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#212529',\n                tooltipFillColor: '#000000',\n                tooltipFontColor: '#FFFFFF',\n                tooltipFontSize: '13px',\n                labelColor: '#212529',\n                lineColor: '#DEE2E6',\n                majorTickColor: '#ADB5BD',\n                minorTickColor: '#CED4DA',\n                pointerColor: '#6C757D',\n                capColor: '#6C757D',\n                needleColor: '#6C757D',\n                needleTailColor: '#6C757D',\n                fontFamily: 'HelveticaNeue-Medium',\n                fontSize: '16px',\n                labelFontFamily: 'HelveticaNeue',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9,\n                fontWeight: 'Normal',\n                titleFontWeight: 'Normal',\n            };\n            break;\n        case 'tailwind':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#374151',\n                tooltipFillColor: '#111827',\n                tooltipFontColor: '#F9FAFB',\n                tooltipFontSize: '13px',\n                labelColor: '#6B7280',\n                lineColor: '#E5E7EB',\n                majorTickColor: '#9CA3AF',\n                minorTickColor: '#9CA3AF',\n                pointerColor: '#1F2937',\n                capColor: '#1F2937',\n                needleColor: '#1F2937',\n                needleTailColor: '#1F2937',\n                fontFamily: 'Inter',\n                fontSize: '14px',\n                labelFontFamily: 'Inter',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9,\n                fontWeight: 'Normal',\n                titleFontWeight: '500'\n            };\n            break;\n        case 'tailwinddark':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#D1D5DB',\n                tooltipFillColor: '#F9FAFB',\n                tooltipFontColor: '#1F2937',\n                tooltipFontSize: '13px',\n                labelColor: '#9CA3AF',\n                lineColor: '#374151',\n                majorTickColor: '#6B7280',\n                minorTickColor: '#6B7280',\n                pointerColor: '#9CA3AF',\n                capColor: '#9CA3AF',\n                needleColor: '#9CA3AF',\n                needleTailColor: '#9CA3AF',\n                fontFamily: 'Inter',\n                fontSize: '14px',\n                labelFontFamily: 'Inter',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9,\n                fontWeight: 'Normal',\n                titleFontWeight: '500'\n            };\n            break;\n        case 'bootstrap5':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#343A40',\n                tooltipFillColor: '#212529',\n                tooltipFontColor: '#F9FAFB',\n                tooltipFontSize: '13px',\n                labelColor: '#495057',\n                lineColor: '#E5E7EB',\n                majorTickColor: '#9CA3AF',\n                minorTickColor: '#9CA3AF',\n                pointerColor: '#1F2937',\n                capColor: '#1F2937',\n                needleColor: '#1F2937',\n                needleTailColor: '#1F2937',\n                fontFamily: 'Helvetica Neue',\n                fontSize: '14px',\n                labelFontFamily: 'Helvetica Neue',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                fontWeight: 'Normal',\n                titleFontWeight: '500'\n            };\n            break;\n        case 'bootstrap5dark':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#E9ECEF',\n                tooltipFillColor: '#E9ECEF',\n                tooltipFontColor: '#212529',\n                tooltipFontSize: '13px',\n                labelColor: '#CED4DA',\n                lineColor: '#343A40',\n                majorTickColor: '#6C757D',\n                minorTickColor: '#6C757D',\n                pointerColor: '#ADB5BD',\n                capColor: '#ADB5BD',\n                needleColor: '#ADB5BD',\n                needleTailColor: '#ADB5BD',\n                fontFamily: 'Helvetica Neue',\n                fontSize: '14px',\n                labelFontFamily: 'Helvetica Neue',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                fontWeight: 'Normal',\n                titleFontWeight: '500'\n            };\n            break;\n        case 'fluent':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#201F1E',\n                tooltipFillColor: '#FFFFFF',\n                tooltipFontColor: '#323130',\n                tooltipFontSize: '13px',\n                labelColor: '#3B3A39',\n                lineColor: '#EDEBE9',\n                majorTickColor: '#C8C6C4',\n                minorTickColor: '#C8C6C4',\n                pointerColor: '#A19F9D',\n                capColor: '#A19F9D',\n                needleColor: '#A19F9D',\n                needleTailColor: '#A19F9D',\n                fontFamily: 'Segoe UI',\n                fontSize: '14px',\n                labelFontFamily: 'Segoe UI',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                fontWeight: 'Normal',\n                titleFontWeight: '600'\n            };\n            break;\n        case 'fluentdark':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#F3F2F1',\n                tooltipFillColor: '#252423',\n                tooltipFontColor: '#F3F2F1',\n                tooltipFontSize: '13px',\n                labelColor: '#C8C6C4',\n                lineColor: '#292827',\n                majorTickColor: '#484644',\n                minorTickColor: '#484644',\n                pointerColor: '#797775',\n                capColor: '#797775',\n                needleColor: '#797775',\n                needleTailColor: '#797775',\n                fontFamily: 'Segoe UI',\n                fontSize: '14px',\n                labelFontFamily: 'Segoe UI',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                fontWeight: 'Normal',\n                titleFontWeight: '600'\n            };\n            break;\n        case 'material3':\n            style = {\n                backgroundColor: 'transparent',\n                titleFontColor: '#1C1B1F',\n                tooltipFillColor: '#313033',\n                tooltipFontColor: '#F4EFF4',\n                tooltipFontSize: '14px',\n                labelColor: ' #1E192B',\n                lineColor: '#E7E0EC',\n                majorTickColor: '#C4C7C5',\n                minorTickColor: '#C4C7C5',\n                pointerColor: '#49454E',\n                capColor: '#49454E',\n                needleColor: '#49454E',\n                needleTailColor: '#49454E',\n                fontFamily: 'Roboto',\n                fontSize: '16px',\n                labelFontFamily: 'Roboto',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                fontWeight: '400',\n                titleFontWeight: '500'\n            };\n            break;\n        case 'material3dark':\n            style = {\n                backgroundColor: 'transparent',\n                titleFontColor: '#E6E1E5',\n                tooltipFillColor: '#E6E1E5',\n                tooltipFontColor: '#313033',\n                tooltipFontSize: '14px',\n                labelColor: '#E6E1E5',\n                lineColor: '#49454F',\n                majorTickColor: '#444746',\n                minorTickColor: '#444746',\n                pointerColor: '#CAC4D0',\n                capColor: '#CAC4D0',\n                needleColor: '#CAC4D0',\n                needleTailColor: '#CAC4D0',\n                fontFamily: 'Roboto',\n                fontSize: '16px',\n                labelFontFamily: 'Roboto',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                fontWeight: '400',\n                titleFontWeight: '500'\n            };\n            break;\n        default:\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#424242',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                tooltipFontSize: '13px',\n                tooltipTextOpacity: 1,\n                labelColor: '#212121',\n                lineColor: '#E0E0E0',\n                majorTickColor: '#9E9E9E',\n                minorTickColor: '#9E9E9E',\n                pointerColor: '#757575',\n                capColor: '#757575',\n                needleColor: '#757575',\n                needleTailColor: '#757575',\n                fontSize: '15px',\n                labelFontFamily: 'Segoe UI',\n                fontFamily: 'Segoe UI',\n                fontWeight: 'Normal',\n                titleFontWeight: 'Normal'\n            };\n            break;\n    }\n    return style;\n}\n","/**\n * Specifies Circular-Gauge Tooltip Helper methods\n */\nimport { GaugeLocation, getTemplateFunction, Size } from './helper-common';\nimport { remove } from '@syncfusion/ej2-base';\n/**\n * Function to get the mouse position\n *\n * @param {number} pageX - Specifies the pageX value.\n * @param {number} pageY - Specifies the pageY value.\n * @param {Element} element - Specifies the element.\n * @returns {GaugeLocation} - Returns the location.\n *\n * @private\n */\nexport function getMousePosition(pageX, pageY, element) {\n    var elementRect = element.getBoundingClientRect();\n    var pageXOffset = element.ownerDocument.defaultView.pageXOffset;\n    var pageYOffset = element.ownerDocument.defaultView.pageYOffset;\n    var clientTop = element.ownerDocument.documentElement.clientTop;\n    var clientLeft = element.ownerDocument.documentElement.clientLeft;\n    var positionX = elementRect.left + pageXOffset - clientLeft;\n    var positionY = elementRect.top + pageYOffset - clientTop;\n    return new GaugeLocation((pageX - positionX), (pageY - positionY));\n}\n/**\n * function to get the size of the element.\n *\n * @param {string} template - Specifies the template element.\n * @param {CircularGauge} gauge - Specifies the gauge instance.\n * @param {HTMLElement} parent - specifies the element.\n * @returns {Size} - Return the size of the element\n *\n * @private\n */\nexport function getElementSize(template, gauge, parent) {\n    var elementSize;\n    var element;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var templateFn = getTemplateFunction(template, gauge);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var tooltipData = templateFn ? (gauge.isVue || gauge.isVue3) ? templateFn({}, gauge, null, gauge.element.id + 'Template')\n        : templateFn({}, null, null, gauge.element.id + 'Template') : [];\n    if (templateFn && tooltipData.length) {\n        element = gauge.createElement('div', { id: gauge.element.id + '_Measure_Element' });\n        gauge.element.appendChild(element);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var templateElement = (gauge.isVue || gauge.isVue3) ? templateFn({}, gauge, null, gauge.element.id + 'Template')\n            : templateFn({}, null, null, gauge.element.id + 'Template');\n        var templateLength = templateElement.length;\n        while (templateLength > 0) {\n            element.appendChild(templateElement[0]);\n            templateLength--;\n        }\n        parent.appendChild(element);\n        elementSize = new Size(parent.getBoundingClientRect().width, parent.getBoundingClientRect().height);\n        remove(element);\n    }\n    return elementSize;\n}\n","/**\n * Specifies Circular-Gauge axis-panel Helper methods\n */\n/**\n * Function to calculate the sum of array values.\n *\n * @param {number} from - Specifies the from value.\n * @param {number} to - Specifies the to value.\n * @param {number[]} values - Specifies the number.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function calculateSum(from, to, values) {\n    var sum = 0;\n    var length = values.length;\n    for (; from < length; from++) {\n        sum += values[from];\n    }\n    return sum;\n}\n","/**\n * Specifies Circular-Gauge axis-render Helper methods\n */\n/**\n * Function to get range color from value for circular gauge.\n *\n * @param {number} value - Specifies the value.\n * @param {Range[]} ranges - Specifies the ranges.\n * @param {string} color - Specifies the color.\n * @returns {string} - Returns the color.\n * @private\n */\nexport function getRangeColor(value, ranges, color) {\n    var min = 0;\n    var max = 0;\n    var currentRange = ranges.filter(function (range) {\n        min = Math.min(range.start, range.end);\n        max = Math.max(range.start, range.end);\n        return (value >= min && max >= value);\n    });\n    return currentRange.length ? currentRange[0].rangeColor : color;\n}\n","/**\n * Specifies Circular-Gauge pointer-render Helper methods\n */\nimport { getLocationFromAngle, isCompleteAngle, getDegree } from './helper-common';\n/**\n * Function to calculate the value for linear animation effect\n *\n * @param {number} currentTime - Specifies the currentTime.\n * @param {number} startValue - Specifies the startValue.\n * @param {number} endValue - Specifies the endValue.\n * @param {number} duration - Specifies the duration.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function linear(currentTime, startValue, endValue, duration) {\n    return -endValue * Math.cos(currentTime / duration * (Math.PI / 2)) + endValue + startValue;\n}\n/**\n * Function to calculate the complete path arc of the circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {number} start - Specifies the start value.\n * @param {number} end - Specifies the end value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} innerRadius - Specifies the innerRadius value.\n * @param {boolean} checkMinValue - Specifies the checkMinValue value.\n * @returns {string} - Returns the path value.\n * @private\n */\nexport function getCompleteArc(center, start, end, radius, innerRadius, checkMinValue) {\n    end -= isCompleteAngle(start, end) && !checkMinValue ? 0.0001 : 0;\n    var degree = getDegree(start, end);\n    return getCompletePath(center, getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), radius, getLocationFromAngle(start, innerRadius, center), getLocationFromAngle(end, innerRadius, center), innerRadius, (degree < 180) ? 0 : 1);\n}\n/**\n * Function to get the complete path direction of the circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {GaugeLocation} start - Specifies the start value.\n * @param {GaugeLocation} end - Specifies the end value.\n * @param {number} radius - Specifies the radius value.\n * @param {GaugeLocation} innerStart - Specifies the innerStart value.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd value.\n * @param {number} innerRadius - Specifies the innerRadius value.\n * @param {number} clockWise - Specifies the clockWise.\n * @returns {string} - Returns the path.\n * @private\n */\nexport function getCompletePath(center, start, end, radius, innerStart, innerEnd, innerRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' + clockWise +\n        ' 1 ' + end.x + ' ' + end.y + ' L ' + innerEnd.x + ' ' + innerEnd.y + ' A ' + innerRadius +\n        ' ' + innerRadius + ' 0 ' + clockWise + ',0 ' + innerStart.x + ' ' + innerStart.y + ' Z';\n}\n","/**\n * Specifies Circular-Gauge Common Helper methods\n */\nimport { measureText } from '../utils/helper-common';\nimport { createElement } from '@syncfusion/ej2-base';\n/**\n * @param {number} maxWidth - Specifies the maximum width.\n * @param {string} text - Specifies the text.\n * @param {FontModel} font - Specifies the font.\n * @returns {string} - Returns the label.\n * @private */\nexport function textTrim(maxWidth, text, font) {\n    var label = text;\n    var size = measureText(text, font).width;\n    if (size > maxWidth) {\n        var textLength = text.length;\n        for (var i = textLength - 1; i >= 0; --i) {\n            label = text.substring(0, i) + '...';\n            size = measureText(label, font).width;\n            if (size <= maxWidth) {\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/**\n * @param {string} text - Specifies the text.\n * @param {number} x - Specifies the x value.\n * @param {number} y - Specifies the y value.\n * @param {number} areaWidth - Specifies the area width.\n * @param {string} id - Specifies the id.\n * @param {Element} element - Specifies the element.\n * @returns {void}\n * @private */\nexport function showTooltip(text, x, y, areaWidth, id, element) {\n    //let id1: string = 'EJ2_legend_tooltip';\n    var tooltip = document.getElementById(id);\n    var width = measureText(text, {\n        fontFamily: 'Segoe UI', size: '12px',\n        fontStyle: 'Normal', fontWeight: 'Regular'\n    }).width + 5;\n    x = (x + width > areaWidth) ? x - width : x;\n    if (!tooltip) {\n        tooltip = createElement('div', {\n            id: id\n        });\n        tooltip.innerText = text;\n        tooltip.style.cssText = 'top:' + (y + 15).toString() + 'px;left:' + (x + 15).toString() +\n            'px;background-color: rgb(255, 255, 255) !important; color:black !important; ' +\n            'position:absolute;border:1px solid rgb(112, 112, 112); padding-left : 3px; padding-right : 2px;' +\n            'padding-bottom : 2px; padding-top : 2px; font-size:12px; font-family: \"Segoe UI\"';\n        element.appendChild(tooltip);\n    }\n    else {\n        tooltip.innerText = text;\n        tooltip.style.top = (y + 15).toString() + 'px';\n        tooltip.style.left = (x + 15).toString() + 'px';\n    }\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Sets and gets the options to customize the styles of the borders in circular gauge.\n */\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], Border.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], Border.prototype, \"dashArray\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Sets and gets the font style for the circular gauge.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('16px')\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property('')\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property('segoe UI')\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * Sets and gets the options to customize the tooltip properties for range tooltip.\n */\nvar RangeTooltip = /** @class */ (function (_super) {\n    __extends(RangeTooltip, _super);\n    function RangeTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], RangeTooltip.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ size: null, fontFamily: null, opacity: null, fontWeight: null }, Font)\n    ], RangeTooltip.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], RangeTooltip.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], RangeTooltip.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], RangeTooltip.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], RangeTooltip.prototype, \"border\", void 0);\n    __decorate([\n        Property(false)\n    ], RangeTooltip.prototype, \"showAtMousePosition\", void 0);\n    return RangeTooltip;\n}(ChildProperty));\nexport { RangeTooltip };\n/**\n * Sets and gets the options to customize the tooltip for annotation in circular gauge.\n */\nvar AnnotationTooltip = /** @class */ (function (_super) {\n    __extends(AnnotationTooltip, _super);\n    function AnnotationTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], AnnotationTooltip.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ size: '13px', fontFamily: null, opacity: null }, Font)\n    ], AnnotationTooltip.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], AnnotationTooltip.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], AnnotationTooltip.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], AnnotationTooltip.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], AnnotationTooltip.prototype, \"border\", void 0);\n    return AnnotationTooltip;\n}(ChildProperty));\nexport { AnnotationTooltip };\n/**\n * Sets and gets the margin of circular gauge.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Sets and gets the options to customize the tooltip of the circular gauge.\n */\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ size: null, fontFamily: null, opacity: null, fontWeight: null }, Font)\n    ], TooltipSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Complex({}, RangeTooltip)\n    ], TooltipSettings.prototype, \"rangeSettings\", void 0);\n    __decorate([\n        Complex({}, AnnotationTooltip)\n    ], TooltipSettings.prototype, \"annotationSettings\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], TooltipSettings.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"showAtMousePosition\", void 0);\n    __decorate([\n        Property('Pointer')\n    ], TooltipSettings.prototype, \"type\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\nimport { Font, Border } from '../model/base';\nimport { Theme } from '../model/theme';\n/**\n * Sets and gets the options to customize the axis line in circular gauge.\n */\nvar Line = /** @class */ (function (_super) {\n    __extends(Line, _super);\n    function Line() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(2)\n    ], Line.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], Line.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(null)\n    ], Line.prototype, \"color\", void 0);\n    return Line;\n}(ChildProperty));\nexport { Line };\n/**\n * Sets and gets the options to customize the axis label in circular gauge.\n */\nvar Label = /** @class */ (function (_super) {\n    __extends(Label, _super);\n    function Label() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex(Theme.axisLabelFont, Font)\n    ], Label.prototype, \"font\", void 0);\n    __decorate([\n        Property('')\n    ], Label.prototype, \"format\", void 0);\n    __decorate([\n        Property('Inside')\n    ], Label.prototype, \"position\", void 0);\n    __decorate([\n        Property('None')\n    ], Label.prototype, \"hiddenLabel\", void 0);\n    __decorate([\n        Property(false)\n    ], Label.prototype, \"autoAngle\", void 0);\n    __decorate([\n        Property(false)\n    ], Label.prototype, \"useRangeColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Label.prototype, \"offset\", void 0);\n    __decorate([\n        Property(true)\n    ], Label.prototype, \"shouldMaintainPadding\", void 0);\n    return Label;\n}(ChildProperty));\nexport { Label };\n/**\n * Sets and gets the option to customize the ranges of an axis in circular gauge.\n */\nvar Range = /** @class */ (function (_super) {\n    __extends(Range, _super);\n    function Range() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.isLinearCircularGradient = false;\n        return _this;\n    }\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"start\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"end\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"radius\", void 0);\n    __decorate([\n        Property(10)\n    ], Range.prototype, \"startWidth\", void 0);\n    __decorate([\n        Property(10)\n    ], Range.prototype, \"endWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"roundedCornerRadius\", void 0);\n    __decorate([\n        Property(1)\n    ], Range.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('')\n    ], Range.prototype, \"legendText\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Range.prototype, \"position\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"offset\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"linearGradient\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"radialGradient\", void 0);\n    return Range;\n}(ChildProperty));\nexport { Range };\n/**\n * Sets and gets the options to customize the major and minor tick lines of an axis in circular gauge.\n */\nvar Tick = /** @class */ (function (_super) {\n    __extends(Tick, _super);\n    function Tick() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(2)\n    ], Tick.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"interval\", void 0);\n    __decorate([\n        Property(0)\n    ], Tick.prototype, \"offset\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"color\", void 0);\n    __decorate([\n        Property('Inside')\n    ], Tick.prototype, \"position\", void 0);\n    __decorate([\n        Property(false)\n    ], Tick.prototype, \"useRangeColor\", void 0);\n    __decorate([\n        Property('0')\n    ], Tick.prototype, \"dashArray\", void 0);\n    return Tick;\n}(ChildProperty));\nexport { Tick };\n/**\n * Sets and gets the needle cap of pointer in circular gauge.\n */\nvar Cap = /** @class */ (function (_super) {\n    __extends(Cap, _super);\n    function Cap() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Cap.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], Cap.prototype, \"linearGradient\", void 0);\n    __decorate([\n        Property(null)\n    ], Cap.prototype, \"radialGradient\", void 0);\n    __decorate([\n        Complex({ color: null, width: 8 }, Border)\n    ], Cap.prototype, \"border\", void 0);\n    __decorate([\n        Property(8)\n    ], Cap.prototype, \"radius\", void 0);\n    return Cap;\n}(ChildProperty));\nexport { Cap };\n/**\n * Sets and gets the options to customize the pointer needle in the circular gauge.\n */\nvar NeedleTail = /** @class */ (function (_super) {\n    __extends(NeedleTail, _super);\n    function NeedleTail() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], NeedleTail.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: null, width: 0 }, Border)\n    ], NeedleTail.prototype, \"border\", void 0);\n    __decorate([\n        Property('0%')\n    ], NeedleTail.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], NeedleTail.prototype, \"linearGradient\", void 0);\n    __decorate([\n        Property(null)\n    ], NeedleTail.prototype, \"radialGradient\", void 0);\n    return NeedleTail;\n}(ChildProperty));\nexport { NeedleTail };\n/**\n * Sets and gets the animation of pointers in circular gauge.\n */\nvar Animation = /** @class */ (function (_super) {\n    __extends(Animation, _super);\n    function Animation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], Animation.prototype, \"enable\", void 0);\n    __decorate([\n        Property(1000)\n    ], Animation.prototype, \"duration\", void 0);\n    return Animation;\n}(ChildProperty));\nexport { Animation };\n/**\n * Sets and gets the annotation elements for an axis in circular gauge.\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    function Annotation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(90)\n    ], Annotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property('50%')\n    ], Annotation.prototype, \"radius\", void 0);\n    __decorate([\n        Property('-1')\n    ], Annotation.prototype, \"zIndex\", void 0);\n    __decorate([\n        Property(false)\n    ], Annotation.prototype, \"autoAngle\", void 0);\n    __decorate([\n        Complex({ size: '12px', color: '#686868' }, Font)\n    ], Annotation.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], Annotation.prototype, \"description\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Sets and gets the options to customize the pointers of an axis in circular gauge.\n */\nvar Pointer = /** @class */ (function (_super) {\n    __extends(Pointer, _super);\n    function Pointer() {\n        /**\n         * Sets and gets the value of the pointer in circular gauge.\n         *\n         * @aspDefaultValueIgnore\n         * @default null\n         */\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.isPointerAnimation = true;\n        return _this;\n    }\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"value\", void 0);\n    __decorate([\n        Property('Needle')\n    ], Pointer.prototype, \"type\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Pointer.prototype, \"position\", void 0);\n    __decorate([\n        Property(0)\n    ], Pointer.prototype, \"roundedCornerRadius\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"radius\", void 0);\n    __decorate([\n        Property(20)\n    ], Pointer.prototype, \"pointerWidth\", void 0);\n    __decorate([\n        Complex({}, Cap)\n    ], Pointer.prototype, \"cap\", void 0);\n    __decorate([\n        Complex({}, Font)\n    ], Pointer.prototype, \"textStyle\", void 0);\n    __decorate([\n        Complex({}, NeedleTail)\n    ], Pointer.prototype, \"needleTail\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: '#DDDDDD', width: 0 }, Border)\n    ], Pointer.prototype, \"border\", void 0);\n    __decorate([\n        Complex(null, Animation)\n    ], Pointer.prototype, \"animation\", void 0);\n    __decorate([\n        Property('Circle')\n    ], Pointer.prototype, \"markerShape\", void 0);\n    __decorate([\n        Property(5)\n    ], Pointer.prototype, \"markerHeight\", void 0);\n    __decorate([\n        Property('')\n    ], Pointer.prototype, \"text\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"description\", void 0);\n    __decorate([\n        Property(5)\n    ], Pointer.prototype, \"markerWidth\", void 0);\n    __decorate([\n        Property(0)\n    ], Pointer.prototype, \"offset\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"needleStartWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"needleEndWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"linearGradient\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"radialGradient\", void 0);\n    return Pointer;\n}(ChildProperty));\nexport { Pointer };\n/**\n * Sets and gets the options to customize the axis for the circular gauge.\n */\nvar Axis = /** @class */ (function (_super) {\n    __extends(Axis, _super);\n    function Axis() {\n        /**\n         * Sets and gets the minimum value of an axis in the circular gauge.\n         *\n         * @aspDefaultValueIgnore\n         * @default null\n         */\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.visibleLabels = [];\n        return _this;\n    }\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"minimum\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"maximum\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"showLastLabel\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"hideIntersectingLabel\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"roundingPlaces\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"radius\", void 0);\n    __decorate([\n        Complex({}, Line)\n    ], Axis.prototype, \"lineStyle\", void 0);\n    __decorate([\n        Collection([{}], Range)\n    ], Axis.prototype, \"ranges\", void 0);\n    __decorate([\n        Collection([{}], Pointer)\n    ], Axis.prototype, \"pointers\", void 0);\n    __decorate([\n        Collection([{}], Annotation)\n    ], Axis.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({ width: 2, height: 10 }, Tick)\n    ], Axis.prototype, \"majorTicks\", void 0);\n    __decorate([\n        Complex({ width: 2, height: 5 }, Tick)\n    ], Axis.prototype, \"minorTicks\", void 0);\n    __decorate([\n        Property(200)\n    ], Axis.prototype, \"startAngle\", void 0);\n    __decorate([\n        Property(160)\n    ], Axis.prototype, \"endAngle\", void 0);\n    __decorate([\n        Property('ClockWise')\n    ], Axis.prototype, \"direction\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"background\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"rangeGap\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"startAndEndRangeGap\", void 0);\n    __decorate([\n        Complex({}, Label)\n    ], Axis.prototype, \"labelStyle\", void 0);\n    return Axis;\n}(ChildProperty));\nexport { Axis };\n","import { getTemplateFunction, getElement, stringToNumber, getFontStyle, getLocationFromAngle, removeElement } from '../utils/helper-common';\nimport { annotationRender } from '../model/constants';\nimport { createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Annotation Module handles the Annotation of the axis.\n *\n * @hidden\n */\nvar Annotations = /** @class */ (function () {\n    /**\n     * Constructor for Annotation module.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @private.\n     */\n    // eslint-disable-next-line\n    function Annotations(gauge) {\n    }\n    /**\n     * Method to render the annotation for circular gauge.\n     *\n     * @private\n     */\n    Annotations.prototype.renderAnnotation = function (axis, index, gauge) {\n        var _this = this;\n        var width = gauge.availableSize.width;\n        var element = createElement('div', {\n            id: gauge.element.id + '_Annotations_' + index\n        });\n        var parentElement = getElement(gauge.element.id + '_Secondary_Element');\n        if (!isNullOrUndefined(document.getElementById(gauge.element.id + '_Secondary_Element'))) {\n            document.getElementById(gauge.element.id + '_Secondary_Element').style.width = width + 'px';\n        }\n        axis.annotations.map(function (annotation, annotationIndex) {\n            if (annotation.content !== null) {\n                _this.createTemplate(element, annotationIndex, index, gauge);\n            }\n        });\n        if (parentElement && element.childElementCount) {\n            parentElement.appendChild(element);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        gauge.renderReactTemplates();\n    };\n    /**\n     * Method to create annotation template for circular gauge.\n     *\n     * @private\n     */\n    Annotations.prototype.createTemplate = function (element, annotationIndex, axisIndex, gauge) {\n        var _this = this;\n        var axis = gauge.axes[axisIndex];\n        var annotation = axis.annotations[annotationIndex];\n        var childElement = createElement('div', {\n            id: gauge.element.id + '_Axis_' + axisIndex + '_Annotation_' + annotationIndex\n        });\n        childElement.style.cssText = 'position: absolute; z-index:' + annotation.zIndex + ';transform:' +\n            (annotation.autoAngle ? 'rotate(' + (annotation.angle - 90) + 'deg)' : 'rotate(0deg)') + ';';\n        var argsData = {\n            cancel: false, name: annotationRender, content: annotation.content,\n            axis: axis, annotation: annotation, textStyle: annotation.textStyle\n        };\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        gauge.trigger('annotationRender', argsData, function (observedArgs) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var templateFn;\n            var templateElement;\n            if (!argsData.cancel) {\n                templateFn = getTemplateFunction(argsData.content, gauge);\n                if (templateFn && templateFn(axis, gauge, argsData.content, gauge.element.id + '_Axis' + axisIndex + '_ContentTemplate' + annotationIndex).length) {\n                    templateElement = Array.prototype.slice.call(templateFn(axis, gauge, argsData.content, gauge.element.id + '_Axis' + axisIndex + '_ContentTemplate' + annotationIndex));\n                    var length_1 = templateElement.length;\n                    for (var i = 0; i < length_1; i++) {\n                        childElement.appendChild(templateElement[i]);\n                    }\n                }\n                else {\n                    var annotationElement = createElement('div', {\n                        innerHTML: !isNullOrUndefined(argsData.content) ? argsData.content.toString() : null,\n                        id: 'StringTemplate'\n                    });\n                    annotationElement.style.cssText = getFontStyle(argsData.textStyle);\n                    childElement.appendChild(annotationElement);\n                }\n                _this.updateLocation(childElement, axis, annotation, gauge);\n                element.appendChild(childElement);\n            }\n        });\n    };\n    /**\n     * Method to update the annotation location for circular gauge.\n     *\n     * @param {HTMLElement} element - Specifies the element.\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Annotation} annotation - Specifies the annotation.\n     * @returns {void}\n     */\n    Annotations.prototype.updateLocation = function (element, axis, annotation, gauge) {\n        var location = getLocationFromAngle(annotation.angle - 90, stringToNumber(annotation.radius, axis.currentRadius), gauge.midPoint);\n        var elementRect = this.measureElementRect(element);\n        element.style.left = (location.x - (elementRect.width / 2)) + 'px';\n        element.style.top = (location.y - (elementRect.height / 2)) + 'px';\n        element.setAttribute('aria-label', annotation.description || 'Annotation');\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name\n     */\n    Annotations.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Annotations';\n    };\n    /**\n     * To destroy the annotation.\n     *\n     * @returns {void}\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    Annotations.prototype.destroy = function () { };\n    /**\n     * Function to measure the element rect.\n     *\n     * @param {HTMLElement} element - Specifies the html element.\n     * @returns {ClientRect} - Returns the client rect.\n     * @private\n     */\n    Annotations.prototype.measureElementRect = function (element) {\n        document.body.appendChild(element);\n        var bounds = element.getBoundingClientRect();\n        removeElement(element.id);\n        return bounds;\n    };\n    return Annotations;\n}());\nexport { Annotations };\n","/**\n * Specifies the gauge constant value\n */\n/**\n * Sets and gets loaded event name in the circular gauge.\n *\n * @private\n */\nexport var loaded = 'loaded';\n/**\n * Sets and gets load event name in the circular gauge.\n *\n * @private\n */\nexport var load = 'load';\n/**\n * Sets and gets animation complete event name in the circular gauge.\n *\n * @private\n */\nexport var animationComplete = 'animationComplete';\n/**\n * Sets and gets axis label render event name in the circular gauge.\n *\n * @private\n */\nexport var axisLabelRender = 'axisLabelRender';\n/**\n * Sets and gets radius calculate event name in the circular gauge.\n *\n * @private\n */\nexport var radiusCalculate = 'radiusCalculate';\n/**\n * Sets and gets tooltip render event name in the circular gauge.\n *\n * @private\n */\nexport var tooltipRender = 'tooltipRender';\n/**\n * Sets and gets annotation render event name in the circular gauge.\n *\n * @private\n */\nexport var annotationRender = 'annotationRender';\n/**\n * Sets and gets gauge mouse move event name in the circular gauge.\n *\n * @private\n */\nexport var gaugeMouseMove = 'gaugeMouseMove';\n/**\n * Sets and gets gauge mouse leave event name in the circular gauge.\n *\n * @private\n */\nexport var gaugeMouseLeave = 'gaugeMouseLeave';\n/**\n * Sets and gets gauge mouse down event name in the circular gauge.\n *\n * @private\n */\nexport var gaugeMouseDown = 'gaugeMouseDown';\n/**\n * Sets and gets gauge mouse up event name in circular gauge.\n *\n * @private\n */\nexport var gaugeMouseUp = 'gaugeMouseUp';\n/**\n * Sets and gets drag start event name in the circular gauge.\n *\n * @private\n */\nexport var dragStart = 'dragStart';\n/**\n * Sets and gets drag move event name in the circular gauge.\n *\n * @private\n */\nexport var dragMove = 'dragMove';\n/**\n * Sets and gets drag end event name in the circular gauge.\n *\n * @private\n */\nexport var dragEnd = 'dragEnd';\n/**\n * Sets and gets resize event name in the circular gauge.\n *\n * @private\n */\nexport var resized = 'resized';\n/**\n * Sets and gets before print event name in the circular gauge.\n *\n * @private\n */\nexport var beforePrint = 'beforePrint';\n/**\n * Sets and gets pointer start event name in the circular gauge.\n *\n * @private\n */\nexport var pointerStart = 'pointerStart';\n/**\n * Sets and gets pointer move event name in the circular gauge.\n *\n * @private\n */\nexport var pointerMove = 'pointerMove';\n/**\n * Sets and gets pointer end event name in the circular gauge.\n *\n * @private\n */\nexport var pointerEnd = 'pointerEnd';\n/**\n * Sets and gets range start event name in the circular gauge.\n *\n * @private\n */\nexport var rangeStart = 'rangeStart';\n/**\n * Sets and gets range move event name in the circular gauge.\n *\n * @private\n */\nexport var rangeMove = 'rangeMove';\n/**\n * Sets and gets range end event name in the circular gauge.\n *\n * @private\n */\nexport var rangeEnd = 'rangeEnd';\n","import { Tooltip } from '@syncfusion/ej2-svg-base';\nimport { stringToNumber, getAngleFromValue, getLocationFromAngle, getPointer, getLabelFormat, Rect } from '../utils/helper-common';\nimport { getMousePosition, getElementSize } from '../utils/helper-tooltip';\nimport { Browser, createElement, remove, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport { tooltipRender } from '../model/constants';\n/**\n * Sets and gets the module that handles the tooltip of the circular gauge\n *\n * @hidden\n */\nvar GaugeTooltip = /** @class */ (function () {\n    /**\n     * Constructor for Tooltip module.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @private.\n     */\n    function GaugeTooltip(gauge) {\n        this.gauge = gauge;\n        this.tooltipId = this.gauge.element.id + '_CircularGauge_Tooltip';\n        this.tooltip = gauge.tooltip;\n        this.borderStyle = this.tooltip.border;\n        this.addEventListener();\n    }\n    /**\n     * Method to render the tooltip for circular gauge.\n     *\n     * @param {PointerEvent} e - specifies the event argument.\n     * @returns {void}\n     *\n     * @private\n     */\n    GaugeTooltip.prototype.renderTooltip = function (e) {\n        var _this = this;\n        this.gaugeId = this.gauge.element.getAttribute('id');\n        var pageX;\n        var pageY;\n        var target;\n        var touchArg;\n        var location;\n        var samePointerEle = false;\n        var isTooltipRender = false;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            target = touchArg.target;\n            pageX = touchArg.changedTouches[0].pageX;\n            pageY = touchArg.changedTouches[0].pageY;\n        }\n        else {\n            target = e.target;\n            pageX = e.pageX;\n            pageY = e.pageY;\n        }\n        if ((this.tooltip.type.indexOf('Pointer') > -1) && (target.id.indexOf('_Pointer_') >= 0) &&\n            (target.id.indexOf(this.gaugeId) >= 0)) {\n            if (this.pointerEle !== null) {\n                samePointerEle = (this.pointerEle === target);\n            }\n            isTooltipRender = true;\n            var svgRect_1 = this.gauge.svgObject.getBoundingClientRect();\n            var elementRect = this.gauge.element.getBoundingClientRect();\n            var axisRect_1 = document.getElementById(this.gauge.element.id + '_AxesCollection').getBoundingClientRect();\n            var rect_1 = new Rect(Math.abs(elementRect.left - svgRect_1.left), Math.abs(elementRect.top - svgRect_1.top), svgRect_1.width, svgRect_1.height);\n            var currentPointer = getPointer(target.id, this.gauge);\n            this.currentAxis = this.gauge.axes[currentPointer.axisIndex];\n            this.currentPointer = (this.currentAxis.pointers)[currentPointer.pointerIndex];\n            var angle_1 = getAngleFromValue(this.currentPointer.currentValue, this.currentAxis.visibleRange.max, this.currentAxis.visibleRange.min, this.currentAxis.startAngle, this.currentAxis.endAngle, this.currentAxis.direction === 'ClockWise') % 360;\n            var tooltipFormat = this.gauge.tooltip.format || this.currentAxis.labelStyle.format;\n            var customLabelFormat = tooltipFormat && tooltipFormat.match('{value}') !== null;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var format = this.gauge.intl.getNumberFormat({\n                format: getLabelFormat(tooltipFormat), useGrouping: this.gauge.useGroupingSeparator\n            });\n            this.tooltipElement();\n            if (this.tooltipEle.childElementCount !== 0 && !this.gauge.enablePointerDrag && !this.gauge.tooltip.showAtMousePosition) {\n                return null;\n            }\n            var roundValue = this.roundedValue(this.currentPointer.currentValue);\n            var pointerContent = customLabelFormat ?\n                tooltipFormat.replace(new RegExp('{value}', 'g'), format(roundValue)) :\n                format(roundValue);\n            location = getLocationFromAngle(angle_1, this.currentAxis.currentRadius, this.gauge.midPoint);\n            location.x = (this.tooltip.template && ((angle_1 >= 150 && angle_1 <= 250) || (angle_1 >= 330 && angle_1 <= 360) ||\n                (angle_1 >= 0 && angle_1 <= 45))) ? (location.x + 10) : location.x;\n            // eslint-disable-next-line prefer-const\n            var tooltipArgs = {\n                name: tooltipRender, cancel: false, content: pointerContent, location: location, axis: this.currentAxis,\n                tooltip: this.tooltip, pointer: this.currentPointer, event: e, gauge: this.gauge, appendInBodyTag: false, type: 'Pointer'\n            };\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var pointerTooltip = function (tooltipArgs) {\n                var template = tooltipArgs.tooltip.template;\n                if (template !== null && template.length === 1 && typeof template !== 'function') {\n                    template = template[template[0]];\n                }\n                if (!tooltipArgs.tooltip.showAtMousePosition) {\n                    if (template) {\n                        var elementSize = getElementSize(template, _this.gauge, _this.tooltipEle);\n                        _this.tooltipRect = Math.abs(axisRect_1.left - svgRect_1.left) > elementSize.width ?\n                            _this.findPosition(rect_1, angle_1, tooltipArgs.location, true) : rect_1;\n                    }\n                    else {\n                        _this.findPosition(rect_1, angle_1, tooltipArgs.location, false);\n                    }\n                }\n                else {\n                    tooltipArgs.location = getMousePosition(pageX, pageY, _this.gauge.svgObject);\n                    _this.tooltipRect = rect_1;\n                }\n                if (!tooltipArgs.cancel && !samePointerEle) {\n                    var pointerTextStyle = {\n                        color: tooltipArgs.tooltip.textStyle.color || _this.gauge.themeStyle.tooltipFontColor,\n                        opacity: tooltipArgs.tooltip.textStyle.opacity || _this.gauge.themeStyle.tooltipTextOpacity,\n                        fontFamily: tooltipArgs.tooltip.textStyle.fontFamily || _this.gauge.themeStyle.fontFamily,\n                        fontWeight: tooltipArgs.tooltip.textStyle.fontWeight || _this.gauge.themeStyle.fontWeight,\n                        fontStyle: tooltipArgs.tooltip.textStyle.fontStyle,\n                        size: tooltipArgs.tooltip.textStyle.size || _this.gauge.themeStyle.tooltipFontSize\n                    };\n                    _this.svgTooltip = _this.svgTooltipCreate(_this.svgTooltip, tooltipArgs, template, _this.arrowInverted, _this.tooltipRect, _this.gauge, tooltipArgs.tooltip.fill, pointerTextStyle, tooltipArgs.tooltip.border);\n                    _this.svgTooltip.opacity = _this.gauge.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;\n                    _this.svgTooltip.appendTo(_this.tooltipEle);\n                    if (template && (_this.tooltipPosition === 'LeftTop' || _this.tooltipPosition === 'LeftBottom')) {\n                        _this.tooltipEle.style.left = (parseFloat(_this.tooltipEle.style.left) - _this.tooltipEle.getBoundingClientRect().width - 20) + 'px';\n                    }\n                    if (template && Math.abs(pageY - _this.tooltipEle.getBoundingClientRect().top) <= 0) {\n                        _this.tooltipEle.style.top = (parseFloat(_this.tooltipEle.style.top) + 20) + 'px';\n                    }\n                }\n            };\n            this.gauge.trigger(tooltipRender, tooltipArgs, pointerTooltip);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.gauge.renderReactTemplates();\n        }\n        else if ((this.tooltip.type.indexOf('Range') > -1) && (target.id.indexOf('_Range_') >= 0) && (!this.gauge.isDrag) &&\n            (target.id.indexOf(this.gaugeId) >= 0)) {\n            isTooltipRender = true;\n            var rangeSvgRect_1 = this.gauge.svgObject.getBoundingClientRect();\n            var rangeElementRect = this.gauge.element.getBoundingClientRect();\n            var rangeAxisRect_1 = document.getElementById(this.gauge.element.id + '_AxesCollection').getBoundingClientRect();\n            var rect_2 = new Rect(Math.abs(rangeElementRect.left - rangeSvgRect_1.left), Math.abs(rangeElementRect.top - rangeSvgRect_1.top), rangeSvgRect_1.width, rangeSvgRect_1.height);\n            var currentRange = getPointer(target.id, this.gauge);\n            this.currentAxis = this.gauge.axes[currentRange.axisIndex];\n            this.currentRange = (this.currentAxis.ranges)[currentRange.pointerIndex];\n            var rangeAngle_1 = getAngleFromValue((this.currentRange.end - Math.abs((this.currentRange.end - this.currentRange.start) / 2)), this.currentAxis.visibleRange.max, this.currentAxis.visibleRange.min, this.currentAxis.startAngle, this.currentAxis.endAngle, this.currentAxis.direction === 'ClockWise') % 360;\n            var rangeTooltipFormat = this.gauge.tooltip.rangeSettings.format || this.currentAxis.labelStyle.format;\n            var customLabelFormat = rangeTooltipFormat && (rangeTooltipFormat.match('{end}') !== null ||\n                rangeTooltipFormat.match('{start}') !== null);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var rangeFormat = this.gauge.intl.getNumberFormat({\n                format: getLabelFormat(rangeTooltipFormat), useGrouping: this.gauge.useGroupingSeparator\n            });\n            this.tooltipElement();\n            var roundStartValue = this.roundedValue(this.currentRange.start);\n            var roundEndValue = this.roundedValue(this.currentRange.end);\n            var startData_1 = (this.currentRange.start).toString();\n            var endData_1 = (this.currentRange.end).toString();\n            var rangeContent = customLabelFormat ?\n                rangeTooltipFormat.replace(/{start}/g, startData_1).replace(/{end}/g, endData_1) : this.gauge.enableRtl ? 'Start:' + rangeFormat(roundStartValue) + ' <br>End:' + rangeFormat(roundEndValue) + ' ' :\n                'Start : ' + rangeFormat(roundStartValue) + '<br>' + 'End : ' + rangeFormat(roundEndValue);\n            location = getLocationFromAngle(rangeAngle_1, this.currentRange.currentRadius, this.gauge.midPoint);\n            location.x = (this.tooltip.rangeSettings.template && ((rangeAngle_1 >= 150 && rangeAngle_1 <= 250) ||\n                (rangeAngle_1 >= 330 && rangeAngle_1 <= 360) ||\n                (rangeAngle_1 >= 0 && rangeAngle_1 <= 45))) ? (location.x + 10) : location.x;\n            // eslint-disable-next-line prefer-const\n            var rangeTooltipArgs = {\n                name: tooltipRender, cancel: false, content: rangeContent, location: location, axis: this.currentAxis,\n                tooltip: this.tooltip, range: this.currentRange, event: e, gauge: this.gauge, appendInBodyTag: false, type: 'Range'\n            };\n            var rangeTooltipTextStyle_1 = { color: this.gauge.tooltip.rangeSettings.textStyle.color, opacity: this.gauge.tooltip.rangeSettings.textStyle.opacity,\n                fontFamily: this.gauge.tooltip.rangeSettings.textStyle.fontFamily, fontStyle: this.gauge.tooltip.rangeSettings.textStyle.fontStyle,\n                fontWeight: this.gauge.tooltip.rangeSettings.textStyle.fontWeight, size: this.gauge.tooltip.rangeSettings.textStyle.size\n            };\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var rangeTooltip = function (rangeTooltipArgs) {\n                var rangeTemplate = rangeTooltipArgs.tooltip.rangeSettings.template;\n                if (rangeTemplate !== null && rangeTemplate.length === 1 && typeof rangeTemplate !== 'function') {\n                    rangeTemplate = rangeTemplate[rangeTemplate[0]];\n                }\n                if (typeof rangeTemplate !== 'function' && rangeTemplate) {\n                    rangeTemplate = rangeTemplate.replace(/[$]{start}/g, startData_1);\n                    rangeTemplate = rangeTemplate.replace(/[$]{end}/g, endData_1);\n                }\n                if (!_this.tooltip.rangeSettings.showAtMousePosition) {\n                    if (rangeTemplate) {\n                        var elementSize = getElementSize(rangeTemplate, _this.gauge, _this.tooltipEle);\n                        _this.tooltipRect = Math.abs(rangeAxisRect_1.left - rangeSvgRect_1.left) > elementSize.width ?\n                            _this.findPosition(rect_2, rangeAngle_1, rangeTooltipArgs.location, true) : rect_2;\n                    }\n                    else {\n                        _this.findPosition(rect_2, rangeAngle_1, rangeTooltipArgs.location, false);\n                    }\n                }\n                else {\n                    rangeTooltipArgs.location = getMousePosition(pageX, pageY, _this.gauge.svgObject);\n                    _this.tooltipRect = rect_2;\n                }\n                if (!rangeTooltipArgs.cancel) {\n                    rangeTooltipTextStyle_1.color = rangeTooltipArgs.tooltip.rangeSettings.textStyle.color ||\n                        _this.gauge.themeStyle.tooltipFontColor;\n                    rangeTooltipTextStyle_1.fontFamily = rangeTooltipArgs.tooltip.rangeSettings.textStyle.fontFamily\n                        || _this.gauge.themeStyle.fontFamily;\n                    rangeTooltipTextStyle_1.fontWeight = rangeTooltipArgs.tooltip.rangeSettings.textStyle.fontWeight\n                        || _this.gauge.themeStyle.fontWeight;\n                    rangeTooltipTextStyle_1.opacity = rangeTooltipArgs.tooltip.rangeSettings.textStyle.opacity ||\n                        _this.gauge.themeStyle.tooltipTextOpacity;\n                    rangeTooltipTextStyle_1.size = rangeTooltipArgs.tooltip.rangeSettings.textStyle.size\n                        || _this.gauge.themeStyle.tooltipFontSize;\n                    _this.svgTooltip = _this.svgTooltipCreate(_this.svgTooltip, rangeTooltipArgs, rangeTemplate, _this.arrowInverted, _this.tooltipRect, _this.gauge, rangeTooltipArgs.tooltip.rangeSettings.fill, rangeTooltipTextStyle_1, rangeTooltipArgs.tooltip.rangeSettings.border);\n                    _this.svgTooltip.opacity = _this.gauge.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;\n                    _this.svgTooltip.appendTo(_this.tooltipEle);\n                    if (rangeTemplate && (_this.tooltipPosition === 'LeftTop' || _this.tooltipPosition === 'LeftBottom')) {\n                        _this.tooltipEle.style.left = (parseFloat(_this.tooltipEle.style.left) - _this.tooltipEle.getBoundingClientRect().width - 20) + 'px';\n                    }\n                    if (rangeTemplate && Math.abs(pageY - _this.tooltipEle.getBoundingClientRect().top) <= 0) {\n                        _this.tooltipEle.style.top = (parseFloat(_this.tooltipEle.style.top) + 20) + 'px';\n                    }\n                }\n            };\n            this.gauge.trigger(tooltipRender, rangeTooltipArgs, rangeTooltip);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.gauge.renderReactTemplates();\n        }\n        else if ((this.tooltip.type.indexOf('Annotation') > -1) && this.checkParentAnnotationId(target) && ((!this.gauge.isDrag)) &&\n            (this.annotationTargetElement.id.indexOf(this.gaugeId) >= 0)) {\n            isTooltipRender = true;\n            var annotationSvgRect = this.gauge.svgObject.getBoundingClientRect();\n            var annotationElementRect = this.gauge.element.getBoundingClientRect();\n            var rect_3 = new Rect(Math.abs(annotationElementRect.left - annotationSvgRect.left), Math.abs(annotationElementRect.top - annotationSvgRect.top), annotationSvgRect.width, annotationSvgRect.height);\n            var currentAnnotation = getPointer(this.annotationTargetElement.id, this.gauge);\n            this.currentAxis = this.gauge.axes[currentAnnotation.axisIndex];\n            this.currentAnnotation = (this.currentAxis.annotations)[currentAnnotation.pointerIndex];\n            var annotationAngle = (this.currentAnnotation.angle - 90);\n            this.tooltipElement();\n            document.getElementById(this.gauge.element.id + '_Secondary_Element').appendChild(this.tooltipEle);\n            var annotationContent = (this.gauge.tooltip.annotationSettings.format !== null) ?\n                this.gauge.tooltip.annotationSettings.format : '';\n            location = getLocationFromAngle(annotationAngle, stringToNumber(this.currentAnnotation.radius, this.currentAxis.currentRadius), this.gauge.midPoint);\n            location.x = (this.tooltip.annotationSettings.template && ((annotationAngle >= 150 && annotationAngle <= 250) ||\n                (annotationAngle >= 330 && annotationAngle <= 360) || (annotationAngle >= 0 && annotationAngle <= 45))) ?\n                (location.x + 10) : location.x;\n            // eslint-disable-next-line prefer-const\n            var annotationTooltipArgs = {\n                name: tooltipRender, cancel: false, content: annotationContent, location: location, axis: this.currentAxis,\n                tooltip: this.tooltip, annotation: this.currentAnnotation, event: e, gauge: this.gauge, appendInBodyTag: false,\n                type: 'Annotation'\n            };\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var annotationTooltip = function (annotationTooltipArgs) {\n                var annotationTemplate = annotationTooltipArgs.tooltip.annotationSettings.template;\n                if (annotationTemplate !== null && annotationTemplate.length === 1 && typeof annotationTemplate !== 'function') {\n                    annotationTemplate = annotationTemplate[annotationTemplate[0]];\n                }\n                var elementSizeAn = _this.annotationTargetElement.getBoundingClientRect();\n                _this.tooltipPosition = 'RightTop';\n                _this.arrowInverted = true;\n                annotationTooltipArgs.location.x = annotationTooltipArgs.location.x + (elementSizeAn.width / 2);\n                _this.tooltipRect = new Rect(rect_3.x, rect_3.y, rect_3.width, rect_3.height);\n                if (!annotationTooltipArgs.cancel && (_this.gauge.tooltip.annotationSettings.format !== null ||\n                    _this.gauge.tooltip.annotationSettings.template !== null)) {\n                    var annotationTextStyle = {\n                        color: annotationTooltipArgs.tooltip.textStyle.color || _this.gauge.themeStyle.tooltipFontColor,\n                        fontFamily: annotationTooltipArgs.tooltip.textStyle.fontFamily || _this.gauge.themeStyle.fontFamily,\n                        fontWeight: annotationTooltipArgs.tooltip.textStyle.fontWeight || _this.gauge.themeStyle.fontWeight,\n                        opacity: annotationTooltipArgs.tooltip.textStyle.opacity || _this.gauge.themeStyle.tooltipTextOpacity,\n                        fontStyle: annotationTooltipArgs.tooltip.textStyle.fontStyle,\n                        size: annotationTooltipArgs.tooltip.textStyle.size || _this.gauge.themeStyle.fontSize\n                    };\n                    _this.svgTooltip = _this.svgTooltipCreate(_this.svgTooltip, annotationTooltipArgs, annotationTemplate, _this.arrowInverted, _this.tooltipRect, _this.gauge, annotationTooltipArgs.tooltip.annotationSettings.fill, annotationTextStyle, annotationTooltipArgs.tooltip.annotationSettings.border);\n                    _this.svgTooltip.opacity = _this.gauge.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;\n                    _this.svgTooltip.appendTo(_this.tooltipEle);\n                    if (annotationTemplate && Math.abs(pageY - _this.tooltipEle.getBoundingClientRect().top) <= 0) {\n                        _this.tooltipEle.style.top = (parseFloat(_this.tooltipEle.style.top) + 20) + 'px';\n                    }\n                }\n            };\n            this.gauge.trigger(tooltipRender, annotationTooltipArgs, annotationTooltip);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.gauge.renderReactTemplates();\n        }\n        else {\n            var isTooltipRemoved = this.removeTooltip();\n            if (isTooltipRemoved) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                if ((this.gauge.isVue || this.gauge.isVue3)) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    this.gauge.clearTemplate([this.tooltipEle.children[0].id], [0]);\n                }\n                else if (!this.gauge.isAngular) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    this.gauge.clearTemplate();\n                }\n            }\n        }\n        var gaugeElement = document.getElementById(this.gaugeId);\n        var gaugeRect = gaugeElement.getBoundingClientRect();\n        var tooltipRect = isTooltipRender ? this.tooltipEle.getBoundingClientRect() : null;\n        if (isTooltipRender && this.tooltipEle.offsetLeft < 0 && (tooltipRect.left - gaugeRect.left) < 0) {\n            var tooltipLeft = this.tooltipEle.style.left.split('px')[0];\n            this.tooltipEle.style.left = parseInt(tooltipLeft, 10) + (gaugeRect.left - tooltipRect.left) + 'px';\n        }\n        if (isTooltipRender && tooltipRect.top < 0) {\n            this.tooltipEle.style.top = 0 + 'px';\n        }\n    };\n    /**\n     * Method to create tooltip svg element.\n     *\n     * @param {Tooltip} svgTooltip - Specifies the tooltip element.\n     * @param {ITooltipRenderEventArgs} tooltipArg - Specifies the tooltip arguments.\n     * @param {string} template - Specifies the tooltip template.\n     * @param {boolean} arrowInverted - Specifies the boolean value.\n     * @param {Rect} tooltipRect - Specifies the rect element.\n     * @param {CircularGauge} gauge - Specifies the gauge instance.\n     * @param {string} fill - Spcifies the fill color of the tooltip.\n     * @param {FontModel} textStyle - Spcifies the text style of the tooltip.\n     * @param {BorderModel} border - Specifies the border of the tooltip.\n     * @returns {Tooltip} - Returns the tooltip.\n     */\n    GaugeTooltip.prototype.svgTooltipCreate = function (svgTooltip, tooltipArg, template, arrowInverted, tooltipRect, gauge, fill, textStyle, border) {\n        svgTooltip = new Tooltip({\n            enable: true,\n            data: { value: tooltipArg.content },\n            template: template,\n            enableRTL: gauge.enableRtl,\n            enableAnimation: tooltipArg.tooltip.enableAnimation,\n            content: [SanitizeHtmlHelper.sanitize(tooltipArg.content)],\n            location: tooltipArg.location,\n            inverted: arrowInverted,\n            areaBounds: tooltipRect,\n            fill: fill || gauge.themeStyle.tooltipFillColor,\n            textStyle: textStyle,\n            availableSize: gauge.availableSize,\n            border: border\n        });\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if ((gauge.isVue || gauge.isVue3)) {\n            svgTooltip.controlInstance = gauge;\n        }\n        return svgTooltip;\n    };\n    /**\n     * Method to create or modify tolltip element.\n     *\n     * @returns {void}\n     */\n    GaugeTooltip.prototype.tooltipElement = function () {\n        if (document.getElementById(this.tooltipId)) {\n            this.tooltipEle = document.getElementById(this.tooltipId);\n        }\n        else {\n            this.tooltipEle = createElement('div', {\n                id: this.tooltipId,\n                className: 'EJ2-CircularGauge-Tooltip'\n            });\n            this.tooltipEle.style.cssText = 'position: absolute;pointer-events:none;';\n            document.getElementById(this.gauge.element.id + '_Secondary_Element').appendChild(this.tooltipEle);\n        }\n    };\n    /**\n     * Method to get parent annotation element.\n     *\n     * @param {Element} child - Specifies the annotation element.\n     * @returns {boolean} - Returns the boolean value.\n     */\n    GaugeTooltip.prototype.checkParentAnnotationId = function (child) {\n        this.annotationTargetElement = child.parentElement;\n        while (this.annotationTargetElement != null) {\n            if ((this.annotationTargetElement.id.indexOf('_Annotation_') >= 0)) {\n                child = this.annotationTargetElement;\n                return true;\n            }\n            this.annotationTargetElement = this.annotationTargetElement.parentElement;\n        }\n        return false;\n    };\n    /**\n     * Method to apply label rounding places.\n     *\n     * @param {number} currentValue - Specifies the current value.\n     * @returns {number} - Returns the round number.\n     */\n    GaugeTooltip.prototype.roundedValue = function (currentValue) {\n        var roundNumber = this.currentAxis.roundingPlaces ?\n            parseFloat(currentValue.toFixed(this.currentAxis.roundingPlaces)) :\n            currentValue;\n        return roundNumber;\n    };\n    /**\n     * Method to find the position of the tooltip anchor for circular gauge.\n     *\n     * @param {Rect} rect - Specifies the rect element.\n     * @param {number} angle - Specifies the angle.\n     * @param {GaugeLocation} location - Specifies the location.\n     * @param {boolean} isTemplate - whether it is template or not .\n     * @returns {Rect} - Returns the rect element.\n     */\n    GaugeTooltip.prototype.findPosition = function (rect, angle, location, isTemplate) {\n        var addLeft;\n        var addTop;\n        var addHeight;\n        var addWidth;\n        var padding = 10;\n        switch (true) {\n            case (angle >= 0 && angle < 45):\n                this.arrowInverted = true;\n                addLeft = (angle >= 15 && angle <= 30) ? location.y : 0;\n                this.tooltipRect = new Rect(rect.x, rect.y + addTop, rect.width, rect.height);\n                this.tooltipPosition = 'RightBottom';\n                break;\n            case (angle >= 45 && angle < 90):\n                this.arrowInverted = false;\n                this.tooltipRect = new Rect(rect.x, rect.y + location.y, rect.width, rect.height);\n                this.tooltipPosition = 'BottomRight';\n                break;\n            case (angle >= 90 && angle < 135):\n                this.arrowInverted = false;\n                this.tooltipRect = new Rect(rect.x, rect.y + location.y, rect.width, rect.height);\n                this.tooltipPosition = 'BottomLeft';\n                break;\n            case (angle >= 135 && angle < 180):\n                this.arrowInverted = isTemplate ? true : isTemplate;\n                addTop = (angle >= 150 && angle <= 160 && isTemplate) ? location.y : 0;\n                this.tooltipRect = new Rect(rect.x, rect.y + addTop, rect.width, rect.height);\n                this.tooltipPosition = 'LeftBottom';\n                break;\n            case (angle >= 180 && angle < 225):\n                this.arrowInverted = true;\n                addHeight = (angle >= 200 && angle <= 225) ? Math.abs(rect.y - location.y) : rect.height;\n                this.tooltipRect = new Rect(rect.x - location.x, rect.y, rect.width, addHeight);\n                this.tooltipPosition = 'LeftTop';\n                break;\n            case (angle >= 225 && angle < 270):\n                this.arrowInverted = false;\n                addWidth = (angle >= 250 && angle <= 290) ? rect.width : Math.abs(rect.x - location.x);\n                this.tooltipRect = new Rect(rect.x + padding, rect.y, addWidth, rect.height);\n                this.tooltipPosition = 'TopLeft';\n                break;\n            case (angle >= 270 && angle < 315):\n                this.arrowInverted = false;\n                addLeft = (angle >= 270 && angle > 290) ? location.x - padding : 0;\n                this.tooltipRect = new Rect(rect.x + addLeft, rect.y, rect.width, rect.height);\n                this.tooltipPosition = 'TopRight';\n                break;\n            case (angle >= 315 && angle <= 360):\n                this.arrowInverted = true;\n                addHeight = (angle >= 315 && angle <= 340) ? Math.abs(rect.y - location.y) : rect.height;\n                this.tooltipRect = new Rect(rect.x, rect.y, rect.width, addHeight);\n                this.tooltipPosition = 'RightTop';\n                break;\n        }\n        return this.tooltipRect;\n    };\n    GaugeTooltip.prototype.removeTooltip = function () {\n        var isTooltipRemoved = false;\n        if (document.getElementsByClassName('EJ2-CircularGauge-Tooltip').length > 0) {\n            var tooltip = document.getElementsByClassName('EJ2-CircularGauge-Tooltip')[0];\n            if (tooltip) {\n                remove(tooltip);\n                isTooltipRemoved = true;\n            }\n            this.pointerEle = null;\n        }\n        return isTooltipRemoved;\n    };\n    GaugeTooltip.prototype.mouseUpHandler = function (e) {\n        this.renderTooltip(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeTooltip.bind(this), 2000);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To bind events for tooltip module\n     *\n     * @private\n     */\n    GaugeTooltip.prototype.addEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        this.gauge.on(Browser.touchMoveEvent, this.renderTooltip, this);\n        this.gauge.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n        this.gauge.element.addEventListener('contextmenu', this.removeTooltip);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To unbind events for tooltip module\n     *\n     * @private\n     */\n    GaugeTooltip.prototype.removeEventListener = function () {\n        if (this.gauge) {\n            if (this.gauge.isDestroyed) {\n                return;\n            }\n            this.gauge.off(Browser.touchMoveEvent, this.renderTooltip);\n            this.gauge.off(Browser.touchEndEvent, this.mouseUpHandler);\n            this.gauge.element.removeEventListener('contextmenu', this.removeTooltip);\n        }\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name\n     */\n    GaugeTooltip.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Tooltip';\n    };\n    /**\n     * To destroy the tooltip.\n     *\n     * @returns {void}\n     * @private\n     */\n    GaugeTooltip.prototype.destroy = function () {\n        this.tooltipEle = null;\n        this.currentAxis = null;\n        this.tooltip = null;\n        this.currentPointer = null;\n        this.currentRange = null;\n        this.currentAnnotation = null;\n        this.borderStyle = null;\n        this.svgTooltip = null;\n        this.tooltipRect = null;\n        this.pointerEle = null;\n        this.annotationTargetElement = null;\n        this.gauge = null;\n    };\n    return GaugeTooltip;\n}());\nexport { GaugeTooltip };\n","import { stringToNumber, toPixel, textElement, appendPath, getAngleFromValue, getLocationFromAngle, getPathArc, getRoundedPathArc, getDegree, isCompleteAngle, PathOption, TextOption } from '../utils/helper-common';\nimport { getRangeColor } from '../utils/helper-axis-renderer';\nimport { getRangePalette } from '../model/theme';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Specifies the Axis rendering for circular gauge\n */\nvar AxisRenderer = /** @class */ (function () {\n    /**\n     * Constructor for axis renderer.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge\n     * @private.\n     */\n    function AxisRenderer(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * Method to render the axis element of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisOuterLine = function (axis, index, element, gauge) {\n        var background = axis.background;\n        this.setRangeColor(axis);\n        if (background !== null) {\n            appendPath(new PathOption(gauge.element.id + '_AxisOuterLine_' + index, background, 0, 'transparent', null, '0', getPathArc(gauge.midPoint, 0, 360, (Math.min(axis.rect.width, axis.rect.height) / 2)), '', 'pointer-events:none;'), element, gauge);\n        }\n    };\n    /**\n     * Method to check the angles.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.checkAngles = function (axis) {\n        axis.startAngle = axis.startAngle >= 360 ? 360 : axis.startAngle <= -360 ? -360 : axis.startAngle;\n        axis.endAngle = axis.endAngle >= 360 ? 360 : axis.endAngle <= -360 ? -360 : axis.endAngle;\n    };\n    /**\n     * Method to render the axis line of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisLine = function (axis, index, element, gauge) {\n        var startAngle = axis.startAngle;\n        var endAngle = axis.endAngle;\n        var color = axis.lineStyle.color || this.gauge.themeStyle.lineColor;\n        if (axis.lineStyle.width > 0 && this.gauge.allowComponentRender) {\n            startAngle = !isCompleteAngle(startAngle, endAngle) ? startAngle : [0, endAngle = 360][0];\n            appendPath(new PathOption(gauge.element.id + '_AxisLine_' + index, 'transparent', axis.lineStyle.width, color, null, axis.lineStyle.dashArray, getPathArc(gauge.midPoint, startAngle - 90, endAngle - 90, axis.currentRadius), '', 'pointer-events:none;'), element, gauge);\n        }\n    };\n    /**\n     * Method to render the axis labels of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisLabels = function (axis, index, element, gauge) {\n        var labelElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Labels_' + index\n        });\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var labelCollection = axis.visibleLabels;\n        var location;\n        var textWidth;\n        var textHeight;\n        var labelsVisible = true;\n        var currentTextWidth;\n        var currentTextHeight;\n        var previousLocation;\n        var currentLocation;\n        var lastLabelLocation;\n        var lastLabelAngle;\n        var lastLabelAnchor;\n        var lastTextWidth;\n        var lastTextHeight;\n        var style = axis.labelStyle;\n        var anchor;\n        var angle;\n        var label;\n        var radius = axis.currentRadius;\n        var checkLabelOpposed = 0;\n        checkLabelOpposed = (style.position === 'Inside' && axis.majorTicks.position === 'Outside' &&\n            axis.minorTicks.position === 'Outside') || (style.position === 'Outside' &&\n            axis.minorTicks.position === 'Inside' && axis.majorTicks.position === 'Inside') ?\n            axis.lineStyle.width + axis.currentRadius / 20 :\n            (style.position === axis.majorTicks.position ? axis.currentRadius / 20 : axis.currentRadius / 40);\n        var labelPadding = axis.labelStyle.shouldMaintainPadding ? 10 : checkLabelOpposed;\n        var color = style.font.color || this.gauge.themeStyle.labelColor;\n        if (style.position === 'Outside') {\n            radius += (axis.nearSize - (axis.maxLabelSize.height + axis.lineStyle.width / 2)) + (labelPadding / 2);\n        }\n        else if (style.position === 'Cross') {\n            radius = radius - (axis.maxLabelSize.height / 4) - axis.labelStyle.offset;\n        }\n        else {\n            radius -= (axis.farSize - (axis.maxLabelSize.height + axis.lineStyle.width / 2) + (style.autoAngle ? labelPadding : 0));\n        }\n        //To get and store lastlabelposition\n        if (axis.hideIntersectingLabel) {\n            lastLabelAngle = Math.round(getAngleFromValue(labelCollection[labelCollection.length - 1].value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));\n            lastLabelLocation = getLocationFromAngle(lastLabelAngle, radius, gauge.midPoint);\n            lastLabelAnchor = this.findAnchor(lastLabelLocation, style, lastLabelAngle, labelCollection[labelCollection.length - 1]);\n            lastTextWidth = (!axis.showLastLabel && (isCompleteAngle(axis.startAngle, axis.endAngle)) && (style.hiddenLabel !== 'First')) ?\n                labelCollection[0].size.width : labelCollection[labelCollection.length - 1].size.width;\n            lastTextHeight = (!axis.showLastLabel && (isCompleteAngle(axis.startAngle, axis.endAngle)) && (style.hiddenLabel !== 'First')) ?\n                (!style.autoAngle ? labelCollection[0].size.height : labelCollection[0].size.width) :\n                (!style.autoAngle ? labelCollection[labelCollection.length - 1].size.height :\n                    labelCollection[labelCollection.length - 1].size.width);\n            lastTextHeight = lastTextHeight - this.offsetAxisLabelsize(lastLabelAngle, lastTextHeight);\n            lastLabelLocation = this.getAxisLabelStartPosition(lastLabelLocation, lastTextWidth, lastLabelAnchor);\n        }\n        for (var i = 0, length_1 = labelCollection.length; i < length_1; i++) {\n            label = labelCollection[i];\n            angle = Math.round(getAngleFromValue(label.value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));\n            location = getLocationFromAngle(angle, radius, gauge.midPoint);\n            anchor = this.findAnchor(location, style, angle, label);\n            //To get the current label and previous label position for initial stage\n            if (axis.hideIntersectingLabel) {\n                currentLocation = getLocationFromAngle(angle, radius, gauge.midPoint);\n                currentTextWidth = label.size.width;\n                currentTextHeight = !style.autoAngle ? label.size.height : currentTextWidth;\n                currentTextHeight = currentTextHeight - this.offsetAxisLabelsize(angle, currentTextHeight);\n                currentLocation = this.getAxisLabelStartPosition(currentLocation, currentTextWidth, anchor);\n                if (i === 0) {\n                    previousLocation = getLocationFromAngle(angle, radius, gauge.midPoint);\n                    textWidth = label.size.width;\n                    textHeight = !style.autoAngle ? label.size.height : textWidth;\n                    textHeight = textHeight - this.offsetAxisLabelsize(angle, textHeight);\n                    previousLocation = this.getAxisLabelStartPosition(previousLocation, textWidth, anchor);\n                }\n            }\n            if ((i === 0 && style.hiddenLabel === 'First') || (i === (length_1 - 1) && style.hiddenLabel === 'Last')) {\n                continue;\n            }\n            style.font.fontFamily = style.font.fontFamily || this.gauge.themeStyle.labelFontFamily;\n            style.font.fontWeight = style.font.fontWeight || this.gauge.themeStyle.fontWeight;\n            if (axis.hideIntersectingLabel && (i !== 0)) {\n                //To remove the labels which is intersecting with last label.\n                var lastlabel = ((i !== (labelCollection.length - 1)) && ((isCompleteAngle(axis.startAngle, axis.endAngle) ||\n                    axis.showLastLabel))) ? this.FindAxisLabelCollision(lastLabelLocation, lastTextWidth, lastTextHeight, currentLocation, currentTextWidth, currentTextHeight) : true;\n                //Checking wether the axis label is intersecting with previous label or not.\n                labelsVisible = (this.FindAxisLabelCollision(previousLocation, textWidth, textHeight, currentLocation, currentTextWidth, currentTextHeight) && lastlabel);\n            }\n            else {\n                labelsVisible = true;\n            }\n            if (labelsVisible || (i === labelCollection.length - 1)) {\n                //To hide first and last label based on requirement\n                label.text = (!axis.showLastLabel && ((isCompleteAngle(axis.startAngle, axis.endAngle) && style.hiddenLabel !== 'First') ||\n                    !labelsVisible)\n                    && axis.hideIntersectingLabel && (i === (length_1 - 1))) ? '' : label.text;\n                label.text = (axis.showLastLabel && axis.hideIntersectingLabel && isCompleteAngle(axis.startAngle, axis.endAngle)\n                    && (i === 0)) ? '' : label.text;\n                textElement(new TextOption(gauge.element.id + '_Axis_' + index + '_Label_' + i, location.x, location.y, anchor, label.text, style.autoAngle ? 'rotate(' + (angle + 90) + ',' + (location.x) + ',' + location.y + ')' : '', 'auto'), style.font, style.useRangeColor ? getRangeColor(label.value, axis.ranges, color) : color, labelElement, 'pointer-events:none;');\n                if (axis.hideIntersectingLabel) {\n                    textWidth = label.size.width;\n                    textHeight = !style.autoAngle ? label.size.height : textWidth;\n                    textHeight = textHeight - this.offsetAxisLabelsize(angle, textHeight);\n                    previousLocation.x = currentLocation.x;\n                    previousLocation.y = currentLocation.y;\n                }\n            }\n        }\n        element.appendChild(labelElement);\n    };\n    /**\n     * Method to find the anchor of the axis label.\n     *\n     * @param {GaugeLocation} location - Specifies the location.\n     * @param {Label} style - Specifies the label style.\n     * @param {number} angle - Specifies the angle.\n     * @param {VisibleLabels} label - Specifies the labels.\n     * @returns {string} - Returns the anchor.\n     * @private\n     */\n    AxisRenderer.prototype.findAnchor = function (location, style, angle, label) {\n        if (style.autoAngle) {\n            return 'middle';\n        }\n        var anchor = style.position === 'Inside' ?\n            ((angle > 120 && angle < 240) ? 'start' : ((300 < angle || angle < 60) ? 'end' : 'middle')) :\n            ((angle > 120 && angle < 240) ? 'end' : ((300 < angle || angle < 60) ? 'start' : 'middle'));\n        location.y += style.position === 'Inside' ?\n            ((angle >= 240 && angle <= 300) ? (label.size.height / 2) :\n                (angle >= 60 && angle <= 120) ? 0 : label.size.height / 4) :\n            ((angle >= 240 && angle <= 300) ? 0 :\n                (angle >= 60 && angle <= 120) ? label.size.height / 2 : label.size.height / 4);\n        return anchor;\n    };\n    /**\n     * Methode to check whether the labels are intersecting or not.\n     *\n     * @param {GaugeLocation} previousLocation - Specifies the previous location.\n     * @param {number} previousWidth - Specifies the previous width.\n     * @param {number} previousHeight - Specifies the previous height.\n     * @param {GaugeLocation} currentLocation - Specifies the current location.\n     * @param {number} currentWidth - Specifies the current width.\n     * @param {number} currentHeight - Specifies the current height.\n     * @returns {boolean} - Returns the boolean value.\n     * @private\n     */\n    AxisRenderer.prototype.FindAxisLabelCollision = function (previousLocation, previousWidth, previousHeight, currentLocation, currentWidth, currentHeight) {\n        var labelVisisble = ((previousLocation.x > (currentLocation.x + (currentWidth))) ||\n            ((previousLocation.x + (previousWidth)) < (currentLocation.x)) ||\n            ((previousLocation.y + (previousHeight)) < (currentLocation.y)) ||\n            ((previousLocation.y) > (currentLocation.y + (currentHeight))));\n        return labelVisisble;\n    };\n    /**\n     * Methode to get anchor position of label as start.\n     *\n     * @param {GaugeLocation} actualLocation - Specifies the actual location.\n     * @param {number} textWidth - Specifies the text width.\n     * @param {string} anchorPosition - Specifies the anchor position.\n     * @returns {GaugeLocation} - Returns the gauge location.\n     * @private\n     */\n    AxisRenderer.prototype.getAxisLabelStartPosition = function (actualLocation, textWidth, anchorPosition) {\n        if (anchorPosition === 'end') {\n            actualLocation.x = actualLocation.x - textWidth;\n        }\n        else if (anchorPosition === 'middle') {\n            actualLocation.x = actualLocation.x - (textWidth / 2);\n        }\n        return actualLocation;\n    };\n    /**\n     * Methode to offset label height and width based on angle.\n     *\n     * @param {number} angle - Specifies the angle.\n     * @param {number} size - Specifies the size.\n     * @returns {number} - Returns the fineal size.\n     * @private\n     */\n    AxisRenderer.prototype.offsetAxisLabelsize = function (angle, size) {\n        var finalSize = ((angle >= 20 && angle <= 60) || (angle >= 120 && angle <= 160) || (angle >= 200 && angle <= 240) ||\n            (angle >= 300 && angle <= 340)) ? size / 5 : 0;\n        return finalSize;\n    };\n    /**\n     * Method to render the axis minor tick lines of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawMinorTickLines = function (axis, index, element, gauge) {\n        var minorTickElements = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_MinorTickLines_' + index\n        });\n        var minorLineStyle = axis.minorTicks;\n        var minorInterval = minorLineStyle.interval !== null ?\n            minorLineStyle.interval : (axis.visibleRange.interval / 2);\n        var isRangeColor = minorLineStyle.useRangeColor;\n        var color = minorLineStyle.color || this.gauge.themeStyle.minorTickColor;\n        if (minorLineStyle.width && minorLineStyle.height && minorInterval) {\n            for (var i = axis.visibleRange.min, max = axis.visibleRange.max; i <= max; i += minorInterval) {\n                if (this.majorValues.indexOf(+i.toFixed(3)) < 0) {\n                    appendPath(new PathOption(gauge.element.id + '_Axis_Minor_TickLine_' + index + '_' + i, 'transparent', minorLineStyle.width, isRangeColor ? getRangeColor(i, axis.ranges, color) : color, null, minorLineStyle.dashArray, this.calculateTicks(i, minorLineStyle, axis), '', 'pointer-events:none;'), minorTickElements, gauge);\n                }\n            }\n            element.appendChild(minorTickElements);\n        }\n    };\n    /**\n     * Method to render the axis major tick lines of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawMajorTickLines = function (axis, index, element, gauge) {\n        var majorTickElements = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_MajorTickLines_' + index\n        });\n        var majorLineStyle = axis.majorTicks;\n        var isRangeColor = majorLineStyle.useRangeColor;\n        this.majorValues = [];\n        var color = majorLineStyle.color || this.gauge.themeStyle.majorTickColor;\n        if (majorLineStyle.width && majorLineStyle.height && axis.visibleRange.interval) {\n            for (var i = axis.visibleRange.min, max = axis.visibleRange.max, interval = axis.visibleRange.interval; i <= max; i += interval) {\n                this.majorValues.push(+i.toFixed(3));\n                appendPath(new PathOption(gauge.element.id + '_Axis_Major_TickLine_' + index + '_' + i, 'transparent', majorLineStyle.width, isRangeColor ? getRangeColor(i, axis.ranges, color) : color, null, majorLineStyle.dashArray, this.calculateTicks(i, majorLineStyle, axis), '', 'pointer-events:none;'), majorTickElements, gauge);\n            }\n            element.appendChild(majorTickElements);\n        }\n    };\n    /**\n     * Method to calcualte the tick elements for the circular gauge.\n     *\n     * @param {number} value - Specifies the value.\n     * @param {Tick} options - Specifies the options.\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {string} - Returns the string.\n     * @private\n     */\n    AxisRenderer.prototype.calculateTicks = function (value, options, axis) {\n        var axisLineWidth = (axis.lineStyle.width / 2) + options.offset;\n        var angle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        var start = getLocationFromAngle(angle, axis.currentRadius +\n            (options.position === 'Outside' ? axisLineWidth : options.position === 'Cross' ?\n                options.height / 2 - options.offset : -axisLineWidth), this.gauge.midPoint);\n        var end = getLocationFromAngle(angle, axis.currentRadius +\n            (options.position === 'Outside' ? axisLineWidth : options.position === 'Cross' ?\n                options.height / 2 - options.offset : -axisLineWidth) +\n            (options.position === 'Outside' ? options.height : -options.height), this.gauge.midPoint);\n        return 'M ' + start.x + ' ' + start.y + ' L ' + end.x + ' ' + end.y + ' ';\n    };\n    /**\n     * Method to render the range path of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Range} range - Specifies the range.\n     * @param {number} startWidth - Specifies the startwidth for the range.\n     * @param {number} endWidth - Specifies the endwidth for the range.\n     * @param {number} rangeIndex - Specifies the index of the range.\n     * @param {number} index - Specifies the index of the axis.\n     * @param {Element} rangeElement - Specifies the element.\n     * @param {number} colorIndex - Specifies the index of the lineargradient colorstop.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawRangePath = function (axis, range, startWidth, endWidth, rangeIndex, index, rangeElement, colorIndex) {\n        var startValue;\n        var direction;\n        var endValue;\n        var location = this.gauge.midPoint;\n        var startAngle;\n        var endAngle;\n        var isClockWise = axis.direction === 'ClockWise';\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var roundedStartAngle;\n        var roundedEndAngle;\n        var oldStart;\n        var oldEnd;\n        var gradientRangeColor;\n        if (range.isLinearCircularGradient) {\n            var rangeSplitValue = ((range.end - range.start) / range.linearGradient.colorStop.length);\n            var rangeStart = range.linearGradient.colorStop.length > 1 ?\n                (range.start + (rangeSplitValue * (colorIndex))) : range.start;\n            var rangeEnd = range.linearGradient.colorStop.length > 1 ? (rangeStart + rangeSplitValue) : range.end;\n            startValue = Math.min(Math.max(rangeStart, min), rangeEnd);\n            endValue = Math.min(Math.max(rangeStart, rangeEnd), max);\n        }\n        else {\n            startValue = Math.min(Math.max(range.start, min), range.end);\n            endValue = Math.min(Math.max(range.start, range.end), max);\n        }\n        startAngle = getAngleFromValue(startValue, max, min, axis.startAngle, axis.endAngle, isClockWise);\n        endAngle = getAngleFromValue(endValue, max, min, axis.startAngle, axis.endAngle, isClockWise);\n        var isAngleCross360 = (startAngle > endAngle);\n        if (axis.rangeGap != null && axis.rangeGap > 0 && range.start !== range.end\n            || (!isNullOrUndefined(range.linearGradient) && !range.isLinearCircularGradient\n                && (colorIndex === range.linearGradient.colorStop.length - 1))) {\n            startAngle = (rangeIndex === 0 && !axis.startAndEndRangeGap) ? startAngle :\n                colorIndex === 0 && range.isLinearCircularGradient ? axis.direction === 'AntiClockWise' ?\n                    startAngle - (axis.rangeGap / Math.PI) :\n                    startAngle + (axis.rangeGap / Math.PI) : !range.isLinearCircularGradient\n                    ? (axis.direction === 'AntiClockWise' ? startAngle - (axis.rangeGap / Math.PI) : startAngle + (axis.rangeGap / Math.PI)) : startAngle;\n            endAngle = (rangeIndex === axis.ranges.length - 1 && !axis.startAndEndRangeGap) ? endAngle :\n                !isNullOrUndefined(range.linearGradient) && colorIndex === range.linearGradient.colorStop.length - 1\n                    && range.isLinearCircularGradient ?\n                    axis.direction === 'AntiClockWise' ? endAngle + (axis.rangeGap / Math.PI) :\n                        endAngle - (axis.rangeGap / Math.PI) : !range.isLinearCircularGradient ?\n                    (axis.direction === 'AntiClockWise' ? endAngle + (axis.rangeGap / Math.PI) : endAngle - (axis.rangeGap / Math.PI)) : endAngle;\n        }\n        if (this.gauge.allowComponentRender) {\n            if ((startValue !== endValue) && (isAngleCross360 ? startAngle < (endAngle + 360) : (startAngle < endAngle)) && ((range.start >= min && range.end <= max) || (range.end >= min && range.start <= max))) {\n                endAngle = isClockWise ? endAngle : [startAngle, startAngle = endAngle][0];\n                endWidth = isClockWise ? endWidth : [startWidth, startWidth = endWidth][0];\n                var radius = typeof range.roundedCornerRadius === 'string' ? parseFloat(range.roundedCornerRadius) : range.roundedCornerRadius;\n                var process = (radius * 0.25);\n                var degreeValue = getDegree(startAngle, endAngle);\n                oldStart = ((((range.currentRadius - (startWidth / 2)) * ((startAngle * Math.PI) / 180) -\n                    (radius / process)) / (range.currentRadius - (startWidth / 2))) * 180) / Math.PI;\n                oldEnd = ((((range.currentRadius - (endWidth / 2)) * ((endAngle * Math.PI) / 180) +\n                    (radius / process)) / (range.currentRadius - (endWidth / 2))) * 180) / Math.PI;\n                roundedStartAngle = ((((range.currentRadius) * ((startAngle * Math.PI) / 180) +\n                    (degreeValue < (range.roundedCornerRadius / 2) && range.isLinearCircularGradient\n                        ? degreeValue <= 1 ? 0 : (radius / 4) : radius)) / (range.currentRadius)) * 180) / Math.PI;\n                roundedEndAngle = ((((range.currentRadius) * ((endAngle * Math.PI) / 180) -\n                    (degreeValue < (range.roundedCornerRadius / 2) && range.isLinearCircularGradient\n                        ? degreeValue <= 1 ? 0 : (radius / 4) : radius)) / (range.currentRadius)) * 180) / Math.PI;\n                if (roundedStartAngle > roundedEndAngle && (roundedStartAngle - roundedEndAngle) <= radius) {\n                    roundedStartAngle = startAngle;\n                    roundedEndAngle = endAngle;\n                }\n                if (this.gauge.gradientModule && ((!isNullOrUndefined(range.linearGradient)\n                    && !isNullOrUndefined(range.linearGradient.colorStop)) || (!isNullOrUndefined(range.radialGradient)\n                    && !isNullOrUndefined(range.radialGradient.colorStop)))) {\n                    if (range.isLinearCircularGradient) {\n                        endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n                        var degree = getDegree(startAngle, endAngle);\n                        var rangeColorLength = range.linearGradient.colorStop.length;\n                        var degreeRange = ((axis.startAngle === axis.endAngle ?\n                            (axis.startAngle === 0 && axis.endAngle === 0 ? 360 : axis.startAngle) :\n                            (axis.endAngle - axis.startAngle)) - degree * (rangeColorLength - 1));\n                        var degreeRangeValue = void 0;\n                        if (degreeRange <= 360 && degreeRange >= 270) {\n                            degreeRangeValue = 270;\n                        }\n                        else if (degreeRange <= 270 && degreeRange >= 180) {\n                            degreeRangeValue = 180;\n                        }\n                        else if (degreeRange <= 180 && degreeRange >= 90) {\n                            degreeRangeValue = 90;\n                        }\n                        else if (degreeRange <= 90 && degreeRange >= 0) {\n                            degreeRangeValue = 0;\n                        }\n                        var gradientDegree = axis.direction === 'AntiClockWise' ?\n                            (axis.startAngle === axis.endAngle ? 0 : axis.startAngle) + degree * ((rangeColorLength - 1) - colorIndex)\n                            : axis.startAngle + degree * (colorIndex);\n                        var gradientAngle = axis.startAngle < axis.endAngle ? axis.direction === 'AntiClockWise'\n                            ? axis.ranges.length > 1 ? rangeIndex === 0 ? (360 - (axis.startAngle\n                                + (degree * (colorIndex)))) : (axis.startAngle + (degree * (colorIndex + 1))) :\n                                axis.startAngle + (degreeRangeValue + degree * ((rangeColorLength - 1) - colorIndex)) : axis.startAngle\n                            + (degree * (colorIndex)) : axis.endAngle === 360 || axis.startAngle === axis.endAngle\n                            ? axis.direction === 'AntiClockWise' ? axis.startAngle === axis.endAngle ?\n                                (axis.startAngle === 0 && axis.endAngle === 0 ? 0 : 360) - axis.startAngle +\n                                    degreeRangeValue + (degree * ((rangeColorLength - 1) - colorIndex))\n                                : degree * ((rangeColorLength - 1) - colorIndex) : degree * (colorIndex) :\n                            gradientDegree < 360 ? gradientDegree : gradientDegree - 360;\n                        range.gradientAngle = rangeIndex === 0 ? axis.rangeGap ? gradientAngle + axis.rangeGap\n                            : gradientAngle : axis.rangeGap > 0 ? axis.ranges[rangeIndex - 1]['gradientAngle'] + axis.rangeGap\n                            : axis.ranges[rangeIndex - 1]['gradientAngle'];\n                        if (axis.direction === 'AntiClockWise' && (axis.ranges.length > 1\n                            ? colorIndex === rangeColorLength - 1 : colorIndex === 0)) {\n                            range.gradientAntiAngle = gradientAngle;\n                        }\n                        if (rangeIndex !== 0) {\n                            gradientAngle = axis.direction === 'AntiClockWise' ? axis.ranges.length > 1 ?\n                                axis.ranges[rangeIndex - 1]['gradientAntiAngle'] - gradientAngle + axis.startAngle :\n                                axis.ranges[rangeIndex - 1]['gradientAntiAngle'] + gradientAngle :\n                                range.gradientAngle + gradientAngle - axis.startAngle;\n                            range.gradientAngle = axis.rangeGap != null && axis.rangeGap > 0 ? colorIndex === rangeColorLength - 1 ?\n                                gradientAngle + axis.ranges[rangeIndex - 1]['gradientAngle'] : gradientAngle : gradientAngle;\n                            if (axis.direction === 'AntiClockWise' && (axis.ranges.length > 1\n                                ? colorIndex === rangeColorLength - 1 : colorIndex === 0)) {\n                                range.gradientAntiAngle = gradientAngle;\n                            }\n                        }\n                        if (gradientAngle > 45 && gradientAngle <= 115\n                            || (gradientAngle >= 0 && gradientAngle <= 45 && (rangeColorLength - 1) <= 2)) {\n                            direction = axis.direction === 'AntiClockWise' ? 'bottom' : 'top';\n                        }\n                        else if (gradientAngle > 115 && gradientAngle < 170) {\n                            direction = axis.direction === 'AntiClockWise' ? 'left' : 'right';\n                        }\n                        else if (gradientAngle >= 170 && gradientAngle <= 280) {\n                            direction = axis.direction === 'AntiClockWise' ? 'top' : 'bottom';\n                        }\n                        else if (gradientAngle > 280 && gradientAngle <= 360\n                            || (gradientAngle >= 0 && gradientAngle <= 45 && (rangeColorLength - 1) >= 2)) {\n                            direction = axis.direction === 'AntiClockWise' ? 'right' : 'left';\n                        }\n                    }\n                    gradientRangeColor = this.gauge.gradientModule.getGradientColorString(range, colorIndex, direction, rangeIndex);\n                }\n                range.rangeColor = gradientRangeColor ? gradientRangeColor : range.rangeColor;\n                if (range.roundedCornerRadius) {\n                    if (range.isLinearCircularGradient && range.linearGradient.colorStop.length > 1) {\n                        if (colorIndex === 0 || colorIndex === range.linearGradient.colorStop.length - 1) {\n                            if (axis.direction === 'ClockWise') {\n                                this.roundedRangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, (colorIndex === range.linearGradient.colorStop.length - 1\n                                    ? Math.floor(startAngle) : Math.floor(roundedStartAngle)), (colorIndex !== 0 ? Math.ceil(roundedEndAngle) : Math.ceil(endAngle)), ((colorIndex === range.linearGradient.colorStop.length - 1) ? startAngle : oldStart), (colorIndex !== 0 ? oldEnd : endAngle), location, colorIndex);\n                            }\n                            else {\n                                this.roundedRangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, (colorIndex === 0 ? Math.floor(startAngle) : Math.floor(roundedStartAngle)), (colorIndex === range.linearGradient.colorStop.length - 1\n                                    ? Math.ceil(endAngle) : Math.ceil(roundedEndAngle)), ((colorIndex === 0) ? startAngle : oldStart), (colorIndex === range.linearGradient.colorStop.length - 1 ? endAngle : oldEnd), location, colorIndex);\n                            }\n                        }\n                        else {\n                            this.rangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, Math.floor(startAngle), Math.ceil(endAngle), colorIndex);\n                        }\n                    }\n                    else {\n                        this.roundedRangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, Math.floor(roundedStartAngle), Math.ceil(roundedEndAngle), oldStart, oldEnd, location, colorIndex);\n                    }\n                }\n                else {\n                    this.rangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, Math.floor(startAngle), Math.ceil(endAngle), colorIndex);\n                }\n            }\n            else if ((range.start === range.end) && ((range.start >= min && range.end <= max) || (range.end >= min && range.start <= max))) {\n                this.rangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, Math.floor(startAngle), Math.ceil(endAngle), colorIndex);\n            }\n        }\n    };\n    /**\n     * Method to render the rounded range path of the circular gauge.\n     *\n     * @param {Range} range - Specifies the range.\n     * @param {number} rangeIndex - Specifies the index of the range.\n     * @param {number} index - Specifies the index of the axis.\n     * @param {number} startWidth - Specifies the startwidth for the range.\n     * @param {number} endWidth - Specifies the endwidth for the range.\n     * @param {Element} rangeElement - Specifies the element.\n     * @param {number} roundedStartAngle - Specifies the rounded path of the start angle.\n     * @param {number} roundedEndAngle - Specifies the rounded path of the end angle.\n     * @param {number} oldStart - Specifies the rounded path of the old start value.\n     * @param {number} oldEnd - Specifies the rounded path of the old end value..\n     * @param {GaugeLocation} location - Specifies the location.\n     * @param {number} colorIndex - Specifies the index of the lineargradient colorstop.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.roundedRangeAppendPathCalculation = function (range, rangeIndex, index, startWidth, endWidth, rangeElement, roundedStartAngle, roundedEndAngle, oldStart, oldEnd, location, colorIndex) {\n        range.pathElement.push(appendPath(new PathOption((!range.isLinearCircularGradient ? this.gauge.element.id + '_Axis_' + index + '_Range_' + rangeIndex\n            : this.gauge.element.id + '_Axis_' + index + '_Range_' + rangeIndex + '_Circular_' + colorIndex), range.rangeColor, 0, range.rangeColor, range.opacity, '0', getRoundedPathArc(location, Math.floor(roundedStartAngle), Math.ceil(roundedEndAngle), oldStart, oldEnd, range.currentRadius, startWidth, endWidth, range, this.gauge.axes[index]), '', ''), rangeElement, this.gauge));\n    };\n    /**\n     * Method to render the rounded range path of the circular gauge.\n     *\n     * @param {Range} range - Specifies the range.\n     * @param {number} rangeIndex - Specifies the index of the range.\n     * @param {number} index - Specifies the index of the axis.\n     * @param {number} startWidth - Specifies the startwidth for the range.\n     * @param {number} endWidth - Specifies the endwidth for the range.\n     * @param {Element} rangeElement - Specifies the element.\n     * @param {number} startAngle - Specifies the rounded path of the start angle.\n     * @param {number} endAngle - Specifies the rounded path of the end angle.\n     * @param {number} colorIndex - Specifies the index of the lineargradient colorstop.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.rangeAppendPathCalculation = function (range, rangeIndex, index, startWidth, endWidth, rangeElement, startAngle, endAngle, colorIndex) {\n        range.pathElement.push(appendPath(new PathOption(!range.isLinearCircularGradient ? this.gauge.element.id + '_Axis_' + index + '_Range_' +\n            rangeIndex : this.gauge.element.id + '_Axis_' + index + '_Range_' +\n            rangeIndex + '_Circular_' + colorIndex, range.rangeColor, 0, range.rangeColor, range.opacity, '0', getPathArc(this.gauge.midPoint, Math.floor(startAngle), Math.ceil(endAngle), range.currentRadius, startWidth, endWidth, range, this.gauge.axes[index]), '', ''), rangeElement, this.gauge));\n    };\n    /**\n     * Method to render the axis range of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisRange = function (axis, index, element) {\n        var _this = this;\n        var ele = (document.getElementById(this.gauge.element.id + '_Axis_Ranges_ ' + index));\n        var rangeElement = (ele) ? document.getElementById(this.gauge.element.id + '_Axis_Ranges_ ' + index) :\n            this.gauge.renderer.createGroup({ id: this.gauge.element.id + '_Axis_Ranges_' + index });\n        var startWidth;\n        var startEndDifference;\n        var endWidth;\n        var previousEndWidth;\n        var previousStartWidth;\n        axis.ranges.map(function (range, rangeIndex) {\n            range.isLinearCircularGradient = !isNullOrUndefined(_this.gauge.gradientModule)\n                && !isNullOrUndefined(range.linearGradient) && isNullOrUndefined(range.linearGradient.startValue)\n                && isNullOrUndefined(range.linearGradient.endValue) && !isNullOrUndefined(range.linearGradient.colorStop);\n            range.pathElement = [];\n            if (!isNullOrUndefined(range.offset) && range.offset.length > 0) {\n                range.currentDistanceFromScale = stringToNumber(range.offset, axis.currentRadius);\n            }\n            else {\n                range.currentDistanceFromScale = range.offset;\n            }\n            _this.calculateRangeRadius(axis, range);\n            if (range.startWidth.length > 0) {\n                startWidth = toPixel(range.startWidth, range.currentRadius);\n            }\n            else {\n                startWidth = range.startWidth;\n            }\n            if (range.endWidth.length > 0) {\n                endWidth = toPixel(range.endWidth, range.currentRadius);\n            }\n            else {\n                endWidth = range.endWidth;\n            }\n            range.currentRadius = _this.calculateRangeRadiusWithPosition(axis, range, startWidth);\n            if (range.isLinearCircularGradient) {\n                for (var i = 0; i < range.linearGradient.colorStop.length; i++) {\n                    if (i <= (range.linearGradient.colorStop.length - 1)) {\n                        previousEndWidth = i === 0 ? endWidth : previousEndWidth;\n                        previousStartWidth = i === 0 ? startWidth : previousStartWidth;\n                        startEndDifference = (Math.abs(previousStartWidth - previousEndWidth) / (range.linearGradient.colorStop.length));\n                        if (i > 0) {\n                            startWidth = endWidth;\n                            endWidth = previousStartWidth > previousEndWidth ? startWidth - startEndDifference\n                                : startWidth + startEndDifference;\n                        }\n                        else {\n                            endWidth = previousStartWidth > previousEndWidth ? startWidth - startEndDifference\n                                : startWidth + startEndDifference;\n                        }\n                    }\n                    else {\n                        startWidth = previousStartWidth > previousEndWidth ? startWidth - startEndDifference\n                            : startWidth + startEndDifference;\n                        endWidth = (previousEndWidth);\n                    }\n                    _this.drawRangePath(axis, range, startWidth, endWidth, rangeIndex, index, rangeElement, i);\n                }\n            }\n            else {\n                if (!(range.start === range.end && axis.direction === 'AntiClockWise' && axis.startAngle === axis.endAngle)) {\n                    _this.drawRangePath(axis, range, startWidth, endWidth, rangeIndex, index, rangeElement, null);\n                }\n            }\n        });\n        element.appendChild(rangeElement);\n    };\n    /**\n     * Method to calculate the radius of the axis range.\n     *\n     * @return {void}\n     */\n    AxisRenderer.prototype.calculateRangeRadius = function (axis, range) {\n        var radius = range.radius !== null ? range.radius : '100%';\n        range.currentRadius = stringToNumber(radius, axis.currentRadius);\n    };\n    AxisRenderer.prototype.calculateRangeRadiusWithPosition = function (axis, range, startWidth) {\n        var actualRadius = !isNullOrUndefined(range.position) && range.position !== 'Auto' && isNullOrUndefined(range.radius) ?\n            (range.position === 'Outside' ? (range.currentRadius + axis.lineStyle.width / 2 + range.currentDistanceFromScale) :\n                range.position === 'Inside' ? (range.currentRadius - axis.lineStyle.width / 2 - range.currentDistanceFromScale) :\n                    (range.currentRadius + startWidth / 2 - range.currentDistanceFromScale)) : range.currentRadius;\n        return actualRadius;\n    };\n    /**\n     * Method to get the range color of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.setRangeColor = function (axis) {\n        var rangeColors = getRangePalette(this.gauge.theme);\n        axis.ranges.map(function (range, index) {\n            range.rangeColor = range.color ? range.color : rangeColors[index % rangeColors.length];\n        });\n    };\n    /**\n     *\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.destroy = function () {\n        this.gauge = null;\n        this.majorValues = [];\n    };\n    return AxisRenderer;\n}());\nexport { AxisRenderer };\n","import { stringToNumber, textElement, appendPath, getAngleFromValue, getLocationFromAngle, getRoundedPathArc, calculateShapes, PathOption, Size, TextOption } from '../utils/helper-common';\nimport { linear, getCompleteArc } from '../utils/helper-pointer-renderer';\nimport { Animation, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { animationComplete } from '../model/constants';\n/**\n * Specifies the Axis rendering for circular gauge\n */\nvar PointerRenderer = /** @class */ (function () {\n    /**\n     * Constructor for pointer renderer.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @private.\n     */\n    function PointerRenderer(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * Method to render the axis pointers of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} axisIndex - Specifies the axis index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @param {boolean} animate - Specifies the boolean value.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.drawPointers = function (axis, axisIndex, element, gauge, animate) {\n        var _this = this;\n        if (animate === void 0) { animate = true; }\n        var pointerElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Pointers_' + axisIndex\n        });\n        var childElement;\n        if (this.gauge.allowComponentRender) {\n            axis.pointers.map(function (pointer, pointerIndex) {\n                if (!isNullOrUndefined(pointer.offset) && pointer.offset.length > 0) {\n                    pointer.currentDistanceFromScale = stringToNumber(pointer.offset, axis.currentRadius);\n                }\n                else {\n                    pointer.currentDistanceFromScale = pointer.offset;\n                }\n                pointer.pathElement = [];\n                _this.calculatePointerRadius(axis, pointer);\n                childElement = gauge.renderer.createGroup({\n                    id: gauge.element.id + '_Axis_' + axisIndex + '_Pointer_' + pointerIndex\n                });\n                _this['draw' + pointer.type + 'Pointer'](axis, axisIndex, pointerIndex, childElement, gauge);\n                _this.setPointerValue(axis, pointer, pointer.currentValue);\n                pointerElement.appendChild(childElement);\n                if ((animate || pointer.animation.enable) && (!_this.gauge.isPropertyChange || pointer.isPointerAnimation)) {\n                    pointer.previousValue = !_this.gauge.isPropertyChange ? axis.minimum : pointer.previousValue;\n                    _this.doPointerAnimation(childElement, pointer, axis);\n                }\n            });\n            element.appendChild(pointerElement);\n        }\n    };\n    /**\n     * Measure the pointer length of the circular gauge.\n     *\n     * @returns {void}\n     */\n    PointerRenderer.prototype.calculatePointerRadius = function (axis, pointer) {\n        var padding = 5;\n        pointer.currentRadius = !isNullOrUndefined(pointer.radius) ?\n            stringToNumber(pointer.radius, axis.currentRadius) : pointer.position !== 'Auto' ?\n            this.pointerRadiusForPosition(axis, pointer) : (axis.currentRadius - (axis.farSize + padding));\n    };\n    /**\n     * Measure the pointer length of the circular gauge based on pointer position.\n     *\n     * @returns {number}\n     */\n    PointerRenderer.prototype.pointerRadiusForPosition = function (axis, pointer) {\n        if (pointer.markerShape === 'Text') {\n            var pointerRadius = void 0;\n            var pointerSize = parseInt(pointer.textStyle.size, 10);\n            var markerOffset = pointer.position === 'Cross' ? pointerSize / 5 : 0;\n            // eslint-disable-next-line prefer-const\n            pointerRadius = pointer.position === 'Inside' ?\n                (axis.currentRadius - pointerSize / 1.2 - axis.lineStyle.width / 2 - markerOffset - pointer.currentDistanceFromScale) :\n                pointer.position === 'Outside' ?\n                    (axis.currentRadius + axis.lineStyle.width / 2 + pointerSize / 4 + markerOffset +\n                        pointer.currentDistanceFromScale) :\n                    (axis.currentRadius - pointerSize / 6 - markerOffset - pointer.currentDistanceFromScale);\n            return pointerRadius;\n        }\n        else {\n            var pointerRadius = void 0;\n            var rangeBarOffset = pointer.type === 'RangeBar' ? pointer.pointerWidth : 0;\n            var markerOffset = pointer.type === 'Marker' ? ((pointer.markerShape === 'InvertedTriangle' ||\n                pointer.markerShape === 'Triangle') ? (pointer.position === 'Cross' ? pointer.markerWidth / 2 : 0) :\n                pointer.markerWidth / 2) : 0;\n            // eslint-disable-next-line prefer-const\n            pointerRadius = pointer.position === 'Inside' ?\n                (axis.currentRadius - axis.lineStyle.width / 2 - markerOffset - pointer.currentDistanceFromScale) :\n                pointer.position === 'Outside' ?\n                    (axis.currentRadius + rangeBarOffset + axis.lineStyle.width / 2 + markerOffset + pointer.currentDistanceFromScale) :\n                    (axis.currentRadius + rangeBarOffset / 2 - pointer.currentDistanceFromScale -\n                        ((pointer.markerShape === 'InvertedTriangle' || pointer.markerShape === 'Triangle') ? markerOffset : 0));\n            return pointerRadius;\n        }\n    };\n    /**\n     * Method to render the needle pointer of the ciruclar gauge.\n     *\n     * @param {Axis} axis - Specifies the axis\n     * @param {number} axisIndex - Specifies the axis index.\n     * @param {number} index - Specifies the index.\n     * @param {Element} parentElement - Specifies the parent element.\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     */\n    PointerRenderer.prototype.drawNeedlePointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var needle = pointer.needleTail;\n        var cap = pointer.cap;\n        var pointerRadius;\n        var location;\n        var direction;\n        var needleStartWidth = pointer.needleStartWidth;\n        var needleEndWidth = pointer.needleEndWidth;\n        var mid = gauge.midPoint;\n        var width = pointer.pointerWidth / 2;\n        var rectDirection;\n        var gradientColor;\n        var gradientTailColor;\n        var gradientCapColor;\n        // To render the needle\n        location = getLocationFromAngle(0, pointer.currentRadius, mid);\n        if ((needleStartWidth === 0) && (needleEndWidth === 0) && width) {\n            direction = 'M ' + mid.x + ' ' + (mid.y) + ' L ' + (location.x) + ' ' + mid.y +\n                ' L ' + (mid.x) + ' ' + (mid.y) + ' Z';\n        }\n        else {\n            direction = 'M ' + mid.x + ' ' + (mid.y - width - needleEndWidth) + ' L ' + (location.x) + ' ' + mid.y +\n                ' L ' + location.x + ' ' + (mid.y + needleStartWidth) + ' L ' + mid.x + ' ' + (mid.y + width + needleEndWidth) + ' Z';\n        }\n        if (gauge.gradientModule) {\n            gradientColor = gauge.gradientModule.getGradientColorString(pointer);\n        }\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Needle_' + index, gradientColor ? gradientColor :\n            pointer.color || this.gauge.themeStyle.needleColor, pointer.border.width, pointer.border.color, null, pointer.border.dashArray, direction), parentElement, gauge));\n        // eslint-disable-next-line prefer-const\n        pointerRadius = stringToNumber(pointer.needleTail.length, pointer.currentRadius);\n        // To render the rect element for touch\n        rectDirection = 'M ' + mid.x + ' ' + (mid.y - width) + ' L ' + (location.x) + ' ' + (mid.y - width) +\n            ' L ' + location.x + ' ' + (mid.y + width) + ' L ' + mid.x + ' ' + (mid.y + width);\n        // To render the needle tail\n        if (gauge.gradientModule) {\n            gradientTailColor = gauge.gradientModule.getGradientColorString(needle);\n        }\n        if (pointerRadius) {\n            location = getLocationFromAngle(180, pointerRadius, gauge.midPoint);\n            direction = 'M ' + mid.x + ' ' + (mid.y - width) +\n                ' L ' + (location.x) + ' ' + (mid.y - width) +\n                ' L ' + (location.x) + ' ' + (mid.y + width) +\n                ' L ' + (mid.x) + ' ' + (mid.y + width) + ' Z';\n            pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleTail_' + index, gradientTailColor ? gradientTailColor : pointer.needleTail.color || this.gauge.themeStyle.needleTailColor, pointer.needleTail.border.width, pointer.needleTail.border.color, null, pointer.needleTail.border.dashArray, direction), parentElement, gauge));\n            rectDirection += ' L ' + location.x + ' ' + (mid.y + width) + ' L ' + location.x + ' ' + (mid.y - width);\n        }\n        // To render the cap\n        if (gauge.gradientModule) {\n            gradientCapColor = gauge.gradientModule.getGradientColorString(cap);\n        }\n        if (pointer.cap.radius) {\n            pointer.pathElement.push(appendPath(calculateShapes(mid, 'Circle', new Size(pointer.cap.radius * 2, pointer.cap.radius * 2), '', new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleCap_' + index, gradientCapColor ? gradientCapColor : pointer.cap.color || this.gauge.themeStyle.capColor, pointer.cap.border.width, pointer.cap.border.color, null, pointer.cap.border.dashArray, '', '')), parentElement, gauge, 'Ellipse'));\n        }\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleRect_' + index, 'transparent', 0, 'transpanret', null, '0', rectDirection + ' Z'), parentElement, gauge));\n    };\n    /**\n     * Method to set the pointer value of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Pointer} pointer - Specifies the pointer.\n     * @param {number} value - Specifies the value.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.setPointerValue = function (axis, pointer, value) {\n        var _this = this;\n        var checkMinValue = value === axis.visibleRange.min && pointer.type === 'RangeBar';\n        var location = this.gauge.midPoint;\n        var isClockWise = axis.direction === 'ClockWise';\n        var radius = pointer.roundedCornerRadius;\n        var minRadius = (radius * 0.25);\n        if (radius > 0 && radius <= 5) {\n            radius = 6;\n            minRadius = (radius * 0.25);\n        }\n        var startAngle = getAngleFromValue(axis.visibleRange.min, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        if (isClockWise) {\n            if (startAngle > endAngle) {\n                endAngle = Math.round(startAngle) === Math.round(endAngle) && !checkMinValue ?\n                    Math.round(endAngle) - (pointer.roundedCornerRadius > 0 ? 1.5 : 0.5) : Math.round(endAngle);\n            }\n            else {\n                endAngle = startAngle === endAngle && !checkMinValue ? endAngle + 1 : endAngle;\n            }\n        }\n        else {\n            endAngle = Math.round(startAngle) === Math.round(endAngle) && !checkMinValue ?\n                [startAngle, startAngle = (endAngle > startAngle ? endAngle + (pointer.roundedCornerRadius > 0 ? 1.5 : 0.5) : endAngle - 1)][0]\n                : [startAngle, startAngle = endAngle][0];\n        }\n        if (value <= (axis.visibleRange.min + axis.visibleRange.interval) && pointer.roundedCornerRadius) {\n            radius = value === axis.visibleRange.min || (axis.visibleRange.min + 1) ? 8 : radius;\n            radius /= 2;\n            minRadius = radius * 0.25;\n        }\n        var oldStartValue = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((startAngle * Math.PI) / 180) -\n            (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        var oldEndValue = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((endAngle * Math.PI) / 180) +\n            (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        var angleValue = value === axis.maximum && (axis.startAngle === axis.endAngle ||\n            Math.abs(axis.startAngle - axis.endAngle) === 360) && pointer.type === 'RangeBar' ? 45 : 180;\n        var roundStartAngle = ((((pointer.currentRadius) * ((startAngle * Math.PI) / angleValue) +\n            radius) / (pointer.currentRadius)) * angleValue) / Math.PI;\n        var roundEndAngle = ((((pointer.currentRadius) * ((endAngle * Math.PI) / angleValue) -\n            radius) / (pointer.currentRadius)) * angleValue) / Math.PI;\n        if (roundStartAngle > roundEndAngle && (roundStartAngle - roundEndAngle) <= 36 && pointer.type === 'RangeBar') {\n            roundStartAngle = startAngle;\n            roundEndAngle = endAngle;\n        }\n        if (isNullOrUndefined(pointer.currentRadius)) {\n            this.calculatePointerRadius(axis, pointer);\n        }\n        pointer.pathElement.map(function (element) {\n            if (pointer.type === 'RangeBar') {\n                if (radius && !checkMinValue) {\n                    element.setAttribute('d', getRoundedPathArc(location, Math.floor(roundStartAngle), Math.ceil(roundEndAngle), oldStartValue, oldEndValue, pointer.currentRadius, pointer.pointerWidth, pointer.pointerWidth));\n                    radius = 0;\n                }\n                else {\n                    element.setAttribute('d', getCompleteArc(location, startAngle, endAngle, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth), checkMinValue));\n                }\n            }\n            else {\n                if (pointer.type === 'Marker' && pointer.markerShape === 'Text') {\n                    _this.calculateTextElement(axis, pointer, value, element);\n                }\n                else {\n                    element.setAttribute('transform', 'rotate(' + getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise) + ',' + location.x + ',' + location.y + ')');\n                }\n            }\n            element.setAttribute('aria-label', pointer.description || 'Pointer:' + value.toString());\n        });\n    };\n    /**\n     * Method to set the text value of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Pointer} pointer - Specifies the pointer.\n     * @param {number} value - Specifies the value.\n     * @param {Element} element - Specifies the text element.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.calculateTextElement = function (axis, pointer, value, element) {\n        var textangle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        var textlocation = getLocationFromAngle(textangle, pointer.currentRadius, this.gauge.midPoint);\n        element.setAttribute('transform', 'rotate(' + (textangle + 90) + ',' + textlocation.x + ',' + textlocation.y + ')');\n        element.setAttribute('x', String(textlocation.x));\n        element.setAttribute('y', String(textlocation.y));\n    };\n    /**\n     * Method to render the marker pointer of the ciruclar gauge.\n     *\n     * @param {Axis} axis - Specifies the axis\n     * @param {number} axisIndex - Specifies the axis index.\n     * @param {number} index - Specifies the index.\n     * @param {Element} parentElement - Specifies the parent element.\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     */\n    PointerRenderer.prototype.drawMarkerPointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var gradientMarkerColor;\n        var angle = Math.round(getAngleFromValue(pointer.value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));\n        var shapeBasedOnPosition = pointer.markerShape;\n        if (gauge.gradientModule) {\n            gradientMarkerColor = gauge.gradientModule.getGradientColorString(pointer);\n        }\n        if (isNullOrUndefined(pointer.radius) && !isNullOrUndefined(pointer.position) && (pointer.markerShape === 'InvertedTriangle' ||\n            pointer.markerShape === 'Triangle')) {\n            shapeBasedOnPosition = ((pointer.position === 'Outside' || pointer.position === 'Cross') && pointer.markerShape === 'Triangle' ?\n                'InvertedTriangle' : (pointer.position === 'Inside' &&\n                pointer.markerShape === 'InvertedTriangle' ? 'Triangle' : pointer.markerShape));\n        }\n        var location = getLocationFromAngle((pointer.markerShape === 'Text') ? angle : 0, pointer.currentRadius, gauge.midPoint);\n        if (pointer.markerShape === 'Text') {\n            var style = {\n                size: pointer.textStyle.size,\n                color: pointer.textStyle.color || this.gauge.themeStyle.pointerColor,\n                fontFamily: pointer.textStyle.fontFamily,\n                fontStyle: pointer.textStyle.fontStyle,\n                fontWeight: pointer.textStyle.fontWeight || this.gauge.themeStyle.fontWeight,\n                opacity: pointer.textStyle.opacity\n            };\n            var textOption = new TextOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Marker_' + index, location.x, location.y, 'middle', pointer.text, 'rotate(' + (angle + 90) + ',' +\n                (location.x) + ',' + location.y + ')', 'auto');\n            var textObject = textElement(textOption, style, style.color, parentElement, 'pointer-events : auto; ');\n            textObject.style.visibility = (pointer.animation.enable && (!this.gauge.isPropertyChange || pointer.isPointerAnimation) && this.gauge.animatePointer) ? 'hidden' : 'visible';\n            pointer.pathElement.push(textObject);\n        }\n        else {\n            pointer.pathElement.push(appendPath(calculateShapes(location, shapeBasedOnPosition, new Size(pointer.markerWidth, pointer.markerHeight), pointer.imageUrl, new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Marker_' + index, gradientMarkerColor ? gradientMarkerColor : pointer.color || this.gauge.themeStyle.pointerColor, pointer.border.width, pointer.border.color, null, pointer.border.dashArray, '', '')), parentElement, gauge, pointer.markerShape === 'Circle' ? 'Ellipse' : (pointer.markerShape === 'Image' ? 'Image' : 'Path')));\n        }\n    };\n    /**\n     * Method to render the range bar pointer of the ciruclar gauge.\n     *\n     * @param {Axis} axis - Specifies the axis\n     * @param {number} axisIndex - Specifies the axis index.\n     * @param {number} index - Specifies the index.\n     * @param {Element} parentElement - Specifies the parent element.\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     */\n    PointerRenderer.prototype.drawRangeBarPointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var gradientBarColor;\n        if (gauge.gradientModule) {\n            gradientBarColor = gauge.gradientModule.getGradientColorString(pointer);\n        }\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_RangeBar_' + index, gradientBarColor ? gradientBarColor :\n            pointer.color || this.gauge.themeStyle.pointerColor, pointer.border.width, pointer.border.color, 1, pointer.border.dashArray, ''), parentElement, gauge));\n    };\n    /**\n     * Method to perform the animation of the pointer in circular gauge.\n     *\n     * @param {Element} pointerElement - specifies the pointer element.\n     * @param {Pointer} pointer - Specifies the pointer.\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {void}\n     */\n    PointerRenderer.prototype.doPointerAnimation = function (pointerElement, pointer, axis) {\n        var _this = this;\n        var startValue = !isNullOrUndefined(pointer.previousValue) ? pointer.previousValue : axis.visibleRange.min;\n        var endValue = pointer.currentValue;\n        if (pointer.animation.enable && startValue !== endValue && this.gauge.animatePointer) {\n            pointer.pathElement.map(function (element) {\n                if (pointer.type === 'RangeBar') {\n                    _this.performRangeBarAnimation(element, startValue, endValue, axis, pointer);\n                }\n                else {\n                    if (pointer.type === 'Marker' && pointer.markerShape === 'Text') {\n                        _this.performTextAnimation(pointerElement, startValue, endValue, axis, pointer);\n                    }\n                    else {\n                        _this.performNeedleAnimation(element, startValue, endValue, axis, pointer);\n                    }\n                }\n            });\n        }\n    };\n    /**\n     * @param {HTMLElement} element - specifies the element.\n     * @param {number} start - specifies the start.\n     * @param {number} end - specifies the end.\n     * @param {Axis} axis - specifies the axis.\n     * @param {Pointer} pointer - specfies the pointer.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.performTextAnimation = function (element, start, end, axis, pointer) {\n        var _this = this;\n        var isClockWise = axis.direction === 'ClockWise';\n        var textangle;\n        var textlocation;\n        var pointerValue = 0;\n        var timeStamp;\n        start = typeof (start) === 'string' ? parseInt(start, 10) : start;\n        end = typeof (end) === 'string' ? parseInt(end, 10) : end;\n        element = !isNullOrUndefined(element.children[0]) ? element.children[0] : element;\n        var val = Math.abs(start - end);\n        new Animation({}).animate(element, {\n            duration: pointer.animation.duration,\n            progress: function (args) {\n                if (args.timeStamp > args.delay) {\n                    timeStamp = (args.timeStamp / pointer.animation.duration);\n                    pointerValue = end > start ? start + (timeStamp * val) : start - (timeStamp * val);\n                    textangle = getAngleFromValue(pointerValue, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n                    textlocation = getLocationFromAngle(textangle, pointer.currentRadius, _this.gauge.midPoint);\n                    element.setAttribute('transform', 'rotate(' + (textangle + 90) + ',' + textlocation.x + ',' + textlocation.y + ')');\n                    element.setAttribute('x', String(textlocation.x));\n                    element.setAttribute('y', String(textlocation.y));\n                    element.style.visibility = 'visible';\n                }\n            },\n            end: function () {\n                _this.setPointerValue(axis, pointer, end);\n                pointer.isPointerAnimation = false;\n                _this.gauge.trigger(animationComplete, { axis: axis, pointer: pointer });\n            }\n        });\n    };\n    /**\n     * Perform the needle and marker pointer animation for circular gauge.\n     *\n     * @param {HTMLElement} element - Specifies the element\n     * @param {number} start - Specifies the start\n     * @param {number} end - Specifies the end\n     * @param {Axis} axis - Specifies the axis\n     * @param {Pointer} pointer - Specifies the pointer.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.performNeedleAnimation = function (element, start, end, axis, pointer) {\n        var _this = this;\n        var isClockWise = axis.direction === 'ClockWise';\n        start = typeof (start) === 'string' ? parseInt(start, 10) : start;\n        end = typeof (end) === 'string' ? parseInt(end, 10) : end;\n        var startAngle = getAngleFromValue(start, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var pointAngle = getAngleFromValue(end, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = startAngle > pointAngle ? (pointAngle + 360) : pointAngle;\n        var sweepAngle;\n        new Animation({}).animate(element, {\n            duration: pointer.animation.duration,\n            progress: function (args) {\n                sweepAngle = (start < end || Math.round(startAngle) === Math.round(endAngle)) ?\n                    isClockWise ? (endAngle - startAngle) : (endAngle - startAngle - 360) :\n                    isClockWise ? (endAngle - startAngle - 360) : (endAngle - startAngle);\n                element.style.animation = 'None';\n                if (start !== end) {\n                    element.setAttribute('transform', 'rotate(' + linear(args.timeStamp, startAngle, sweepAngle, args.duration) + ',' +\n                        _this.gauge.midPoint.x.toString() + ',' + _this.gauge.midPoint.y.toString() + ')');\n                }\n            },\n            end: function () {\n                _this.setPointerValue(axis, pointer, end);\n                pointer.isPointerAnimation = false;\n                if (pointer.type === 'Marker' || (element.id.indexOf('_Pointer_NeedleCap') >= 0)) {\n                    _this.gauge.trigger(animationComplete, { axis: axis, pointer: pointer });\n                }\n            }\n        });\n    };\n    /**\n     * Perform the range bar pointer animation for circular gauge.\n     *\n     * @param {HTMLElement} element - Specifies the element.\n     * @param {number} start - Specifies the start.\n     * @param {number} end - Specifies the end.\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Pointer} pointer - Specifies the pointer.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.performRangeBarAnimation = function (element, start, end, axis, pointer) {\n        var _this = this;\n        start = typeof (start) === 'string' ? parseInt(start, 10) : start;\n        end = typeof (end) === 'string' ? parseInt(end, 10) : end;\n        var pointerValue;\n        var timeStamp;\n        var val = Math.abs(start - end);\n        new Animation({}).animate(element, {\n            duration: pointer.animation.duration,\n            progress: function (arg) {\n                timeStamp = (arg.timeStamp / arg.duration);\n                pointerValue = end > start ? start + (timeStamp * val) : start - (timeStamp * val);\n                _this.setPointerValue(axis, pointer, pointerValue);\n            },\n            end: function () {\n                _this.setPointerValue(axis, pointer, end);\n                pointer.isPointerAnimation = false;\n                _this.gauge.trigger(animationComplete, { axis: axis, pointer: pointer });\n            }\n        });\n    };\n    /**\n     *\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.destroy = function () {\n        this.gauge = null;\n    };\n    return PointerRenderer;\n}());\nexport { PointerRenderer };\n","import { createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { stringToNumber, measureText, getLocationFromAngle, getLabelFormat, VisibleLabels, isCompleteAngle, Size, Rect } from '../utils/helper-common';\nimport { calculateSum } from '../utils/helper-axis-panel';\nimport { axisLabelRender, radiusCalculate } from '../model/constants';\nimport { AxisRenderer } from './axis-renderer';\nimport { PointerRenderer } from './pointer-renderer';\n/**\n * Specifies the CircularGauge Axis Layout\n */\nvar AxisLayoutPanel = /** @class */ (function () {\n    function AxisLayoutPanel(gauge) {\n        this.gauge = gauge;\n        this.axisRenderer = new AxisRenderer(gauge);\n        this.pointerRenderer = new PointerRenderer(gauge);\n    }\n    /**\n     * Measure the calculate the axis size and radius.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.measureAxis = function (rect) {\n        this.measureAxisSize(this.gauge, rect);\n        this.calculateAxesRadius();\n    };\n    /**\n     * Measure to calculate the axis radius of the circular gauge.\n     *\n     * @returns {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateAxesRadius = function () {\n        var _this = this;\n        var totalRadius;\n        var currentRadius;\n        var rangeMaximumRadius = 0;\n        var xMarginDiff = this.gauge.margin.left + this.gauge.margin.right;\n        var yMarginDiff = this.gauge.margin.top + this.gauge.margin.bottom;\n        var _loop_1 = function (axis) {\n            totalRadius = (Math.min(axis.rect.width, axis.rect.height) / 2);\n            currentRadius = axis.radius != null ? stringToNumber(axis.radius, totalRadius) : totalRadius;\n            // eslint-disable-next-line prefer-spread\n            rangeMaximumRadius = Math.max.apply(Math, axis.ranges.map(function (value) {\n                return value.radius ?\n                    (value.radius.indexOf('%') < 0 ? 100 : parseInt(value.radius, 10)) : 0;\n            }));\n            currentRadius = (rangeMaximumRadius > 100 && axis.radius == null) ?\n                (currentRadius * 100) / rangeMaximumRadius : currentRadius;\n            axis.currentRadius = currentRadius - axis.nearSize;\n            if (this_1.gauge.moveToCenter && this_1.gauge.axes.length === 1 &&\n                isNullOrUndefined(this_1.gauge.centerXpoint) && isNullOrUndefined(this_1.gauge.centerYpoint)) {\n                var endAngle = void 0;\n                var startAngle = axis.startAngle;\n                var startPoint = getLocationFromAngle(startAngle - 90, currentRadius, this_1.gauge.midPoint);\n                endAngle = axis.endAngle;\n                endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n                var endPoint = getLocationFromAngle(endAngle - 90, currentRadius, this_1.gauge.midPoint);\n                var xDiff = void 0;\n                var yDiff = void 0;\n                var startXDiff = void 0;\n                var endXDiff = void 0;\n                var startYDiff = void 0;\n                var endYDiff = void 0;\n                var newPoint = void 0;\n                if (startAngle > endAngle ? Math.abs(startAngle - endAngle) > 90 ? true : false : true) {\n                    if ((startAngle >= 270 && startAngle <= 360) && ((endAngle > 270 && endAngle <= 360) ||\n                        (endAngle >= 0 && endAngle <= 180))) {\n                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(startPoint.x - this_1.gauge.gaugeRect.x));\n                        newPoint = (endAngle <= 360 && endAngle >= 270) ? this_1.gauge.midPoint : (endAngle <= 90) ? endPoint :\n                            getLocationFromAngle(90 - 90, currentRadius, this_1.gauge.midPoint);\n                        endXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.width);\n                        startPoint = (endAngle <= 360 && endAngle >= 270) ? endPoint :\n                            getLocationFromAngle(360 - 90, currentRadius, this_1.gauge.midPoint);\n                        startYDiff = Math.abs(startPoint.y - this_1.gauge.gaugeRect.y);\n                        endPoint = (endAngle <= 360 && endAngle >= 270 || (endAngle >= 0 && endAngle < 90)) ?\n                            this_1.gauge.midPoint : (endAngle >= 90 && endAngle <= 180) ? endPoint :\n                            getLocationFromAngle(180 - 90, currentRadius, this_1.gauge.midPoint);\n                        endYDiff = Math.abs(endPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                    }\n                    else if ((startAngle >= 0 && startAngle < 90) && (endAngle >= 0 && endAngle <= 270)) {\n                        startYDiff = Math.abs(startPoint.y - this_1.gauge.gaugeRect.y);\n                        newPoint = (endAngle >= 180) ? getLocationFromAngle(180 - 90, currentRadius, this_1.gauge.midPoint) :\n                            endPoint;\n                        endYDiff = Math.abs(newPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                        startPoint = (endAngle >= 180) ? endPoint : this_1.gauge.midPoint;\n                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(startPoint.x - this_1.gauge.gaugeRect.x));\n                        endPoint = (endAngle >= 90) ? getLocationFromAngle(90 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;\n                        endXDiff = Math.abs(endPoint.x - this_1.gauge.gaugeRect.width);\n                    }\n                    else if ((startAngle >= 90 && startAngle < 180) && (endAngle > 90 && endAngle <= 360)) {\n                        newPoint = (endAngle <= 180) ? this_1.gauge.midPoint : (endAngle >= 270) ?\n                            getLocationFromAngle(270 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;\n                        startXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.x);\n                        endXDiff = Math.abs(startPoint.x - this_1.gauge.gaugeRect.width);\n                        startPoint = (endAngle > 270) ? getLocationFromAngle(endAngle - 90, currentRadius, this_1.gauge.midPoint) :\n                            this_1.gauge.midPoint;\n                        startYDiff = Math.abs(this_1.gauge.gaugeRect.y - startPoint.y);\n                        endPoint = (endAngle >= 180) ? getLocationFromAngle(180 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;\n                        endYDiff = Math.abs(endPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                    }\n                    else if ((startAngle >= 180 && startAngle <= 270) && ((endAngle <= 360 && endAngle >= 270) ||\n                        (endAngle <= 180 && endAngle >= 0))) {\n                        newPoint = (endAngle > 180 && endAngle < 270) ? endPoint :\n                            getLocationFromAngle(270 - 90, currentRadius, this_1.gauge.midPoint);\n                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(newPoint.x - this_1.gauge.gaugeRect.x));\n                        newPoint = (endAngle >= 180 && endAngle <= 360) ? this_1.gauge.midPoint : (endAngle <= 90) ? endPoint :\n                            getLocationFromAngle(0, currentRadius, this_1.gauge.midPoint);\n                        endXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.width);\n                        newPoint = (endAngle > 180 && endAngle < 270) ? this_1.gauge.midPoint : (endAngle >= 270 && endAngle <= 360) ?\n                            endPoint : getLocationFromAngle(360 - 90, currentRadius, this_1.gauge.midPoint);\n                        startYDiff = Math.abs(newPoint.y - this_1.gauge.gaugeRect.y);\n                        endPoint = (endAngle <= 360 && endAngle >= 270 || (endAngle >= 0 && endAngle < 90)) ?\n                            startPoint : ((270 - startAngle) < (endAngle - 90)) ? endPoint : startPoint;\n                        endYDiff = Math.abs(endPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                    }\n                    if ((!isNullOrUndefined(startXDiff) && !isNullOrUndefined(endXDiff) && !isNullOrUndefined(startYDiff) &&\n                        !isNullOrUndefined(endYDiff)) && ((startXDiff > 0 || endXDiff > 0) && (startYDiff > 0 || endYDiff > 0))) {\n                        xDiff = Math.abs((startXDiff + endXDiff) - xMarginDiff);\n                        yDiff = Math.abs((startYDiff + endYDiff) - yMarginDiff);\n                        this_1.gauge.midPoint.x = this_1.gauge.midPoint.x - (startXDiff / 2) + (endXDiff / 2);\n                        this_1.gauge.midPoint.y = this_1.gauge.midPoint.y - (startYDiff / 2) + (endYDiff / 2);\n                        totalRadius = (Math.min(this_1.gauge.gaugeRect.width, this_1.gauge.gaugeRect.height) / 2) +\n                            (Math.min(xDiff, yDiff) / 2);\n                        axis.currentRadius = (axis.radius != null ? stringToNumber(axis.radius, totalRadius) : totalRadius) - axis.nearSize;\n                    }\n                }\n            }\n            axis.visibleRange.interval = this_1.calculateNumericInterval(axis, axis.rect);\n            var args = {\n                cancel: false, name: radiusCalculate, currentRadius: axis.currentRadius, gauge: this_1.gauge,\n                midPoint: this_1.gauge.midPoint, axis: axis\n            };\n            this_1.gauge.trigger('radiusCalculate', args, function () {\n                axis.currentRadius = args.currentRadius;\n                _this.gauge.midPoint = args.midPoint;\n                _this.calculateVisibleLabels(axis);\n            });\n        };\n        var this_1 = this;\n        for (var _i = 0, _a = this.gauge.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            _loop_1(axis);\n        }\n    };\n    /**\n     * Measure to calculate the axis size.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.measureAxisSize = function (gauge, rect) {\n        var _this = this;\n        var sum;\n        this.computeSize(gauge.axes, rect);\n        gauge.axes.map(function (axis, index) {\n            sum = calculateSum(index, _this.farSizes.length - 1, _this.farSizes);\n            axis.rect = new Rect(rect.x + sum, rect.y + sum, rect.width - (sum * 2), rect.height - (sum * 2));\n        });\n    };\n    /**\n     * Calculate the axis values of the circular gauge.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateAxisValues = function (rect) {\n        for (var _i = 0, _a = this.gauge.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            this.calculateVisibleRange(axis, rect);\n            this.calculateVisibleLabels(axis);\n        }\n    };\n    /**\n     * Calculate the visible range of an axis.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Rect} rect - Specifies the rect.\n     * @returns {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateVisibleRange = function (axis, rect) {\n        var interval = axis.majorTicks.interval;\n        var minimumValue = Math.min(axis.minimum === null ? 0 : axis.minimum, axis.maximum !== null ? axis.maximum : 100);\n        var maximumValue = Math.max(axis.minimum, axis.maximum === null ? 100 : axis.maximum);\n        axis.pointers.map(function (pointer) {\n            pointer.currentValue = pointer.value !== null ?\n                pointer.value < minimumValue ? minimumValue : pointer.value > maximumValue ? maximumValue : pointer.value\n                : minimumValue;\n            minimumValue = axis.minimum === null ? Math.min(pointer.currentValue, minimumValue) : minimumValue;\n            maximumValue = axis.maximum === null ? Math.max(pointer.currentValue, maximumValue) : maximumValue;\n        });\n        minimumValue = (minimumValue === maximumValue) ?\n            (interval !== null ? minimumValue - interval : minimumValue - 1) : minimumValue;\n        axis.visibleRange = { min: minimumValue, max: maximumValue, interval: interval };\n        axis.visibleRange.interval = this.calculateNumericInterval(axis, rect);\n    };\n    /**\n     * Calculate the numeric intervals of an axis range.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateNumericInterval = function (axis, rect) {\n        var allowComponentRender = ((!isNullOrUndefined(axis.minimum) && !isNullOrUndefined(axis.maximum)\n            && axis.minimum !== axis.maximum) || (isNullOrUndefined(axis.minimum) || isNullOrUndefined(axis.maximum)));\n        if (!allowComponentRender) {\n            return 0;\n        }\n        else if (axis.majorTicks.interval !== null) {\n            return axis.majorTicks.interval;\n        }\n        var totalAngle = axis.endAngle - axis.startAngle;\n        totalAngle = totalAngle <= 0 ? (totalAngle + 360) : totalAngle;\n        return this.calculateNiceInterval(axis.visibleRange.max, axis.visibleRange.min, axis.currentRadius ? axis.currentRadius : (rect.width / 2), totalAngle);\n    };\n    /**\n     * Calculate the nice interval of an axis range.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateNiceInterval = function (maxValue, minValue, radius, degree) {\n        var delta = maxValue - minValue;\n        var circumference = 2 * Math.PI * radius * (degree / 360);\n        var desiredIntervalsCount = Math.max((circumference * ((0.533 * 3) / 100)), 1);\n        var niceInterval = delta / desiredIntervalsCount;\n        var minInterval = Math.pow(10, Math.floor(Math.log(niceInterval) / Math.log(10)));\n        for (var _i = 0, _a = [10, 5, 2, 1]; _i < _a.length; _i++) {\n            var interval = _a[_i];\n            var currentInterval = minInterval * interval;\n            if (desiredIntervalsCount < (delta / currentInterval)) {\n                break;\n            }\n            niceInterval = currentInterval;\n        }\n        return niceInterval;\n    };\n    /**\n     * Calculate the visible labels of an axis.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateVisibleLabels = function (axis) {\n        var style = axis.labelStyle;\n        var customLabelFormat = style.format && style.format.match('{value}') !== null;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var format = this.gauge.intl.getNumberFormat({\n            format: getLabelFormat(style.format), useGrouping: this.gauge.useGroupingSeparator\n        });\n        var argsData;\n        axis.visibleLabels = [];\n        var roundValue;\n        var interval = axis.visibleRange.interval;\n        var max = axis.visibleRange.max;\n        if ((isNullOrUndefined(axis.minimum) && isNullOrUndefined(axis.maximum)) || axis.minimum !== axis.maximum) {\n            var _loop_2 = function (i) {\n                roundValue = axis.roundingPlaces ? parseFloat(i.toFixed(axis.roundingPlaces)) : i;\n                argsData = {\n                    cancel: false, name: axisLabelRender, axis: axis,\n                    text: customLabelFormat ? style.format.replace(new RegExp('{value}', 'g'), format(roundValue)) :\n                        format(roundValue),\n                    value: roundValue\n                };\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var axisLabelRenderSuccess = function (argsData) {\n                    if (!argsData.cancel) {\n                        axis.visibleLabels.push(new VisibleLabels(argsData.text, i));\n                    }\n                };\n                axisLabelRenderSuccess.bind(this_2);\n                this_2.gauge.trigger(axisLabelRender, argsData, axisLabelRenderSuccess);\n            };\n            var this_2 = this;\n            for (var i = axis.visibleRange.min; (i <= max && interval); i += interval) {\n                _loop_2(i);\n            }\n        }\n        var lastLabel = axis.visibleLabels.length ? axis.visibleLabels[axis.visibleLabels.length - 1].value : null;\n        var maxVal = axis.visibleRange.max;\n        if (!isNullOrUndefined(lastLabel) && lastLabel !== maxVal && axis.showLastLabel === true) {\n            argsData = {\n                cancel: false, name: axisLabelRender, axis: axis,\n                text: customLabelFormat ? style.format.replace(new RegExp('{value}', 'g'), format(maxVal)) :\n                    format(maxVal),\n                value: maxVal\n            };\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var axisLabelRenderSuccess = function (argsData) {\n                if (!argsData.cancel) {\n                    axis.visibleLabels.push(new VisibleLabels(argsData.text, maxVal));\n                }\n            };\n            axisLabelRenderSuccess.bind(this);\n            this.gauge.trigger(axisLabelRender, argsData, axisLabelRenderSuccess);\n        }\n        this.getMaxLabelWidth(this.gauge, axis);\n    };\n    /**\n     * Measure the axes available size.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.computeSize = function (axes, rect) {\n        var lineSize;\n        var outerHeight;\n        var innerHeight;\n        var heightForCross;\n        var axisPadding = 5;\n        var majorTickOffset = 0;\n        var minorTickOffset = 0;\n        var labelOffset = 0;\n        var labelPadding = 10;\n        this.farSizes = [];\n        this.calculateAxisValues(rect);\n        for (var _i = 0, axes_1 = axes; _i < axes_1.length; _i++) {\n            var axis = axes_1[_i];\n            lineSize = (axis.lineStyle.width / 2);\n            outerHeight = 0;\n            innerHeight = 0;\n            heightForCross = axis.majorTicks.position === 'Cross' ? axis.majorTicks.height / 2 : heightForCross;\n            heightForCross = (axis.minorTicks.position === 'Cross' && heightForCross < axis.minorTicks.height / 2) ?\n                axis.minorTicks.height / 2 : heightForCross;\n            heightForCross = (axis.labelStyle.position === 'Cross' && heightForCross < axis.maxLabelSize.height / 2) ?\n                axis.maxLabelSize.height / 2 : heightForCross;\n            lineSize = lineSize < heightForCross ? heightForCross : lineSize;\n            majorTickOffset = axis.majorTicks.offset;\n            minorTickOffset = axis.minorTicks.offset;\n            labelOffset = axis.labelStyle.offset;\n            labelPadding = axis.labelStyle.shouldMaintainPadding ? 10 : 0;\n            // Calculating the outer space of the axis\n            outerHeight += !(axis.majorTicks.position === 'Outside' && axis.minorTicks.position === 'Outside' &&\n                axis.labelStyle.position === 'Outside') ? axisPadding : 0;\n            outerHeight += (axis.majorTicks.position === 'Outside' ? (axis.majorTicks.height + lineSize) : 0) +\n                (axis.labelStyle.position === 'Outside' ? (axis.maxLabelSize.height + labelOffset + labelPadding) : 0) +\n                ((axis.minorTicks.position === 'Outside' && !(axis.majorTicks.position === 'Outside')) ?\n                    (axis.minorTicks.height + lineSize) : 0) + lineSize;\n            outerHeight += (axis.majorTicks.position === 'Outside' && axis.minorTicks.position === 'Outside') ?\n                Math.max(majorTickOffset, minorTickOffset) : (axis.majorTicks.position === 'Outside' ?\n                majorTickOffset : axis.minorTicks.position === 'Outside' ? minorTickOffset : 0);\n            // Calculating the inner space of the axis\n            innerHeight += ((axis.majorTicks.position === 'Inside') ? (axis.majorTicks.height + lineSize) : 0) +\n                ((axis.labelStyle.position === 'Inside') ? (axis.maxLabelSize.height + labelOffset + labelPadding) : 0) +\n                ((axis.minorTicks.position === 'Inside' && axis.majorTicks.position === 'Outside') ?\n                    (axis.minorTicks.height + lineSize) : 0) + lineSize;\n            innerHeight += ((axis.majorTicks.position === 'Inside') && (axis.minorTicks.position === 'Inside')) ?\n                Math.max(majorTickOffset, minorTickOffset) : ((axis.majorTicks.position === 'Inside') ?\n                majorTickOffset : (axis.minorTicks.position === 'Inside') ? minorTickOffset : 0);\n            if (this.farSizes[this.farSizes.length - 1]) {\n                this.farSizes[this.farSizes.length - 1] += (innerHeight + outerHeight);\n            }\n            axis.nearSize = outerHeight - axisPadding;\n            axis.farSize = innerHeight;\n            outerHeight = (this.gauge.axes.length === (this.farSizes.length + 1)) ? 0 : outerHeight;\n            this.farSizes.push(outerHeight);\n        }\n    };\n    /**\n     * To render the Axis element of the circular gauge.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.renderAxes = function (animate) {\n        var _this = this;\n        if (animate === void 0) { animate = true; }\n        var gauge = this.gauge;\n        var renderer = this.axisRenderer;\n        var element;\n        var axesElements = gauge.renderer.createGroup({\n            'id': gauge.element.id + '_AxesCollection',\n            'clip-path': 'url(#' + gauge.element.id + '_GaugeAreaClipRect_' + ')'\n        });\n        // To append the secondary element for annotation and tooltip\n        var annotationElement = createElement('div', {\n            id: gauge.element.id + '_Secondary_Element'\n        });\n        annotationElement.style.position = 'relative';\n        gauge.element.appendChild(annotationElement);\n        gauge.axes.map(function (axis, index) {\n            element = gauge.renderer.createGroup({\n                id: gauge.element.id + '_Axis_Group_' + index\n            });\n            _this.gauge.allowComponentRender = ((!isNullOrUndefined(axis.minimum) && !isNullOrUndefined(axis.maximum)\n                && axis.minimum !== axis.maximum) || (isNullOrUndefined(axis.minimum) || isNullOrUndefined(axis.maximum)));\n            renderer.checkAngles(axis);\n            renderer.drawAxisOuterLine(axis, index, element, gauge);\n            renderer.drawAxisRange(axis, index, element);\n            renderer.drawAxisLine(axis, index, element, gauge);\n            renderer.drawMajorTickLines(axis, index, element, gauge);\n            renderer.drawMinorTickLines(axis, index, element, gauge);\n            renderer.drawAxisLabels(axis, index, element, gauge);\n            _this.pointerRenderer.drawPointers(axis, index, element, gauge, animate);\n            if (gauge.annotationsModule) {\n                gauge.annotationsModule.renderAnnotation(axis, index, gauge);\n            }\n            axesElements.appendChild(element);\n        });\n        // For append clip rect for axes\n        gauge.svgObject.appendChild(gauge.renderer.drawClipPath({\n            'id': gauge.element.id + '_GaugeAreaClipRect_',\n            'x': 0, 'y': 0,\n            'width': gauge.availableSize.width,\n            'height': gauge.availableSize.height,\n            'fill': 'transparent', 'stroke': 'transparent'\n        }));\n        gauge.svgObject.appendChild(axesElements);\n    };\n    /**\n     * Calculate maximum label width for the axis.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {void}\n     */\n    AxisLayoutPanel.prototype.getMaxLabelWidth = function (gauge, axis) {\n        axis.maxLabelSize = new Size(0, 0);\n        for (var _i = 0, _a = axis.visibleLabels; _i < _a.length; _i++) {\n            var label = _a[_i];\n            label.size = measureText(label.text, axis.labelStyle.font);\n            axis.maxLabelSize.width = label.size.width > axis.maxLabelSize.width ?\n                label.size.width : axis.maxLabelSize.width;\n            axis.maxLabelSize.height = label.size.height > axis.maxLabelSize.height ?\n                label.size.height : axis.maxLabelSize.height;\n        }\n    };\n    AxisLayoutPanel.prototype.destroy = function () {\n        this.gauge = null;\n        this.farSizes = [];\n        if (!isNullOrUndefined(this.axisRenderer)) {\n            this.axisRenderer.destroy();\n        }\n        this.axisRenderer = null;\n        if (!isNullOrUndefined(this.pointerRenderer)) {\n            this.pointerRenderer.destroy();\n        }\n        this.pointerRenderer = null;\n    };\n    return AxisLayoutPanel;\n}());\nexport { AxisLayoutPanel };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { removeElement, getElement, stringToNumber, measureText, textElement, appendPath, calculateShapes, PathOption, RectOption, Size, GaugeLocation, Rect, TextOption } from '../utils/helper-common';\nimport { textTrim, showTooltip } from '../utils/helper-legend';\nimport { Property, Complex, ChildProperty, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Font, Border, Margin } from '../model/base';\nimport { Theme } from '../model/theme';\n/**\n * Sets and gets the location of the legend in circular gauge.\n */\nvar Location = /** @class */ (function (_super) {\n    __extends(Location, _super);\n    function Location() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Location.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Location.prototype, \"y\", void 0);\n    return Location;\n}(ChildProperty));\nexport { Location };\n/**\n * Sets and gets the options to customize the legend for the ranges in the circular gauge.\n */\nvar LegendSettings = /** @class */ (function (_super) {\n    __extends(LegendSettings, _super);\n    function LegendSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property(true)\n    ], LegendSettings.prototype, \"toggleVisibility\", void 0);\n    __decorate([\n        Property('Center')\n    ], LegendSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LegendSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LegendSettings.prototype, \"shapeBorder\", void 0);\n    __decorate([\n        Property(8)\n    ], LegendSettings.prototype, \"padding\", void 0);\n    __decorate([\n        Property(1)\n    ], LegendSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('Auto')\n    ], LegendSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property('Circle')\n    ], LegendSettings.prototype, \"shape\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"width\", void 0);\n    __decorate([\n        Complex(Theme.legendLabelFont, Font)\n    ], LegendSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapeHeight\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapeWidth\", void 0);\n    __decorate([\n        Property(5)\n    ], LegendSettings.prototype, \"shapePadding\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Location)\n    ], LegendSettings.prototype, \"location\", void 0);\n    __decorate([\n        Property('transparent')\n    ], LegendSettings.prototype, \"background\", void 0);\n    __decorate([\n        Complex({ left: 0, right: 0, top: 0, bottom: 0 }, Margin)\n    ], LegendSettings.prototype, \"margin\", void 0);\n    return LegendSettings;\n}(ChildProperty));\nexport { LegendSettings };\n/*\n * Sets and gets the module to add the legend in the circular gauge.\n */\nvar Legend = /** @class */ (function () {\n    function Legend(gauge) {\n        this.legendRegions = [];\n        this.rowCount = 0; // legend row counts per page\n        this.pageButtonSize = 8;\n        this.pageXCollections = []; // pages of x locations\n        this.maxColumns = 0;\n        this.maxWidth = 0;\n        this.currentPage = 1;\n        this.pagingRegions = [];\n        /**\n         * @private\n         */\n        this.position = 'Auto';\n        this.gauge = gauge;\n        this.toggledIndexes = [];\n        this.legend = this.gauge.legendSettings;\n        this.legendID = this.gauge.element.id + '_gauge_legend';\n        this.addEventListener();\n    }\n    /**\n     * Binding events for legend module.\n     *\n     * @returns {void}\n     */\n    Legend.prototype.addEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        //   this.gauge.on(Browser.touchMoveEvent, this.mouseMove, this);\n        this.gauge.on('click', this.click, this);\n        // this.gauge.on(Browser.touchEndEvent, this.mouseEnd, this);\n    };\n    /**\n     * UnBinding events for legend module.\n     *\n     * @returns {void}\n     */\n    Legend.prototype.removeEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        //  this.gauge.off(Browser.touchMoveEvent, this.mouseMove);\n        this.gauge.off('click', this.click);\n        //  this.gauge.off(Browser.touchEndEvent, this.mouseEnd);\n    };\n    /**\n     * Get the legend options.\n     *\n     * @param {Axis[]} axes - Specifies the axes.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.getLegendOptions = function (axes) {\n        this.legendCollection = [];\n        var range;\n        var text = '';\n        for (var i = 0; i < axes.length; i++) {\n            for (var j = 0; j < axes[i].ranges.length; j++) {\n                range = axes[i].ranges[j];\n                if (!isNullOrUndefined(range.start) && !isNullOrUndefined(range.end) && (range.start !== range.end)) {\n                    text = range.legendText ? range.legendText : range.start + ' - ' + range.end;\n                    this.legendCollection.push(new LegendOptions(text, text, range.color, this.legend.shape, this.legend.visible, this.legend.border, this.legend.shapeBorder, this.legend.shapeWidth, this.legend.shapeHeight, j, i));\n                }\n            }\n        }\n    };\n    Legend.prototype.calculateLegendBounds = function (rect, availableSize) {\n        var legend = this.legend;\n        this.position = (legend.position !== 'Auto') ? legend.position :\n            (availableSize.width > availableSize.height ? 'Right' : 'Bottom');\n        this.legendBounds = new Rect(rect.x, rect.y, 0, 0);\n        this.isVertical = (this.position === 'Left' || this.position === 'Right');\n        if (this.isVertical) {\n            this.legendBounds.height = stringToNumber(legend.height, availableSize.height - (rect.y - this.gauge.margin.top)) || rect.height;\n            this.legendBounds.width = stringToNumber(legend.width || '20%', availableSize.width);\n        }\n        else {\n            this.legendBounds.width = stringToNumber(legend.width, availableSize.width) || rect.width;\n            this.legendBounds.height = stringToNumber(legend.height || '20%', availableSize.height);\n        }\n        this.getLegendBounds(availableSize, this.legendBounds, legend);\n        this.getLocation(this.position, legend.alignment, this.legendBounds, rect, availableSize);\n    };\n    /**\n     * To find legend alignment for chart and accumulation chart\n     *\n     * @param {number} start - Specifies the start.\n     * @param {number} size - Specifies the size.\n     * @param {number} legendSize - Specifies the  legendSize.\n     * @param {Alignment} alignment - Specifies the alignment.\n     * @returns {number} - Returns the start value.\n     */\n    Legend.prototype.alignLegend = function (start, size, legendSize, alignment) {\n        switch (alignment) {\n            case 'Far':\n                start = (size - legendSize) - start;\n                break;\n            case 'Center':\n                start = ((size - legendSize) / 2);\n                break;\n        }\n        return start;\n    };\n    /**\n     * To find legend location based on position, alignment for chart and accumulation chart\n     *\n     * @param {LegendPosition} position - Specifies the position.\n     * @param {Alignment} alignment - Specifies the alignment.\n     * @param {Rect} legendBounds - Specifies the legendBounds.\n     * @param {Rect} rect - Specifies the rect.\n     * @param {Size} availableSize - Specifies the availableSize.\n     * @returns {void}\n     */\n    Legend.prototype.getLocation = function (position, alignment, legendBounds, rect, availableSize) {\n        var padding = this.legend.border.width;\n        var legendHeight = legendBounds.height + padding + this.legend.margin.top + this.legend.margin.bottom;\n        var legendWidth = legendBounds.width + padding + this.legend.margin.left + this.legend.margin.right;\n        var marginBottom = this.gauge.margin.bottom;\n        if (position === 'Bottom') {\n            legendBounds.x = this.alignLegend(legendBounds.x, availableSize.width, legendBounds.width, alignment);\n            legendBounds.y = rect.y + (rect.height - legendHeight) + padding + this.legend.margin.top;\n            this.subtractThickness(rect, 0, 0, 0, legendHeight);\n        }\n        else if (position === 'Top') {\n            legendBounds.x = this.alignLegend(legendBounds.x, availableSize.width, legendBounds.width, alignment);\n            legendBounds.y = rect.y + padding + this.legend.margin.top;\n            this.subtractThickness(rect, 0, 0, legendHeight, 0);\n        }\n        else if (position === 'Right') {\n            legendBounds.x = rect.x + (rect.width - legendBounds.width) + this.legend.margin.right;\n            legendBounds.y = rect.y + this.alignLegend(0, availableSize.height - (rect.y + marginBottom), legendBounds.height, alignment);\n            this.subtractThickness(rect, 0, legendWidth, 0, 0);\n        }\n        else {\n            legendBounds.x = legendBounds.x + this.legend.margin.left;\n            legendBounds.y = rect.y + this.alignLegend(0, availableSize.height - (rect.y + marginBottom), legendBounds.height, alignment);\n            this.subtractThickness(rect, legendWidth, 0, 0, 0);\n        }\n    };\n    /**\n     * Renders the legend.\n     *\n     * @param {LegendSettingsModel} legend - Specifies the legend.\n     * @param {Rect} legendBounds - Specifies the legendBounds.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.renderLegend = function (legend, legendBounds) {\n        var firstLegend = this.findFirstLegendPosition(this.legendCollection);\n        var padding = legend.padding;\n        this.legendRegions = [];\n        this.maxItemHeight = Math.max(this.legendCollection[0].textSize.height, legend.shapeHeight);\n        var legendGroup = this.gauge.renderer.createGroup({ id: this.legendID + '_g' });\n        var legendTranslateGroup = this.createLegendElements(legendBounds, legendGroup, legend, this.legendID);\n        if (firstLegend !== this.legendCollection.length) {\n            this.totalPages = 0;\n            var legendAxisGroup = void 0; // legendItem group for each series group element\n            // starting shape center x,y position && to resolve lint error used new line for declaration\n            var start = new GaugeLocation((!this.gauge.enableRtl) ? legendBounds.x + padding + (legend.shapeWidth / 2) : (!this.isVertical) ? legendBounds.width + legendBounds.x - (padding) - (legend.shapeWidth) : legendBounds.x + this.maxWidth - padding - legend.shapeWidth / 2, legendBounds.y + padding + this.maxItemHeight / 2);\n            var textOptions = new TextOption('', start.x, start.y, 'start');\n            var textPadding = (2 * legend.shapePadding) + (2 * padding) + legend.shapeWidth;\n            var count = 0;\n            this.pageXCollections = [];\n            this.legendCollection[firstLegend].location = start;\n            var previousLegend = this.legendCollection[firstLegend];\n            for (var _i = 0, _a = this.legendCollection; _i < _a.length; _i++) {\n                var legendOption = _a[_i];\n                if (legendOption.render && legendOption.text !== '') {\n                    legendAxisGroup = this.gauge.renderer.createGroup({\n                        id: this.legendID + '_g_' + count\n                    });\n                    this.getRenderPoint(legendOption, start, textPadding, previousLegend, legendBounds, count, firstLegend);\n                    this.renderSymbol(legendOption, legendAxisGroup, legendOption.axisIndex, legendOption.rangeIndex);\n                    this.renderText(legendOption, legendAxisGroup, textOptions, legendOption.axisIndex, legendOption.rangeIndex);\n                    if (legendAxisGroup) {\n                        legendAxisGroup.style.cursor = (!legend.toggleVisibility) ? 'auto' : 'pointer';\n                    }\n                    if (legendTranslateGroup) {\n                        legendTranslateGroup.appendChild(legendAxisGroup);\n                    }\n                    previousLegend = legendOption;\n                }\n                count++;\n            }\n            if (this.isPaging) {\n                this.renderPagingElements(legendBounds, textOptions, legendGroup);\n            }\n            else {\n                this.totalPages = 1;\n            }\n        }\n        this.appendChildElement(this.gauge.svgObject, legendGroup);\n        this.setStyles(this.toggledIndexes);\n    };\n    /**\n     * To render legend paging elements for chart and accumulation chart\n     *\n     * @param {Rect} bounds - Specifies the bounds.\n     * @param {TextOption} textOption - Specifies the textOption.\n     * @param {Element} legendGroup - Specifies the legendGroup.\n     * @returns {void}\n     */\n    Legend.prototype.renderPagingElements = function (bounds, textOption, legendGroup) {\n        var paginggroup = this.gauge.renderer.createGroup({ id: this.legendID + '_navigation' });\n        this.pagingRegions = [];\n        legendGroup.appendChild(paginggroup);\n        var grayColor = this.gauge.themeStyle.labelColor;\n        var legend = this.gauge.legendSettings; // to solve parameter lint error, legend declaration is here\n        var padding = 8; // const padding for paging elements\n        if (!this.isVertical) {\n            this.totalPages = Math.ceil(this.totalPages / Math.max(1, this.rowCount - 1));\n        }\n        else {\n            this.totalPages = Math.ceil(this.totalPages / this.maxColumns);\n        }\n        var symbolOption = new PathOption(this.legendID + '_pageup', 'transparent', 5, grayColor, 1, '', '');\n        var iconSize = this.pageButtonSize;\n        if (paginggroup) {\n            paginggroup.style.cursor = 'pointer';\n        }\n        // Page left arrow drawing calculation started here\n        this.clipPathHeight = (this.rowCount - 1) * (this.maxItemHeight + legend.padding);\n        this.clipRect.setAttribute('height', this.clipPathHeight.toString());\n        var x = bounds.x + iconSize / 2;\n        var y = bounds.y + this.clipPathHeight + ((bounds.height - this.clipPathHeight) / 2);\n        var size = measureText(this.totalPages + '/' + this.totalPages, legend.textStyle);\n        appendPath(calculateShapes({ x: x, y: y }, 'LeftArrow', new Size(iconSize, iconSize), '', symbolOption), paginggroup, this.gauge, 'Path');\n        this.pagingRegions.push(new Rect(!this.gauge.enableRtl ?\n            x + bounds.width - (2 * (iconSize + padding) + padding + size.width) - iconSize * 0.5 : x, y - iconSize * 0.5, iconSize, iconSize));\n        // Page numbering rendering calculation started here\n        textOption.x = x + (iconSize / 2) + padding;\n        textOption.y = y + (size.height / 4);\n        textOption.id = this.legendID + '_pagenumber';\n        textOption.text = !this.gauge.enableRtl ? '1/' + this.totalPages : this.totalPages + '/1';\n        var pageTextElement = textElement(textOption, legend.textStyle, grayColor, paginggroup);\n        x = (textOption.x + padding + (iconSize / 2) + size.width);\n        symbolOption.id = this.legendID + '_pagedown';\n        appendPath(calculateShapes({ x: x, y: y }, 'RightArrow', new Size(iconSize, iconSize), '', symbolOption), paginggroup, this.gauge, 'Path');\n        this.pagingRegions.push(new Rect(!this.gauge.enableRtl ?\n            x + (bounds.width - (2 * (iconSize + padding) + padding + size.width) - iconSize * 0.5) : x, y - iconSize * 0.5, iconSize, iconSize));\n        //placing the navigation buttons and page numbering in legend right corner\n        var translateX = (this.gauge.enableRtl) ? legend.border.width + (iconSize / 2) : bounds.width - (2 * (iconSize + padding) + padding + size.width);\n        paginggroup.setAttribute('transform', 'translate(' + translateX + ', ' + 0 + ')');\n        this.translatePage(pageTextElement, this.currentPage - 1, this.currentPage);\n    };\n    /**\n     * To translate legend pages for chart and accumulation chart\n     *\n     * @param {Element} pagingText - Specifies the pagingText.\n     * @param {number} page - Specifies the page.\n     * @param {number} pageNumber - Specifies the pageNumber.\n     * @returns {number} - Returns the size.\n     */\n    Legend.prototype.translatePage = function (pagingText, page, pageNumber) {\n        var size = (this.clipPathHeight) * page;\n        var translate = 'translate(0,-' + size + ')';\n        if (this.isVertical) {\n            var pageX = this.pageXCollections[page * this.maxColumns];\n            size = (!this.gauge.enableRtl) ? pageX - this.legendBounds.x : (this.legendBounds.x + this.maxWidth) - pageX;\n            size = size < 0 ? 0 : size; // to avoid small pixel variation\n            translate = ((!this.gauge.enableRtl) ? 'translate(-' : 'translate(') + size + ',0)';\n        }\n        this.legendTranslateGroup.setAttribute('transform', translate);\n        pagingText.textContent = !this.gauge.enableRtl ? (pageNumber) + '/' + this.totalPages : this.totalPages + '/' + pageNumber;\n        this.currentPage = pageNumber;\n        return size;\n    };\n    /**\n     * To render legend text for chart and accumulation chart\n     *\n     * @param {LegendOptions} legendOption - Specifies the legendOption.\n     * @param {Element} group - Specifies the group.\n     * @param {TextOption} textOptions - Specifies the textOptions.\n     * @param {number} axisIndex - Specifies the axisIndex.\n     * @param {number} rangeIndex - Specifies the rangeIndex.\n     * @returns {void}\n     */\n    Legend.prototype.renderText = function (legendOption, group, textOptions, axisIndex, rangeIndex) {\n        var legend = this.gauge.legendSettings;\n        var hiddenColor = '#D3D3D3';\n        textOptions.id = this.legendID + '_Axis_' + axisIndex + '_text_' + rangeIndex;\n        var fontcolor = legendOption.visible ? legend.textStyle.color || this.gauge.themeStyle.labelColor : hiddenColor;\n        legend.textStyle.fontFamily = legend.textStyle.fontFamily || this.gauge.themeStyle.labelFontFamily;\n        legend.textStyle.fontWeight = legend.textStyle.fontWeight || this.gauge.themeStyle.fontWeight;\n        textOptions.text = legendOption.text;\n        textOptions.x = this.gauge.enableRtl ? (legendOption.location.x - (measureText(legendOption.text, legend.textStyle).width +\n            legend.shapeWidth / 2 + legend.shapePadding)) : (legendOption.location.x + (legend.shapeWidth / 2) + legend.shapePadding);\n        textOptions.y = legendOption.location.y + this.maxItemHeight / 4;\n        textElement(textOptions, legend.textStyle, fontcolor, group, '');\n    };\n    /**\n     * To render legend symbols for chart and accumulation chart\n     *\n     * @param {LegendOptions} legendOption - Specifies the legendOption.\n     * @param {Element} group - Specifies the group.\n     * @param {number} axisIndex - Specifies the axisIndex.\n     * @param {number} rangeIndex - Specifies the rangeIndex.\n     * @returns {void}\n     */\n    Legend.prototype.renderSymbol = function (legendOption, group, axisIndex, rangeIndex) {\n        legendOption.fill = legendOption.fill ? legendOption.fill :\n            this.gauge.axes[axisIndex].ranges[rangeIndex].rangeColor;\n        appendPath(calculateShapes(legendOption.location, legendOption.shape, new Size(legendOption.shapeWidth, legendOption.shapeHeight), '', new PathOption(this.legendID + '_Axis_' + axisIndex + '_Shape_' + rangeIndex, legendOption.fill, legendOption.shapeBorder.width, legendOption.shapeBorder.color, null, legendOption.shapeBorder.dashArray, '', '')), group, this.gauge, legendOption.shape === 'Circle' ? 'Ellipse' : 'Path');\n    };\n    /**\n     * To find legend rendering locations from legend options.\n     *\n     * @param {LegendOptions} legendOption - Specifies the legendOption.\n     * @param {GaugeLocation} start - Specifies the start.\n     * @param {number} textPadding - Specifies the textPadding.\n     * @param {LegendOptions} prevLegend - Specifies the prevLegend.\n     * @param {Rect} rect - Specifies the rect.\n     * @param {number} count - Specifies the count.\n     * @param {number} firstLegend - Specifies the firstLegend.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.getRenderPoint = function (legendOption, start, textPadding, prevLegend, rect, count, firstLegend) {\n        var padding = this.legend.padding;\n        if (this.isVertical) {\n            if (count === firstLegend || (prevLegend.location.y + (this.maxItemHeight * 1.5) + (padding * 2) > rect.y + rect.height)) {\n                legendOption.location.x = prevLegend.location.x + ((count === firstLegend) ? 0 : (!this.gauge.enableRtl) ?\n                    this.maxColumnWidth : -this.maxColumnWidth - (4 * this.legend.shapePadding) / 3);\n                legendOption.location.y = start.y;\n                var textStartLoc = (this.legend.shapeWidth / 2) + padding;\n                this.pageXCollections.push(legendOption.location.x + ((!this.gauge.enableRtl) ? -textStartLoc : textStartLoc));\n                this.totalPages++;\n            }\n            else {\n                legendOption.location.x = prevLegend.location.x;\n                legendOption.location.y = prevLegend.location.y + this.maxItemHeight + padding;\n            }\n        }\n        else {\n            var previousBound = (prevLegend.location.x + ((!this.gauge.enableRtl) ? prevLegend.textSize.width + textPadding : -prevLegend.textSize.width - textPadding));\n            if (this.isWithinBounds(previousBound, (legendOption.textSize.width + textPadding) - padding, rect, this.legend.shapeWidth / 2)) {\n                legendOption.location.y = (count === firstLegend) ? prevLegend.location.y :\n                    prevLegend.location.y + this.maxItemHeight + padding;\n                legendOption.location.x = start.x;\n            }\n            else {\n                legendOption.location.y = prevLegend.location.y;\n                legendOption.location.x = (count === firstLegend) ? prevLegend.location.x : previousBound;\n            }\n            this.totalPages = this.totalRowCount;\n        }\n        var availablewidth = this.getAvailWidth(legendOption.location.x, this.legendBounds.width);\n        legendOption.text = textTrim(+availablewidth.toFixed(4), legendOption.text, this.legend.textStyle);\n    };\n    Legend.prototype.isWithinBounds = function (previousBound, textWidth, legendBounds, shapeWidth) {\n        if (!this.gauge.enableRtl) {\n            return (previousBound + textWidth) > (legendBounds.x + legendBounds.width + shapeWidth);\n        }\n        else {\n            return (previousBound - textWidth) < (legendBounds.x - shapeWidth);\n        }\n    };\n    /**\n     * To show or hide the legend on clicking the legend.\n     *\n     * @param {Event} event - Specifies the event argument.\n     * @returns {void}\n     *\n     * @private\n     */\n    Legend.prototype.click = function (event) {\n        var targetId = event.target.id;\n        var legendItemsId = ['_text_', '_Shape_'];\n        var index;\n        var toggledIndex = -1;\n        if (targetId.indexOf(this.legendID) > -1) {\n            for (var _i = 0, legendItemsId_1 = legendItemsId; _i < legendItemsId_1.length; _i++) {\n                var id = legendItemsId_1[_i];\n                if (targetId.indexOf(id) > -1) {\n                    var axisIndex = parseInt(targetId.split(this.legendID + '_Axis_')[1].split(id)[0], 10);\n                    var rangeIndex = parseInt(targetId.split(this.legendID + '_Axis_')[1].split(id)[1], 10);\n                    if (this.gauge.legendSettings.toggleVisibility && !isNaN(rangeIndex)) {\n                        var legendOption = this.legendByIndex(axisIndex, rangeIndex, this.legendCollection);\n                        index = new Index(axisIndex, rangeIndex, !legendOption.render);\n                        if (this.toggledIndexes.length === 0) {\n                            this.toggledIndexes.push(index);\n                        }\n                        else {\n                            for (var i = 0; i < this.toggledIndexes.length; i++) {\n                                if (this.toggledIndexes[i].axisIndex === index.axisIndex &&\n                                    this.toggledIndexes[i].rangeIndex === index.rangeIndex) {\n                                    toggledIndex = i;\n                                    break;\n                                }\n                                else {\n                                    toggledIndex = -1;\n                                }\n                            }\n                            if (toggledIndex === -1) {\n                                this.toggledIndexes.push(index);\n                            }\n                            else {\n                                this.toggledIndexes[toggledIndex].isToggled =\n                                    !this.toggledIndexes[toggledIndex].isToggled;\n                            }\n                        }\n                        this.setStyles(this.toggledIndexes);\n                    }\n                }\n            }\n        }\n        if (targetId.indexOf(this.legendID + '_pageup') > -1) {\n            this.changePage(event, !this.gauge.enableRtl ? true : false);\n        }\n        else if (targetId.indexOf(this.legendID + '_pagedown') > -1) {\n            this.changePage(event, !this.gauge.enableRtl ? false : true);\n        }\n    };\n    /**\n     * Set toggled legend styles.\n     *\n     * @param {Index[]} toggledIndexes - Specifies the toggledIndexes.\n     * @returns {void}\n     */\n    Legend.prototype.setStyles = function (toggledIndexes) {\n        for (var i = 0; i < toggledIndexes.length; i++) {\n            var count = 0;\n            for (var j = 0; j < toggledIndexes[i].rangeIndex; j++) {\n                var rangeStart = this.gauge.axes[toggledIndexes[i].axisIndex].ranges[j].start;\n                var rangeEnd = this.gauge.axes[toggledIndexes[i].axisIndex].ranges[j].end;\n                if (rangeStart === rangeEnd) {\n                    count++;\n                }\n            }\n            var rangeID = this.gauge.element.id + '_Axis_' + toggledIndexes[i].axisIndex + '_Range_' + toggledIndexes[i].rangeIndex;\n            var shapeID = this.legendID + '_Axis_' + toggledIndexes[i].axisIndex + '_Shape_' + toggledIndexes[i].rangeIndex;\n            var textID = this.legendID + '_Axis_' + toggledIndexes[i].axisIndex + '_text_' + toggledIndexes[i].rangeIndex;\n            var rangeElement = this.gauge.svgObject.querySelector('#' + rangeID);\n            var shapeElement = this.gauge.svgObject.querySelector('#' + shapeID);\n            var textElement_1 = this.gauge.svgObject.querySelector('#' + textID);\n            if (toggledIndexes[i].isToggled) {\n                if (!isNullOrUndefined(rangeElement)) {\n                    rangeElement.style.visibility = 'visible';\n                    shapeElement.setAttribute('fill', this.legendCollection[toggledIndexes[i].rangeIndex - count].fill);\n                    textElement_1.setAttribute('fill', this.legend.textStyle.color || this.gauge.themeStyle.labelColor);\n                }\n            }\n            else {\n                var hiddenColor = '#D3D3D3';\n                if (!isNullOrUndefined(rangeElement)) {\n                    rangeElement.style.visibility = 'hidden';\n                    shapeElement.setAttribute('fill', hiddenColor);\n                    textElement_1.setAttribute('fill', hiddenColor);\n                }\n            }\n        }\n    };\n    /**\n     * To get legend by index\n     *\n     * @param {number} axisIndex - Specifies the axisIndex.\n     * @param {number} rangeIndex - Specifies the rangeIndex.\n     * @param {LegendOptions[]} legendCollections - Specifies the legendCollections.\n     * @returns {LegendOptions} - Specifies the LegendOptions.\n     */\n    Legend.prototype.legendByIndex = function (axisIndex, rangeIndex, legendCollections) {\n        for (var _i = 0, legendCollections_1 = legendCollections; _i < legendCollections_1.length; _i++) {\n            var legend = legendCollections_1[_i];\n            if (legend.axisIndex === axisIndex && legend.rangeIndex === rangeIndex) {\n                return legend;\n            }\n        }\n        return null;\n    };\n    /**\n     * To change legend pages for chart and accumulation chart\n     *\n     * @param {Event} event - Specifies the event.\n     * @param {boolean} pageUp - Specifies the pageUp.\n     * @returns {void}\n     */\n    Legend.prototype.changePage = function (event, pageUp) {\n        var pageText = document.getElementById(this.legendID + '_pagenumber');\n        var page = parseInt(pageText.textContent.split('/')[!this.gauge.enableRtl ? 0 : 1], 10);\n        if (pageUp && page > 1) {\n            this.translatePage(pageText, (page - 2), (page - 1));\n        }\n        else if (!pageUp && page < this.totalPages) {\n            this.translatePage(pageText, page, (page + 1));\n        }\n    };\n    /**\n     * To find available width from legend x position.\n     *\n     * @param {number} tx - Specifies the tx value.\n     * @param {number} width - Specifies the width.\n     * @returns {number} - Returns the number.\n     */\n    Legend.prototype.getAvailWidth = function (tx, width) {\n        if (this.isVertical) {\n            width = this.maxWidth;\n        }\n        return width - ((this.legend.padding * 2) + this.legend.shapeWidth + this.legend.shapePadding);\n    };\n    /**\n     * To create legend rendering elements for chart and accumulation chart\n     *\n     * @param {Rect} legendBounds - Specifies the legendBounds.\n     * @param {Element} legendGroup - Specifies the legendGroup.\n     * @param {LegendSettingsModel} legend - Specifies the legend.\n     * @param {string} id - Specifies the id.\n     * @returns {Element} - Returns the element.\n     */\n    Legend.prototype.createLegendElements = function (legendBounds, legendGroup, legend, id) {\n        var padding = legend.padding;\n        var options = new RectOption(id + '_element', legend.background, legend.border, legend.opacity, legendBounds);\n        options.width = this.isVertical ? this.maxWidth : legendBounds.width;\n        // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n        legendGroup ? legendGroup.appendChild(this.gauge.renderer.drawRectangle(options)) : this.gauge.renderer.drawRectangle(options);\n        var legendItemsGroup = this.gauge.renderer.createGroup({ id: id + '_collections' });\n        legendGroup.appendChild(legendItemsGroup);\n        this.legendTranslateGroup = this.gauge.renderer.createGroup({ id: id + '_translate_g' });\n        legendItemsGroup.appendChild(this.legendTranslateGroup);\n        var clippath = this.gauge.renderer.createClipPath({ id: id + '_clipPath' });\n        options.id += '_clipPath_rect';\n        options.width = this.isVertical ? options.width - padding : options.width;\n        this.clipRect = this.gauge.renderer.drawRectangle(options);\n        clippath.appendChild(this.clipRect);\n        this.appendChildElement(this.gauge.svgObject, clippath);\n        legendItemsGroup.style.cssText = 'clip-path:url(#' + clippath.id + ')';\n        return this.legendTranslateGroup;\n    };\n    /**\n     * Method to append child element\n     *\n     * @param {Element} parent - Specifies the element.\n     * @param {Element} childElement - Specifies the child element.\n     * @returns {void}\n     */\n    Legend.prototype.appendChildElement = function (parent, childElement) {\n        var existChild = parent.querySelector('#' + childElement.id);\n        var element = (existChild || getElement(childElement.id));\n        var child = childElement;\n        if (existChild) {\n            parent.replaceChild(child, element);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    };\n    /**\n     * To find first valid legend text index for chart and accumulation chart\n     *\n     * @param {LegendOptions[]} legendCollection - Specifies the legend collection.\n     * @returns {number} - Returns the count.\n     */\n    Legend.prototype.findFirstLegendPosition = function (legendCollection) {\n        var count = 0;\n        for (var _i = 0, legendCollection_1 = legendCollection; _i < legendCollection_1.length; _i++) {\n            var legend = legendCollection_1[_i];\n            if (legend.render && legend.text !== '') {\n                break;\n            }\n            count++;\n        }\n        return count;\n    };\n    /**\n     * To find legend bounds for accumulation chart.\n     *\n     * @param {Size} availableSize - Specifies the availableSize.\n     * @param {Rect} legendBounds - Specifies the legendBounds.\n     * @param {LegendSettingsModel} legend - Specifies the legend.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.getLegendBounds = function (availableSize, legendBounds, legend) {\n        var extraWidth = 0;\n        var extraHeight = 0;\n        var padding = legend.padding;\n        if (!this.isVertical) {\n            extraHeight = !legend.height ? ((availableSize.height / 100) * 5) : 0;\n        }\n        else {\n            extraWidth = !legend.width ? ((availableSize.width / 100) * 5) : 0;\n        }\n        legendBounds.width += extraWidth;\n        legendBounds.height += extraHeight;\n        var maximumWidth = 0;\n        var rowWidth = 0;\n        var rowCount = 0;\n        var columnWidth = [];\n        var columnHeight = 0;\n        var legendWidth = 0;\n        this.maxItemHeight = Math.max(measureText('MeasureText', legend.textStyle).height, legend.shapeHeight);\n        var legendEventArgs;\n        var render = false;\n        for (var _i = 0, _a = this.legendCollection; _i < _a.length; _i++) {\n            var legendOption = _a[_i];\n            legendEventArgs = {\n                fill: legendOption.fill, text: legendOption.text, shape: legendOption.shape,\n                name: 'legendRender', cancel: false\n            };\n            this.gauge.trigger('legendRender', legendEventArgs);\n            legendOption.render = !legendEventArgs.cancel;\n            legendOption.text = legendEventArgs.text;\n            legendOption.fill = legendEventArgs.fill;\n            legendOption.shape = legendEventArgs.shape;\n            legendOption.textSize = measureText(legendOption.text, legend.textStyle);\n            if (legendOption.render && legendOption.text !== '') {\n                render = true;\n                legendWidth = legend.shapeWidth + (2 * legend.shapePadding) + legendOption.textSize.width + (2 * padding);\n                if (this.isVertical) {\n                    ++rowCount;\n                    columnHeight = (rowCount * (this.maxItemHeight + padding)) + padding;\n                    if ((rowCount * (this.maxItemHeight + padding)) + padding > legendBounds.height) {\n                        columnHeight = Math.max(columnHeight, (rowCount * (this.maxItemHeight + padding)) + padding);\n                        rowWidth = rowWidth + maximumWidth;\n                        columnWidth.push(maximumWidth);\n                        this.totalPages = Math.max(rowCount, this.totalPages || 1);\n                        maximumWidth = 0;\n                        rowCount = 1;\n                    }\n                    maximumWidth = Math.max(legendWidth, maximumWidth);\n                }\n                else {\n                    rowWidth = rowWidth + legendWidth;\n                    if (legendBounds.width < (padding + rowWidth)) {\n                        maximumWidth = Math.max(maximumWidth, (rowWidth + padding - legendWidth));\n                        if (rowCount === 0 && (legendWidth !== rowWidth)) {\n                            rowCount = 1;\n                        }\n                        rowWidth = legendWidth;\n                        rowCount++;\n                        columnHeight = (rowCount * (this.maxItemHeight + padding)) + padding;\n                    }\n                }\n            }\n        }\n        if (this.isVertical) {\n            rowWidth = rowWidth + maximumWidth;\n            this.isPaging = legendBounds.width < (rowWidth + padding);\n            columnHeight = Math.max(columnHeight, ((this.totalPages || 1) * (this.maxItemHeight + padding)) + padding);\n            this.isPaging = this.isPaging && (this.totalPages > 1);\n            if (columnWidth[columnWidth.length - 1] !== maximumWidth) {\n                columnWidth.push(maximumWidth);\n            }\n        }\n        else {\n            this.isPaging = legendBounds.height < columnHeight;\n            this.totalPages = this.totalRowCount = rowCount;\n            columnHeight = Math.max(columnHeight, (this.maxItemHeight + padding) + padding);\n        }\n        this.maxColumns = 0; // initialization for max columns\n        var width = this.isVertical ? this.getMaxColumn(columnWidth, legendBounds.width, padding, rowWidth + padding) :\n            Math.max(rowWidth + padding, maximumWidth);\n        if (render) { // if any legends not skipped in event check\n            this.setBounds(width, columnHeight, legend, legendBounds);\n        }\n        else {\n            this.setBounds(0, 0, legend, legendBounds);\n        }\n    };\n    /**\n     * @param {Rect} rect - Specifies the rect.\n     * @param {number} left - Specifies the left.\n     * @param {number} right - Specifies the right.\n     * @param {number} top - Specifies the top.\n     * @param {number} bottom - Specifies the bottom.\n     * @returns {Rect} - Returns the rect.\n     * @private\n     */\n    Legend.prototype.subtractThickness = function (rect, left, right, top, bottom) {\n        rect.x += left;\n        rect.y += top;\n        rect.width -= left + right;\n        rect.height -= top + bottom;\n        return rect;\n    };\n    /**\n     * To set bounds for chart and accumulation chart\n     *\n     * @param {number} computedWidth - Specifies compute width.\n     * @param {number} computedHeight - Specifies compute height.\n     * @param {LegendSettingsModel} legend - Specifies the legend.\n     * @param {Rect} legendBounds - Specifies the legend bounds.\n     * @returns {void}\n     */\n    Legend.prototype.setBounds = function (computedWidth, computedHeight, legend, legendBounds) {\n        computedWidth = computedWidth < legendBounds.width ? computedWidth : legendBounds.width;\n        computedHeight = computedHeight < legendBounds.height ? computedHeight : legendBounds.height;\n        legendBounds.width = !legend.width ? computedWidth : legendBounds.width;\n        legendBounds.height = !legend.height ? computedHeight : legendBounds.height;\n        this.rowCount = Math.max(1, Math.ceil((legendBounds.height - legend.padding) / (this.maxItemHeight + legend.padding)));\n        if (this.rowCount === 1 && (legend.position === 'Bottom' || legend.position === 'Top') && (!isNullOrUndefined(legend.width) && legend.width.indexOf(\"%\") > -1)) {\n            legendBounds.width = computedWidth;\n        }\n    };\n    /**\n     * To find maximum column size for legend\n     *\n     * @param {number[]} columns - Specifies the columns\n     * @param {number} width - Specifies the width\n     * @param {number} padding - Specifies the padding\n     * @param {number} rowWidth - Specifies the row width\n     * @returns {number} - Returns the number\n     */\n    Legend.prototype.getMaxColumn = function (columns, width, padding, rowWidth) {\n        var maxPageColumn = padding;\n        this.maxColumnWidth = Math.max.apply(null, columns);\n        for (var i = 0; i < columns.length; i++) {\n            maxPageColumn += this.maxColumnWidth;\n            this.maxColumns++;\n            if (maxPageColumn + padding > width) {\n                maxPageColumn -= this.maxColumnWidth;\n                this.maxColumns--;\n                break;\n            }\n        }\n        this.isPaging = (maxPageColumn < rowWidth) && (this.totalPages > 1);\n        if (maxPageColumn === padding) {\n            maxPageColumn = width;\n        }\n        this.maxColumns = Math.max(1, this.maxColumns);\n        this.maxWidth = maxPageColumn;\n        return maxPageColumn;\n    };\n    /**\n     * To show or hide trimmed text tooltip for legend.\n     *\n     * @param {Event} event - Specifies the event.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.move = function (event) {\n        var x = this.gauge.mouseX;\n        var y = this.gauge.mouseY;\n        var targetId = event.target.id;\n        if (event.target.textContent.indexOf('...') > -1 && targetId.indexOf('_gauge_legend_') > -1) {\n            var axisIndex = parseInt(targetId.split(this.gauge.element.id + '_gauge_legend_Axis_')[1].split('_text_')[0], 10);\n            var rangeIndex = parseInt(targetId.split(this.gauge.element.id + '_gauge_legend_Axis_')[1].split('_text_')[1], 10);\n            var text = '';\n            for (var _i = 0, _a = this.legendCollection; _i < _a.length; _i++) {\n                var legends = _a[_i];\n                if (legends.rangeIndex === rangeIndex && legends.axisIndex === axisIndex) {\n                    text = legends.originalText;\n                }\n            }\n            showTooltip(text, x, y, this.gauge.element.offsetWidth, this.gauge.element.id + '_EJ2_Legend_Tooltip', getElement(this.gauge.element.id + '_Secondary_Element'));\n        }\n        else {\n            removeElement(this.gauge.element.id + '_EJ2_Legend_Tooltip');\n        }\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name.\n     */\n    Legend.prototype.getModuleName = function () {\n        return 'Legend';\n    };\n    /**\n     * To destroy the legend.\n     *\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.destroy = function () {\n        this.legendCollection = [];\n        this.legendRenderingCollections = [];\n        this.legendRegions = [];\n        this.titleRect = null;\n        this.pageXCollections = [];\n        this.clipRect = null;\n        this.legendTranslateGroup = null;\n        this.legend = null;\n        this.pagingRegions = [];\n        this.toggledIndexes = [];\n        this.legendBounds = null;\n        this.removeEventListener();\n        this.gauge = null;\n    };\n    return Legend;\n}());\nexport { Legend };\n/**\n * @private\n */\nvar Index = /** @class */ (function () {\n    function Index(axisIndex, rangeIndex, isToggled) {\n        this.axisIndex = axisIndex;\n        this.rangeIndex = rangeIndex;\n        this.isToggled = isToggled;\n    }\n    return Index;\n}());\nexport { Index };\n/**\n * Class for legend options\n *\n * @private\n */\nvar LegendOptions = /** @class */ (function () {\n    function LegendOptions(text, originalText, fill, shape, visible, border, shapeBorder, shapeWidth, shapeHeight, rangeIndex, axisIndex) {\n        this.location = { x: 0, y: 0 };\n        this.text = text;\n        this.originalText = originalText;\n        this.fill = fill;\n        this.shape = shape;\n        this.visible = visible;\n        this.border = border;\n        this.shapeBorder = shapeBorder;\n        this.shapeWidth = shapeWidth;\n        this.shapeHeight = shapeHeight;\n        this.rangeIndex = rangeIndex;\n        this.axisIndex = axisIndex;\n    }\n    return LegendOptions;\n}());\nexport { LegendOptions };\n","import { createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { PdfPageOrientation, PdfDocument, PdfBitmap } from '@syncfusion/ej2-pdf-export';\n/**\n * Represent the Pdf export for gauge\n *\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     *\n     * @param {CircularGauge} control - Specfies the instance of the gauge.\n     */\n    // eslint-disable-next-line\n    function PdfExport(control) {\n    }\n    /**\n     * To export the file as image/svg format\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of Circular Gauge.\n     * @param {ExportType} type - Specifies the type of the document.\n     * @param {string} fileName Specfies the file name of the document.\n     * @param {PdfPageOrientation} orientation - Specfies the orientation of the PDF document to export the gauge.\n     * @param {boolean} allowDownload - Specfies whether to download the document or not.\n     * @returns {Promise<string>} - Returns the promise string\n     * @private\n     */\n    PdfExport.prototype.export = function (gauge, type, fileName, orientation, allowDownload) {\n        // eslint-disable-next-line\n        var promise = new Promise(function (resolve, reject) {\n            var element = createElement('canvas', {\n                id: 'ej2-canvas',\n                attrs: {\n                    'width': gauge.availableSize.width.toString(),\n                    'height': gauge.availableSize.height.toString()\n                }\n            });\n            orientation = isNullOrUndefined(orientation) ? PdfPageOrientation.Landscape : orientation;\n            var exportElement = gauge.svgObject.cloneNode(true);\n            var backgroundElement = exportElement.childNodes[0];\n            var backgroundColor = backgroundElement.getAttribute('fill');\n            if ((gauge.theme === 'Tailwind' || gauge.theme === 'Bootstrap5' || gauge.theme === 'Fluent' || gauge.theme === 'Material3') && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                exportElement.childNodes[0].setAttribute('fill', 'rgba(255,255,255, 1)');\n            }\n            else if ((gauge.theme === 'TailwindDark' || gauge.theme === 'Bootstrap5Dark' || gauge.theme === 'FluentDark' || gauge.theme === 'Material3Dark') && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                exportElement.childNodes[0].setAttribute('fill', 'rgba(0, 0, 0, 1)');\n            }\n            var url = window.URL.createObjectURL(new Blob([(new XMLSerializer()).serializeToString(exportElement)], { type: 'image/svg+xml' }));\n            var image = new Image();\n            var context = element.getContext('2d');\n            image.onload = (function () {\n                context.drawImage(image, 0, 0);\n                window.URL.revokeObjectURL(url);\n                var document = new PdfDocument();\n                var imageString = element.toDataURL('image/jpeg').replace('image/jpeg', 'image/octet-stream');\n                document.pageSettings.orientation = orientation;\n                imageString = imageString.slice(imageString.indexOf(',') + 1);\n                document.pages.add().graphics.\n                    drawImage(new PdfBitmap(imageString), 0, 0, gauge.availableSize.width, gauge.availableSize.height);\n                if (allowDownload) {\n                    document.save(fileName + '.pdf');\n                    document.destroy();\n                }\n                else {\n                    resolve(null);\n                }\n            });\n            image.src = url;\n        });\n        return promise;\n    };\n    PdfExport.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'PdfExport';\n    };\n    /**\n     * To destroy the PdfExport.\n     *\n     * @returns {void}\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    PdfExport.prototype.destroy = function () { };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { createElement, Browser } from '@syncfusion/ej2-base';\n/**\n * Represent the Image Export for gauge\n *\n * @hidden\n */\nvar ImageExport = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     *\n     *  @param {CircularGauge} control - Specfies the instance of the gauge\n     */\n    // eslint-disable-next-line\n    function ImageExport(control) {\n    }\n    /**\n     * To export the file as image/svg format\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of Circular Gauge.\n     * @param {ExportType} type - Specifies the type of the image file.\n     * @param {string} fileName - Specifies the file name of the image file.\n     * @param {boolean} allowDownload - Specifies whether to download the image file or not.\n     * @returns {Promise<string>} - Returns promise string.\n     * @private\n     */\n    ImageExport.prototype.export = function (gauge, type, fileName, allowDownload) {\n        var _this = this;\n        // eslint-disable-next-line\n        var promise = new Promise(function (resolve, reject) {\n            var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n            var element = createElement('canvas', {\n                id: 'ej2-canvas',\n                attrs: {\n                    'width': gauge.availableSize.width.toString(),\n                    'height': gauge.availableSize.height.toString()\n                }\n            });\n            var exportElement = gauge.svgObject.cloneNode(true);\n            var backgroundElement = exportElement.childNodes[0];\n            var backgroundColor = backgroundElement.getAttribute('fill');\n            if ((gauge.theme === 'Tailwind' || gauge.theme === 'Bootstrap5' || gauge.theme === 'Fluent' || gauge.theme === 'Material3') && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                exportElement.childNodes[0].setAttribute('fill', 'rgba(255,255,255, 1)');\n            }\n            else if ((gauge.theme === 'TailwindDark' || gauge.theme === 'Bootstrap5Dark' || gauge.theme === 'FluentDark' || gauge.theme === 'Material3Dark') && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                exportElement.childNodes[0].setAttribute('fill', 'rgba(0, 0, 0, 1)');\n            }\n            var svgData = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">' +\n                exportElement.outerHTML +\n                '</svg>';\n            var url = window.URL.createObjectURL(new Blob(type === 'SVG' ? [svgData] :\n                [(new XMLSerializer()).serializeToString(exportElement)], { type: 'image/svg+xml' }));\n            if (type === 'SVG') {\n                if (allowDownload) {\n                    _this.triggerDownload(fileName, type, url, isDownload);\n                }\n                else {\n                    resolve(null);\n                }\n            }\n            else {\n                var image_1 = new Image();\n                var context_1 = element.getContext('2d');\n                image_1.onload = (function () {\n                    context_1.drawImage(image_1, 0, 0);\n                    window.URL.revokeObjectURL(url);\n                    if (allowDownload) {\n                        _this.triggerDownload(fileName, type, element.toDataURL('image/png').replace('image/png', 'image/octet-stream'), isDownload);\n                    }\n                    else {\n                        if (type === 'JPEG') {\n                            resolve(element.toDataURL('image/jpeg'));\n                        }\n                        else if (type === 'PNG') {\n                            resolve(element.toDataURL('image/png'));\n                        }\n                    }\n                });\n                image_1.src = url;\n            }\n        });\n        return promise;\n    };\n    ImageExport.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'ImageExport';\n    };\n    /**\n     * To destroy the ImageExport.\n     *\n     * @returns {void}\n     * @private\n     */\n    /* eslint-disable-next-line @typescript-eslint/no-empty-function */\n    ImageExport.prototype.destroy = function () { };\n    /**\n     * To trigger the download element\n     *\n     * @param {string} fileName - Specifies the file name.\n     * @param {ExportType} type - Specifies the export type.\n     * @param {string} url - Specifies the url.\n     * @param {boolean} isDownload - Specifies the boolean value.\n     * @returns {void}\n     */\n    ImageExport.prototype.triggerDownload = function (fileName, type, url, isDownload) {\n        createElement('a', {\n            attrs: {\n                'download': fileName + '.' + type.toLocaleLowerCase(),\n                'href': url\n            }\n        }).dispatchEvent(new MouseEvent(isDownload ? 'click' : 'move', {\n            view: window,\n            bubbles: false,\n            cancelable: true\n        }));\n    };\n    return ImageExport;\n}());\nexport { ImageExport };\n","import { print as printFunction, createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { getElement } from '../utils/helper-common';\nimport { beforePrint } from './constants';\n/**\n * Represent the print for gauge\n *\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     *\n     * @param {CircularGauge} control - Specifies the instance of the gauge.\n     */\n    // eslint-disable-next-line\n    function Print(control) {\n    }\n    /**\n     * To print the gauge\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of Circular Gauge.\n     * @param {string[] | string | Element} elements - Specifies the element.\n     * @returns {void}\n     * @private\n     */\n    Print.prototype.print = function (gauge, elements) {\n        var printWindow = window.open('', 'print', 'height=' + window.outerHeight + ',width=' + window.outerWidth + ',tabbar=no');\n        printWindow.moveTo(0, 0);\n        printWindow.resizeTo(screen.availWidth, screen.availHeight);\n        var argsData = {\n            cancel: false, htmlContent: this.getHTMLContent(gauge, elements), name: beforePrint\n        };\n        // eslint-disable-next-line\n        gauge.trigger('beforePrint', argsData, function (beforePrintArgs) {\n            if (!argsData.cancel) {\n                printFunction(argsData.htmlContent, printWindow);\n            }\n        });\n    };\n    /**\n     * To get the html string of the gauge\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of Circular Gauge.\n     * @param { string[] | string | Element} elements - Specifies the element.\n     * @returns {Element} - Returns the div element.\n     * @private\n     */\n    Print.prototype.getHTMLContent = function (gauge, elements) {\n        var div = createElement('div');\n        if (elements) {\n            if (elements instanceof Array) {\n                elements.forEach(function (value) {\n                    div.appendChild(getElement(value).cloneNode(true));\n                });\n            }\n            else if (elements instanceof Element) {\n                div.appendChild(elements.cloneNode(true));\n            }\n            else {\n                div.appendChild(getElement(elements).cloneNode(true));\n            }\n        }\n        else {\n            var exportElement = gauge.element.cloneNode(true);\n            var backgroundElement = exportElement.getElementsByTagName('svg')[0];\n            if (!isNullOrUndefined(backgroundElement)) {\n                backgroundElement = backgroundElement.childNodes[0];\n                if (!isNullOrUndefined(backgroundElement)) {\n                    var backgroundColor = backgroundElement.getAttribute('fill');\n                    if ((gauge.theme === 'Tailwind' || gauge.theme === 'Bootstrap5' || gauge.theme === 'Fluent' || gauge.theme === 'Material3') && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                        backgroundElement.setAttribute('fill', 'rgba(255,255,255, 1)');\n                    }\n                    else if ((gauge.theme === 'TailwindDark' || gauge.theme === 'Bootstrap5Dark' || gauge.theme === 'FluentDark' || gauge.theme === 'Material3Dark') && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                        backgroundElement.setAttribute('fill', 'rgba(0, 0, 0, 1)');\n                    }\n                }\n            }\n            div.appendChild(exportElement);\n        }\n        return div;\n    };\n    Print.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Print';\n    };\n    /**\n     * To destroy the Print.\n     *\n     * @returns {void}\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    Print.prototype.destroy = function () { };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex, Collection, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\n/**\n * Specifies the color information for the gradient in the circular gauge.\n */\nvar ColorStop = /** @class */ (function (_super) {\n    __extends(ColorStop, _super);\n    function ColorStop() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#000000')\n    ], ColorStop.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], ColorStop.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('0%')\n    ], ColorStop.prototype, \"offset\", void 0);\n    __decorate([\n        Property('')\n    ], ColorStop.prototype, \"style\", void 0);\n    return ColorStop;\n}(ChildProperty));\nexport { ColorStop };\n/**\n * Specifies the position in percentage from which the radial gradient must be applied.\n */\nvar GradientPosition = /** @class */ (function (_super) {\n    __extends(GradientPosition, _super);\n    function GradientPosition() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('0%')\n    ], GradientPosition.prototype, \"x\", void 0);\n    __decorate([\n        Property('0%')\n    ], GradientPosition.prototype, \"y\", void 0);\n    return GradientPosition;\n}(ChildProperty));\nexport { GradientPosition };\n/**\n * This specifies the properties of the linear gradient colors for the circular gauge.\n */\nvar LinearGradient = /** @class */ (function (_super) {\n    __extends(LinearGradient, _super);\n    function LinearGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], LinearGradient.prototype, \"startValue\", void 0);\n    __decorate([\n        Property(null)\n    ], LinearGradient.prototype, \"endValue\", void 0);\n    __decorate([\n        Collection([{ color: '#000000', opacity: 1, offset: '0%', style: '' }], ColorStop)\n    ], LinearGradient.prototype, \"colorStop\", void 0);\n    return LinearGradient;\n}(ChildProperty));\nexport { LinearGradient };\n/**\n * This specifies the properties of the radial gradient colors for the circular gauge.\n */\nvar RadialGradient = /** @class */ (function (_super) {\n    __extends(RadialGradient, _super);\n    function RadialGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('0%')\n    ], RadialGradient.prototype, \"radius\", void 0);\n    __decorate([\n        Complex({ x: '0%', y: '0%' }, GradientPosition)\n    ], RadialGradient.prototype, \"outerPosition\", void 0);\n    __decorate([\n        Complex({ x: '0%', y: '0%' }, GradientPosition)\n    ], RadialGradient.prototype, \"innerPosition\", void 0);\n    __decorate([\n        Collection([{ color: '#000000', opacity: 1, offset: '0%', style: '' }], ColorStop)\n    ], RadialGradient.prototype, \"colorStop\", void 0);\n    return RadialGradient;\n}(ChildProperty));\nexport { RadialGradient };\n/**\n * Sets and gets the module that enables the gradient option for pointers and ranges.\n *\n * @hidden\n */\nvar Gradient = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge\n     */\n    function Gradient(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * To get linear gradient string for pointers and ranges\n     *\n     * @param { PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.\n     * @param {name} name - Specifies the name of the gradient.\n     * @param {name} direction - Specifies the gradient position.\n     * @returns {string} - Returns the string value.\n     * @private\n     */\n    Gradient.prototype.calculateLinearGradientPosition = function (element, name, direction) {\n        var linearPosition = {\n            id: name,\n            x1: (isNullOrUndefined(element.linearGradient.startValue) && name.indexOf('range') !== -1\n                ? (direction === 'right' ? '100%' : '0%')\n                : (!isNullOrUndefined(element.linearGradient.startValue) ? ((element.linearGradient.startValue.indexOf('%') === -1 ?\n                    element.linearGradient.startValue :\n                    parseFloat(element.linearGradient.startValue).toString()) + '%') : '0%')),\n            x2: (isNullOrUndefined(element.linearGradient.endValue) && name.indexOf('range') !== -1 ?\n                (direction === 'left' ? '100%' : '0%') :\n                (!isNullOrUndefined(element.linearGradient.endValue) ? ((element.linearGradient.endValue.indexOf('%') === -1 ?\n                    element.linearGradient.endValue : parseFloat(element.linearGradient.endValue).toString()) + '%') : '100%')),\n            y1: (isNullOrUndefined(element.linearGradient.startValue) && name.indexOf('range') !== -1\n                ? (direction === 'bottom' ? '100%' : '0%') : '0%'),\n            y2: (isNullOrUndefined(element.linearGradient.endValue) && name.indexOf('range') !== -1\n                ? (direction === 'top' ? '100%' : '0%') : '0%')\n        };\n        return linearPosition;\n    };\n    /**\n     * To get linear gradient string for pointers and ranges\n     *\n     * @param { PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.\n     * @param {number} index - Specifies the index of the axis.\n     * @param { string } direction - Specifies the gradient position.\n     * @param { number } rangeIndex - Specifies the index of the range.\n     * @returns {string} - Returns the string value.\n     * @private\n     */\n    Gradient.prototype.getLinearGradientColor = function (element, index, direction, rangeIndex) {\n        var render = new SvgRenderer('');\n        var colors = (isNullOrUndefined(element.linearGradient.startValue) &&\n            isNullOrUndefined(element.linearGradient.endValue) && !isNullOrUndefined(rangeIndex)) ?\n            this.getCircularGradientColor(element.linearGradient.colorStop, index) :\n            this.getGradientColor(element.linearGradient.colorStop);\n        var name = (isNullOrUndefined(element.linearGradient.startValue) &&\n            isNullOrUndefined(element.linearGradient.endValue) && !isNullOrUndefined(rangeIndex)) ?\n            '_' + this.gauge.svgObject.id + '_range_' +\n                rangeIndex + '_color_' + index + '_' + 'linearGradient'\n            : '_' + this.gauge.svgObject.id + '_' + this.gauge.gradientCount + '_' + 'linearGradient';\n        var gradientPosition = this.calculateLinearGradientPosition(element, name, direction);\n        gradientPosition = {\n            id: gradientPosition.id,\n            x1: gradientPosition.x1,\n            x2: gradientPosition.x2,\n            y1: gradientPosition.y1,\n            y2: gradientPosition.y2\n        };\n        var def = render.drawGradient('linearGradient', gradientPosition, colors);\n        this.gauge.svgObject.appendChild(def);\n        return 'url(#' + name + ')';\n    };\n    /**\n     * To get color, opacity, offset and style for circular gradient path.\n     *\n     * @param {ColorStopModel[]} colorStop - Specifies the colorStop.\n     * @param {number} index - Specifies the index.\n     * @returns {GradientColor[]} - return the gradient color value.\n     * @private\n     */\n    Gradient.prototype.getCircularGradientColor = function (colorStop, index) {\n        var colors = [];\n        var colorIndex = index;\n        for (var j = colorIndex; j < (index === (colorStop.length - 1) ? index + 1 : index + 2); j++) {\n            var color = {\n                color: colorStop[j].color,\n                colorStop: colorStop[j].offset,\n                opacity: colorStop[j].opacity ? colorStop[j].opacity.toString() : '1',\n                style: colorStop[j].style\n            };\n            colors.push(color);\n            colorIndex++;\n        }\n        return colors;\n    };\n    /**\n     * To get the radial gradient string.\n     *\n     * @param {PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.\n     * @returns {string} - Returns the string.\n     * @private\n     */\n    Gradient.prototype.getRadialGradientColor = function (element) {\n        var render = new SvgRenderer('');\n        var colors = this.getGradientColor(element.radialGradient.colorStop);\n        var name = '_' + this.gauge.svgObject.id + '_' + this.gauge.gradientCount + '_' + 'radialGradient';\n        var gradientPosition = {\n            id: name,\n            r: (element.radialGradient.radius.indexOf('%') === -1 ?\n                element.radialGradient.radius :\n                parseFloat(element.radialGradient.radius).toString()) + '%',\n            cx: (element.radialGradient.outerPosition.x.indexOf('%') === -1 ?\n                element.radialGradient.outerPosition.x :\n                parseFloat(element.radialGradient.outerPosition.x).toString()) + '%',\n            cy: (element.radialGradient.outerPosition.y.indexOf('%') === -1 ?\n                element.radialGradient.outerPosition.y :\n                parseFloat(element.radialGradient.outerPosition.y).toString()) + '%',\n            fx: (element.radialGradient.innerPosition.x.indexOf('%') === -1 ?\n                element.radialGradient.innerPosition.x :\n                parseFloat(element.radialGradient.innerPosition.x).toString()) + '%',\n            fy: (element.radialGradient.innerPosition.y.indexOf('%') === -1 ?\n                element.radialGradient.innerPosition.y :\n                parseFloat(element.radialGradient.innerPosition.y).toString()) + '%'\n        };\n        var def = render.drawGradient('radialGradient', gradientPosition, colors);\n        this.gauge.svgObject.appendChild(def);\n        return 'url(#' + name + ')';\n    };\n    /**\n     * To get color, opacity, offset and style.\n     *\n     * @param { ColorStopModel[]} colorStop - Specifies the color stop.\n     * @returns {GradientColor[]} - Returns the gradientColor.\n     * @private\n     */\n    Gradient.prototype.getGradientColor = function (colorStop) {\n        var colors = [];\n        for (var j = 0; j < colorStop.length; j++) {\n            var color = {\n                color: colorStop[j].color,\n                colorStop: colorStop[j].offset,\n                opacity: colorStop[j].opacity ? colorStop[j].opacity.toString() : '1',\n                style: colorStop[j].style\n            };\n            colors.push(color);\n        }\n        return colors;\n    };\n    /**\n     * To get a gradient color string\n     *\n     * @param {PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.\n     * @param {number} index - specifies the index.\n     * @param {string} direction - specifies the direction.\n     * @param {number} rangeIndex - specifies the index of range.\n     * @returns {string} - Returns the string\n     * @private\n     */\n    Gradient.prototype.getGradientColorString = function (element, index, direction, rangeIndex) {\n        var gradientColor;\n        if ((element.linearGradient && !isNullOrUndefined(element.linearGradient.colorStop)) ||\n            (element.radialGradient && !isNullOrUndefined(element.radialGradient.colorStop))) {\n            if (element.linearGradient) {\n                gradientColor = this.getLinearGradientColor(element, index, direction, rangeIndex);\n            }\n            else {\n                gradientColor = this.getRadialGradientColor(element);\n            }\n            this.gauge.gradientCount = this.gauge.gradientCount + 1;\n        }\n        else {\n            return null;\n        }\n        return gradientColor;\n    };\n    Gradient.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Gradient';\n    };\n    /**\n     * To destroy the Gradient.\n     *\n     * @returns {void}\n     * @private\n     */\n    Gradient.prototype.destroy = function () {\n        this.gauge = null;\n    };\n    return Gradient;\n}());\nexport { Gradient };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable max-len */\n/**\n * Circular Gauge\n */\nimport { Property, NotifyPropertyChanges, Component } from '@syncfusion/ej2-base';\nimport { Complex, Browser, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, Collection, Internationalization } from '@syncfusion/ej2-base';\nimport { remove, createElement } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { removeElement, getElement, stringToNumber, measureText, toPixel, textElement, getAngleFromValue, getAngleFromLocation, getPathArc, getPointer, RectOption, Size, GaugeLocation, Rect, TextOption } from './utils/helper-common';\nimport { setStyles, getValueFromAngle, getRange } from './utils/helper-circular-gauge';\nimport { Border, Margin, Font, TooltipSettings } from './model/base';\nimport { Axis } from './axes/axis';\nimport { Annotations } from './annotations/annotations';\nimport { GaugeTooltip } from './user-interaction/tooltip';\nimport { load, loaded, gaugeMouseMove, gaugeMouseLeave, gaugeMouseDown, pointerMove } from './model/constants';\nimport { rangeMove, pointerStart, rangeStart, pointerEnd, rangeEnd } from './model/constants';\nimport { gaugeMouseUp, dragEnd, dragMove, dragStart, resized } from './model/constants';\nimport { AxisLayoutPanel } from './axes/axis-panel';\nimport { getThemeStyle } from './model/theme';\nimport { LegendSettings, Legend } from './legend/legend';\nimport { PdfExport } from './model/pdf-export';\nimport { ImageExport } from './model/image-export';\nimport { Print } from './model/print';\nimport { Gradient } from './axes/gradient';\n/**\n * Represents the circular gauge control. This is used to customize the properties of the circular gauge to visualize the data in circular scale.\n * ```html\n * <div id=\"gauge\"/>\n * <script>\n *   var gaugeObj = new CircularGauge();\n *   gaugeObj.appendTo(\"#gauge\");\n * </script>\n * ```\n */\nvar CircularGauge = /** @class */ (function (_super) {\n    __extends(CircularGauge, _super);\n    /**\n     * Constructor for creating the widget\n     *\n     * @param {CircularGaugeModel} options - Specifies the options\n     * @param {string} element - Specifies the element\n     * @hidden\n     */\n    function CircularGauge(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.isRangeUpdate = false;\n        /** @private */\n        _this.isDrag = false;\n        /**\n         * @private\n         */\n        _this.gradientCount = 0;\n        return _this;\n    }\n    /**\n     * To create svg object, renderer and binding events for the container.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.preRender = function () {\n        this.unWireEvents();\n        this.trigger(load, { gauge: this });\n        this.initPrivateVariable();\n        this.setCulture();\n        this.createSvg();\n        this.wireEvents();\n    };\n    /**\n     * To render the circular gauge elements\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.render = function () {\n        this.setTheme();\n        this.calculateBounds();\n        this.isPropertyChange = false;\n        this.renderElements();\n        this.renderComplete();\n    };\n    CircularGauge.prototype.setTheme = function () {\n        this.themeStyle = getThemeStyle(this.theme);\n    };\n    /**\n     * Method to unbind events for circular gauge\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.unWireEvents = function () {\n        EventHandler.remove(this.element, Browser.touchStartEvent, this.gaugeOnMouseDown);\n        EventHandler.remove(this.element, Browser.touchMoveEvent, this.mouseMove);\n        EventHandler.remove(this.element, Browser.touchEndEvent, this.mouseEnd);\n        EventHandler.remove(this.element, 'click', this.gaugeOnMouseClick);\n        EventHandler.remove(this.element, 'contextmenu', this.gaugeRightClick);\n        EventHandler.remove(this.element, (Browser.isPointer ? 'pointerleave' : 'mouseleave'), this.mouseLeave);\n        window.removeEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.resizeEvent);\n    };\n    /**\n     * Method to bind events for circular gauge\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.wireEvents = function () {\n        /*! Bind the Event handler */\n        EventHandler.add(this.element, Browser.touchStartEvent, this.gaugeOnMouseDown, this);\n        EventHandler.add(this.element, Browser.touchMoveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, Browser.touchEndEvent, this.mouseEnd, this);\n        EventHandler.add(this.element, 'click', this.gaugeOnMouseClick, this);\n        EventHandler.add(this.element, 'contextmenu', this.gaugeRightClick, this);\n        EventHandler.add(this.element, (Browser.isPointer ? 'pointerleave' : 'mouseleave'), this.mouseLeave, this);\n        this.resizeEvent = this.gaugeResize.bind(this);\n        window.addEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.resizeEvent);\n        /*! Apply the style for circular gauge */\n        this.setGaugeStyle(this.element);\n    };\n    /**\n     * Handles the mouse click on accumulation chart.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.gaugeOnMouseClick = function (e) {\n        this.setMouseXY(e);\n        if (this.legendModule && this.legendSettings.visible) {\n            this.legendModule.click(e);\n        }\n        return false;\n    };\n    /**\n     * Handles the mouse move.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.mouseMove = function (e) {\n        var _this = this;\n        this.setMouseXY(e);\n        var args = this.getMouseArgs(e, 'touchmove', gaugeMouseMove);\n        this.trigger('gaugeMouseMove', args, function (observedArgs) {\n            var dragArgs;\n            if (!args.cancel) {\n                if ((_this.enablePointerDrag || _this.enableRangeDrag) && _this.svgObject.getAttribute('cursor') !== 'grabbing') {\n                    if ((args.target.id.indexOf('_Pointer_') !== -1 && _this.enablePointerDrag) || (_this.enableRangeDrag && args.target.id.indexOf('_Range_') !== -1)) {\n                        _this.svgObject.setAttribute('cursor', 'pointer');\n                    }\n                    else {\n                        _this.svgObject.setAttribute('cursor', 'auto');\n                    }\n                }\n                var svgElement = getElement(_this.element.id + '_svg');\n                var extraWidth = _this.element.getBoundingClientRect().left - svgElement.getBoundingClientRect().left;\n                if (_this.enablePointerDrag && _this.activePointer) {\n                    _this.isDrag = true;\n                    var dragPointInd = parseInt(_this.activePointer.pathElement[0].id.slice(-1), 10);\n                    var dragAxisInd = parseInt(_this.activePointer.pathElement[0].id.split('_Axis_')[1], 10);\n                    dragArgs = {\n                        axis: _this.activeAxis,\n                        pointer: _this.activePointer,\n                        previousValue: _this.activePointer.currentValue,\n                        name: dragMove,\n                        type: pointerMove,\n                        currentValue: null,\n                        axisIndex: dragAxisInd,\n                        pointerIndex: dragPointInd\n                    };\n                    _this.pointerDrag(new GaugeLocation(args.x + extraWidth, args.y), dragAxisInd, dragPointInd);\n                    dragArgs.currentValue = _this.activePointer.currentValue;\n                    _this.trigger(dragMove, dragArgs);\n                    _this.activeRange = null;\n                }\n                else if (_this.enableRangeDrag && _this.activeRange) {\n                    _this.isDrag = true;\n                    var dragAxisInd = parseInt(_this.activeRange.pathElement[0].id.split('_Axis_')[1], 10);\n                    var dragRangeInd = parseInt(_this.activeRange.pathElement[0].id.split('Range_')[1], 10);\n                    dragArgs = {\n                        axis: _this.activeAxis,\n                        name: dragMove,\n                        type: rangeMove,\n                        range: _this.activeRange,\n                        axisIndex: dragAxisInd,\n                        rangeIndex: dragRangeInd\n                    };\n                    _this.rangeDrag(new GaugeLocation(args.x + extraWidth, args.y), dragAxisInd, dragRangeInd);\n                    _this.trigger(dragMove, dragArgs);\n                }\n            }\n        });\n        if (!this.isTouch) {\n            if (this.legendModule && this.legendSettings.visible) {\n                this.legendModule.move(e);\n            }\n        }\n        this.notify(Browser.touchMoveEvent, e);\n        return false;\n    };\n    /**\n     * Handles the mouse leave.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.mouseLeave = function (e) {\n        this.setMouseXY(e);\n        this.activeAxis = null;\n        this.activePointer = null;\n        this.activeRange = null;\n        this.svgObject.setAttribute('cursor', 'auto');\n        var args = this.getMouseArgs(e, 'touchmove', gaugeMouseLeave);\n        this.trigger(gaugeMouseLeave, args);\n        return false;\n    };\n    /**\n     * Handles the mouse right click.\n     *\n     * @param {MouseEvent | PointerEvent} event - Specifies the pointer or mouse event.\n     * @returns {boolean} - Returns the boolean value.\n     * @private\n     */\n    CircularGauge.prototype.gaugeRightClick = function (event) {\n        if (event.buttons === 2 || event.pointerType === 'touch') {\n            event.preventDefault();\n            event.stopPropagation();\n            return false;\n        }\n        return true;\n    };\n    /**\n     * Handles the pointer draf while mouse move on gauge.\n     *\n     * @param {GaugeLocation} location - Specifies the location of the gauge\n     * @param {number} axisIndex - Specifies the axis index\n     * @param {number} pointerIndex - Specifies the pointer index\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.pointerDrag = function (location, axisIndex, pointerIndex) {\n        var axis = this.activeAxis;\n        var range = axis.visibleRange;\n        var value = getValueFromAngle(getAngleFromLocation(this.midPoint, location), range.max, range.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        if (value >= range.min && value <= range.max) {\n            this.axes[axisIndex].pointers[pointerIndex].value = value;\n            this.activePointer.currentValue = value;\n            this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, this.activePointer, value);\n        }\n    };\n    /**\n     * Handles the range draf while mouse move on gauge.\n     *\n     * @param {GaugeLocation} location - Specifies the gauge location\n     * @param {number} axisIndex - Specifies the axis index\n     * @param {number} rangeIndex - Specifies the range index\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.rangeDrag = function (location, axisIndex, rangeIndex) {\n        if (this.activeAxis) {\n            var axis = this.activeAxis;\n            var range = axis.visibleRange;\n            var value = getValueFromAngle(getAngleFromLocation(this.midPoint, location), range.max, range.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n            if (value >= range.min && value <= range.max) {\n                var previousValue1 = this.activeRange.currentValue;\n                this.activeRange.currentValue = value;\n                var add = (this.activeRange.end - this.activeRange.start);\n                var div = add / 2;\n                var avg = parseFloat(this.activeRange.start.toString()) + div;\n                var start = typeof this.activeRange.start === 'string' ? parseFloat(this.activeRange.start) : this.activeRange.start;\n                var end = typeof this.activeRange.end === 'string' ? parseFloat(this.activeRange.end) : this.activeRange.end;\n                this.startValue = (value < avg) ? value : ((previousValue1 < avg) ? previousValue1 : ((start < end) ? this.activeRange.start : this.activeRange.end));\n                this.endValue = (value < avg) ? ((previousValue1 > avg) ? previousValue1 : ((start < end) ? this.activeRange.end : this.activeRange.start)) : value;\n                this.axes[axisIndex].ranges[rangeIndex].start = this.startValue;\n                this.axes[axisIndex].ranges[rangeIndex].end = this.endValue;\n            }\n        }\n    };\n    /**\n     * Handles the mouse down on gauge.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.gaugeOnMouseDown = function (e) {\n        var _this = this;\n        this.setMouseXY(e);\n        var currentPointer;\n        var currentRange;\n        var args = this.getMouseArgs(e, 'touchstart', gaugeMouseDown);\n        this.trigger('gaugeMouseDown', args, function (observedArgs) {\n            if (!args.cancel &&\n                args.target.id.indexOf(_this.element.id + '_Axis_') >= 0 &&\n                args.target.id.indexOf('_Pointer_') >= 0) {\n                currentPointer = getPointer(args.target.id, _this);\n                _this.activeAxis = _this.axes[currentPointer.axisIndex];\n                _this.activePointer = _this.activeAxis.pointers[currentPointer.pointerIndex];\n                if (isNullOrUndefined(_this.activePointer.pathElement)) {\n                    _this.activePointer.pathElement = [e.target];\n                }\n                if (_this.activePointer.type === 'Marker' && _this.activePointer.markerShape === 'Text' && _this.activePointer.pathElement.length === 0) {\n                    _this.activePointer.pathElement = [e.target];\n                }\n                var pointInd = parseInt(_this.activePointer.pathElement[0].id.slice(-1), 10);\n                var axisInd = parseInt(_this.activePointer.pathElement[0].id.split('_Axis_')[1], 10);\n                _this.trigger(dragStart, {\n                    axis: _this.activeAxis,\n                    name: dragStart,\n                    type: pointerStart,\n                    pointer: _this.activePointer,\n                    currentValue: _this.activePointer.currentValue,\n                    pointerIndex: pointInd,\n                    axisIndex: axisInd\n                });\n                if (_this.enablePointerDrag) {\n                    _this.svgObject.setAttribute('cursor', 'grabbing');\n                }\n            }\n            else if (!args.cancel &&\n                args.target.id.indexOf(_this.element.id + '_Axis_') >= 0 &&\n                args.target.id.indexOf('_Range_') >= 0) {\n                currentRange = getRange(args.target.id, _this);\n                _this.activeAxis = _this.axes[currentRange.axisIndex];\n                _this.activeRange = _this.activeAxis.ranges[currentRange.rangeIndex];\n                if (isNullOrUndefined(_this.activeRange.pathElement)) {\n                    _this.activeRange.pathElement = [e.target];\n                }\n                var rangeInd = parseInt(_this.activeRange.pathElement[0].id.split('Range_')[1], 10);\n                var axisInd = parseInt(_this.activeRange.pathElement[0].id.split('_Axis_')[1], 10);\n                _this.trigger(dragStart, {\n                    axis: _this.activeAxis,\n                    name: dragStart,\n                    type: rangeStart,\n                    range: _this.activeRange,\n                    axisIndex: axisInd,\n                    rangeIndex: rangeInd\n                });\n                if (_this.enableRangeDrag) {\n                    _this.svgObject.setAttribute('cursor', 'grabbing');\n                }\n            }\n        });\n        return false;\n    };\n    /**\n     * Handles the mouse end.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.mouseEnd = function (e) {\n        this.setMouseXY(e);\n        var args = this.getMouseArgs(e, 'touchend', gaugeMouseUp);\n        this.isTouch = e.pointerType === 'touch' || e.pointerType === '2' || e.type === 'touchend';\n        this.trigger(gaugeMouseUp, args);\n        if (this.activeAxis && this.activePointer && this.enablePointerDrag) {\n            this.svgObject.setAttribute('cursor', 'auto');\n            var pointerInd = parseInt(this.activePointer.pathElement[0].id.slice(-1), 10);\n            var axisInd = parseInt(this.activePointer.pathElement[0].id.split('_Axis_')[1], 10);\n            this.trigger(dragEnd, {\n                name: dragEnd,\n                type: pointerEnd,\n                axis: this.activeAxis,\n                pointer: this.activePointer,\n                currentValue: this.activePointer.currentValue,\n                axisIndex: axisInd,\n                pointerIndex: pointerInd\n            });\n            this.activeAxis = null;\n            this.activePointer = null;\n            this.isDrag = false;\n        }\n        else if (this.activeAxis && this.activeRange && this.enableRangeDrag) {\n            this.svgObject.setAttribute('cursor', 'auto');\n            var rangeInd = parseInt(this.activeRange.pathElement[0].id.slice(-1), 10);\n            var axisInd = parseInt(this.activeRange.pathElement[0].id.split('_Axis_')[1], 10);\n            this.trigger(dragEnd, {\n                name: dragEnd,\n                type: rangeEnd,\n                axis: this.activeAxis,\n                range: this.activeRange,\n                axisIndex: axisInd,\n                rangeIndex: rangeInd\n            });\n            this.activeAxis = null;\n            this.activeRange = null;\n            this.isDrag = false;\n        }\n        if (!isNullOrUndefined(this.activePointer)) {\n            this.activePointer = null;\n        }\n        this.svgObject.setAttribute('cursor', 'auto');\n        this.notify(Browser.touchEndEvent, e);\n        return false;\n    };\n    /**\n     * Handles the mouse event arguments.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @param {string} type - Specifies the type\n     * @param {string} name - Specifies the name\n     * @returns {IMouseEventArgs} - Returns the mouse event args\n     * @private\n     */\n    CircularGauge.prototype.getMouseArgs = function (e, type, name) {\n        var rect = this.element.getBoundingClientRect();\n        var location = new GaugeLocation(-rect.left, -rect.top);\n        var isTouch = (e.type === type);\n        location.x += isTouch ? e.changedTouches[0].clientX : e.clientX;\n        location.y += isTouch ? e.changedTouches[0].clientY : e.clientY;\n        return {\n            cancel: false, name: name,\n            x: location.x, y: location.y,\n            target: isTouch ? e.target : e.target\n        };\n    };\n    /**\n     * Handles the gauge resize.\n     *\n     * @param {Event} e - Specifies the event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.gaugeResize = function (e) {\n        var _this = this;\n        if (!this.isDestroyed) {\n            // eslint-disable-next-line prefer-const\n            var args = {\n                gauge: this,\n                previousSize: this.availableSize,\n                name: resized,\n                cancel: false,\n                currentSize: this.calculateSvgSize()\n            };\n            this.trigger(resized, args);\n            if (!args.cancel) {\n                if (this.resizeTo) {\n                    clearTimeout(this.resizeTo);\n                }\n                if (!isNullOrUndefined(this.element) && this.element.classList.contains('e-circulargauge')) {\n                    this.animatePointer = false;\n                    this.resizeTo = window.setTimeout(function () {\n                        _this.createSvg();\n                        _this.calculateBounds();\n                        _this.renderElements();\n                    }, 500);\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * Applying styles for circular gauge elements\n     *\n     * @param {HTMLElement} element - Specifies the html element\n     * @returns {void}\n     */\n    CircularGauge.prototype.setGaugeStyle = function (element) {\n        element.style.touchAction = this.enablePointerDrag ? 'none' : 'element';\n        element.style.msTouchAction = this.enablePointerDrag ? 'none' : 'element';\n        element.style.msContentZooming = 'none';\n        element.style.msUserSelect = 'none';\n        element.style.webkitUserSelect = 'none';\n        element.style.position = 'relative';\n    };\n    /**\n     * Method to set culture for gauge\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.setCulture = function () {\n        this.intl = new Internationalization();\n    };\n    /**\n     * Methods to create svg element for circular gauge.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.createSvg = function () {\n        this.removeSvg();\n        if (isNullOrUndefined(this.renderer)) {\n            this.renderer = new SvgRenderer(this.element.id);\n        }\n        if (isNullOrUndefined(this.gaugeAxisLayoutPanel)) {\n            this.gaugeAxisLayoutPanel = new AxisLayoutPanel(this);\n        }\n        this.availableSize = this.calculateSvgSize();\n        this.svgObject = this.renderer.createSvg({\n            id: this.element.id + '_svg',\n            width: this.availableSize.width,\n            height: this.availableSize.height\n        });\n    };\n    /**\n     * To Remove the SVG from circular gauge.\n     *\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.removeSvg = function () {\n        removeElement(this.element.id + '_Secondary_Element');\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                while (this.svgObject.childNodes.length > 0) {\n                    this.svgObject.removeChild(this.svgObject.firstChild);\n                }\n                if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                    remove(this.svgObject);\n                }\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n        removeElement(this.element.id + '_svg');\n        this.clearTemplate();\n    };\n    /**\n     * To initialize the circular gauge private variable.\n     *\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.initPrivateVariable = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-circulargauge').length;\n            this.element.id = 'circulargauge_control_' + collection;\n        }\n        this.renderer = new SvgRenderer(this.element.id);\n        this.gaugeAxisLayoutPanel = new AxisLayoutPanel(this);\n        this.animatePointer = true;\n    };\n    /**\n     * To calculate the size of the circular gauge element.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.calculateSvgSize = function () {\n        var containerWidth = this.element.offsetWidth;\n        var containerHeight = this.element.offsetHeight;\n        var borderWidth = parseInt(this.element.style.borderWidth.split('px').join(''), 10) * 2;\n        var width = stringToNumber(this.width, containerWidth) || containerWidth || 600;\n        var height = stringToNumber(this.height, containerHeight) || containerHeight || 450;\n        width = !isNaN(borderWidth) ? (width - borderWidth) : width;\n        height = !isNaN(borderWidth) ? (height - borderWidth) : height;\n        return new Size(width, height);\n    };\n    /**\n     * To calculate the spacing of the circular gauge element.\n     *\n     * @param {number} top - Specifies the top value\n     * @param {number} left - Specifies the left value\n     * @param {number} width - Specifies the width\n     * @param {number} height - Specifies the height\n     * @param {number} radius - Specifies the radius\n     * @param {number} titleHeight - Specifies the titleHeight\n     * @param {number} isUpperAngle - Specifies the isUpperAngle\n     * @param {number} isLowerAngle - Specifies the isLowerAngle\n     * @param {number} isFullPercent - Specifies the boolean value\n     * @param {number} isUpper - Specifies the boolean value\n     * @param {number} isLower - Specifies the boolean value\n     * @returns {void}\n     */\n    /* eslint-disable max-len */\n    CircularGauge.prototype.radiusAndCenterCalculation = function (top, left, width, height, radius, titleHeight, isUpperAngle, isLowerAngle, isFullPercent, radiusPercent, isUpper, isLower) {\n        var rect;\n        var bottom = this.margin.bottom + this.border.width;\n        var minRadius;\n        var widthRadius;\n        var centerX;\n        var centerY;\n        if (this.moveToCenter && this.axes.length === 1 &&\n            isNullOrUndefined(this.centerXpoint) && isNullOrUndefined(this.centerYpoint)) {\n            rect = new Rect(left, top, width, height);\n        }\n        else {\n            if (!this.allowMargin) {\n                if (!isNullOrUndefined(this.legendModule) && (width > height) && (this.legendSettings.position === 'Top' || this.legendSettings.position === 'Bottom')) {\n                    minRadius = Math.min(width, height) / 2;\n                    rect = new Rect((left + (width / 2) - minRadius), (top + (height / 2) - minRadius), minRadius * 2, minRadius * 2);\n                }\n                else {\n                    if (width > height && (isLowerAngle && isLower || isUpperAngle && isUpper)) {\n                        widthRadius = ((width) / 2);\n                        var heightValue = isUpper && isLower ? (height / 2) : (height * (3 / 4));\n                        if (widthRadius > heightValue) {\n                            widthRadius = heightValue;\n                        }\n                        rect = new Rect((left + (width / 2) - widthRadius), (top + (height / 2) - widthRadius), widthRadius * 2, widthRadius * 2);\n                    }\n                    else {\n                        if (height > width) {\n                            var heightRadius = height / 2;\n                            rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - heightRadius), radius * 2, heightRadius * 2);\n                        }\n                        else {\n                            rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - radius), radius * 2, radius * 2);\n                        }\n                    }\n                }\n            }\n            else {\n                rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - radius), radius * 2, radius * 2);\n            }\n        }\n        this.gaugeRect = rect;\n        if (this.legendModule && this.legendSettings.visible) {\n            this.legendModule.getLegendOptions(this.axes);\n            this.legendModule.calculateLegendBounds(this.gaugeRect, this.availableSize);\n        }\n        if (!this.allowMargin) {\n            if (!isNullOrUndefined(this.legendModule) && (isUpperAngle || isLowerAngle) && (width > height) && (this.legendSettings.position === 'Top' || this.legendSettings.position === 'Bottom')) {\n                var difference = height - this.gaugeRect.height;\n                this.gaugeRect.width = width - ((this.availableSize.width - this.gaugeRect.width) / 2);\n                this.gaugeRect.y = this.gaugeRect.y - difference;\n                this.gaugeRect.height = this.gaugeRect.height + difference + ((this.availableSize.height - this.gaugeRect.height) / 2);\n            }\n            else if (!isNullOrUndefined(this.legendModule) && (isUpperAngle || isLowerAngle) && (width > height) && (this.legendSettings.position === 'Left' || this.legendSettings.position === 'Right')) {\n                var difference = this.gaugeRect.height - this.gaugeRect.width;\n                this.gaugeRect.x = this.legendSettings.position === 'Right'\n                    ? this.gaugeRect.x + this.margin.right : this.gaugeRect.x;\n                this.gaugeRect.width = this.legendSettings.position === 'Left' ?\n                    Math.abs(width - ((this.availableSize.width - this.gaugeRect.width + difference) / 2))\n                    : Math.abs(width - ((this.availableSize.width - this.gaugeRect.width) / 2) - 10);\n            }\n            centerX = this.centerXpoint !== null ?\n                stringToNumber(this.centerXpoint, this.availableSize.width) : this.gaugeRect.x + (this.gaugeRect.width / 2);\n            if ((isUpperAngle || isLowerAngle) && !isNullOrUndefined(this.legendModule)) {\n                centerX = (this.legendSettings.position === 'Top' || this.legendSettings.position === 'Bottom')\n                    ? this.availableSize.width / 2 : this.legendSettings.position === 'Right' ? (this.gaugeRect.width / 2) + this.margin.right :\n                    centerX;\n            }\n            centerY = ((isUpperAngle || isLowerAngle) ? (isUpperAngle ?\n                (((this.gaugeRect.height * (3 / 4) + this.gaugeRect.y) - bottom))\n                : (((this.gaugeRect.height * (1 / 4)) + (this.gaugeRect.y)))) : this.gaugeRect.y + (this.gaugeRect.height / 2));\n            centerY = !isFullPercent && (isUpperAngle || isLowerAngle) ? (this.gaugeRect.height / 2) + this.gaugeRect.y + (radiusPercent * (3 / 4) * (1 / 2)) : centerY;\n            if (!isNullOrUndefined(this.axes) && this.axes.length > 1 && !isNullOrUndefined(this.midPoint)) {\n                isUpper = isUpperAngle ? isUpperAngle : isUpper;\n                isLower = isLowerAngle ? isLowerAngle : isLower;\n                if (isUpper && isLower) {\n                    centerY = (this.availableSize.height / 2) - bottom;\n                }\n            }\n        }\n        else {\n            centerX = this.centerXpoint !== null ?\n                stringToNumber(this.centerXpoint, this.availableSize.width) : this.gaugeRect.x + (this.gaugeRect.width / 2);\n            centerY = this.centerYpoint !== null ?\n                stringToNumber(this.centerYpoint, this.availableSize.height) : this.gaugeRect.y + (this.gaugeRect.height / 2);\n        }\n        this.midPoint = new GaugeLocation(centerX, centerY);\n    };\n    /**\n     * Method to calculate the availble size for circular gauge.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.calculateBounds = function () {\n        var padding = 5;\n        var rect;\n        var margin = this.margin;\n        var titleHeight = 0;\n        if (this.title) {\n            titleHeight = measureText(this.title, this.titleStyle).height + padding;\n        }\n        var top = margin.top + titleHeight + this.border.width;\n        var left = margin.left + this.border.width;\n        var isUpper = false;\n        var isLower = false;\n        var width = this.availableSize.width - left - margin.right - this.border.width;\n        var height = this.availableSize.height - top - this.border.width - margin.bottom;\n        var radius = Math.min(width, height) / 2;\n        this.centerXpoint = (this.centerX === '') ? null : this.centerX;\n        this.centerYpoint = (this.centerY === '') ? null : this.centerY;\n        if (this.moveToCenter && this.axes.length === 1 &&\n            isNullOrUndefined(this.centerXpoint) && isNullOrUndefined(this.centerYpoint)) {\n            rect = new Rect(left, top, width, height);\n        }\n        if (!this.allowMargin) {\n            for (var j = 0; j < this.axes.length; j++) {\n                var isUpperAngle = 270 <= this.axes[j].startAngle && this.axes[j].startAngle <= 360 &&\n                    0 <= this.axes[j].endAngle && this.axes[j].endAngle <= 90;\n                var isLowerAngle = 90 >= this.axes[j].startAngle && this.axes[j].startAngle <= 180 &&\n                    180 <= this.axes[j].endAngle && 270 <= this.axes[j].endAngle && 0 !== this.axes[j].startAngle &&\n                    360 !== this.axes[j].endAngle;\n                isUpper = isUpperAngle ? isUpperAngle : isUpper;\n                isLower = isLowerAngle ? isLowerAngle : isLower;\n                var isFullPercent = this.axes[j].radius !== null ? parseInt(this.axes[0].radius.split('%')[0], 10) >= 100 : true;\n                var radiusPercent = this.axes[j].radius !== null ? radius * (parseInt(this.axes[0].radius.split('%')[0], 10) / 100) : radius;\n                this.radiusAndCenterCalculation(top, left, width, height, radius, titleHeight, isUpperAngle, isLowerAngle, isFullPercent, radiusPercent, isUpper, isLower);\n            }\n        }\n        else {\n            rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - radius), radius * 2, radius * 2);\n            this.radiusAndCenterCalculation(top, left, width, height, radius, titleHeight, false, false, null, null, false, false);\n        }\n        this.gaugeAxisLayoutPanel.measureAxis(this.gaugeRect);\n    };\n    /**\n     * To render elements for circular gauge\n     *\n     * @param {boolean} animate - Specifies whether animation is true or false\n     * @returns {void}\n     */\n    CircularGauge.prototype.renderElements = function (animate) {\n        if (animate === void 0) { animate = true; }\n        this.renderBorder();\n        this.renderTitle();\n        this.gaugeAxisLayoutPanel.renderAxes(animate);\n        this.renderLegend();\n        this.element.appendChild(this.svgObject);\n        this.trigger(loaded, { gauge: this });\n        removeElement('gauge-measuretext');\n    };\n    /**\n     * Method to render legend for accumulation chart\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.renderLegend = function () {\n        if (!this.legendModule || !this.legendSettings.visible) {\n            return null;\n        }\n        if (this.legendModule.legendCollection.length) {\n            this.legendModule.renderLegend(this.legendSettings, this.legendModule.legendBounds);\n        }\n    };\n    /**\n     * Method to render the title for circular gauge.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.renderTitle = function () {\n        if (this.title) {\n            // eslint-disable-next-line prefer-const\n            var style = {\n                color: this.titleStyle.color,\n                size: this.titleStyle.size || this.themeStyle.fontSize,\n                fontFamily: this.titleStyle.fontFamily || this.themeStyle.fontFamily,\n                fontStyle: this.titleStyle.fontStyle,\n                fontWeight: this.titleStyle.fontWeight || this.themeStyle.titleFontWeight,\n                opacity: this.titleStyle.opacity\n            };\n            var titleSize = style.size;\n            if (!isNaN(Number(titleSize))) {\n                style.size = titleSize + 'px';\n            }\n            var size = measureText(this.title, style);\n            var options = new TextOption(this.element.id + '_CircularGaugeTitle', this.availableSize.width / 2, this.margin.top + 3 * (size.height / 4), 'middle', this.title);\n            var element = textElement(options, style, style.color || this.themeStyle.titleFontColor, this.svgObject, '');\n            element.setAttribute('aria-label', this.description || this.title);\n            element.setAttribute('role', '');\n            element.setAttribute('tabindex', this.tabIndex.toString());\n        }\n    };\n    /**\n     * Method to render the border for circular gauge.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.renderBorder = function () {\n        var borderWidth = this.border.width;\n        if (borderWidth > 0 || (this.background || this.themeStyle.backgroundColor)) {\n            this.svgObject.appendChild(this.renderer.drawRectangle(new RectOption(this.element.id + '_CircularGaugeBorder', this.background || this.themeStyle.backgroundColor, this.border, null, new Rect(borderWidth / 2, borderWidth / 2, this.availableSize.width - borderWidth, this.availableSize.height - borderWidth))));\n        }\n    };\n    /* eslint-disable valid-jsdoc */\n    /**\n     * This method is used to set the pointer value dynamically for circular gauge.\n     *\n     * @param {number} axisIndex - Specifies the index value for the axis in circular gauge.\n     * @param {number} pointerIndex - Specifies the index value for the pointer in circular gauge.\n     * @param {number} value - Specifies the value for the pointer in circular gauge.\n     */\n    CircularGauge.prototype.setPointerValue = function (axisIndex, pointerIndex, value) {\n        var _this = this;\n        var axis = this.axes[axisIndex];\n        var pointer = axis.pointers[pointerIndex];\n        var pointerRadius = pointer.currentRadius;\n        if (!this.isDestroyed && pointer.currentValue !== value) {\n            var enableAnimation_1 = pointer.animation.enable;\n            value = value < axis.visibleRange.min ? axis.visibleRange.min : value;\n            value = value > axis.visibleRange.max ? axis.visibleRange.max : value;\n            pointer['isPointerAnimation'] = true;\n            pointer.pathElement.map(function (element) {\n                if (pointer.type === 'RangeBar') {\n                    setStyles(element, pointer.color, pointer.border);\n                    if (enableAnimation_1) {\n                        _this.gaugeAxisLayoutPanel.pointerRenderer.performRangeBarAnimation(element, pointer.currentValue, value, axis, pointer);\n                    }\n                    else {\n                        _this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, pointer, value);\n                    }\n                }\n                else {\n                    if (element.id.indexOf('_Pointer_NeedleCap_') >= 0) {\n                        setStyles(element, pointer.cap.color, pointer.cap.border);\n                    }\n                    else if (element.id.indexOf('_Pointer_NeedleTail_') >= 0) {\n                        setStyles(element, pointer.needleTail.color, pointer.needleTail.border);\n                    }\n                    else if (element.id.indexOf('_Pointer_NeedleRect_') >= 0) {\n                        setStyles(element, 'transparent', { color: 'transparent', width: 0 });\n                    }\n                    else if (pointer.type === 'Marker' && pointer.markerShape !== 'Text') {\n                        setStyles(element, pointer.color, pointer.border);\n                    }\n                    if (enableAnimation_1) {\n                        if (pointer.type === 'Marker' && pointer.markerShape === 'Text') {\n                            _this.gaugeAxisLayoutPanel.pointerRenderer.performTextAnimation(element, pointer.currentValue, value, axis, pointer);\n                        }\n                        else {\n                            _this.gaugeAxisLayoutPanel.pointerRenderer.performNeedleAnimation(element, pointer.currentValue, value, axis, pointer);\n                        }\n                    }\n                    else {\n                        _this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, pointer, value);\n                    }\n                }\n            });\n        }\n        this.isProtectedOnChange = true;\n        pointer.previousValue = pointer.currentValue;\n        pointer.currentValue = value;\n        pointer.value = value;\n        this.isProtectedOnChange = false;\n    };\n    /**\n     * This method is used to set the annotation content dynamically for circular gauge.\n     *\n     * @param {number} axisIndex - Specifies the index value for the axis in circular gauge.\n     * @param {number} annotationIndex - Specifies the index value for the annotation in circular gauge.\n     * @param {string | Function} content - Specifies the content for the annotation in circular gauge.\n     * @returns {void}\n     */\n    CircularGauge.prototype.setAnnotationValue = function (axisIndex, annotationIndex, content) {\n        if (!this.isDestroyed) {\n            var isElementExist = getElement(this.element.id + '_Annotations_' + axisIndex) !== null;\n            var element = getElement(this.element.id + '_Annotations_' + axisIndex) ||\n                createElement('div', {\n                    id: this.element.id + '_Annotations_' + axisIndex\n                });\n            var annotation = this.axes[axisIndex].annotations[annotationIndex];\n            if (content !== null) {\n                removeElement(this.element.id + '_Axis_' + axisIndex + '_Annotation_' + annotationIndex);\n                annotation.content = content;\n                this.annotationsModule.createTemplate(element, annotationIndex, axisIndex, this);\n                var secondaryElement = getElement(this.element.id + '_Secondary_Element');\n                if (!isElementExist && !isNullOrUndefined(secondaryElement)) {\n                    secondaryElement.appendChild(element);\n                }\n            }\n        }\n    };\n    /**\n     * This method is used to print the rendered circular gauge.\n     *\n     * @param {string[] | string | Element} id - Specifies the element to print the circular gauge.\n     */\n    CircularGauge.prototype.print = function (id) {\n        if (this.allowPrint && this.printModule) {\n            this.printModule.print(this, id);\n        }\n    };\n    /**\n     * This method is used to perform the export functionality for the circular gauge.\n     *\n     * @param {ExportType} type - Specifies the type of the export.\n     * @param {string} fileName - Specifies the file name for the exported file.\n     * @param {PdfPageOrientation}  orientation - Specifies the orientation for the exported PDF document.\n     * @param {boolean} allowDownload - Specifies whether to download as a file.\n     * @returns {Promise<string>} - Specifies the base64 string of the exported image which is returned when the allowDownload is set to false.\n     */\n    CircularGauge.prototype.export = function (type, fileName, orientation, allowDownload) {\n        var _this = this;\n        if (isNullOrUndefined(allowDownload)) {\n            allowDownload = true;\n        }\n        if (type === 'PDF' && this.allowPdfExport && this.pdfExportModule) {\n            // eslint-disable-next-line\n            return new Promise(function (resolve, reject) {\n                resolve(_this.pdfExportModule.export(_this, type, fileName, orientation, allowDownload));\n            });\n        }\n        else if (this.allowImageExport && (type !== 'PDF') && this.imageExportModule) {\n            // eslint-disable-next-line\n            return new Promise(function (resolve, reject) {\n                resolve(_this.imageExportModule.export(_this, type, fileName, allowDownload));\n            });\n        }\n        return null;\n    };\n    /**\n     * Method to set mouse x, y from events\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {void}\n     */\n    CircularGauge.prototype.setMouseXY = function (e) {\n        var pageX;\n        var pageY;\n        var svgRect = getElement(this.element.id + '_svg').getBoundingClientRect();\n        var rect = this.element.getBoundingClientRect();\n        if (e.type.indexOf('touch') > -1) {\n            this.isTouch = true;\n            var touchArg = e;\n            pageY = touchArg.changedTouches[0].clientY;\n            pageX = touchArg.changedTouches[0].clientX;\n        }\n        else {\n            this.isTouch = e.pointerType === 'touch' || e.pointerType === '2';\n            pageX = e.clientX;\n            pageY = e.clientY;\n        }\n        this.mouseY = (pageY - rect.top) - Math.max(svgRect.top - rect.top, 0);\n        this.mouseX = (pageX - rect.left) - Math.max(svgRect.left - rect.left, 0);\n    };\n    /**\n     * This method is used to set the range values dynamically for circular gauge.\n     *\n     * @param {number} axisIndex - Specifies the index value for the axis in circular gauge.\n     * @param {number} rangeIndex - Specifies the index value for the range in circular gauge.\n     * @param {number} start - Specifies the start value for the current range in circular gauge.\n     * @param {number} end - Specifies the end value for the current range in circular gauge.\n     */\n    CircularGauge.prototype.setRangeValue = function (axisIndex, rangeIndex, start, end) {\n        var element = getElement(this.element.id + '_Axis_' + axisIndex + '_Range_' + rangeIndex);\n        var axis = this.axes[axisIndex];\n        var range = axis.ranges[rangeIndex];\n        var axisRange = axis.visibleRange;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startValue = Math.min(Math.max(start, axisRange.min), end);\n        var endValue = Math.min(Math.max(start, end), axisRange.max);\n        var oldRangeStart = range.start;\n        var oldRangeEnd = range.end;\n        range.start = start;\n        range.end = end;\n        if (range.start !== range.end && oldRangeStart === oldRangeEnd && this.legendModule && this.legendSettings.visible) {\n            this.legendModule.getLegendOptions(this.axes);\n            var height = this.legendModule.legendBounds.height + this.legendSettings.margin.top + this.legendSettings.margin.bottom + this.legendSettings.border.width;\n            var width = this.legendModule.legendBounds.width + this.legendSettings.margin.left + this.legendSettings.margin.right + this.legendSettings.border.width;\n            // eslint-disable-next-line prefer-const\n            var rect = this.gaugeRect;\n            var position = this.legendModule.position;\n            if (position === 'Bottom') {\n                rect.height = rect.height + height;\n            }\n            if (position === 'Top') {\n                rect.height = rect.height + height;\n                rect.y = rect.y - height;\n            }\n            if (position === 'Left') {\n                rect.width = rect.width + width;\n                rect.x = rect.x - width;\n            }\n            if (position === 'Right') {\n                rect.width = rect.width + width;\n            }\n            this.legendModule.calculateLegendBounds(rect, this.availableSize);\n            if (this.legendModule.legendCollection.length) {\n                this.legendModule.renderLegend(this.legendSettings, this.legendModule.legendBounds);\n            }\n        }\n        this.isRangeUpdate = true;\n        var startAngle = getAngleFromValue(startValue, axisRange.max, axisRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = getAngleFromValue(endValue, axisRange.max, axisRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var startWidth;\n        if (range.startWidth.length > 0) {\n            startWidth = toPixel(range.startWidth, range.currentRadius);\n        }\n        else {\n            startWidth = range.startWidth;\n        }\n        var endWidth;\n        if (range.endWidth.length > 0) {\n            endWidth = toPixel(range.endWidth, range.currentRadius);\n        }\n        else {\n            endWidth = range.endWidth;\n        }\n        endAngle = isClockWise ? endAngle : [startAngle, startAngle = endAngle][0];\n        endWidth = isClockWise ? endWidth : [startWidth, startWidth = endWidth][0];\n        element.setAttribute('d', getPathArc(this.midPoint, Math.round(startAngle), Math.round(endAngle), range.currentRadius, startWidth, endWidth, range, axis));\n        setStyles(element, (range.color ? range.color : range.rangeColor), {\n            color: (range.color ? range.color : range.rangeColor),\n            width: 0\n        });\n    };\n    /**\n     * This method destroys the circular gauge. This method removes the events associated with the circular gauge and disposes the objects created for rendering and updating the circular gauge.\n     *\n     * @method destroy\n     * @return {void}\n     * @member of Circular-Gauge\n     */\n    CircularGauge.prototype.destroy = function () {\n        this.unWireEvents();\n        if (!isNullOrUndefined(this.tooltipModule)) {\n            this.tooltipModule.removeEventListener();\n        }\n        _super.prototype.destroy.call(this);\n        if (!isNullOrUndefined(this.gaugeAxisLayoutPanel)) {\n            this.gaugeAxisLayoutPanel.destroy();\n        }\n        this.availableSize = null;\n        this.midPoint = null;\n        this.activePointer = null;\n        this.activeAxis = null;\n        this.activeRange = null;\n        this.gaugeRect = null;\n        this.gaugeAxisLayoutPanel = null;\n        this.themeStyle = null;\n        this.removeSvg();\n        this.svgObject = null;\n        this.renderer = null;\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     *\n     * @returns {ModuleDeclaration[]} - Returns the modules\n     * @private\n     */\n    CircularGauge.prototype.requiredModules = function () {\n        var modules = [];\n        var annotationEnable = false;\n        var axes = this.axes;\n        axes.map(function (axis) {\n            axis.annotations.map(function (annotation) {\n                annotationEnable = annotationEnable || annotation.content !== null;\n            });\n        });\n        if (annotationEnable) {\n            modules.push({\n                member: 'Annotations',\n                args: [this, Annotations]\n            });\n        }\n        if (this.tooltip.enable) {\n            modules.push({\n                member: 'Tooltip',\n                args: [this, GaugeTooltip]\n            });\n        }\n        if (this.allowPrint) {\n            modules.push({\n                member: 'Print',\n                args: [this, Print]\n            });\n        }\n        if (this.allowImageExport) {\n            modules.push({\n                member: 'ImageExport',\n                args: [this, ImageExport]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport',\n                args: [this, PdfExport]\n            });\n        }\n        if (this.legendSettings.visible) {\n            modules.push({\n                member: 'Legend',\n                args: [this, Legend]\n            });\n        }\n        modules.push({\n            member: 'Gradient',\n            args: [this, Gradient]\n        });\n        return modules;\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string} - Returns the string\n     * @private\n     */\n    CircularGauge.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @param {CircularGaugeModel} newProp - Specifies the new property\n     * @param {CircularGaugeModel} oldProp - Specifies the old property\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // property method calculated\n        if (!this.isDestroyed) {\n            this.isPropertyChange = true;\n            var renderer = false;\n            var refreshBounds = false;\n            var refreshWithoutAnimation = false;\n            var isPointerValueSame = (Object.keys(newProp).length === 1 && newProp instanceof Object &&\n                !isNullOrUndefined(this.activePointer));\n            for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                switch (prop) {\n                    case 'height':\n                    case 'width':\n                    case 'centerX':\n                    case 'centerY':\n                    case 'margin':\n                        this.createSvg();\n                        refreshBounds = true;\n                        break;\n                    case 'title':\n                        refreshBounds = (newProp.title === '' || oldProp.title === '');\n                        renderer = !(newProp.title === '' || oldProp.title === '');\n                        break;\n                    case 'titleStyle':\n                        if (newProp.titleStyle && newProp.titleStyle.size) {\n                            refreshBounds = true;\n                        }\n                        else {\n                            renderer = true;\n                        }\n                        break;\n                    case 'border':\n                        renderer = true;\n                        break;\n                    case 'background':\n                        renderer = true;\n                        break;\n                    case 'legendSettings':\n                        refreshWithoutAnimation = true;\n                        break;\n                    case 'axes':\n                        // eslint-disable-next-line no-case-declarations\n                        var axesPropertyLength = Object.keys(newProp.axes).length;\n                        for (var x = 0; x < axesPropertyLength; x++) {\n                            if (!isNullOrUndefined(newProp.axes[x])) {\n                                var collection = Object.keys(newProp.axes[x]);\n                                for (var _b = 0, collection_1 = collection; _b < collection_1.length; _b++) {\n                                    var collectionProp = collection_1[_b];\n                                    if (collectionProp === 'pointers') {\n                                        var pointerPropertyLength = Object.keys(newProp.axes[x].pointers).length;\n                                        for (var y = 0; y < pointerPropertyLength; y++) {\n                                            var index = parseInt(Object.keys(newProp.axes[x].pointers)[y], 10);\n                                            if (!isNullOrUndefined(Object.keys(newProp.axes[x].pointers[index]))) {\n                                                this.axes[x].pointers[index]['previousValue'] = this.axes[x].pointers[index]['currentValue'];\n                                                this.axes[x].pointers[index]['isPointerAnimation'] = Object.keys(newProp.axes[x].pointers[index]).indexOf('value') > -1;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        refreshWithoutAnimation = true;\n                        break;\n                }\n            }\n            if (!isPointerValueSame && !this.isRangeUpdate) {\n                if (!refreshBounds && renderer) {\n                    this.removeSvg();\n                    this.renderElements();\n                }\n                if (refreshBounds) {\n                    this.removeSvg();\n                    this.calculateBounds();\n                    this.renderElements();\n                }\n                if (refreshWithoutAnimation && !renderer && !refreshBounds) {\n                    this.removeSvg();\n                    this.calculateBounds();\n                    this.renderElements(false);\n                }\n            }\n            this.isRangeUpdate = false;\n        }\n    };\n    /**\n     * Get component name for circular gauge\n     *\n     * @returns {string} - Returns the module name\n     * @private\n     */\n    CircularGauge.prototype.getModuleName = function () {\n        return 'circulargauge';\n    };\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ color: 'transparent', width: 0 }, Border)\n    ], CircularGauge.prototype, \"border\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"background\", void 0);\n    __decorate([\n        Property('')\n    ], CircularGauge.prototype, \"title\", void 0);\n    __decorate([\n        Complex({ size: null, color: null, fontWeight: null, fontFamily: null }, Font)\n    ], CircularGauge.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], CircularGauge.prototype, \"margin\", void 0);\n    __decorate([\n        Collection([{}], Axis)\n    ], CircularGauge.prototype, \"axes\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], CircularGauge.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"enablePointerDrag\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"enableRangeDrag\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"allowPrint\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"allowImageExport\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"centerX\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"centerY\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"moveToCenter\", void 0);\n    __decorate([\n        Property('Material')\n    ], CircularGauge.prototype, \"theme\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"description\", void 0);\n    __decorate([\n        Property(1)\n    ], CircularGauge.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Property(true)\n    ], CircularGauge.prototype, \"allowMargin\", void 0);\n    __decorate([\n        Complex({}, LegendSettings)\n    ], CircularGauge.prototype, \"legendSettings\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"axisLabelRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"radiusCalculate\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"annotationRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"legendRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"tooltipRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragMove\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragEnd\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseMove\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseDown\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseUp\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"resized\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"beforePrint\", void 0);\n    CircularGauge = __decorate([\n        NotifyPropertyChanges\n    ], CircularGauge);\n    return CircularGauge;\n}(Component));\nexport { CircularGauge };\n","import * as index from './index';\nindex.CircularGauge.Inject(index.GaugeTooltip, index.Annotations, index.Legend, index.Print, index.PdfExport, index.ImageExport, index.Gradient);\nexport * from './index';\n"],"names":["measureText","text","font","htmlObject","document","getElementById","createElement","id","body","appendChild","style","getFontStyle","innerText","cssText","Size","clientWidth","clientHeight","toPixel","value","maxDimension","undefined","indexOf","parseInt","size","fontStyle","fontWeight","fontFamily","opacity","color","textElement","options","parent","styles","renderOptions","renderer","SvgRenderer","x","y","fill","text-anchor","anchor","transform","dominant-baseline","baseLine","createText","appendPath","element","gauge","functionName","setAttribute","isCompleteAngle","startAngle","endAngle","totalAngle","Math","floor","getDegree","degree","getAngleFromValue","maximumValue","minimumValue","isClockWise","angle","round","getAngleFromLocation","center","point","atan2","PI","getLocationFromAngle","radius","radian","GaugeLocation","cos","sin","getPathArc","start","end","startWidth","endWidth","range","axis","isNullOrUndefined","startRadius","position","isLinearCircularGradient","direction","endRadius","arcRadius","insideArcRadius","insideEndRadius","insideStartRadius","getRangePath","getCirclePath","arcPath","arcStartOne","arcEndOne","arcStartTwo","arcEndTwo","clockWise","innerStart","innerEnd","pointPosition","arcRoundedPath","outerOldEnd","innerOldEnd","innerOldStart","outerOldStart","roundedPath","arcWidthPath","endArc","startArc","widthDifference","abs","roundedCornerRadius","arcWidthPathCalculation","roundedArcWidthPathCalculation","startValueToAngle","maximum","minimum","endRadii","sqrt","pow","centerStartDistance","centerDistance","arcStart","arcEnd","angleValueDirection","endRadiusValue","arcTwo","startGreater","arcOne","degreeAngle","degreeValueOne","degreeValueTwo","startAddArc","startSubArc","getRoundedPathArc","actualStart","actualEnd","oldStart","oldEnd","getTemplateFunction","template","templateFn","templateComplier","isNaN","parseFloat","querySelectorAll","length","charAt","querySelector","innerHTML","trim","isVue","isVue3","e","removeElement","getElement","remove","stringToNumber","containerSize","getPointer","targetId","tempString","replace","split","axisIndex","pointerIndex","getLabelFormat","format","match","calculateShapes","location","shape","url","path","space","width","height","locX","locY","isLegend","merge","rx","ry","cx","cy","d","href","stroke","setStyles","border","setStyleAttribute","stroke-width","getValueFromAngle","getRange","rangeIndex","getRangePalette","theme","palette","toLowerCase","getThemeStyle","backgroundColor","titleFontColor","tooltipFillColor","tooltipFontColor","tooltipFontSize","tooltipTextOpacity","labelColor","lineColor","majorTickColor","minorTickColor","pointerColor","capColor","needleColor","needleTailColor","fontSize","labelFontFamily","titleFontWeight","tooltipFillOpacity","getMousePosition","pageX","pageY","elementRect","getBoundingClientRect","pageXOffset","ownerDocument","defaultView","pageYOffset","clientTop","documentElement","clientLeft","positionX","left","positionY","top","getElementSize","elementSize","tooltipData","templateElement","templateLength","calculateSum","from","to","values","sum","getRangeColor","ranges","min","max","currentRange","filter","rangeColor","linear","currentTime","startValue","endValue","duration","getCompleteArc","innerRadius","checkMinValue","getCompletePath","textTrim","maxWidth","label","i","substring","showTooltip","areaWidth","tooltip","toString","Theme","__extends","extendStatics","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","CustomizeOption","PathOption","_super","dashArray","_this","call","RectOption","rect","Rect","TextOption","VisibleLabels","__decorate","decorators","target","key","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Border","apply","Property","ChildProperty","Font","RangeTooltip","Complex","AnnotationTooltip","Margin","TooltipSettings","axisLabelFont","legendLabelFont","Line","Label","Range","Tick","Cap","NeedleTail","Animation","Annotation","Pointer","isPointerAnimation","Axis","visibleLabels","Collection","Annotations","renderAnnotation","index","availableSize","parentElement","annotations","map","annotation","annotationIndex","content","createTemplate","childElementCount","renderReactTemplates","axes","childElement","zIndex","autoAngle","argsData","cancel","name","textStyle","trigger","observedArgs","length_1","slice","annotationElement","updateLocation","currentRadius","midPoint","measureElementRect","description","getModuleName","destroy","bounds","GaugeTooltip","tooltipId","borderStyle","addEventListener","renderTooltip","gaugeId","getAttribute","touchArg","samePointerEle","isTooltipRender","type","changedTouches","pointerEle","svgRect_1","svgObject","axisRect_1","rect_1","currentPointer","currentAxis","angle_1","currentValue","visibleRange","tooltipFormat","labelStyle","customLabelFormat","intl","getNumberFormat","useGrouping","useGroupingSeparator","tooltipElement","tooltipEle","enablePointerDrag","showAtMousePosition","roundValue","roundedValue","pointerContent","RegExp","tooltipArgs","pointer","event","appendInBodyTag","pointerTooltip","tooltipRect","findPosition","pointerTextStyle","themeStyle","svgTooltip","svgTooltipCreate","arrowInverted","appendTo","tooltipPosition","isDrag","rangeSvgRect_1","rangeElementRect","rangeAxisRect_1","rect_2","rangeAngle_1","rangeTooltipFormat","rangeSettings","rangeFormat","roundStartValue","roundEndValue","startData_1","endData_1","rangeContent","enableRtl","rangeTooltipArgs","rangeTooltipTextStyle_1","rangeTooltip","rangeTemplate","checkParentAnnotationId","annotationTargetElement","annotationSvgRect","annotationElementRect","rect_3","currentAnnotation","annotationAngle","annotationContent","annotationSettings","annotationTooltipArgs","annotationTooltip","annotationTemplate","elementSizeAn","annotationTextStyle","removeTooltip","clearTemplate","children","isAngular","gaugeRect","offsetLeft","tooltipLeft","tooltipArg","Tooltip","enable","data","enableRTL","enableAnimation","SanitizeHtmlHelper","sanitize","inverted","areaBounds","controlInstance","className","child","roundingPlaces","toFixed","isTemplate","addLeft","addTop","addHeight","addWidth","isTooltipRemoved","getElementsByClassName","mouseUpHandler","clearTimeout","setTimeout","bind","isDestroyed","on","Browser","touchMoveEvent","touchEndEvent","removeEventListener","off","AxisRenderer","drawAxisOuterLine","background","setRangeColor","checkAngles","drawAxisLine","lineStyle","allowComponentRender","drawAxisLabels","textWidth","textHeight","currentTextWidth","currentTextHeight","previousLocation","currentLocation","lastLabelLocation","lastLabelAngle","lastLabelAnchor","lastTextWidth","lastTextHeight","labelElement","createGroup","labelCollection","labelsVisible","checkLabelOpposed","majorTicks","minorTicks","labelPadding","shouldMaintainPadding","nearSize","maxLabelSize","offset","farSize","hideIntersectingLabel","findAnchor","showLastLabel","hiddenLabel","offsetAxisLabelsize","getAxisLabelStartPosition","lastlabel","FindAxisLabelCollision","useRangeColor","previousWidth","previousHeight","currentWidth","currentHeight","actualLocation","anchorPosition","drawMinorTickLines","minorTickElements","minorLineStyle","minorInterval","interval","isRangeColor","majorValues","calculateTicks","drawMajorTickLines","majorTickElements","majorLineStyle","push","axisLineWidth","drawRangePath","rangeElement","colorIndex","roundedStartAngle","roundedEndAngle","gradientRangeColor","rangeSplitValue","linearGradient","colorStop","rangeStart","rangeEnd","isAngleCross360","rangeGap","startAndEndRangeGap","process","degreeValue","gradientModule","radialGradient","rangeColorLength","degreeRange","degreeRangeValue","gradientDegree","gradientAngle","gradientAntiAngle","getGradientColorString","roundedRangeAppendPathCalculation","ceil","rangeAppendPathCalculation","pathElement","drawAxisRange","startEndDifference","previousEndWidth","previousStartWidth","currentDistanceFromScale","calculateRangeRadius","calculateRangeRadiusWithPosition","rangeColors","PointerRenderer","drawPointers","animate","pointerElement","pointers","calculatePointerRadius","setPointerValue","animation","isPropertyChange","previousValue","doPointerAnimation","pointerRadiusForPosition","markerShape","pointerSize","markerOffset","rangeBarOffset","pointerWidth","markerWidth","drawNeedlePointer","pointerRadius","rectDirection","gradientColor","gradientTailColor","gradientCapColor","needle","needleTail","cap","needleStartWidth","needleEndWidth","mid","minRadius","oldStartValue","oldEndValue","angleValue","roundStartAngle","roundEndAngle","calculateTextElement","textangle","textlocation","String","drawMarkerPointer","gradientMarkerColor","shapeBasedOnPosition","textObject","visibility","animatePointer","markerHeight","imageUrl","drawRangeBarPointer","gradientBarColor","performRangeBarAnimation","performTextAnimation","performNeedleAnimation","timeStamp","pointerValue","val","progress","args","delay","sweepAngle","pointAngle","arg","AxisLayoutPanel","axisRenderer","pointerRenderer","measureAxis","measureAxisSize","calculateAxesRadius","totalRadius","rangeMaximumRadius","xMarginDiff","margin","right","yMarginDiff","bottom","this_1","_i","_a","moveToCenter","centerXpoint","centerYpoint","startPoint","endPoint","xDiff","yDiff","startXDiff","endXDiff","startYDiff","endYDiff","newPoint","calculateNumericInterval","calculateVisibleLabels","computeSize","farSizes","calculateAxisValues","calculateVisibleRange","calculateNiceInterval","maxValue","minValue","delta","circumference","desiredIntervalsCount","niceInterval","minInterval","log","currentInterval","this_2","axisLabelRenderSuccess","lastLabel","maxVal","getMaxLabelWidth","lineSize","outerHeight","innerHeight","heightForCross","majorTickOffset","minorTickOffset","labelOffset","axes_1","renderAxes","axesElements","clip-path","annotationsModule","drawClipPath","Location","LegendSettings","Legend","legendRegions","rowCount","pageButtonSize","pageXCollections","maxColumns","currentPage","pagingRegions","toggledIndexes","legend","legendSettings","legendID","click","getLegendOptions","legendCollection","j","legendText","LegendOptions","visible","shapeBorder","shapeWidth","shapeHeight","calculateLegendBounds","legendBounds","isVertical","getLegendBounds","getLocation","alignment","alignLegend","legendSize","padding","legendHeight","legendWidth","marginBottom","subtractThickness","renderLegend","firstLegend","findFirstLegendPosition","maxItemHeight","textSize","legendGroup","legendTranslateGroup","createLegendElements","totalPages","legendAxisGroup","textOptions","textPadding","shapePadding","count","previousLegend","legendOption","render","getRenderPoint","renderSymbol","renderText","cursor","toggleVisibility","isPaging","renderPagingElements","appendChildElement","textOption","paginggroup","grayColor","symbolOption","iconSize","clipPathHeight","clipRect","pageTextElement","translateX","translatePage","pagingText","page","pageNumber","translate","textContent","group","fontcolor","prevLegend","maxColumnWidth","textStartLoc","previousBound","isWithinBounds","totalRowCount","availablewidth","getAvailWidth","legendItemsId","toggledIndex","legendItemsId_1","legendByIndex","Index","isToggled","changePage","rangeID","shapeID","textID","shapeElement","textElement_1","legendCollections","legendCollections_1","pageUp","pageText","tx","drawRectangle","legendItemsGroup","clippath","createClipPath","existChild","replaceChild","legendCollection_1","extraWidth","extraHeight","maximumWidth","rowWidth","columnWidth","columnHeight","legendEventArgs","getMaxColumn","setBounds","computedWidth","computedHeight","columns","maxPageColumn","move","mouseX","mouseY","legends","originalText","offsetWidth","legendRenderingCollections","titleRect","PdfExport","control","export","fileName","orientation","allowDownload","Promise","resolve","reject","attrs","PdfPageOrientation","Landscape","exportElement","cloneNode","childNodes","window","URL","createObjectURL","Blob","XMLSerializer","serializeToString","image","Image","context","getContext","onload","drawImage","revokeObjectURL","PdfDocument","imageString","toDataURL","pageSettings","pages","add","graphics","PdfBitmap","save","src","ImageExport","isDownload","userAgent","svgData","outerHTML","triggerDownload","image_1","context_1","download","toLocaleLowerCase","dispatchEvent","MouseEvent","view","bubbles","cancelable","Print","print","elements","printWindow","open","outerWidth","moveTo","resizeTo","screen","availWidth","availHeight","htmlContent","getHTMLContent","beforePrintArgs","printFunction","div","forEach","Element","backgroundElement","getElementsByTagName","ColorStop","GradientPosition","LinearGradient","RadialGradient","Gradient","calculateLinearGradientPosition","x1","x2","y1","y2","getLinearGradientColor","colors","getCircularGradientColor","getGradientColor","gradientCount","gradientPosition","def","drawGradient","getRadialGradientColor","outerPosition","fx","innerPosition","fy","CircularGauge","isRangeUpdate","preRender","unWireEvents","initPrivateVariable","setCulture","createSvg","wireEvents","setTheme","calculateBounds","renderElements","renderComplete","EventHandler","touchStartEvent","gaugeOnMouseDown","mouseMove","mouseEnd","gaugeOnMouseClick","gaugeRightClick","isPointer","mouseLeave","isTouch","resizeEvent","gaugeResize","setGaugeStyle","setMouseXY","legendModule","getMouseArgs","dragArgs","enableRangeDrag","svgElement","activePointer","dragPointInd","dragAxisInd","activeAxis","pointerDrag","activeRange","dragRangeInd","rangeDrag","notify","buttons","pointerType","preventDefault","stopPropagation","gaugeAxisLayoutPanel","previousValue1","avg","pointInd","axisInd","rangeInd","pointerInd","clientX","clientY","previousSize","currentSize","calculateSvgSize","classList","contains","touchAction","msTouchAction","msContentZooming","msUserSelect","webkitUserSelect","Internationalization","removeSvg","removeChild","firstChild","hasChildNodes","parentNode","collection","containerWidth","containerHeight","offsetHeight","borderWidth","join","radiusAndCenterCalculation","titleHeight","isUpperAngle","isLowerAngle","isFullPercent","radiusPercent","isUpper","isLower","widthRadius","centerX","centerY","allowMargin","heightValue","heightRadius","difference","title","titleStyle","renderBorder","renderTitle","titleSize","Number","tabIndex","enableAnimation_1","isProtectedOnChange","setAnnotationValue","isElementExist","secondaryElement","allowPrint","printModule","allowPdfExport","pdfExportModule","allowImageExport","imageExportModule","svgRect","setRangeValue","axisRange","oldRangeStart","oldRangeEnd","tooltipModule","requiredModules","modules","annotationEnable","member","getPersistData","addOnPersist","onPropertyChanged","newProp","oldProp","refreshBounds","refreshWithoutAnimation","isPointerValueSame","keys","axesPropertyLength","_b","collection_1","pointerPropertyLength","Event","NotifyPropertyChanges","Component","index.CircularGauge","Inject","index.GaugeTooltip","index.Annotations","index.Legend","index.Print","index.PdfExport","index.ImageExport","index.Gradient"],"mappings":"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"}