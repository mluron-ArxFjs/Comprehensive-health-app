{"version":3,"file":"ej2-circulargauge.umd.min.js","sources":["../src/circular-gauge/utils/helper-common.js","../src/circular-gauge/utils/helper-circular-gauge.js","../src/circular-gauge/utils/helper-tooltip.js","../src/circular-gauge/utils/helper-axis-panel.js","../src/circular-gauge/utils/helper-axis-renderer.js","../src/circular-gauge/utils/helper-pointer-renderer.js","../src/circular-gauge/utils/helper-legend.js","../src/circular-gauge/model/theme.js","../src/circular-gauge/model/base.js","../src/circular-gauge/axes/axis.js","../src/circular-gauge/model/constants.js","../src/circular-gauge/annotations/annotations.js","../src/circular-gauge/user-interaction/tooltip.js","../src/circular-gauge/axes/axis-renderer.js","../src/circular-gauge/axes/pointer-renderer.js","../src/circular-gauge/axes/axis-panel.js","../src/circular-gauge/legend/legend.js","../src/circular-gauge/model/pdf-export.js","../src/circular-gauge/model/image-export.js","../src/circular-gauge/model/print.js","../src/circular-gauge/axes/gradient.js","../src/circular-gauge/circular-gauge.js"],"sourcesContent":["/* eslint-disable max-len */\n/**\n * Specifies Circular-Gauge Common Helper methods\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { compile as templateComplier, isNullOrUndefined, remove, createElement, merge } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\n/**\n * Function to measure the height and width of the text.\n *\n * @param  {string} text - Specifies the text.\n * @param  {FontModel} font - Specifies the font.\n * @returns {Size} - Returns the size of the text.\n * @private\n */\nexport function measureText(text, font) {\n    var htmlObject = document.getElementById('gauge-measuretext');\n    if (htmlObject === null) {\n        htmlObject = createElement('text', { id: 'gauge-measuretext' });\n        document.body.appendChild(htmlObject);\n    }\n    var style = 'position: absolute; visibility: hidden;' +\n        ';left: 0px; top: -100px; white-space: nowrap;' + getFontStyle(font);\n    htmlObject.innerText = text;\n    htmlObject.style.cssText = style;\n    return new Size(htmlObject.clientWidth, htmlObject.clientHeight);\n}\n/**\n * Function to find number from string\n *\n * @param {string} value - Specifies the value.\n * @param {number} maxDimension - Specifies the  maximum dimension.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function toPixel(value, maxDimension) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (maxDimension / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Function to get the style from FontModel.\n *\n * @param {FontModel} font - Specifies the font.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function getFontStyle(font) {\n    var style = '';\n    style = 'font-size:' + font.size +\n        '; font-style:' + font.fontStyle + '; font-weight:' + font.fontWeight +\n        '; font-family:' + font.fontFamily + ';opacity:' + font.opacity +\n        '; color:' + font.color + ';';\n    return style;\n}\n/**\n * Function to create the text element.\n *\n * @param {TextOption} options - Specifies the options.\n * @param {FontModel} font - Specifies the font.\n * @param {string} color - Specifies the color.\n * @param {HTMLElement | Element} parent - Specifies the html element.\n * @param {string} styles - Specifies the style.\n * @returns {Element} - Returns the element.\n * @private\n */\nexport function textElement(options, font, color, parent, styles) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var renderOptions = {};\n    var renderer = new SvgRenderer('');\n    var style = styles + ' font-size:' + font.size + '; font-style:' + font.fontStyle +\n        ' ; font-weight:' + font.fontWeight + '; font-family:' + font.fontFamily + ';';\n    renderOptions = {\n        'id': options.id,\n        'x': options.x,\n        'y': options.y,\n        'fill': color,\n        'text-anchor': options.anchor,\n        'transform': options.transform,\n        'opacity': font.opacity,\n        'dominant-baseline': options.baseLine,\n        'style': style\n    };\n    var htmlObject = renderer.createText(renderOptions, options.text);\n    parent.appendChild(htmlObject);\n    return htmlObject;\n}\n/**\n * Function to append the path to the element.\n *\n * @param {PathOption} options - Specifies the options.\n * @param {Element} element - Specifies the element.\n * @param {CircularGauge} gauge - Specifies the gauge.\n * @param {string} functionName - Specifies the function name.\n * @returns {Element} - Returns the element.\n * @private\n */\nexport function appendPath(options, element, gauge, functionName) {\n    functionName = functionName ? functionName : 'Path';\n    var htmlObject = gauge.renderer['draw' + functionName](options);\n    htmlObject.setAttribute('transform', options.transform);\n    htmlObject.style.cssText = options.style;\n    element.appendChild(htmlObject);\n    return htmlObject;\n}\n/**\n * Function to check whether it's a complete circle for circular gauge.\n *\n * @param {number} startAngle - Specifies the startAngle.\n * @param {number} endAngle - Specifies the endAngle.\n * @returns {boolean} Returns the boolean value.\n * @private\n */\nexport function isCompleteAngle(startAngle, endAngle) {\n    var totalAngle = endAngle - startAngle;\n    totalAngle = totalAngle <= 0 ? (totalAngle + 360) : totalAngle;\n    return Math.floor(totalAngle / 360) !== 0;\n}\n/**\n * Function to get the degree for circular gauge.\n *\n * @param {number} startAngle - Specifies the startAngle.\n * @param {number} endAngle - Specifies the endAngle.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function getDegree(startAngle, endAngle) {\n    var degree = endAngle - startAngle;\n    return degree < 0 ? (degree + 360) : degree;\n}\n/**\n * Function to get the angle from value for circular gauge.\n *\n * @param {number} value - Specifies the value.\n * @param {number} maximumValue - Specifies the maximumValue.\n * @param {number} minimumValue - Specifies the minimumValue.\n * @param {number} startAngle - Specifies the startAngle.\n * @param {number} endAngle - Specifies the endAngle.\n * @param {boolean} isClockWise - Specifies the isClockWise.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function getAngleFromValue(value, maximumValue, minimumValue, startAngle, endAngle, isClockWise) {\n    var angle;\n    endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n    startAngle -= 90;\n    endAngle -= 90;\n    if (isClockWise) {\n        angle = ((value - minimumValue) * (getDegree(startAngle, endAngle) / (maximumValue - minimumValue))) + startAngle;\n    }\n    else {\n        angle = endAngle - ((value - minimumValue) * (getDegree(startAngle, endAngle) / (maximumValue - minimumValue)));\n        angle = angle < 0 ? 360 + angle : angle;\n    }\n    angle = Math.round(angle) >= 360 ? (angle - 360) : Math.round(angle) < 0 ? (360 + angle) : angle;\n    return angle;\n}\n/**\n * Function to get angle from location for circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center.\n * @param {GaugeLocation} point - Specifies the point.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function getAngleFromLocation(center, point) {\n    var angle = Math.atan2((point.y - center.y), (point.x - center.x));\n    angle = Math.round((angle < 0 ? (6.283 + angle) : angle) * (180 / Math.PI)) - 270;\n    angle += angle < 0 ? 360 : 0;\n    return angle;\n}\n/**\n * Function to get the location from angle for circular gauge.\n *\n * @param {number} degree - Specifies the degree.\n * @param {number} radius - Specifies the radius.\n * @param {GaugeLocation} center - Specifies the center.\n * @returns {GaugeLocation} - Returns the gauge location.\n * @private\n */\nexport function getLocationFromAngle(degree, radius, center) {\n    var radian = (degree * Math.PI) / 180;\n    return new GaugeLocation(Math.cos(radian) * radius + center.x, Math.sin(radian) * radius + center.y);\n}\n/**\n * Function to get the path direction of the circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center.\n * @param {number} start - Specifies the start.\n * @param {number} end - Specifies the end.\n * @param {number} radius - Specifies the radius.\n * @param {number} startWidth - Specifies the startWidth.\n * @param {number} endWidth - Specifies the endWidth.\n * @param {Range} range - Specifies the range.\n * @param {Axis} axis - Specifies the axis.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function getPathArc(center, start, end, radius, startWidth, endWidth, range, axis) {\n    if (isNullOrUndefined(range) || (range.start !== range.end)) {\n        end -= isCompleteAngle(start, end) ? 0.0001 : 0;\n    }\n    var degree = getDegree(start, end);\n    var startRadius = !isNullOrUndefined(range) ? (range.position === 'Outside' && !range.isLinearCircularGradient\n        ? radius + startWidth : range.position === 'Cross'\n        && axis.direction === 'AntiClockWise' ? radius - (endWidth + startWidth) / 2 : radius - startWidth) : radius - startWidth;\n    var endRadius = !isNullOrUndefined(range) ? (range.position === 'Outside'\n        && !range.isLinearCircularGradient ? radius + endWidth : range.position === 'Cross' &&\n        axis.direction === 'ClockWise' ? radius - (endWidth + startWidth) / 2 : radius - endWidth) : radius - endWidth;\n    var arcRadius = !isNullOrUndefined(range) ? (range.position === 'Outside' && !range.isLinearCircularGradient\n        ? radius + ((startWidth + endWidth) / 2) :\n        range.position === 'Cross' ? (radius - ((startWidth + endWidth) / 4) - (axis.direction === 'ClockWise' ? startWidth : endWidth)\n            / 2) : radius - ((startWidth + endWidth) / 2)) : radius - ((startWidth + endWidth) / 2);\n    var insideArcRadius = !isNullOrUndefined(range) && range.position === 'Cross' ?\n        radius + ((startWidth + endWidth) / 4)\n            - (axis.direction === 'ClockWise' ? startWidth : endWidth) / 2 : radius;\n    var insideEndRadius = !isNullOrUndefined(range) && range.position === 'Cross' && axis.direction === 'ClockWise' ?\n        radius - ((startWidth - endWidth) / 2) : radius;\n    var insideStartRadius = !isNullOrUndefined(range) && range.position === 'Cross' && axis.direction === 'AntiClockWise' ?\n        radius + ((startWidth - endWidth) / 2) : radius;\n    if (startWidth !== undefined && endWidth !== undefined) {\n        insideEndRadius = range.position === 'Cross' ? (degree > 325 ? insideStartRadius : insideEndRadius) : insideEndRadius;\n        return getRangePath(getLocationFromAngle(start, insideStartRadius, center), getLocationFromAngle(end, insideEndRadius, center), getLocationFromAngle(start, startRadius, center), getLocationFromAngle(end, endRadius, center), insideArcRadius, startRadius, endRadius, arcRadius, (degree < 180) ? 0 : 1, center, degree, range, axis);\n    }\n    else {\n        return getCirclePath(getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), radius, (degree < 180) ? 0 : 1);\n    }\n}\n/**\n * Function to get the range path arc direction of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start.\n * @param {GaugeLocation} end - Specifies the end.\n * @param {number} radius - Specifies the radius.\n * @param {number} arcStartOne - Specifies the arcStartOne.\n * @param {number} arcEndOne - Specifies the arcEndOne.\n * @param {number} arcStartTwo - Specifies the arcStartTwo.\n * @param {number} arcEndTwo - Specifies the arcEndTwo.\n * @param {number} clockWise - Specifies the clockWise.\n * @param {GaugeLocation} innerStart - Specifies the innerStart.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd.\n * @param {GaugeLocation} pointPosition - Specifies the pointPosition.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function arcPath(start, end, radius, arcStartOne, arcEndOne, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, pointPosition) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y + ' L ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + arcStartOne + ' ' + arcEndOne + ' 0 ' + clockWise + ' 0 ' + pointPosition.x\n        + ' ' + pointPosition.y + ' ' + ' A ' + arcStartTwo + ' ' + arcEndTwo\n        + ' 0 ' + clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y + ' Z ';\n}\n/**\n * Function to get the range path arc direction of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start.\n * @param {GaugeLocation} end - Specifies the end.\n * @param {number} radius - Specifies the radius.\n * @param {GaugeLocation} outerOldEnd - Specifies the outerOldEnd.\n * @param {GaugeLocation} innerOldEnd - Specifies the innerOldEnd.\n * @param {number} arcStartOne - Specifies the arcStartOne.\n * @param {number} arcEndOne - Specifies the arcEndOne.\n * @param {number} arcStartTwo - Specifies the arcStartTwo.\n * @param {number} arcEndTwo - Specifies the arcEndTwo.\n * @param {number} clockWise - Specifies the clockWise.\n * @param {GaugeLocation} innerStart - Specifies the innerStart.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd.\n * @param {GaugeLocation} innerOldStart - Specifies the innerOldStart.\n * @param {GaugeLocation} outerOldStart - Specifies the outerOldStart.\n * @param {GaugeLocation} pointPosition - Specifies the pointPosition.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function arcRoundedPath(start, end, radius, outerOldEnd, innerOldEnd, arcStartOne, arcEndOne, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, innerOldStart, outerOldStart, pointPosition) {\n    var roundedPath = 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y + ' C ' + outerOldEnd.x + ' ' + outerOldEnd.y + ' ' + innerOldEnd.x + ' ' +\n        innerOldEnd.y + ' ' + innerEnd.x + ' ' + innerEnd.y;\n    if (isNullOrUndefined(arcStartTwo) && isNullOrUndefined(arcEndTwo)) {\n        return roundedPath + ' A ' + arcStartOne + ' ' + arcEndOne + ' 0 ' + clockWise + ' 0 ' + innerStart.x + ' '\n            + innerStart.y + ' C ' + innerOldStart.x + ' ' + innerOldStart.y + ' ' + outerOldStart.x + ' ' +\n            outerOldStart.y + ' ' + start.x + ' ' + start.y + ' Z';\n    }\n    else {\n        return roundedPath + ' A ' + arcStartOne + ' ' + arcEndOne + ' 0 ' + clockWise + ' 0 '\n            + pointPosition.x + ' ' + pointPosition.y + ' ' + ' A ' + arcStartTwo + ' ' + arcEndTwo + ' 0 ' + clockWise + ' 0 '\n            + innerStart.x + ' ' + innerStart.y + ' C ' + innerOldStart.x + ' ' + innerOldStart.y + ' ' + outerOldStart.x + ' ' +\n            outerOldStart.y + ' ' + start.x + ' ' + start.y + ' Z';\n    }\n}\n/**\n * Function to get the range path direction for different start and end width of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the options.\n * @param {GaugeLocation} end - Specifies the end.\n * @param {GaugeLocation} innerStart - Specifies the innerStart.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd.\n * @param {number} radius - Specifies the radius.\n * @param {number} startRadius - Specifies the startRadius.\n * @param {number} endRadius - Specifies the endRadius.\n * @param {number} clockWise - Specifies the clockWise.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y +\n        ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y +\n        ' L ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + endRadius + ' ' + startRadius + ' 0 ' +\n        clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y + ' Z';\n}\n/**\n * Function to get the range path direction of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start values.\n * @param {GaugeLocation} end - Specifies the end values.\n * @param {GaugeLocation} innerStart - Specifies the innerStart values.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd values.\n * @param {number} radius - Specifies the radius value.\n * @param {number} startRadius - Specifies the startRadius value.\n * @param {number} endRadius - Specifies the endRadius value.\n * @param {number} arcRadius - Specifies the arcRadius value.\n * @param {number} clockWise - Specifies the clockWise value.\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {number} degree - Specifies the degree value.\n * @param {Range} range - Specifies the range value.\n * @param {Axis} axis - Specifies the axis value.\n * @returns {string} - Returns the string value.\n * @private\n */\nexport function getRangePath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, arcRadius, clockWise, center, degree, range, axis) {\n    var startWidth = range.startWidth;\n    var endWidth = range.endWidth;\n    var widthDifference = Math.abs(startWidth - endWidth);\n    var endArc;\n    var startArc;\n    if (startWidth > endWidth && degree <= 260 && range.position !== 'Cross' && range.position !== 'Outside') {\n        endArc = (endRadius + (axis.direction === 'ClockWise' ? -(widthDifference / 2) : (widthDifference / 2)));\n        startArc = (startRadius + (axis.direction === 'ClockWise' ? (widthDifference / 2) : -(widthDifference / 2)));\n        return arcWidthPath(start, end, innerStart, innerEnd, radius, startArc, endArc, clockWise);\n    }\n    else if (endWidth > startWidth && degree <= 260 && range.position !== 'Cross' && range.position !== 'Outside') {\n        endArc = (startRadius + (axis.direction === 'ClockWise' ? -(widthDifference / 2) : (widthDifference / 2)));\n        startArc = (endRadius + (axis.direction === 'ClockWise' ? (widthDifference / 2) : -(widthDifference / 2)));\n        return arcWidthPath(start, end, innerStart, innerEnd, radius, startArc, endArc, clockWise);\n    }\n    else if ((endWidth === startWidth) && (axis.startAngle !== 0 || axis.endAngle !== 0)) {\n        return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n    }\n    else if ((degree > 260) || (!range.isLinearCircularGradient && axis.startAngle === 0 && axis.endAngle === 0)) {\n        if (range.roundedCornerRadius <= 0 && range.startWidth === range.endWidth) {\n            return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n        }\n        else {\n            return arcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, arcRadius, clockWise, center, null, null, null, null, startWidth, endWidth, degree, range, axis);\n        }\n    }\n    else {\n        if (range.position === 'Cross' || range.position === 'Outside') {\n            return arcWidthPath(start, end, innerStart, innerEnd, radius, arcRadius, arcRadius, clockWise);\n        }\n        else {\n            return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n        }\n    }\n}\n/**\n * Function to get start and end width range path calculation to the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start value.\n * @param {GaugeLocation} end - Specifies the end value.\n * @param {GaugeLocation} innerStart - Specifies the innerStart value.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} startRadius - Specifies the startRadius value.\n * @param {number} endRadius - Specifies the endRadius value.\n * @param {number} arcRadius - Specifies the arcRadius value.\n * @param {number} clockWise - Specifies the clockWise value.\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {GaugeLocation} outerOldEnd - Specifies the outerOldEnd value.\n * @param {GaugeLocation} innerOldEnd - Specifies the innerOldEnd value.\n * @param {GaugeLocation} outerOldStart - Specifies the outerOldStart value.\n * @param {GaugeLocation} innerOldStart - Specifies the innerOldStart value.\n * @param {number} startWidth - Specifies the startWidth value.\n * @param {number} endWidth - Specifies the endWidth value.\n * @param {number} degree - Specifies the degree value.\n * @param {Range} range - Specifies the range value.\n * @param {Axis} axis - Specifies the axis value.\n * @returns {string} - Returns the svg path.\n * @private\n */\nexport function arcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, arcRadius, clockWise, center, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart, startWidth, endWidth, degree, range, axis) {\n    if (!isNullOrUndefined(range)) {\n        var arcStartOne = void 0;\n        var arcEndOne = void 0;\n        var widthDifference = Math.abs(startWidth - endWidth);\n        var arcStartTwo = void 0;\n        var arcEndTwo = void 0;\n        var startValueToAngle = getAngleFromValue(((range.start + range.end) / 2), axis.maximum, axis.minimum, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        var pointPosition = (startWidth < ((endWidth))) ?\n            getLocationFromAngle(startValueToAngle, endRadius, center) : getLocationFromAngle(startValueToAngle, startRadius, center);\n        var endDistance = Math.sqrt((Math.pow((innerEnd.x - pointPosition.x), 2)) + (Math.pow((innerEnd.y - pointPosition.y), 2)));\n        var endRadii = endDistance / 2;\n        var centerStartDistance = Math.sqrt((Math.pow((center.x - innerStart.x), 2)) + (Math.pow((center.y - innerStart.y), 2)));\n        var centerDistance = Math.sqrt((Math.pow((center.x - pointPosition.x), 2)) + (Math.pow((center.y - pointPosition.y), 2)));\n        if (range.roundedCornerRadius <= 0) {\n            widthDifference = widthDifference === 0 ? 1 : widthDifference;\n            innerEnd.y = (range.position === 'Cross' && axis.direction === 'ClockWise') ? degree > 325 ?\n                innerEnd.y - (widthDifference / 2) : innerEnd.y : innerEnd.y;\n            var degreeValue = range.position === 'Cross' ? 330 : 325;\n            if (((degreeValue <= degree && degree <= 360))) {\n                arcStartTwo = (axis.direction === 'ClockWise' ? (centerDistance / 2)\n                    : (degree >= 345 ? (startRadius - (widthDifference / 2) - (endWidth / 2))\n                        : range.position === 'Cross' ? (startRadius + (widthDifference / 4) - (startWidth / 2))\n                            : (startRadius - (widthDifference / 2) - (startWidth / 2))));\n                arcEndTwo = (axis.direction === 'ClockWise' ? (centerStartDistance / 2)\n                    : range.position === 'Cross' ?\n                        (endRadius + (widthDifference / 4)) - (endWidth / 4) :\n                        (range.position === 'Outside' && axis.direction === 'AntiClockWise') ? degree < 345 ?\n                            (startRadius - (widthDifference) - (endWidth / 4))\n                            : (startRadius - (widthDifference / 2))\n                            : (endRadius + (widthDifference / 2)) - (endWidth / 2));\n                return arcPath(start, end, radius, endRadii, endRadii, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, pointPosition);\n            }\n            else if ((degree > 260 && degree < 325) && range.position !== 'Cross' && range.position !== 'Outside') {\n                var arcStart = (arcRadius - (widthDifference / 2));\n                var arcEnd = (arcRadius - (widthDifference / 2));\n                var angleValueDirection = axis.direction === 'ClockWise' ? degree >= 310 : degree < 345;\n                if (degree < 310) {\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, arcStart, arcEnd, clockWise);\n                }\n                else if (degree >= 310 || angleValueDirection) {\n                    arcStart = (arcRadius - (widthDifference));\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, arcEnd, arcStart, clockWise);\n                }\n                else {\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n                }\n            }\n            else {\n                if (range.position === 'Cross') {\n                    var endRadiusValue = axis.direction === 'ClockWise' ? degree <= 300 && degree >= 260 ?\n                        endRadius - (widthDifference / 2) - (startWidth / 4) : endRadius\n                        - (widthDifference) - (startWidth / 2) : degree <= 300 && degree >= 260 ?\n                        endRadius + (widthDifference / 4) - (startWidth / 4) :\n                        endRadius + (widthDifference / 4) - (startWidth / 2);\n                    var startRadiusValue = axis.direction === 'ClockWise' ? degree > 325 ? degree > 340 ? (startRadius - startWidth)\n                        - (widthDifference / 4) : startRadius - (widthDifference / 4)\n                        : startRadius : startRadius - (widthDifference / 4);\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadiusValue, endRadiusValue, clockWise);\n                }\n                else if (range.position === 'Outside') {\n                    if (degree < 325 && degree > 285) {\n                        var arcTwo = void 0;\n                        var startGreater = startWidth / 2;\n                        var endGreater = endWidth / 2;\n                        var arcOne = arcTwo = arcRadius + (widthDifference / 2) + startGreater + endGreater;\n                        innerEnd.y = axis.direction === 'ClockWise' && startWidth !== endWidth && startWidth > widthDifference ?\n                            innerEnd.y - (widthDifference / 2) : innerEnd.y + startGreater;\n                        return arcWidthPath(start, end, innerStart, innerEnd, radius, arcOne, arcTwo, clockWise);\n                    }\n                    else {\n                        return arcWidthPath(start, end, innerStart, innerEnd, radius, arcRadius, arcRadius, clockWise);\n                    }\n                }\n                else {\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n                }\n            }\n        }\n        else {\n            var degreeAngle = axis.endAngle < 4 ? 356 : 360;\n            clockWise = degree > degreeAngle ? 0 : clockWise;\n            var degreeValueOne = axis.direction === 'ClockWise' ? 327 : 322;\n            var degreeValueTwo = axis.direction === 'ClockWise' ? 328 : 325;\n            if ((endWidth === startWidth) && (axis.startAngle !== 0 || axis.endAngle !== 0)) {\n                return roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart);\n            }\n            else if ((degree <= degreeAngle && degree > degreeValueOne) && range.roundedCornerRadius > 0) {\n                arcStartOne = axis.direction === 'ClockWise' ? degree < 334 && degree > 324 ? endRadii - (widthDifference / 2) :\n                    endRadii - (widthDifference / 4) : endRadii;\n                arcStartTwo = (centerDistance / 2);\n                arcEndTwo = axis.direction === 'ClockWise' ? ((centerStartDistance / 2) + (widthDifference / 2)) :\n                    (centerStartDistance / 2);\n                return arcRoundedPath(start, end, radius, outerOldEnd, innerOldEnd, arcStartOne, endRadii, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, innerOldStart, outerOldStart, pointPosition);\n            }\n            else if (degree > 270 && degree < degreeValueTwo) {\n                var startAddArc = endRadius + (widthDifference / 2) - (endWidth / 2);\n                var startSubArc = endRadius - (widthDifference / 2) - (endWidth / 2);\n                arcStartOne = (startRadius - (widthDifference / 2) - (startWidth / 2));\n                arcEndOne = (axis.direction === 'ClockWise' ? startSubArc : startAddArc);\n                return arcRoundedPath(start, end, radius, outerOldEnd, innerOldEnd, arcStartOne, arcEndOne, null, null, clockWise, innerStart, innerEnd, innerOldStart, outerOldStart, null);\n            }\n            else {\n                return roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart);\n            }\n        }\n    }\n    else {\n        return roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart);\n    }\n}\n/**\n * Function to get start and end width range rounded path calculation to the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start value.\n * @param {GaugeLocation} end - Specifies the end value.\n * @param {GaugeLocation} innerStart - Specifies the innerStart value.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} startRadius - Specifies the startRadius value.\n * @param {number} endRadius - Specifies the endRadius value.\n * @param {number} clockWise - Specifies the clockWise value.\n * @param {GaugeLocation} outerOldEnd - Specifies the outerOldEnd value.\n * @param {GaugeLocation} innerOldEnd - Specifies the innerOldEnd value.\n * @param {GaugeLocation} outerOldStart - Specifies the outerOldStart value.\n * @param {GaugeLocation} innerOldStart - Specifies the innerOldStart value.\n * @returns {string} - Returns the path value.\n * @private\n */\nexport function roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y + ' C ' + outerOldEnd.x + ' ' + outerOldEnd.y + ' ' + innerOldEnd.x + ' ' +\n        innerOldEnd.y + ' ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + endRadius + ' ' + startRadius + ' 0 ' +\n        clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y +\n        ' C ' + innerOldStart.x + ' ' + innerOldStart.y + ' ' + outerOldStart.x + ' ' +\n        outerOldStart.y + ' ' + start.x + ' ' + start.y + ' Z';\n}\n/**\n * Function to get the rounded path direction of the circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {number} actualStart - Specifies the actualStart value.\n * @param {number} actualEnd - Specifies the actualEnd value.\n * @param {number} oldStart - Specifies the oldStart value.\n * @param {number} oldEnd - Specifies the oldEnd value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} startWidth - Specifies the startWidth value.\n * @param {number} endWidth - Specifies the endWidth value.\n * @param {Range} range - Specifies the range value.\n * @param {Axis} axis - Specifies the axis value.\n * @returns {string} - Returns the path value.\n * @private\n */\nexport function getRoundedPathArc(center, actualStart, actualEnd, oldStart, oldEnd, radius, startWidth, endWidth, range, axis) {\n    actualEnd -= isCompleteAngle(actualStart, actualEnd) ? 0.0001 : 0;\n    var degree = getDegree(actualStart, actualEnd);\n    var startRadius = radius - startWidth;\n    var endRadius = radius - endWidth;\n    var arcRadius = radius - ((startWidth + endWidth) / 2);\n    return arcWidthPathCalculation(getLocationFromAngle(actualStart, radius, center), getLocationFromAngle(actualEnd, radius, center), getLocationFromAngle(actualStart, startRadius, center), getLocationFromAngle(actualEnd, endRadius, center), radius, arcRadius, arcRadius, arcRadius, (degree < 180) ? 0 : 1, center, getLocationFromAngle(oldEnd, radius, center), getLocationFromAngle(oldEnd, endRadius, center), getLocationFromAngle(oldStart, radius, center), getLocationFromAngle(oldStart, startRadius, center), startWidth, endWidth, degree, range, axis);\n}\n/**\n * Function to get the circular path direction of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start value.\n * @param {GaugeLocation} end - Specifies the end value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} clockWise - Specifies the clockWise.\n * @returns {string} - Returns the path.\n * @private\n */\nexport function getCirclePath(start, end, radius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' +\n        radius + ' 0 ' + clockWise + ' 1 ' + end.x + ' ' + end.y;\n}\n/**\n * Function to compile the template function for circular gauge.\n *\n * @param {string} template - Specifies the template.\n * @param {CircularGauge} gauge - Specifies the gauge instance.\n * @returns {Function} - Returns the template function.\n * @private\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getTemplateFunction(template, gauge) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var templateFn = null;\n    try {\n        if (typeof template === 'function') {\n            templateFn = templateComplier(template);\n        }\n        else if (isNaN(parseFloat(template)) && document.querySelectorAll(template).length) {\n            if ((template.charAt(0) !== 'a' || template.charAt(0) !== 'A') && template.length !== 1) {\n                templateFn = templateComplier(document.querySelector(template).innerHTML.trim());\n            }\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        }\n        else if (gauge.isVue || gauge.isVue3) {\n            templateFn = templateComplier(template);\n        }\n    }\n    catch (e) {\n        templateFn = templateComplier(template);\n    }\n    return templateFn;\n}\n/**\n * Function to remove the element from id.\n *\n * @param {string} id Specifies the id\n * @returns {void}\n * @private\n */\nexport function removeElement(id) {\n    var element = getElement(id);\n    if (element) {\n        remove(element);\n    }\n}\n/**\n * Function to get element from id.\n *\n * @param {string} id - Specifies the id.\n * @returns {Element} - Returns the element.\n * @private\n */\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/**\n * Function to convert the number from string.\n *\n * @param {string} value - Specifies the value.\n * @param {number} containerSize - Specifies the container size.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Function to get current point for circular gauge using element id.\n *\n * @param {string} targetId - Specifies the target id.\n * @param {CircularGauge} gauge - Specifies the gauge instance.\n * @returns {IVisiblePointer} - Returns the pointer and axis index.\n * @private\n */\nexport function getPointer(targetId, gauge) {\n    var tempString = targetId.replace(gauge.element.id, '').split('_Axis_')[1];\n    return {\n        axisIndex: +tempString[0],\n        pointerIndex: +tempString[tempString.length - 1]\n    };\n}\n/**\n * Function to convert the label using format for cirular gauge.\n *\n * @param {string} format - Specifies the format.\n * @returns {string} - Returns th string.\n * @private\n */\nexport function getLabelFormat(format) {\n    var customLabelFormat = format && format.match('{value}') !== null;\n    var skeleton = customLabelFormat ? '' : format;\n    return skeleton;\n}\n/**\n * Function to calculate the marker shape for circular gauge.\n *\n * @param {GaugeLocation} location - Specifies the location.\n * @param {string} shape - Specifies the shape.\n * @param {Size} size - Specifies the size.\n * @param {string} url - Specifies the url.\n * @param {PathOption} options - Specifies the path option.\n * @returns {PathOption} - Returns the path.\n * @private\n */\nexport function calculateShapes(location, shape, size, url, options) {\n    var path;\n    var width = typeof size.width === 'string' ? parseFloat(size.width) : size.width;\n    var height = typeof size.height === 'string' ? parseFloat(size.height) : size.height;\n    var locX = location.x;\n    var locY = location.y;\n    var x = location.x + (-width / 2);\n    var y = location.y + (-height / 2);\n    var isLegend = options.id.indexOf('Shape') > -1;\n    var space;\n    switch (shape) {\n        case 'Circle':\n            merge(options, { 'rx': width / 2, 'ry': height / 2, 'cx': locX, 'cy': locY });\n            break;\n        case 'Diamond':\n            path = 'M' + ' ' + x + ' ' + locY + ' ' +\n                'L' + ' ' + locX + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + locY + ' ' +\n                'L' + ' ' + locX + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + locY + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Rectangle':\n            path = 'M' + ' ' + x + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (locY + (-height / 2)) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Triangle':\n            if (isLegend) {\n                path = 'M' + ' ' + (x + (width / 2)) + ' ' + y + ' ' + 'L' + ' ' + (x + width) + ' ' +\n                    (y + height) + 'L' + ' ' + x + ' ' + (y + height) + ' Z';\n            }\n            else {\n                path = 'M' + ' ' + locX + ' ' + locY + ' ' +\n                    'L' + ' ' + (locX - height) + ' ' + (locY - (width / 2)) +\n                    'L' + ' ' + (locX - height) + ' ' + (locY + (width / 2)) + ' Z';\n            }\n            merge(options, { 'd': path });\n            break;\n        case 'InvertedTriangle':\n            if (isLegend) {\n                path = 'M' + ' ' + (x + width) + ' ' + y + ' ' + 'L' + ' ' + (x + (width / 2)) + ' ' + (y + height) +\n                    'L' + ' ' + x + ' ' + (y) + ' Z';\n            }\n            else {\n                path = 'M' + ' ' + locX + ' ' + locY + ' ' +\n                    'L' + ' ' + (locX + height) + ' ' + (locY - (width / 2)) +\n                    'L' + ' ' + (locX + height) + ' ' + (locY + (width / 2)) + ' Z';\n            }\n            merge(options, { 'd': path });\n            break;\n        case 'Image':\n            merge(options, { 'href': url, 'height': height, 'width': width, x: x, y: y });\n            break;\n        case 'RightArrow':\n            space = 2;\n            path = 'M' + ' ' + (locX + (-width / 2)) + ' ' + (locY - (height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY) + ' ' + 'L' + ' ' +\n                (locX + (-width / 2)) + ' ' + (locY + (height / 2)) + ' L' + ' ' + (locX + (-width / 2)) + ' ' +\n                (locY + (height / 2) - space) + ' ' + 'L' + ' ' + (locX + (width / 2) - (2 * space)) + ' ' + (locY) +\n                ' L' + (locX + (-width / 2)) + ' ' + (locY - (height / 2) + space) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'LeftArrow':\n            options.fill = options.stroke;\n            options.stroke = 'transparent';\n            space = 2;\n            path = 'M' + ' ' + (locX + (width / 2)) + ' ' + (locY - (height / 2)) + ' ' +\n                'L' + ' ' + (locX + (-width / 2)) + ' ' + (locY) + ' ' + 'L' + ' ' +\n                (locX + (width / 2)) + ' ' + (locY + (height / 2)) + ' ' + 'L' + ' ' +\n                (locX + (width / 2)) + ' ' + (locY + (height / 2) - space) + ' L' + ' ' + (locX + (-width / 2) + (2 * space))\n                + ' ' + (locY) + ' L' + (locX + (width / 2)) + ' ' + (locY - (height / 2) + space) + ' Z';\n            merge(options, { 'd': path });\n            break;\n    }\n    return options;\n}\n/** @private */\nvar CustomizeOption = /** @class */ (function () {\n    function CustomizeOption(id) {\n        this.id = id;\n    }\n    return CustomizeOption;\n}());\nexport { CustomizeOption };\n/** @private */\nvar PathOption = /** @class */ (function (_super) {\n    __extends(PathOption, _super);\n    function PathOption(id, fill, width, color, opacity, dashArray, d, transform, style) {\n        if (transform === void 0) { transform = ''; }\n        if (style === void 0) { style = ''; }\n        var _this = _super.call(this, id) || this;\n        _this.opacity = opacity;\n        _this.fill = fill;\n        _this.stroke = color;\n        _this['stroke-width'] = width;\n        _this['stroke-dasharray'] = dashArray;\n        _this.d = d;\n        _this.transform = transform;\n        _this.style = style;\n        return _this;\n    }\n    return PathOption;\n}(CustomizeOption));\nexport { PathOption };\n/** @private */\nvar RectOption = /** @class */ (function (_super) {\n    __extends(RectOption, _super);\n    function RectOption(id, fill, border, opacity, rect) {\n        var _this = _super.call(this, id) || this;\n        _this.y = rect.y;\n        _this.x = rect.x;\n        _this.height = rect.height;\n        _this.width = rect.width;\n        _this.opacity = opacity;\n        _this.fill = fill;\n        _this.stroke = border.color;\n        _this['stroke-width'] = border.width;\n        _this['stroke-dasharray'] = border.dashArray;\n        return _this;\n    }\n    return RectOption;\n}(CustomizeOption));\nexport { RectOption };\n/**\n * Specifies the size information of an element.\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    return Size;\n}());\nexport { Size };\n/**\n * Specifies the location of the element in the circular gauge.\n */\nvar GaugeLocation = /** @class */ (function () {\n    function GaugeLocation(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return GaugeLocation;\n}());\nexport { GaugeLocation };\n/** @private */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return Rect;\n}());\nexport { Rect };\n/** @private */\nvar TextOption = /** @class */ (function (_super) {\n    __extends(TextOption, _super);\n    function TextOption(id, x, y, anchor, text, transform, baseLine) {\n        if (transform === void 0) { transform = ''; }\n        var _this = _super.call(this, id) || this;\n        _this.transform = '';\n        _this.baseLine = 'auto';\n        _this.x = x;\n        _this.y = y;\n        _this.anchor = anchor;\n        _this.text = text;\n        _this.transform = transform;\n        _this.baseLine = baseLine;\n        return _this;\n    }\n    return TextOption;\n}(CustomizeOption));\nexport { TextOption };\n/** @private */\nvar VisibleLabels = /** @class */ (function () {\n    function VisibleLabels(text, value, size) {\n        this.text = text;\n        this.value = value;\n        this.size = size;\n    }\n    return VisibleLabels;\n}());\nexport { VisibleLabels };\n","/**\n * Specifies Circular-Gauge Helper methods\n */\nimport { setStyleAttribute } from '@syncfusion/ej2-base';\nimport { isCompleteAngle, getDegree } from './helper-common';\n/**\n * Function to set style to the element.\n *\n * @param {HTMLElement} element - Specifies the element.\n * @param {string} fill - Specifies the fill of the element.\n * @param {BorderModel} border - Specifies the border of the element.\n * @returns {void}\n * @private\n */\nexport function setStyles(element, fill, border) {\n    setStyleAttribute(element, {\n        'stroke': border.color, 'stroke-width': border.width,\n        'fill': fill\n    });\n}\n/**\n * Function to get the value from angle for circular gauge.\n *\n * @param {number} angle - Specifies the angle.\n * @param {number} maximumValue - Specifies the maximumValue.\n * @param {number} minimumValue - Specifies the minimumValue.\n * @param {number} startAngle - Specifies the startAngle.\n * @param {number} endAngle - Specifies the endAngle.\n * @param {boolean} isClockWise - Specifies the isClockWise.\n * @returns {number} - Returs the number.\n * @private\n */\nexport function getValueFromAngle(angle, maximumValue, minimumValue, startAngle, endAngle, isClockWise) {\n    endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n    angle = angle < startAngle ? (angle + 360) : angle;\n    if (isClockWise) {\n        return (((angle - startAngle) / getDegree(startAngle, endAngle)) * (maximumValue - minimumValue)) + minimumValue;\n    }\n    else {\n        return maximumValue - ((((angle - startAngle) / getDegree(startAngle, endAngle)) * (maximumValue - minimumValue)));\n    }\n}\n/**\n * Function to get current point for circular gauge using element id.\n *\n * @param {string} targetId - Specifies the target id.\n * @param {CircularGauge} gauge - Specifies the gauge instance.\n * @returns {IVisibleRange} - Returns the current point.\n * @private\n */\nexport function getRange(targetId, gauge) {\n    var tempString = targetId.replace(gauge.element.id, '').split('_Axis_')[1];\n    return {\n        axisIndex: +tempString[0],\n        rangeIndex: +tempString.split('Range_')[1]\n    };\n}\n","/**\n * Specifies Circular-Gauge Tooltip Helper methods\n */\nimport { GaugeLocation, getTemplateFunction, Size } from './helper-common';\nimport { remove } from '@syncfusion/ej2-base';\n/**\n * Function to get the mouse position\n *\n * @param {number} pageX - Specifies the pageX value.\n * @param {number} pageY - Specifies the pageY value.\n * @param {Element} element - Specifies the element.\n * @returns {GaugeLocation} - Returns the location.\n *\n * @private\n */\nexport function getMousePosition(pageX, pageY, element) {\n    var elementRect = element.getBoundingClientRect();\n    var pageXOffset = element.ownerDocument.defaultView.pageXOffset;\n    var pageYOffset = element.ownerDocument.defaultView.pageYOffset;\n    var clientTop = element.ownerDocument.documentElement.clientTop;\n    var clientLeft = element.ownerDocument.documentElement.clientLeft;\n    var positionX = elementRect.left + pageXOffset - clientLeft;\n    var positionY = elementRect.top + pageYOffset - clientTop;\n    return new GaugeLocation((pageX - positionX), (pageY - positionY));\n}\n/**\n * function to get the size of the element.\n *\n * @param {string} template - Specifies the template element.\n * @param {CircularGauge} gauge - Specifies the gauge instance.\n * @param {HTMLElement} parent - specifies the element.\n * @returns {Size} - Return the size of the element\n *\n * @private\n */\nexport function getElementSize(template, gauge, parent) {\n    var elementSize;\n    var element;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var templateFn = getTemplateFunction(template, gauge);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var tooltipData = templateFn ? (gauge.isVue || gauge.isVue3) ? templateFn({}, gauge, null, gauge.element.id + 'Template')\n        : templateFn({}, null, null, gauge.element.id + 'Template') : [];\n    if (templateFn && tooltipData.length) {\n        element = gauge.createElement('div', { id: gauge.element.id + '_Measure_Element' });\n        gauge.element.appendChild(element);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var templateElement = (gauge.isVue || gauge.isVue3) ? templateFn({}, gauge, null, gauge.element.id + 'Template')\n            : templateFn({}, null, null, gauge.element.id + 'Template');\n        var templateLength = templateElement.length;\n        while (templateLength > 0) {\n            element.appendChild(templateElement[0]);\n            templateLength--;\n        }\n        parent.appendChild(element);\n        elementSize = new Size(parent.getBoundingClientRect().width, parent.getBoundingClientRect().height);\n        remove(element);\n    }\n    return elementSize;\n}\n","/**\n * Specifies Circular-Gauge axis-panel Helper methods\n */\n/**\n * Function to calculate the sum of array values.\n *\n * @param {number} from - Specifies the from value.\n * @param {number} to - Specifies the to value.\n * @param {number[]} values - Specifies the number.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function calculateSum(from, to, values) {\n    var sum = 0;\n    var length = values.length;\n    for (; from < length; from++) {\n        sum += values[from];\n    }\n    return sum;\n}\n","/**\n * Specifies Circular-Gauge axis-render Helper methods\n */\n/**\n * Function to get range color from value for circular gauge.\n *\n * @param {number} value - Specifies the value.\n * @param {Range[]} ranges - Specifies the ranges.\n * @param {string} color - Specifies the color.\n * @returns {string} - Returns the color.\n * @private\n */\nexport function getRangeColor(value, ranges, color) {\n    var min = 0;\n    var max = 0;\n    var currentRange = ranges.filter(function (range) {\n        min = Math.min(range.start, range.end);\n        max = Math.max(range.start, range.end);\n        return (value >= min && max >= value);\n    });\n    return currentRange.length ? currentRange[0].rangeColor : color;\n}\n","/**\n * Specifies Circular-Gauge pointer-render Helper methods\n */\nimport { getLocationFromAngle, isCompleteAngle, getDegree } from './helper-common';\n/**\n * Function to calculate the value for linear animation effect\n *\n * @param {number} currentTime - Specifies the currentTime.\n * @param {number} startValue - Specifies the startValue.\n * @param {number} endValue - Specifies the endValue.\n * @param {number} duration - Specifies the duration.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function linear(currentTime, startValue, endValue, duration) {\n    return -endValue * Math.cos(currentTime / duration * (Math.PI / 2)) + endValue + startValue;\n}\n/**\n * Function to calculate the complete path arc of the circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {number} start - Specifies the start value.\n * @param {number} end - Specifies the end value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} innerRadius - Specifies the innerRadius value.\n * @param {boolean} checkMinValue - Specifies the checkMinValue value.\n * @returns {string} - Returns the path value.\n * @private\n */\nexport function getCompleteArc(center, start, end, radius, innerRadius, checkMinValue) {\n    end -= isCompleteAngle(start, end) && !checkMinValue ? 0.0001 : 0;\n    var degree = getDegree(start, end);\n    return getCompletePath(center, getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), radius, getLocationFromAngle(start, innerRadius, center), getLocationFromAngle(end, innerRadius, center), innerRadius, (degree < 180) ? 0 : 1);\n}\n/**\n * Function to get the complete path direction of the circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {GaugeLocation} start - Specifies the start value.\n * @param {GaugeLocation} end - Specifies the end value.\n * @param {number} radius - Specifies the radius value.\n * @param {GaugeLocation} innerStart - Specifies the innerStart value.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd value.\n * @param {number} innerRadius - Specifies the innerRadius value.\n * @param {number} clockWise - Specifies the clockWise.\n * @returns {string} - Returns the path.\n * @private\n */\nexport function getCompletePath(center, start, end, radius, innerStart, innerEnd, innerRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' + clockWise +\n        ' 1 ' + end.x + ' ' + end.y + ' L ' + innerEnd.x + ' ' + innerEnd.y + ' A ' + innerRadius +\n        ' ' + innerRadius + ' 0 ' + clockWise + ',0 ' + innerStart.x + ' ' + innerStart.y + ' Z';\n}\n","/**\n * Specifies Circular-Gauge Common Helper methods\n */\nimport { measureText } from '../utils/helper-common';\nimport { createElement } from '@syncfusion/ej2-base';\n/**\n * @param {number} maxWidth - Specifies the maximum width.\n * @param {string} text - Specifies the text.\n * @param {FontModel} font - Specifies the font.\n * @returns {string} - Returns the label.\n * @private */\nexport function textTrim(maxWidth, text, font) {\n    var label = text;\n    var size = measureText(text, font).width;\n    if (size > maxWidth) {\n        var textLength = text.length;\n        for (var i = textLength - 1; i >= 0; --i) {\n            label = text.substring(0, i) + '...';\n            size = measureText(label, font).width;\n            if (size <= maxWidth) {\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/**\n * @param {string} text - Specifies the text.\n * @param {number} x - Specifies the x value.\n * @param {number} y - Specifies the y value.\n * @param {number} areaWidth - Specifies the area width.\n * @param {string} id - Specifies the id.\n * @param {Element} element - Specifies the element.\n * @returns {void}\n * @private */\nexport function showTooltip(text, x, y, areaWidth, id, element) {\n    //let id1: string = 'EJ2_legend_tooltip';\n    var tooltip = document.getElementById(id);\n    var width = measureText(text, {\n        fontFamily: 'Segoe UI', size: '12px',\n        fontStyle: 'Normal', fontWeight: 'Regular'\n    }).width + 5;\n    x = (x + width > areaWidth) ? x - width : x;\n    if (!tooltip) {\n        tooltip = createElement('div', {\n            id: id\n        });\n        tooltip.innerText = text;\n        tooltip.style.cssText = 'top:' + (y + 15).toString() + 'px;left:' + (x + 15).toString() +\n            'px;background-color: rgb(255, 255, 255) !important; color:black !important; ' +\n            'position:absolute;border:1px solid rgb(112, 112, 112); padding-left : 3px; padding-right : 2px;' +\n            'padding-bottom : 2px; padding-top : 2px; font-size:12px; font-family: \"Segoe UI\"';\n        element.appendChild(tooltip);\n    }\n    else {\n        tooltip.innerText = text;\n        tooltip.style.top = (y + 15).toString() + 'px';\n        tooltip.style.left = (x + 15).toString() + 'px';\n    }\n}\n","/**\n * Specifies gauge Themes\n */\nexport var Theme;\n(function (Theme) {\n    /** @private */\n    Theme.axisLabelFont = {\n        size: '12px',\n        fontWeight: null,\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: null\n    };\n    Theme.legendLabelFont = {\n        size: '12px',\n        fontWeight: null,\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: null\n    };\n})(Theme || (Theme = {}));\n/**\n * @param {string} theme theme\n * @returns {string[]} palette\n * @private */\nexport function getRangePalette(theme) {\n    var palette = ['#50c917', '#27d5ff', '#fcde0b', '#ffb133', '#ff5985'];\n    switch (theme.toLowerCase()) {\n        case 'tailwind':\n            palette = ['#0369A1', '#14B8A6', '#15803D', '#334155', '#5A61F6',\n                '#65A30D', '#8B5CF6', '#9333EA', '#F59E0B', '#F97316'];\n            break;\n        case 'tailwinddark':\n            palette = ['#10B981', '#22D3EE', '#2DD4BF', '#4ADE80', '#8B5CF6',\n                '#E879F9', '#F472B6', '#F87171', '#F97316', '#FCD34D'];\n            break;\n        case 'bootstrap5':\n            palette = ['#262E0B', '#668E1F', '#AF6E10', '#862C0B', '#1F2D50',\n                '#64680B', '#311508', '#4C4C81', '#0C7DA0', '#862C0B'];\n            break;\n        case 'bootstrap5dark':\n            palette = ['#5ECB9B', '#A860F1', '#EBA844', '#557EF7', '#E9599B',\n                '#BFC529', '#3BC6CF', '#7A68EC', '#74B706', '#EA6266'];\n            break;\n        case 'fluent':\n            palette = ['#614570', '#4C6FB1', '#CC6952', '#3F579A', '#4EA09B',\n                '#6E7A89', '#D4515C', '#E6AF5D', '#639751', '#9D4D69'];\n            break;\n        case 'fluentdark':\n            palette = ['#8AB113', '#2A72D5', '#43B786', '#584EC6', '#E85F9C',\n                '#6E7A89', '#EA6266', '#EBA844', '#26BC7A', '#BC4870'];\n            break;\n        case 'material3':\n            palette = ['#6200EE', '#E77A16', '#82C100', '#7107DC', '#05BB3D',\n                '#D21020', '#FAD200', '#0085FF', '#9204EA', '#08EE9B'];\n            break;\n        case 'material3dark':\n            palette = ['#4EAAFF', '#FA4EAB', '#FFF500', '#17EA58', '#38FFE7',\n                '#FF9E45', '#B3F32F', '#B93CE4', '#FC5664', '#9B55FF'];\n            break;\n    }\n    return palette;\n}\n/**\n * Function to get ThemeStyle\n *\n * @param {GaugeTheme} theme theme\n * @returns {IThemeStyle} style\n * @private */\nexport function getThemeStyle(theme) {\n    var style;\n    switch (theme.toLowerCase()) {\n        case 'materialdark':\n        case 'fabricdark':\n        case 'bootstrapdark':\n            style = {\n                backgroundColor: '#333232',\n                titleFontColor: '#ffffff',\n                tooltipFillColor: '#FFFFFF',\n                tooltipFontColor: '#000000',\n                tooltipFontSize: '13px',\n                tooltipTextOpacity: 1,\n                labelColor: '#DADADA',\n                lineColor: '#C8C8C8',\n                majorTickColor: '#C8C8C8',\n                minorTickColor: '#9A9A9A',\n                pointerColor: '#9A9A9A',\n                capColor: '#9A9A9A',\n                needleColor: '#9A9A9A',\n                needleTailColor: '#9A9A9A',\n                fontSize: '15px',\n                labelFontFamily: 'Segoe UI',\n                fontFamily: 'Segoe UI',\n                fontWeight: 'Normal',\n                titleFontWeight: 'Normal'\n            };\n            break;\n        case 'highcontrast':\n            style = {\n                backgroundColor: '#000000',\n                titleFontColor: '#FFFFFF',\n                tooltipFillColor: '#ffffff',\n                tooltipFontColor: '#000000',\n                tooltipFontSize: '13px',\n                tooltipTextOpacity: 1,\n                labelColor: '#FFFFFF',\n                lineColor: '#FFFFFF',\n                majorTickColor: '#FFFFFF',\n                minorTickColor: '#FFFFFF',\n                pointerColor: '#FFFFFF',\n                capColor: '#FFFFFF',\n                needleColor: '#FFFFFF',\n                needleTailColor: '#FFFFFF',\n                fontSize: '15px',\n                labelFontFamily: 'Segoe UI',\n                fontFamily: 'Segoe UI',\n                fontWeight: 'Normal',\n                titleFontWeight: 'Normal'\n            };\n            break;\n        case 'bootstrap4':\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#212529',\n                tooltipFillColor: '#000000',\n                tooltipFontColor: '#FFFFFF',\n                tooltipFontSize: '13px',\n                labelColor: '#212529',\n                lineColor: '#DEE2E6',\n                majorTickColor: '#ADB5BD',\n                minorTickColor: '#CED4DA',\n                pointerColor: '#6C757D',\n                capColor: '#6C757D',\n                needleColor: '#6C757D',\n                needleTailColor: '#6C757D',\n                fontFamily: 'HelveticaNeue-Medium',\n                fontSize: '16px',\n                labelFontFamily: 'HelveticaNeue',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9,\n                fontWeight: 'Normal',\n                titleFontWeight: 'Normal',\n            };\n            break;\n        case 'tailwind':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#374151',\n                tooltipFillColor: '#111827',\n                tooltipFontColor: '#F9FAFB',\n                tooltipFontSize: '13px',\n                labelColor: '#6B7280',\n                lineColor: '#E5E7EB',\n                majorTickColor: '#9CA3AF',\n                minorTickColor: '#9CA3AF',\n                pointerColor: '#1F2937',\n                capColor: '#1F2937',\n                needleColor: '#1F2937',\n                needleTailColor: '#1F2937',\n                fontFamily: 'Inter',\n                fontSize: '14px',\n                labelFontFamily: 'Inter',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9,\n                fontWeight: 'Normal',\n                titleFontWeight: '500'\n            };\n            break;\n        case 'tailwinddark':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#D1D5DB',\n                tooltipFillColor: '#F9FAFB',\n                tooltipFontColor: '#1F2937',\n                tooltipFontSize: '13px',\n                labelColor: '#9CA3AF',\n                lineColor: '#374151',\n                majorTickColor: '#6B7280',\n                minorTickColor: '#6B7280',\n                pointerColor: '#9CA3AF',\n                capColor: '#9CA3AF',\n                needleColor: '#9CA3AF',\n                needleTailColor: '#9CA3AF',\n                fontFamily: 'Inter',\n                fontSize: '14px',\n                labelFontFamily: 'Inter',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9,\n                fontWeight: 'Normal',\n                titleFontWeight: '500'\n            };\n            break;\n        case 'bootstrap5':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#343A40',\n                tooltipFillColor: '#212529',\n                tooltipFontColor: '#F9FAFB',\n                tooltipFontSize: '13px',\n                labelColor: '#495057',\n                lineColor: '#E5E7EB',\n                majorTickColor: '#9CA3AF',\n                minorTickColor: '#9CA3AF',\n                pointerColor: '#1F2937',\n                capColor: '#1F2937',\n                needleColor: '#1F2937',\n                needleTailColor: '#1F2937',\n                fontFamily: 'Helvetica Neue',\n                fontSize: '14px',\n                labelFontFamily: 'Helvetica Neue',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                fontWeight: 'Normal',\n                titleFontWeight: '500'\n            };\n            break;\n        case 'bootstrap5dark':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#E9ECEF',\n                tooltipFillColor: '#E9ECEF',\n                tooltipFontColor: '#212529',\n                tooltipFontSize: '13px',\n                labelColor: '#CED4DA',\n                lineColor: '#343A40',\n                majorTickColor: '#6C757D',\n                minorTickColor: '#6C757D',\n                pointerColor: '#ADB5BD',\n                capColor: '#ADB5BD',\n                needleColor: '#ADB5BD',\n                needleTailColor: '#ADB5BD',\n                fontFamily: 'Helvetica Neue',\n                fontSize: '14px',\n                labelFontFamily: 'Helvetica Neue',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                fontWeight: 'Normal',\n                titleFontWeight: '500'\n            };\n            break;\n        case 'fluent':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#201F1E',\n                tooltipFillColor: '#FFFFFF',\n                tooltipFontColor: '#323130',\n                tooltipFontSize: '13px',\n                labelColor: '#3B3A39',\n                lineColor: '#EDEBE9',\n                majorTickColor: '#C8C6C4',\n                minorTickColor: '#C8C6C4',\n                pointerColor: '#A19F9D',\n                capColor: '#A19F9D',\n                needleColor: '#A19F9D',\n                needleTailColor: '#A19F9D',\n                fontFamily: 'Segoe UI',\n                fontSize: '14px',\n                labelFontFamily: 'Segoe UI',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                fontWeight: 'Normal',\n                titleFontWeight: '600'\n            };\n            break;\n        case 'fluentdark':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#F3F2F1',\n                tooltipFillColor: '#252423',\n                tooltipFontColor: '#F3F2F1',\n                tooltipFontSize: '13px',\n                labelColor: '#C8C6C4',\n                lineColor: '#292827',\n                majorTickColor: '#484644',\n                minorTickColor: '#484644',\n                pointerColor: '#797775',\n                capColor: '#797775',\n                needleColor: '#797775',\n                needleTailColor: '#797775',\n                fontFamily: 'Segoe UI',\n                fontSize: '14px',\n                labelFontFamily: 'Segoe UI',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                fontWeight: 'Normal',\n                titleFontWeight: '600'\n            };\n            break;\n        case 'material3':\n            style = {\n                backgroundColor: 'transparent',\n                titleFontColor: '#1C1B1F',\n                tooltipFillColor: '#313033',\n                tooltipFontColor: '#F4EFF4',\n                tooltipFontSize: '14px',\n                labelColor: ' #1E192B',\n                lineColor: '#E7E0EC',\n                majorTickColor: '#C4C7C5',\n                minorTickColor: '#C4C7C5',\n                pointerColor: '#49454E',\n                capColor: '#49454E',\n                needleColor: '#49454E',\n                needleTailColor: '#49454E',\n                fontFamily: 'Roboto',\n                fontSize: '16px',\n                labelFontFamily: 'Roboto',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                fontWeight: '400',\n                titleFontWeight: '500'\n            };\n            break;\n        case 'material3dark':\n            style = {\n                backgroundColor: 'transparent',\n                titleFontColor: '#E6E1E5',\n                tooltipFillColor: '#E6E1E5',\n                tooltipFontColor: '#313033',\n                tooltipFontSize: '14px',\n                labelColor: '#E6E1E5',\n                lineColor: '#49454F',\n                majorTickColor: '#444746',\n                minorTickColor: '#444746',\n                pointerColor: '#CAC4D0',\n                capColor: '#CAC4D0',\n                needleColor: '#CAC4D0',\n                needleTailColor: '#CAC4D0',\n                fontFamily: 'Roboto',\n                fontSize: '16px',\n                labelFontFamily: 'Roboto',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                fontWeight: '400',\n                titleFontWeight: '500'\n            };\n            break;\n        default:\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#424242',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                tooltipFontSize: '13px',\n                tooltipTextOpacity: 1,\n                labelColor: '#212121',\n                lineColor: '#E0E0E0',\n                majorTickColor: '#9E9E9E',\n                minorTickColor: '#9E9E9E',\n                pointerColor: '#757575',\n                capColor: '#757575',\n                needleColor: '#757575',\n                needleTailColor: '#757575',\n                fontSize: '15px',\n                labelFontFamily: 'Segoe UI',\n                fontFamily: 'Segoe UI',\n                fontWeight: 'Normal',\n                titleFontWeight: 'Normal'\n            };\n            break;\n    }\n    return style;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Sets and gets the options to customize the styles of the borders in circular gauge.\n */\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], Border.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], Border.prototype, \"dashArray\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Sets and gets the font style for the circular gauge.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('16px')\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property('')\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property('segoe UI')\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * Sets and gets the options to customize the tooltip properties for range tooltip.\n */\nvar RangeTooltip = /** @class */ (function (_super) {\n    __extends(RangeTooltip, _super);\n    function RangeTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], RangeTooltip.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ size: null, fontFamily: null, opacity: null, fontWeight: null }, Font)\n    ], RangeTooltip.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], RangeTooltip.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], RangeTooltip.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], RangeTooltip.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], RangeTooltip.prototype, \"border\", void 0);\n    __decorate([\n        Property(false)\n    ], RangeTooltip.prototype, \"showAtMousePosition\", void 0);\n    return RangeTooltip;\n}(ChildProperty));\nexport { RangeTooltip };\n/**\n * Sets and gets the options to customize the tooltip for annotation in circular gauge.\n */\nvar AnnotationTooltip = /** @class */ (function (_super) {\n    __extends(AnnotationTooltip, _super);\n    function AnnotationTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], AnnotationTooltip.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ size: '13px', fontFamily: null, opacity: null }, Font)\n    ], AnnotationTooltip.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], AnnotationTooltip.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], AnnotationTooltip.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], AnnotationTooltip.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], AnnotationTooltip.prototype, \"border\", void 0);\n    return AnnotationTooltip;\n}(ChildProperty));\nexport { AnnotationTooltip };\n/**\n * Sets and gets the margin of circular gauge.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Sets and gets the options to customize the tooltip of the circular gauge.\n */\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ size: null, fontFamily: null, opacity: null, fontWeight: null }, Font)\n    ], TooltipSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Complex({}, RangeTooltip)\n    ], TooltipSettings.prototype, \"rangeSettings\", void 0);\n    __decorate([\n        Complex({}, AnnotationTooltip)\n    ], TooltipSettings.prototype, \"annotationSettings\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], TooltipSettings.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"showAtMousePosition\", void 0);\n    __decorate([\n        Property('Pointer')\n    ], TooltipSettings.prototype, \"type\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\nimport { Font, Border } from '../model/base';\nimport { Theme } from '../model/theme';\n/**\n * Sets and gets the options to customize the axis line in circular gauge.\n */\nvar Line = /** @class */ (function (_super) {\n    __extends(Line, _super);\n    function Line() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(2)\n    ], Line.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], Line.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(null)\n    ], Line.prototype, \"color\", void 0);\n    return Line;\n}(ChildProperty));\nexport { Line };\n/**\n * Sets and gets the options to customize the axis label in circular gauge.\n */\nvar Label = /** @class */ (function (_super) {\n    __extends(Label, _super);\n    function Label() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex(Theme.axisLabelFont, Font)\n    ], Label.prototype, \"font\", void 0);\n    __decorate([\n        Property('')\n    ], Label.prototype, \"format\", void 0);\n    __decorate([\n        Property('Inside')\n    ], Label.prototype, \"position\", void 0);\n    __decorate([\n        Property('None')\n    ], Label.prototype, \"hiddenLabel\", void 0);\n    __decorate([\n        Property(false)\n    ], Label.prototype, \"autoAngle\", void 0);\n    __decorate([\n        Property(false)\n    ], Label.prototype, \"useRangeColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Label.prototype, \"offset\", void 0);\n    __decorate([\n        Property(true)\n    ], Label.prototype, \"shouldMaintainPadding\", void 0);\n    return Label;\n}(ChildProperty));\nexport { Label };\n/**\n * Sets and gets the option to customize the ranges of an axis in circular gauge.\n */\nvar Range = /** @class */ (function (_super) {\n    __extends(Range, _super);\n    function Range() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.isLinearCircularGradient = false;\n        return _this;\n    }\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"start\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"end\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"radius\", void 0);\n    __decorate([\n        Property(10)\n    ], Range.prototype, \"startWidth\", void 0);\n    __decorate([\n        Property(10)\n    ], Range.prototype, \"endWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"roundedCornerRadius\", void 0);\n    __decorate([\n        Property(1)\n    ], Range.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('')\n    ], Range.prototype, \"legendText\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Range.prototype, \"position\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"offset\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"linearGradient\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"radialGradient\", void 0);\n    return Range;\n}(ChildProperty));\nexport { Range };\n/**\n * Sets and gets the options to customize the major and minor tick lines of an axis in circular gauge.\n */\nvar Tick = /** @class */ (function (_super) {\n    __extends(Tick, _super);\n    function Tick() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(2)\n    ], Tick.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"interval\", void 0);\n    __decorate([\n        Property(0)\n    ], Tick.prototype, \"offset\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"color\", void 0);\n    __decorate([\n        Property('Inside')\n    ], Tick.prototype, \"position\", void 0);\n    __decorate([\n        Property(false)\n    ], Tick.prototype, \"useRangeColor\", void 0);\n    __decorate([\n        Property('0')\n    ], Tick.prototype, \"dashArray\", void 0);\n    return Tick;\n}(ChildProperty));\nexport { Tick };\n/**\n * Sets and gets the needle cap of pointer in circular gauge.\n */\nvar Cap = /** @class */ (function (_super) {\n    __extends(Cap, _super);\n    function Cap() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Cap.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], Cap.prototype, \"linearGradient\", void 0);\n    __decorate([\n        Property(null)\n    ], Cap.prototype, \"radialGradient\", void 0);\n    __decorate([\n        Complex({ color: null, width: 8 }, Border)\n    ], Cap.prototype, \"border\", void 0);\n    __decorate([\n        Property(8)\n    ], Cap.prototype, \"radius\", void 0);\n    return Cap;\n}(ChildProperty));\nexport { Cap };\n/**\n * Sets and gets the options to customize the pointer needle in the circular gauge.\n */\nvar NeedleTail = /** @class */ (function (_super) {\n    __extends(NeedleTail, _super);\n    function NeedleTail() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], NeedleTail.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: null, width: 0 }, Border)\n    ], NeedleTail.prototype, \"border\", void 0);\n    __decorate([\n        Property('0%')\n    ], NeedleTail.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], NeedleTail.prototype, \"linearGradient\", void 0);\n    __decorate([\n        Property(null)\n    ], NeedleTail.prototype, \"radialGradient\", void 0);\n    return NeedleTail;\n}(ChildProperty));\nexport { NeedleTail };\n/**\n * Sets and gets the animation of pointers in circular gauge.\n */\nvar Animation = /** @class */ (function (_super) {\n    __extends(Animation, _super);\n    function Animation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], Animation.prototype, \"enable\", void 0);\n    __decorate([\n        Property(1000)\n    ], Animation.prototype, \"duration\", void 0);\n    return Animation;\n}(ChildProperty));\nexport { Animation };\n/**\n * Sets and gets the annotation elements for an axis in circular gauge.\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    function Annotation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(90)\n    ], Annotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property('50%')\n    ], Annotation.prototype, \"radius\", void 0);\n    __decorate([\n        Property('-1')\n    ], Annotation.prototype, \"zIndex\", void 0);\n    __decorate([\n        Property(false)\n    ], Annotation.prototype, \"autoAngle\", void 0);\n    __decorate([\n        Complex({ size: '12px', color: '#686868' }, Font)\n    ], Annotation.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], Annotation.prototype, \"description\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Sets and gets the options to customize the pointers of an axis in circular gauge.\n */\nvar Pointer = /** @class */ (function (_super) {\n    __extends(Pointer, _super);\n    function Pointer() {\n        /**\n         * Sets and gets the value of the pointer in circular gauge.\n         *\n         * @aspDefaultValueIgnore\n         * @default null\n         */\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.isPointerAnimation = true;\n        return _this;\n    }\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"value\", void 0);\n    __decorate([\n        Property('Needle')\n    ], Pointer.prototype, \"type\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Pointer.prototype, \"position\", void 0);\n    __decorate([\n        Property(0)\n    ], Pointer.prototype, \"roundedCornerRadius\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"radius\", void 0);\n    __decorate([\n        Property(20)\n    ], Pointer.prototype, \"pointerWidth\", void 0);\n    __decorate([\n        Complex({}, Cap)\n    ], Pointer.prototype, \"cap\", void 0);\n    __decorate([\n        Complex({}, Font)\n    ], Pointer.prototype, \"textStyle\", void 0);\n    __decorate([\n        Complex({}, NeedleTail)\n    ], Pointer.prototype, \"needleTail\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: '#DDDDDD', width: 0 }, Border)\n    ], Pointer.prototype, \"border\", void 0);\n    __decorate([\n        Complex(null, Animation)\n    ], Pointer.prototype, \"animation\", void 0);\n    __decorate([\n        Property('Circle')\n    ], Pointer.prototype, \"markerShape\", void 0);\n    __decorate([\n        Property(5)\n    ], Pointer.prototype, \"markerHeight\", void 0);\n    __decorate([\n        Property('')\n    ], Pointer.prototype, \"text\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"description\", void 0);\n    __decorate([\n        Property(5)\n    ], Pointer.prototype, \"markerWidth\", void 0);\n    __decorate([\n        Property(0)\n    ], Pointer.prototype, \"offset\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"needleStartWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"needleEndWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"linearGradient\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"radialGradient\", void 0);\n    return Pointer;\n}(ChildProperty));\nexport { Pointer };\n/**\n * Sets and gets the options to customize the axis for the circular gauge.\n */\nvar Axis = /** @class */ (function (_super) {\n    __extends(Axis, _super);\n    function Axis() {\n        /**\n         * Sets and gets the minimum value of an axis in the circular gauge.\n         *\n         * @aspDefaultValueIgnore\n         * @default null\n         */\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.visibleLabels = [];\n        return _this;\n    }\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"minimum\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"maximum\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"showLastLabel\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"hideIntersectingLabel\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"roundingPlaces\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"radius\", void 0);\n    __decorate([\n        Complex({}, Line)\n    ], Axis.prototype, \"lineStyle\", void 0);\n    __decorate([\n        Collection([{}], Range)\n    ], Axis.prototype, \"ranges\", void 0);\n    __decorate([\n        Collection([{}], Pointer)\n    ], Axis.prototype, \"pointers\", void 0);\n    __decorate([\n        Collection([{}], Annotation)\n    ], Axis.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({ width: 2, height: 10 }, Tick)\n    ], Axis.prototype, \"majorTicks\", void 0);\n    __decorate([\n        Complex({ width: 2, height: 5 }, Tick)\n    ], Axis.prototype, \"minorTicks\", void 0);\n    __decorate([\n        Property(200)\n    ], Axis.prototype, \"startAngle\", void 0);\n    __decorate([\n        Property(160)\n    ], Axis.prototype, \"endAngle\", void 0);\n    __decorate([\n        Property('ClockWise')\n    ], Axis.prototype, \"direction\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"background\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"rangeGap\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"startAndEndRangeGap\", void 0);\n    __decorate([\n        Complex({}, Label)\n    ], Axis.prototype, \"labelStyle\", void 0);\n    return Axis;\n}(ChildProperty));\nexport { Axis };\n","/**\n * Specifies the gauge constant value\n */\n/**\n * Sets and gets loaded event name in the circular gauge.\n *\n * @private\n */\nexport var loaded = 'loaded';\n/**\n * Sets and gets load event name in the circular gauge.\n *\n * @private\n */\nexport var load = 'load';\n/**\n * Sets and gets animation complete event name in the circular gauge.\n *\n * @private\n */\nexport var animationComplete = 'animationComplete';\n/**\n * Sets and gets axis label render event name in the circular gauge.\n *\n * @private\n */\nexport var axisLabelRender = 'axisLabelRender';\n/**\n * Sets and gets radius calculate event name in the circular gauge.\n *\n * @private\n */\nexport var radiusCalculate = 'radiusCalculate';\n/**\n * Sets and gets tooltip render event name in the circular gauge.\n *\n * @private\n */\nexport var tooltipRender = 'tooltipRender';\n/**\n * Sets and gets annotation render event name in the circular gauge.\n *\n * @private\n */\nexport var annotationRender = 'annotationRender';\n/**\n * Sets and gets gauge mouse move event name in the circular gauge.\n *\n * @private\n */\nexport var gaugeMouseMove = 'gaugeMouseMove';\n/**\n * Sets and gets gauge mouse leave event name in the circular gauge.\n *\n * @private\n */\nexport var gaugeMouseLeave = 'gaugeMouseLeave';\n/**\n * Sets and gets gauge mouse down event name in the circular gauge.\n *\n * @private\n */\nexport var gaugeMouseDown = 'gaugeMouseDown';\n/**\n * Sets and gets gauge mouse up event name in circular gauge.\n *\n * @private\n */\nexport var gaugeMouseUp = 'gaugeMouseUp';\n/**\n * Sets and gets drag start event name in the circular gauge.\n *\n * @private\n */\nexport var dragStart = 'dragStart';\n/**\n * Sets and gets drag move event name in the circular gauge.\n *\n * @private\n */\nexport var dragMove = 'dragMove';\n/**\n * Sets and gets drag end event name in the circular gauge.\n *\n * @private\n */\nexport var dragEnd = 'dragEnd';\n/**\n * Sets and gets resize event name in the circular gauge.\n *\n * @private\n */\nexport var resized = 'resized';\n/**\n * Sets and gets before print event name in the circular gauge.\n *\n * @private\n */\nexport var beforePrint = 'beforePrint';\n/**\n * Sets and gets pointer start event name in the circular gauge.\n *\n * @private\n */\nexport var pointerStart = 'pointerStart';\n/**\n * Sets and gets pointer move event name in the circular gauge.\n *\n * @private\n */\nexport var pointerMove = 'pointerMove';\n/**\n * Sets and gets pointer end event name in the circular gauge.\n *\n * @private\n */\nexport var pointerEnd = 'pointerEnd';\n/**\n * Sets and gets range start event name in the circular gauge.\n *\n * @private\n */\nexport var rangeStart = 'rangeStart';\n/**\n * Sets and gets range move event name in the circular gauge.\n *\n * @private\n */\nexport var rangeMove = 'rangeMove';\n/**\n * Sets and gets range end event name in the circular gauge.\n *\n * @private\n */\nexport var rangeEnd = 'rangeEnd';\n","import { getTemplateFunction, getElement, stringToNumber, getFontStyle, getLocationFromAngle, removeElement } from '../utils/helper-common';\nimport { annotationRender } from '../model/constants';\nimport { createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Annotation Module handles the Annotation of the axis.\n *\n * @hidden\n */\nvar Annotations = /** @class */ (function () {\n    /**\n     * Constructor for Annotation module.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @private.\n     */\n    // eslint-disable-next-line\n    function Annotations(gauge) {\n    }\n    /**\n     * Method to render the annotation for circular gauge.\n     *\n     * @private\n     */\n    Annotations.prototype.renderAnnotation = function (axis, index, gauge) {\n        var _this = this;\n        var width = gauge.availableSize.width;\n        var element = createElement('div', {\n            id: gauge.element.id + '_Annotations_' + index\n        });\n        var parentElement = getElement(gauge.element.id + '_Secondary_Element');\n        if (!isNullOrUndefined(document.getElementById(gauge.element.id + '_Secondary_Element'))) {\n            document.getElementById(gauge.element.id + '_Secondary_Element').style.width = width + 'px';\n        }\n        axis.annotations.map(function (annotation, annotationIndex) {\n            if (annotation.content !== null) {\n                _this.createTemplate(element, annotationIndex, index, gauge);\n            }\n        });\n        if (parentElement && element.childElementCount) {\n            parentElement.appendChild(element);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        gauge.renderReactTemplates();\n    };\n    /**\n     * Method to create annotation template for circular gauge.\n     *\n     * @private\n     */\n    Annotations.prototype.createTemplate = function (element, annotationIndex, axisIndex, gauge) {\n        var _this = this;\n        var axis = gauge.axes[axisIndex];\n        var annotation = axis.annotations[annotationIndex];\n        var childElement = createElement('div', {\n            id: gauge.element.id + '_Axis_' + axisIndex + '_Annotation_' + annotationIndex\n        });\n        childElement.style.cssText = 'position: absolute; z-index:' + annotation.zIndex + ';transform:' +\n            (annotation.autoAngle ? 'rotate(' + (annotation.angle - 90) + 'deg)' : 'rotate(0deg)') + ';';\n        var argsData = {\n            cancel: false, name: annotationRender, content: annotation.content,\n            axis: axis, annotation: annotation, textStyle: annotation.textStyle\n        };\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        gauge.trigger('annotationRender', argsData, function (observedArgs) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var templateFn;\n            var templateElement;\n            if (!argsData.cancel) {\n                templateFn = getTemplateFunction(argsData.content, gauge);\n                if (templateFn && templateFn(axis, gauge, argsData.content, gauge.element.id + '_Axis' + axisIndex + '_ContentTemplate' + annotationIndex).length) {\n                    templateElement = Array.prototype.slice.call(templateFn(axis, gauge, argsData.content, gauge.element.id + '_Axis' + axisIndex + '_ContentTemplate' + annotationIndex));\n                    var length_1 = templateElement.length;\n                    for (var i = 0; i < length_1; i++) {\n                        childElement.appendChild(templateElement[i]);\n                    }\n                }\n                else {\n                    var annotationElement = createElement('div', {\n                        innerHTML: !isNullOrUndefined(argsData.content) ? argsData.content.toString() : null,\n                        id: 'StringTemplate'\n                    });\n                    annotationElement.style.cssText = getFontStyle(argsData.textStyle);\n                    childElement.appendChild(annotationElement);\n                }\n                _this.updateLocation(childElement, axis, annotation, gauge);\n                element.appendChild(childElement);\n            }\n        });\n    };\n    /**\n     * Method to update the annotation location for circular gauge.\n     *\n     * @param {HTMLElement} element - Specifies the element.\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Annotation} annotation - Specifies the annotation.\n     * @returns {void}\n     */\n    Annotations.prototype.updateLocation = function (element, axis, annotation, gauge) {\n        var location = getLocationFromAngle(annotation.angle - 90, stringToNumber(annotation.radius, axis.currentRadius), gauge.midPoint);\n        var elementRect = this.measureElementRect(element);\n        element.style.left = (location.x - (elementRect.width / 2)) + 'px';\n        element.style.top = (location.y - (elementRect.height / 2)) + 'px';\n        element.setAttribute('aria-label', annotation.description || 'Annotation');\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name\n     */\n    Annotations.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Annotations';\n    };\n    /**\n     * To destroy the annotation.\n     *\n     * @returns {void}\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    Annotations.prototype.destroy = function () { };\n    /**\n     * Function to measure the element rect.\n     *\n     * @param {HTMLElement} element - Specifies the html element.\n     * @returns {ClientRect} - Returns the client rect.\n     * @private\n     */\n    Annotations.prototype.measureElementRect = function (element) {\n        document.body.appendChild(element);\n        var bounds = element.getBoundingClientRect();\n        removeElement(element.id);\n        return bounds;\n    };\n    return Annotations;\n}());\nexport { Annotations };\n","import { Tooltip } from '@syncfusion/ej2-svg-base';\nimport { stringToNumber, getAngleFromValue, getLocationFromAngle, getPointer, getLabelFormat, Rect } from '../utils/helper-common';\nimport { getMousePosition, getElementSize } from '../utils/helper-tooltip';\nimport { Browser, createElement, remove, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport { tooltipRender } from '../model/constants';\n/**\n * Sets and gets the module that handles the tooltip of the circular gauge\n *\n * @hidden\n */\nvar GaugeTooltip = /** @class */ (function () {\n    /**\n     * Constructor for Tooltip module.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @private.\n     */\n    function GaugeTooltip(gauge) {\n        this.gauge = gauge;\n        this.tooltipId = this.gauge.element.id + '_CircularGauge_Tooltip';\n        this.tooltip = gauge.tooltip;\n        this.borderStyle = this.tooltip.border;\n        this.addEventListener();\n    }\n    /**\n     * Method to render the tooltip for circular gauge.\n     *\n     * @param {PointerEvent} e - specifies the event argument.\n     * @returns {void}\n     *\n     * @private\n     */\n    GaugeTooltip.prototype.renderTooltip = function (e) {\n        var _this = this;\n        this.gaugeId = this.gauge.element.getAttribute('id');\n        var pageX;\n        var pageY;\n        var target;\n        var touchArg;\n        var location;\n        var samePointerEle = false;\n        var isTooltipRender = false;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            target = touchArg.target;\n            pageX = touchArg.changedTouches[0].pageX;\n            pageY = touchArg.changedTouches[0].pageY;\n        }\n        else {\n            target = e.target;\n            pageX = e.pageX;\n            pageY = e.pageY;\n        }\n        if ((this.tooltip.type.indexOf('Pointer') > -1) && (target.id.indexOf('_Pointer_') >= 0) &&\n            (target.id.indexOf(this.gaugeId) >= 0)) {\n            if (this.pointerEle !== null) {\n                samePointerEle = (this.pointerEle === target);\n            }\n            isTooltipRender = true;\n            var svgRect_1 = this.gauge.svgObject.getBoundingClientRect();\n            var elementRect = this.gauge.element.getBoundingClientRect();\n            var axisRect_1 = document.getElementById(this.gauge.element.id + '_AxesCollection').getBoundingClientRect();\n            var rect_1 = new Rect(Math.abs(elementRect.left - svgRect_1.left), Math.abs(elementRect.top - svgRect_1.top), svgRect_1.width, svgRect_1.height);\n            var currentPointer = getPointer(target.id, this.gauge);\n            this.currentAxis = this.gauge.axes[currentPointer.axisIndex];\n            this.currentPointer = (this.currentAxis.pointers)[currentPointer.pointerIndex];\n            var angle_1 = getAngleFromValue(this.currentPointer.currentValue, this.currentAxis.visibleRange.max, this.currentAxis.visibleRange.min, this.currentAxis.startAngle, this.currentAxis.endAngle, this.currentAxis.direction === 'ClockWise') % 360;\n            var tooltipFormat = this.gauge.tooltip.format || this.currentAxis.labelStyle.format;\n            var customLabelFormat = tooltipFormat && tooltipFormat.match('{value}') !== null;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var format = this.gauge.intl.getNumberFormat({\n                format: getLabelFormat(tooltipFormat), useGrouping: this.gauge.useGroupingSeparator\n            });\n            this.tooltipElement();\n            if (this.tooltipEle.childElementCount !== 0 && !this.gauge.enablePointerDrag && !this.gauge.tooltip.showAtMousePosition) {\n                return null;\n            }\n            var roundValue = this.roundedValue(this.currentPointer.currentValue);\n            var pointerContent = customLabelFormat ?\n                tooltipFormat.replace(new RegExp('{value}', 'g'), format(roundValue)) :\n                format(roundValue);\n            location = getLocationFromAngle(angle_1, this.currentAxis.currentRadius, this.gauge.midPoint);\n            location.x = (this.tooltip.template && ((angle_1 >= 150 && angle_1 <= 250) || (angle_1 >= 330 && angle_1 <= 360) ||\n                (angle_1 >= 0 && angle_1 <= 45))) ? (location.x + 10) : location.x;\n            // eslint-disable-next-line prefer-const\n            var tooltipArgs = {\n                name: tooltipRender, cancel: false, content: pointerContent, location: location, axis: this.currentAxis,\n                tooltip: this.tooltip, pointer: this.currentPointer, event: e, gauge: this.gauge, appendInBodyTag: false, type: 'Pointer'\n            };\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var pointerTooltip = function (tooltipArgs) {\n                var template = tooltipArgs.tooltip.template;\n                if (template !== null && template.length === 1 && typeof template !== 'function') {\n                    template = template[template[0]];\n                }\n                if (!tooltipArgs.tooltip.showAtMousePosition) {\n                    if (template) {\n                        var elementSize = getElementSize(template, _this.gauge, _this.tooltipEle);\n                        _this.tooltipRect = Math.abs(axisRect_1.left - svgRect_1.left) > elementSize.width ?\n                            _this.findPosition(rect_1, angle_1, tooltipArgs.location, true) : rect_1;\n                    }\n                    else {\n                        _this.findPosition(rect_1, angle_1, tooltipArgs.location, false);\n                    }\n                }\n                else {\n                    tooltipArgs.location = getMousePosition(pageX, pageY, _this.gauge.svgObject);\n                    _this.tooltipRect = rect_1;\n                }\n                if (!tooltipArgs.cancel && !samePointerEle) {\n                    var pointerTextStyle = {\n                        color: tooltipArgs.tooltip.textStyle.color || _this.gauge.themeStyle.tooltipFontColor,\n                        opacity: tooltipArgs.tooltip.textStyle.opacity || _this.gauge.themeStyle.tooltipTextOpacity,\n                        fontFamily: tooltipArgs.tooltip.textStyle.fontFamily || _this.gauge.themeStyle.fontFamily,\n                        fontWeight: tooltipArgs.tooltip.textStyle.fontWeight || _this.gauge.themeStyle.fontWeight,\n                        fontStyle: tooltipArgs.tooltip.textStyle.fontStyle,\n                        size: tooltipArgs.tooltip.textStyle.size || _this.gauge.themeStyle.tooltipFontSize\n                    };\n                    _this.svgTooltip = _this.svgTooltipCreate(_this.svgTooltip, tooltipArgs, template, _this.arrowInverted, _this.tooltipRect, _this.gauge, tooltipArgs.tooltip.fill, pointerTextStyle, tooltipArgs.tooltip.border);\n                    _this.svgTooltip.opacity = _this.gauge.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;\n                    _this.svgTooltip.appendTo(_this.tooltipEle);\n                    if (template && (_this.tooltipPosition === 'LeftTop' || _this.tooltipPosition === 'LeftBottom')) {\n                        _this.tooltipEle.style.left = (parseFloat(_this.tooltipEle.style.left) - _this.tooltipEle.getBoundingClientRect().width - 20) + 'px';\n                    }\n                    if (template && Math.abs(pageY - _this.tooltipEle.getBoundingClientRect().top) <= 0) {\n                        _this.tooltipEle.style.top = (parseFloat(_this.tooltipEle.style.top) + 20) + 'px';\n                    }\n                }\n            };\n            this.gauge.trigger(tooltipRender, tooltipArgs, pointerTooltip);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.gauge.renderReactTemplates();\n        }\n        else if ((this.tooltip.type.indexOf('Range') > -1) && (target.id.indexOf('_Range_') >= 0) && (!this.gauge.isDrag) &&\n            (target.id.indexOf(this.gaugeId) >= 0)) {\n            isTooltipRender = true;\n            var rangeSvgRect_1 = this.gauge.svgObject.getBoundingClientRect();\n            var rangeElementRect = this.gauge.element.getBoundingClientRect();\n            var rangeAxisRect_1 = document.getElementById(this.gauge.element.id + '_AxesCollection').getBoundingClientRect();\n            var rect_2 = new Rect(Math.abs(rangeElementRect.left - rangeSvgRect_1.left), Math.abs(rangeElementRect.top - rangeSvgRect_1.top), rangeSvgRect_1.width, rangeSvgRect_1.height);\n            var currentRange = getPointer(target.id, this.gauge);\n            this.currentAxis = this.gauge.axes[currentRange.axisIndex];\n            this.currentRange = (this.currentAxis.ranges)[currentRange.pointerIndex];\n            var rangeAngle_1 = getAngleFromValue((this.currentRange.end - Math.abs((this.currentRange.end - this.currentRange.start) / 2)), this.currentAxis.visibleRange.max, this.currentAxis.visibleRange.min, this.currentAxis.startAngle, this.currentAxis.endAngle, this.currentAxis.direction === 'ClockWise') % 360;\n            var rangeTooltipFormat = this.gauge.tooltip.rangeSettings.format || this.currentAxis.labelStyle.format;\n            var customLabelFormat = rangeTooltipFormat && (rangeTooltipFormat.match('{end}') !== null ||\n                rangeTooltipFormat.match('{start}') !== null);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var rangeFormat = this.gauge.intl.getNumberFormat({\n                format: getLabelFormat(rangeTooltipFormat), useGrouping: this.gauge.useGroupingSeparator\n            });\n            this.tooltipElement();\n            var roundStartValue = this.roundedValue(this.currentRange.start);\n            var roundEndValue = this.roundedValue(this.currentRange.end);\n            var startData_1 = (this.currentRange.start).toString();\n            var endData_1 = (this.currentRange.end).toString();\n            var rangeContent = customLabelFormat ?\n                rangeTooltipFormat.replace(/{start}/g, startData_1).replace(/{end}/g, endData_1) : this.gauge.enableRtl ? 'Start:' + rangeFormat(roundStartValue) + ' <br>End:' + rangeFormat(roundEndValue) + ' ' :\n                'Start : ' + rangeFormat(roundStartValue) + '<br>' + 'End : ' + rangeFormat(roundEndValue);\n            location = getLocationFromAngle(rangeAngle_1, this.currentRange.currentRadius, this.gauge.midPoint);\n            location.x = (this.tooltip.rangeSettings.template && ((rangeAngle_1 >= 150 && rangeAngle_1 <= 250) ||\n                (rangeAngle_1 >= 330 && rangeAngle_1 <= 360) ||\n                (rangeAngle_1 >= 0 && rangeAngle_1 <= 45))) ? (location.x + 10) : location.x;\n            // eslint-disable-next-line prefer-const\n            var rangeTooltipArgs = {\n                name: tooltipRender, cancel: false, content: rangeContent, location: location, axis: this.currentAxis,\n                tooltip: this.tooltip, range: this.currentRange, event: e, gauge: this.gauge, appendInBodyTag: false, type: 'Range'\n            };\n            var rangeTooltipTextStyle_1 = { color: this.gauge.tooltip.rangeSettings.textStyle.color, opacity: this.gauge.tooltip.rangeSettings.textStyle.opacity,\n                fontFamily: this.gauge.tooltip.rangeSettings.textStyle.fontFamily, fontStyle: this.gauge.tooltip.rangeSettings.textStyle.fontStyle,\n                fontWeight: this.gauge.tooltip.rangeSettings.textStyle.fontWeight, size: this.gauge.tooltip.rangeSettings.textStyle.size\n            };\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var rangeTooltip = function (rangeTooltipArgs) {\n                var rangeTemplate = rangeTooltipArgs.tooltip.rangeSettings.template;\n                if (rangeTemplate !== null && rangeTemplate.length === 1 && typeof rangeTemplate !== 'function') {\n                    rangeTemplate = rangeTemplate[rangeTemplate[0]];\n                }\n                if (typeof rangeTemplate !== 'function' && rangeTemplate) {\n                    rangeTemplate = rangeTemplate.replace(/[$]{start}/g, startData_1);\n                    rangeTemplate = rangeTemplate.replace(/[$]{end}/g, endData_1);\n                }\n                if (!_this.tooltip.rangeSettings.showAtMousePosition) {\n                    if (rangeTemplate) {\n                        var elementSize = getElementSize(rangeTemplate, _this.gauge, _this.tooltipEle);\n                        _this.tooltipRect = Math.abs(rangeAxisRect_1.left - rangeSvgRect_1.left) > elementSize.width ?\n                            _this.findPosition(rect_2, rangeAngle_1, rangeTooltipArgs.location, true) : rect_2;\n                    }\n                    else {\n                        _this.findPosition(rect_2, rangeAngle_1, rangeTooltipArgs.location, false);\n                    }\n                }\n                else {\n                    rangeTooltipArgs.location = getMousePosition(pageX, pageY, _this.gauge.svgObject);\n                    _this.tooltipRect = rect_2;\n                }\n                if (!rangeTooltipArgs.cancel) {\n                    rangeTooltipTextStyle_1.color = rangeTooltipArgs.tooltip.rangeSettings.textStyle.color ||\n                        _this.gauge.themeStyle.tooltipFontColor;\n                    rangeTooltipTextStyle_1.fontFamily = rangeTooltipArgs.tooltip.rangeSettings.textStyle.fontFamily\n                        || _this.gauge.themeStyle.fontFamily;\n                    rangeTooltipTextStyle_1.fontWeight = rangeTooltipArgs.tooltip.rangeSettings.textStyle.fontWeight\n                        || _this.gauge.themeStyle.fontWeight;\n                    rangeTooltipTextStyle_1.opacity = rangeTooltipArgs.tooltip.rangeSettings.textStyle.opacity ||\n                        _this.gauge.themeStyle.tooltipTextOpacity;\n                    rangeTooltipTextStyle_1.size = rangeTooltipArgs.tooltip.rangeSettings.textStyle.size\n                        || _this.gauge.themeStyle.tooltipFontSize;\n                    _this.svgTooltip = _this.svgTooltipCreate(_this.svgTooltip, rangeTooltipArgs, rangeTemplate, _this.arrowInverted, _this.tooltipRect, _this.gauge, rangeTooltipArgs.tooltip.rangeSettings.fill, rangeTooltipTextStyle_1, rangeTooltipArgs.tooltip.rangeSettings.border);\n                    _this.svgTooltip.opacity = _this.gauge.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;\n                    _this.svgTooltip.appendTo(_this.tooltipEle);\n                    if (rangeTemplate && (_this.tooltipPosition === 'LeftTop' || _this.tooltipPosition === 'LeftBottom')) {\n                        _this.tooltipEle.style.left = (parseFloat(_this.tooltipEle.style.left) - _this.tooltipEle.getBoundingClientRect().width - 20) + 'px';\n                    }\n                    if (rangeTemplate && Math.abs(pageY - _this.tooltipEle.getBoundingClientRect().top) <= 0) {\n                        _this.tooltipEle.style.top = (parseFloat(_this.tooltipEle.style.top) + 20) + 'px';\n                    }\n                }\n            };\n            this.gauge.trigger(tooltipRender, rangeTooltipArgs, rangeTooltip);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.gauge.renderReactTemplates();\n        }\n        else if ((this.tooltip.type.indexOf('Annotation') > -1) && this.checkParentAnnotationId(target) && ((!this.gauge.isDrag)) &&\n            (this.annotationTargetElement.id.indexOf(this.gaugeId) >= 0)) {\n            isTooltipRender = true;\n            var annotationSvgRect = this.gauge.svgObject.getBoundingClientRect();\n            var annotationElementRect = this.gauge.element.getBoundingClientRect();\n            var rect_3 = new Rect(Math.abs(annotationElementRect.left - annotationSvgRect.left), Math.abs(annotationElementRect.top - annotationSvgRect.top), annotationSvgRect.width, annotationSvgRect.height);\n            var currentAnnotation = getPointer(this.annotationTargetElement.id, this.gauge);\n            this.currentAxis = this.gauge.axes[currentAnnotation.axisIndex];\n            this.currentAnnotation = (this.currentAxis.annotations)[currentAnnotation.pointerIndex];\n            var annotationAngle = (this.currentAnnotation.angle - 90);\n            this.tooltipElement();\n            document.getElementById(this.gauge.element.id + '_Secondary_Element').appendChild(this.tooltipEle);\n            var annotationContent = (this.gauge.tooltip.annotationSettings.format !== null) ?\n                this.gauge.tooltip.annotationSettings.format : '';\n            location = getLocationFromAngle(annotationAngle, stringToNumber(this.currentAnnotation.radius, this.currentAxis.currentRadius), this.gauge.midPoint);\n            location.x = (this.tooltip.annotationSettings.template && ((annotationAngle >= 150 && annotationAngle <= 250) ||\n                (annotationAngle >= 330 && annotationAngle <= 360) || (annotationAngle >= 0 && annotationAngle <= 45))) ?\n                (location.x + 10) : location.x;\n            // eslint-disable-next-line prefer-const\n            var annotationTooltipArgs = {\n                name: tooltipRender, cancel: false, content: annotationContent, location: location, axis: this.currentAxis,\n                tooltip: this.tooltip, annotation: this.currentAnnotation, event: e, gauge: this.gauge, appendInBodyTag: false,\n                type: 'Annotation'\n            };\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var annotationTooltip = function (annotationTooltipArgs) {\n                var annotationTemplate = annotationTooltipArgs.tooltip.annotationSettings.template;\n                if (annotationTemplate !== null && annotationTemplate.length === 1 && typeof annotationTemplate !== 'function') {\n                    annotationTemplate = annotationTemplate[annotationTemplate[0]];\n                }\n                var elementSizeAn = _this.annotationTargetElement.getBoundingClientRect();\n                _this.tooltipPosition = 'RightTop';\n                _this.arrowInverted = true;\n                annotationTooltipArgs.location.x = annotationTooltipArgs.location.x + (elementSizeAn.width / 2);\n                _this.tooltipRect = new Rect(rect_3.x, rect_3.y, rect_3.width, rect_3.height);\n                if (!annotationTooltipArgs.cancel && (_this.gauge.tooltip.annotationSettings.format !== null ||\n                    _this.gauge.tooltip.annotationSettings.template !== null)) {\n                    var annotationTextStyle = {\n                        color: annotationTooltipArgs.tooltip.textStyle.color || _this.gauge.themeStyle.tooltipFontColor,\n                        fontFamily: annotationTooltipArgs.tooltip.textStyle.fontFamily || _this.gauge.themeStyle.fontFamily,\n                        fontWeight: annotationTooltipArgs.tooltip.textStyle.fontWeight || _this.gauge.themeStyle.fontWeight,\n                        opacity: annotationTooltipArgs.tooltip.textStyle.opacity || _this.gauge.themeStyle.tooltipTextOpacity,\n                        fontStyle: annotationTooltipArgs.tooltip.textStyle.fontStyle,\n                        size: annotationTooltipArgs.tooltip.textStyle.size || _this.gauge.themeStyle.fontSize\n                    };\n                    _this.svgTooltip = _this.svgTooltipCreate(_this.svgTooltip, annotationTooltipArgs, annotationTemplate, _this.arrowInverted, _this.tooltipRect, _this.gauge, annotationTooltipArgs.tooltip.annotationSettings.fill, annotationTextStyle, annotationTooltipArgs.tooltip.annotationSettings.border);\n                    _this.svgTooltip.opacity = _this.gauge.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;\n                    _this.svgTooltip.appendTo(_this.tooltipEle);\n                    if (annotationTemplate && Math.abs(pageY - _this.tooltipEle.getBoundingClientRect().top) <= 0) {\n                        _this.tooltipEle.style.top = (parseFloat(_this.tooltipEle.style.top) + 20) + 'px';\n                    }\n                }\n            };\n            this.gauge.trigger(tooltipRender, annotationTooltipArgs, annotationTooltip);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.gauge.renderReactTemplates();\n        }\n        else {\n            var isTooltipRemoved = this.removeTooltip();\n            if (isTooltipRemoved) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                if ((this.gauge.isVue || this.gauge.isVue3)) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    this.gauge.clearTemplate([this.tooltipEle.children[0].id], [0]);\n                }\n                else if (!this.gauge.isAngular) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    this.gauge.clearTemplate();\n                }\n            }\n        }\n        var gaugeElement = document.getElementById(this.gaugeId);\n        var gaugeRect = gaugeElement.getBoundingClientRect();\n        var tooltipRect = isTooltipRender ? this.tooltipEle.getBoundingClientRect() : null;\n        if (isTooltipRender && this.tooltipEle.offsetLeft < 0 && (tooltipRect.left - gaugeRect.left) < 0) {\n            var tooltipLeft = this.tooltipEle.style.left.split('px')[0];\n            this.tooltipEle.style.left = parseInt(tooltipLeft, 10) + (gaugeRect.left - tooltipRect.left) + 'px';\n        }\n        if (isTooltipRender && tooltipRect.top < 0) {\n            this.tooltipEle.style.top = 0 + 'px';\n        }\n    };\n    /**\n     * Method to create tooltip svg element.\n     *\n     * @param {Tooltip} svgTooltip - Specifies the tooltip element.\n     * @param {ITooltipRenderEventArgs} tooltipArg - Specifies the tooltip arguments.\n     * @param {string} template - Specifies the tooltip template.\n     * @param {boolean} arrowInverted - Specifies the boolean value.\n     * @param {Rect} tooltipRect - Specifies the rect element.\n     * @param {CircularGauge} gauge - Specifies the gauge instance.\n     * @param {string} fill - Spcifies the fill color of the tooltip.\n     * @param {FontModel} textStyle - Spcifies the text style of the tooltip.\n     * @param {BorderModel} border - Specifies the border of the tooltip.\n     * @returns {Tooltip} - Returns the tooltip.\n     */\n    GaugeTooltip.prototype.svgTooltipCreate = function (svgTooltip, tooltipArg, template, arrowInverted, tooltipRect, gauge, fill, textStyle, border) {\n        svgTooltip = new Tooltip({\n            enable: true,\n            data: { value: tooltipArg.content },\n            template: template,\n            enableRTL: gauge.enableRtl,\n            enableAnimation: tooltipArg.tooltip.enableAnimation,\n            content: [SanitizeHtmlHelper.sanitize(tooltipArg.content)],\n            location: tooltipArg.location,\n            inverted: arrowInverted,\n            areaBounds: tooltipRect,\n            fill: fill || gauge.themeStyle.tooltipFillColor,\n            textStyle: textStyle,\n            availableSize: gauge.availableSize,\n            border: border\n        });\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if ((gauge.isVue || gauge.isVue3)) {\n            svgTooltip.controlInstance = gauge;\n        }\n        return svgTooltip;\n    };\n    /**\n     * Method to create or modify tolltip element.\n     *\n     * @returns {void}\n     */\n    GaugeTooltip.prototype.tooltipElement = function () {\n        if (document.getElementById(this.tooltipId)) {\n            this.tooltipEle = document.getElementById(this.tooltipId);\n        }\n        else {\n            this.tooltipEle = createElement('div', {\n                id: this.tooltipId,\n                className: 'EJ2-CircularGauge-Tooltip'\n            });\n            this.tooltipEle.style.cssText = 'position: absolute;pointer-events:none;';\n            document.getElementById(this.gauge.element.id + '_Secondary_Element').appendChild(this.tooltipEle);\n        }\n    };\n    /**\n     * Method to get parent annotation element.\n     *\n     * @param {Element} child - Specifies the annotation element.\n     * @returns {boolean} - Returns the boolean value.\n     */\n    GaugeTooltip.prototype.checkParentAnnotationId = function (child) {\n        this.annotationTargetElement = child.parentElement;\n        while (this.annotationTargetElement != null) {\n            if ((this.annotationTargetElement.id.indexOf('_Annotation_') >= 0)) {\n                child = this.annotationTargetElement;\n                return true;\n            }\n            this.annotationTargetElement = this.annotationTargetElement.parentElement;\n        }\n        return false;\n    };\n    /**\n     * Method to apply label rounding places.\n     *\n     * @param {number} currentValue - Specifies the current value.\n     * @returns {number} - Returns the round number.\n     */\n    GaugeTooltip.prototype.roundedValue = function (currentValue) {\n        var roundNumber = this.currentAxis.roundingPlaces ?\n            parseFloat(currentValue.toFixed(this.currentAxis.roundingPlaces)) :\n            currentValue;\n        return roundNumber;\n    };\n    /**\n     * Method to find the position of the tooltip anchor for circular gauge.\n     *\n     * @param {Rect} rect - Specifies the rect element.\n     * @param {number} angle - Specifies the angle.\n     * @param {GaugeLocation} location - Specifies the location.\n     * @param {boolean} isTemplate - whether it is template or not .\n     * @returns {Rect} - Returns the rect element.\n     */\n    GaugeTooltip.prototype.findPosition = function (rect, angle, location, isTemplate) {\n        var addLeft;\n        var addTop;\n        var addHeight;\n        var addWidth;\n        var padding = 10;\n        switch (true) {\n            case (angle >= 0 && angle < 45):\n                this.arrowInverted = true;\n                addLeft = (angle >= 15 && angle <= 30) ? location.y : 0;\n                this.tooltipRect = new Rect(rect.x, rect.y + addTop, rect.width, rect.height);\n                this.tooltipPosition = 'RightBottom';\n                break;\n            case (angle >= 45 && angle < 90):\n                this.arrowInverted = false;\n                this.tooltipRect = new Rect(rect.x, rect.y + location.y, rect.width, rect.height);\n                this.tooltipPosition = 'BottomRight';\n                break;\n            case (angle >= 90 && angle < 135):\n                this.arrowInverted = false;\n                this.tooltipRect = new Rect(rect.x, rect.y + location.y, rect.width, rect.height);\n                this.tooltipPosition = 'BottomLeft';\n                break;\n            case (angle >= 135 && angle < 180):\n                this.arrowInverted = isTemplate ? true : isTemplate;\n                addTop = (angle >= 150 && angle <= 160 && isTemplate) ? location.y : 0;\n                this.tooltipRect = new Rect(rect.x, rect.y + addTop, rect.width, rect.height);\n                this.tooltipPosition = 'LeftBottom';\n                break;\n            case (angle >= 180 && angle < 225):\n                this.arrowInverted = true;\n                addHeight = (angle >= 200 && angle <= 225) ? Math.abs(rect.y - location.y) : rect.height;\n                this.tooltipRect = new Rect(rect.x - location.x, rect.y, rect.width, addHeight);\n                this.tooltipPosition = 'LeftTop';\n                break;\n            case (angle >= 225 && angle < 270):\n                this.arrowInverted = false;\n                addWidth = (angle >= 250 && angle <= 290) ? rect.width : Math.abs(rect.x - location.x);\n                this.tooltipRect = new Rect(rect.x + padding, rect.y, addWidth, rect.height);\n                this.tooltipPosition = 'TopLeft';\n                break;\n            case (angle >= 270 && angle < 315):\n                this.arrowInverted = false;\n                addLeft = (angle >= 270 && angle > 290) ? location.x - padding : 0;\n                this.tooltipRect = new Rect(rect.x + addLeft, rect.y, rect.width, rect.height);\n                this.tooltipPosition = 'TopRight';\n                break;\n            case (angle >= 315 && angle <= 360):\n                this.arrowInverted = true;\n                addHeight = (angle >= 315 && angle <= 340) ? Math.abs(rect.y - location.y) : rect.height;\n                this.tooltipRect = new Rect(rect.x, rect.y, rect.width, addHeight);\n                this.tooltipPosition = 'RightTop';\n                break;\n        }\n        return this.tooltipRect;\n    };\n    GaugeTooltip.prototype.removeTooltip = function () {\n        var isTooltipRemoved = false;\n        if (document.getElementsByClassName('EJ2-CircularGauge-Tooltip').length > 0) {\n            var tooltip = document.getElementsByClassName('EJ2-CircularGauge-Tooltip')[0];\n            if (tooltip) {\n                remove(tooltip);\n                isTooltipRemoved = true;\n            }\n            this.pointerEle = null;\n        }\n        return isTooltipRemoved;\n    };\n    GaugeTooltip.prototype.mouseUpHandler = function (e) {\n        this.renderTooltip(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeTooltip.bind(this), 2000);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To bind events for tooltip module\n     *\n     * @private\n     */\n    GaugeTooltip.prototype.addEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        this.gauge.on(Browser.touchMoveEvent, this.renderTooltip, this);\n        this.gauge.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n        this.gauge.element.addEventListener('contextmenu', this.removeTooltip);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To unbind events for tooltip module\n     *\n     * @private\n     */\n    GaugeTooltip.prototype.removeEventListener = function () {\n        if (this.gauge) {\n            if (this.gauge.isDestroyed) {\n                return;\n            }\n            this.gauge.off(Browser.touchMoveEvent, this.renderTooltip);\n            this.gauge.off(Browser.touchEndEvent, this.mouseUpHandler);\n            this.gauge.element.removeEventListener('contextmenu', this.removeTooltip);\n        }\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name\n     */\n    GaugeTooltip.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Tooltip';\n    };\n    /**\n     * To destroy the tooltip.\n     *\n     * @returns {void}\n     * @private\n     */\n    GaugeTooltip.prototype.destroy = function () {\n        this.tooltipEle = null;\n        this.currentAxis = null;\n        this.tooltip = null;\n        this.currentPointer = null;\n        this.currentRange = null;\n        this.currentAnnotation = null;\n        this.borderStyle = null;\n        this.svgTooltip = null;\n        this.tooltipRect = null;\n        this.pointerEle = null;\n        this.annotationTargetElement = null;\n        this.gauge = null;\n    };\n    return GaugeTooltip;\n}());\nexport { GaugeTooltip };\n","import { stringToNumber, toPixel, textElement, appendPath, getAngleFromValue, getLocationFromAngle, getPathArc, getRoundedPathArc, getDegree, isCompleteAngle, PathOption, TextOption } from '../utils/helper-common';\nimport { getRangeColor } from '../utils/helper-axis-renderer';\nimport { getRangePalette } from '../model/theme';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Specifies the Axis rendering for circular gauge\n */\nvar AxisRenderer = /** @class */ (function () {\n    /**\n     * Constructor for axis renderer.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge\n     * @private.\n     */\n    function AxisRenderer(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * Method to render the axis element of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisOuterLine = function (axis, index, element, gauge) {\n        var background = axis.background;\n        this.setRangeColor(axis);\n        if (background !== null) {\n            appendPath(new PathOption(gauge.element.id + '_AxisOuterLine_' + index, background, 0, 'transparent', null, '0', getPathArc(gauge.midPoint, 0, 360, (Math.min(axis.rect.width, axis.rect.height) / 2)), '', 'pointer-events:none;'), element, gauge);\n        }\n    };\n    /**\n     * Method to check the angles.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.checkAngles = function (axis) {\n        axis.startAngle = axis.startAngle >= 360 ? 360 : axis.startAngle <= -360 ? -360 : axis.startAngle;\n        axis.endAngle = axis.endAngle >= 360 ? 360 : axis.endAngle <= -360 ? -360 : axis.endAngle;\n    };\n    /**\n     * Method to render the axis line of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisLine = function (axis, index, element, gauge) {\n        var startAngle = axis.startAngle;\n        var endAngle = axis.endAngle;\n        var color = axis.lineStyle.color || this.gauge.themeStyle.lineColor;\n        if (axis.lineStyle.width > 0 && this.gauge.allowComponentRender) {\n            startAngle = !isCompleteAngle(startAngle, endAngle) ? startAngle : [0, endAngle = 360][0];\n            appendPath(new PathOption(gauge.element.id + '_AxisLine_' + index, 'transparent', axis.lineStyle.width, color, null, axis.lineStyle.dashArray, getPathArc(gauge.midPoint, startAngle - 90, endAngle - 90, axis.currentRadius), '', 'pointer-events:none;'), element, gauge);\n        }\n    };\n    /**\n     * Method to render the axis labels of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisLabels = function (axis, index, element, gauge) {\n        var labelElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Labels_' + index\n        });\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var labelCollection = axis.visibleLabels;\n        var location;\n        var textWidth;\n        var textHeight;\n        var labelsVisible = true;\n        var currentTextWidth;\n        var currentTextHeight;\n        var previousLocation;\n        var currentLocation;\n        var lastLabelLocation;\n        var lastLabelAngle;\n        var lastLabelAnchor;\n        var lastTextWidth;\n        var lastTextHeight;\n        var style = axis.labelStyle;\n        var anchor;\n        var angle;\n        var label;\n        var radius = axis.currentRadius;\n        var checkLabelOpposed = 0;\n        checkLabelOpposed = (style.position === 'Inside' && axis.majorTicks.position === 'Outside' &&\n            axis.minorTicks.position === 'Outside') || (style.position === 'Outside' &&\n            axis.minorTicks.position === 'Inside' && axis.majorTicks.position === 'Inside') ?\n            axis.lineStyle.width + axis.currentRadius / 20 :\n            (style.position === axis.majorTicks.position ? axis.currentRadius / 20 : axis.currentRadius / 40);\n        var labelPadding = axis.labelStyle.shouldMaintainPadding ? 10 : checkLabelOpposed;\n        var color = style.font.color || this.gauge.themeStyle.labelColor;\n        if (style.position === 'Outside') {\n            radius += (axis.nearSize - (axis.maxLabelSize.height + axis.lineStyle.width / 2)) + (labelPadding / 2);\n        }\n        else if (style.position === 'Cross') {\n            radius = radius - (axis.maxLabelSize.height / 4) - axis.labelStyle.offset;\n        }\n        else {\n            radius -= (axis.farSize - (axis.maxLabelSize.height + axis.lineStyle.width / 2) + (style.autoAngle ? labelPadding : 0));\n        }\n        //To get and store lastlabelposition\n        if (axis.hideIntersectingLabel) {\n            lastLabelAngle = Math.round(getAngleFromValue(labelCollection[labelCollection.length - 1].value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));\n            lastLabelLocation = getLocationFromAngle(lastLabelAngle, radius, gauge.midPoint);\n            lastLabelAnchor = this.findAnchor(lastLabelLocation, style, lastLabelAngle, labelCollection[labelCollection.length - 1]);\n            lastTextWidth = (!axis.showLastLabel && (isCompleteAngle(axis.startAngle, axis.endAngle)) && (style.hiddenLabel !== 'First')) ?\n                labelCollection[0].size.width : labelCollection[labelCollection.length - 1].size.width;\n            lastTextHeight = (!axis.showLastLabel && (isCompleteAngle(axis.startAngle, axis.endAngle)) && (style.hiddenLabel !== 'First')) ?\n                (!style.autoAngle ? labelCollection[0].size.height : labelCollection[0].size.width) :\n                (!style.autoAngle ? labelCollection[labelCollection.length - 1].size.height :\n                    labelCollection[labelCollection.length - 1].size.width);\n            lastTextHeight = lastTextHeight - this.offsetAxisLabelsize(lastLabelAngle, lastTextHeight);\n            lastLabelLocation = this.getAxisLabelStartPosition(lastLabelLocation, lastTextWidth, lastLabelAnchor);\n        }\n        for (var i = 0, length_1 = labelCollection.length; i < length_1; i++) {\n            label = labelCollection[i];\n            angle = Math.round(getAngleFromValue(label.value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));\n            location = getLocationFromAngle(angle, radius, gauge.midPoint);\n            anchor = this.findAnchor(location, style, angle, label);\n            //To get the current label and previous label position for initial stage\n            if (axis.hideIntersectingLabel) {\n                currentLocation = getLocationFromAngle(angle, radius, gauge.midPoint);\n                currentTextWidth = label.size.width;\n                currentTextHeight = !style.autoAngle ? label.size.height : currentTextWidth;\n                currentTextHeight = currentTextHeight - this.offsetAxisLabelsize(angle, currentTextHeight);\n                currentLocation = this.getAxisLabelStartPosition(currentLocation, currentTextWidth, anchor);\n                if (i === 0) {\n                    previousLocation = getLocationFromAngle(angle, radius, gauge.midPoint);\n                    textWidth = label.size.width;\n                    textHeight = !style.autoAngle ? label.size.height : textWidth;\n                    textHeight = textHeight - this.offsetAxisLabelsize(angle, textHeight);\n                    previousLocation = this.getAxisLabelStartPosition(previousLocation, textWidth, anchor);\n                }\n            }\n            if ((i === 0 && style.hiddenLabel === 'First') || (i === (length_1 - 1) && style.hiddenLabel === 'Last')) {\n                continue;\n            }\n            style.font.fontFamily = style.font.fontFamily || this.gauge.themeStyle.labelFontFamily;\n            style.font.fontWeight = style.font.fontWeight || this.gauge.themeStyle.fontWeight;\n            if (axis.hideIntersectingLabel && (i !== 0)) {\n                //To remove the labels which is intersecting with last label.\n                var lastlabel = ((i !== (labelCollection.length - 1)) && ((isCompleteAngle(axis.startAngle, axis.endAngle) ||\n                    axis.showLastLabel))) ? this.FindAxisLabelCollision(lastLabelLocation, lastTextWidth, lastTextHeight, currentLocation, currentTextWidth, currentTextHeight) : true;\n                //Checking wether the axis label is intersecting with previous label or not.\n                labelsVisible = (this.FindAxisLabelCollision(previousLocation, textWidth, textHeight, currentLocation, currentTextWidth, currentTextHeight) && lastlabel);\n            }\n            else {\n                labelsVisible = true;\n            }\n            if (labelsVisible || (i === labelCollection.length - 1)) {\n                //To hide first and last label based on requirement\n                label.text = (!axis.showLastLabel && ((isCompleteAngle(axis.startAngle, axis.endAngle) && style.hiddenLabel !== 'First') ||\n                    !labelsVisible)\n                    && axis.hideIntersectingLabel && (i === (length_1 - 1))) ? '' : label.text;\n                label.text = (axis.showLastLabel && axis.hideIntersectingLabel && isCompleteAngle(axis.startAngle, axis.endAngle)\n                    && (i === 0)) ? '' : label.text;\n                textElement(new TextOption(gauge.element.id + '_Axis_' + index + '_Label_' + i, location.x, location.y, anchor, label.text, style.autoAngle ? 'rotate(' + (angle + 90) + ',' + (location.x) + ',' + location.y + ')' : '', 'auto'), style.font, style.useRangeColor ? getRangeColor(label.value, axis.ranges, color) : color, labelElement, 'pointer-events:none;');\n                if (axis.hideIntersectingLabel) {\n                    textWidth = label.size.width;\n                    textHeight = !style.autoAngle ? label.size.height : textWidth;\n                    textHeight = textHeight - this.offsetAxisLabelsize(angle, textHeight);\n                    previousLocation.x = currentLocation.x;\n                    previousLocation.y = currentLocation.y;\n                }\n            }\n        }\n        element.appendChild(labelElement);\n    };\n    /**\n     * Method to find the anchor of the axis label.\n     *\n     * @param {GaugeLocation} location - Specifies the location.\n     * @param {Label} style - Specifies the label style.\n     * @param {number} angle - Specifies the angle.\n     * @param {VisibleLabels} label - Specifies the labels.\n     * @returns {string} - Returns the anchor.\n     * @private\n     */\n    AxisRenderer.prototype.findAnchor = function (location, style, angle, label) {\n        if (style.autoAngle) {\n            return 'middle';\n        }\n        var anchor = style.position === 'Inside' ?\n            ((angle > 120 && angle < 240) ? 'start' : ((300 < angle || angle < 60) ? 'end' : 'middle')) :\n            ((angle > 120 && angle < 240) ? 'end' : ((300 < angle || angle < 60) ? 'start' : 'middle'));\n        location.y += style.position === 'Inside' ?\n            ((angle >= 240 && angle <= 300) ? (label.size.height / 2) :\n                (angle >= 60 && angle <= 120) ? 0 : label.size.height / 4) :\n            ((angle >= 240 && angle <= 300) ? 0 :\n                (angle >= 60 && angle <= 120) ? label.size.height / 2 : label.size.height / 4);\n        return anchor;\n    };\n    /**\n     * Methode to check whether the labels are intersecting or not.\n     *\n     * @param {GaugeLocation} previousLocation - Specifies the previous location.\n     * @param {number} previousWidth - Specifies the previous width.\n     * @param {number} previousHeight - Specifies the previous height.\n     * @param {GaugeLocation} currentLocation - Specifies the current location.\n     * @param {number} currentWidth - Specifies the current width.\n     * @param {number} currentHeight - Specifies the current height.\n     * @returns {boolean} - Returns the boolean value.\n     * @private\n     */\n    AxisRenderer.prototype.FindAxisLabelCollision = function (previousLocation, previousWidth, previousHeight, currentLocation, currentWidth, currentHeight) {\n        var labelVisisble = ((previousLocation.x > (currentLocation.x + (currentWidth))) ||\n            ((previousLocation.x + (previousWidth)) < (currentLocation.x)) ||\n            ((previousLocation.y + (previousHeight)) < (currentLocation.y)) ||\n            ((previousLocation.y) > (currentLocation.y + (currentHeight))));\n        return labelVisisble;\n    };\n    /**\n     * Methode to get anchor position of label as start.\n     *\n     * @param {GaugeLocation} actualLocation - Specifies the actual location.\n     * @param {number} textWidth - Specifies the text width.\n     * @param {string} anchorPosition - Specifies the anchor position.\n     * @returns {GaugeLocation} - Returns the gauge location.\n     * @private\n     */\n    AxisRenderer.prototype.getAxisLabelStartPosition = function (actualLocation, textWidth, anchorPosition) {\n        if (anchorPosition === 'end') {\n            actualLocation.x = actualLocation.x - textWidth;\n        }\n        else if (anchorPosition === 'middle') {\n            actualLocation.x = actualLocation.x - (textWidth / 2);\n        }\n        return actualLocation;\n    };\n    /**\n     * Methode to offset label height and width based on angle.\n     *\n     * @param {number} angle - Specifies the angle.\n     * @param {number} size - Specifies the size.\n     * @returns {number} - Returns the fineal size.\n     * @private\n     */\n    AxisRenderer.prototype.offsetAxisLabelsize = function (angle, size) {\n        var finalSize = ((angle >= 20 && angle <= 60) || (angle >= 120 && angle <= 160) || (angle >= 200 && angle <= 240) ||\n            (angle >= 300 && angle <= 340)) ? size / 5 : 0;\n        return finalSize;\n    };\n    /**\n     * Method to render the axis minor tick lines of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawMinorTickLines = function (axis, index, element, gauge) {\n        var minorTickElements = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_MinorTickLines_' + index\n        });\n        var minorLineStyle = axis.minorTicks;\n        var minorInterval = minorLineStyle.interval !== null ?\n            minorLineStyle.interval : (axis.visibleRange.interval / 2);\n        var isRangeColor = minorLineStyle.useRangeColor;\n        var color = minorLineStyle.color || this.gauge.themeStyle.minorTickColor;\n        if (minorLineStyle.width && minorLineStyle.height && minorInterval) {\n            for (var i = axis.visibleRange.min, max = axis.visibleRange.max; i <= max; i += minorInterval) {\n                if (this.majorValues.indexOf(+i.toFixed(3)) < 0) {\n                    appendPath(new PathOption(gauge.element.id + '_Axis_Minor_TickLine_' + index + '_' + i, 'transparent', minorLineStyle.width, isRangeColor ? getRangeColor(i, axis.ranges, color) : color, null, minorLineStyle.dashArray, this.calculateTicks(i, minorLineStyle, axis), '', 'pointer-events:none;'), minorTickElements, gauge);\n                }\n            }\n            element.appendChild(minorTickElements);\n        }\n    };\n    /**\n     * Method to render the axis major tick lines of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawMajorTickLines = function (axis, index, element, gauge) {\n        var majorTickElements = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_MajorTickLines_' + index\n        });\n        var majorLineStyle = axis.majorTicks;\n        var isRangeColor = majorLineStyle.useRangeColor;\n        this.majorValues = [];\n        var color = majorLineStyle.color || this.gauge.themeStyle.majorTickColor;\n        if (majorLineStyle.width && majorLineStyle.height && axis.visibleRange.interval) {\n            for (var i = axis.visibleRange.min, max = axis.visibleRange.max, interval = axis.visibleRange.interval; i <= max; i += interval) {\n                this.majorValues.push(+i.toFixed(3));\n                appendPath(new PathOption(gauge.element.id + '_Axis_Major_TickLine_' + index + '_' + i, 'transparent', majorLineStyle.width, isRangeColor ? getRangeColor(i, axis.ranges, color) : color, null, majorLineStyle.dashArray, this.calculateTicks(i, majorLineStyle, axis), '', 'pointer-events:none;'), majorTickElements, gauge);\n            }\n            element.appendChild(majorTickElements);\n        }\n    };\n    /**\n     * Method to calcualte the tick elements for the circular gauge.\n     *\n     * @param {number} value - Specifies the value.\n     * @param {Tick} options - Specifies the options.\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {string} - Returns the string.\n     * @private\n     */\n    AxisRenderer.prototype.calculateTicks = function (value, options, axis) {\n        var axisLineWidth = (axis.lineStyle.width / 2) + options.offset;\n        var angle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        var start = getLocationFromAngle(angle, axis.currentRadius +\n            (options.position === 'Outside' ? axisLineWidth : options.position === 'Cross' ?\n                options.height / 2 - options.offset : -axisLineWidth), this.gauge.midPoint);\n        var end = getLocationFromAngle(angle, axis.currentRadius +\n            (options.position === 'Outside' ? axisLineWidth : options.position === 'Cross' ?\n                options.height / 2 - options.offset : -axisLineWidth) +\n            (options.position === 'Outside' ? options.height : -options.height), this.gauge.midPoint);\n        return 'M ' + start.x + ' ' + start.y + ' L ' + end.x + ' ' + end.y + ' ';\n    };\n    /**\n     * Method to render the range path of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Range} range - Specifies the range.\n     * @param {number} startWidth - Specifies the startwidth for the range.\n     * @param {number} endWidth - Specifies the endwidth for the range.\n     * @param {number} rangeIndex - Specifies the index of the range.\n     * @param {number} index - Specifies the index of the axis.\n     * @param {Element} rangeElement - Specifies the element.\n     * @param {number} colorIndex - Specifies the index of the lineargradient colorstop.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawRangePath = function (axis, range, startWidth, endWidth, rangeIndex, index, rangeElement, colorIndex) {\n        var startValue;\n        var direction;\n        var endValue;\n        var location = this.gauge.midPoint;\n        var startAngle;\n        var endAngle;\n        var isClockWise = axis.direction === 'ClockWise';\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var roundedStartAngle;\n        var roundedEndAngle;\n        var oldStart;\n        var oldEnd;\n        var gradientRangeColor;\n        if (range.isLinearCircularGradient) {\n            var rangeSplitValue = ((range.end - range.start) / range.linearGradient.colorStop.length);\n            var rangeStart = range.linearGradient.colorStop.length > 1 ?\n                (range.start + (rangeSplitValue * (colorIndex))) : range.start;\n            var rangeEnd = range.linearGradient.colorStop.length > 1 ? (rangeStart + rangeSplitValue) : range.end;\n            startValue = Math.min(Math.max(rangeStart, min), rangeEnd);\n            endValue = Math.min(Math.max(rangeStart, rangeEnd), max);\n        }\n        else {\n            startValue = Math.min(Math.max(range.start, min), range.end);\n            endValue = Math.min(Math.max(range.start, range.end), max);\n        }\n        startAngle = getAngleFromValue(startValue, max, min, axis.startAngle, axis.endAngle, isClockWise);\n        endAngle = getAngleFromValue(endValue, max, min, axis.startAngle, axis.endAngle, isClockWise);\n        var isAngleCross360 = (startAngle > endAngle);\n        if (axis.rangeGap != null && axis.rangeGap > 0 && range.start !== range.end\n            || (!isNullOrUndefined(range.linearGradient) && !range.isLinearCircularGradient\n                && (colorIndex === range.linearGradient.colorStop.length - 1))) {\n            startAngle = (rangeIndex === 0 && !axis.startAndEndRangeGap) ? startAngle :\n                colorIndex === 0 && range.isLinearCircularGradient ? axis.direction === 'AntiClockWise' ?\n                    startAngle - (axis.rangeGap / Math.PI) :\n                    startAngle + (axis.rangeGap / Math.PI) : !range.isLinearCircularGradient\n                    ? (axis.direction === 'AntiClockWise' ? startAngle - (axis.rangeGap / Math.PI) : startAngle + (axis.rangeGap / Math.PI)) : startAngle;\n            endAngle = (rangeIndex === axis.ranges.length - 1 && !axis.startAndEndRangeGap) ? endAngle :\n                !isNullOrUndefined(range.linearGradient) && colorIndex === range.linearGradient.colorStop.length - 1\n                    && range.isLinearCircularGradient ?\n                    axis.direction === 'AntiClockWise' ? endAngle + (axis.rangeGap / Math.PI) :\n                        endAngle - (axis.rangeGap / Math.PI) : !range.isLinearCircularGradient ?\n                    (axis.direction === 'AntiClockWise' ? endAngle + (axis.rangeGap / Math.PI) : endAngle - (axis.rangeGap / Math.PI)) : endAngle;\n        }\n        if (this.gauge.allowComponentRender) {\n            if ((startValue !== endValue) && (isAngleCross360 ? startAngle < (endAngle + 360) : (startAngle < endAngle)) && ((range.start >= min && range.end <= max) || (range.end >= min && range.start <= max))) {\n                endAngle = isClockWise ? endAngle : [startAngle, startAngle = endAngle][0];\n                endWidth = isClockWise ? endWidth : [startWidth, startWidth = endWidth][0];\n                var radius = typeof range.roundedCornerRadius === 'string' ? parseFloat(range.roundedCornerRadius) : range.roundedCornerRadius;\n                var process = (radius * 0.25);\n                var degreeValue = getDegree(startAngle, endAngle);\n                oldStart = ((((range.currentRadius - (startWidth / 2)) * ((startAngle * Math.PI) / 180) -\n                    (radius / process)) / (range.currentRadius - (startWidth / 2))) * 180) / Math.PI;\n                oldEnd = ((((range.currentRadius - (endWidth / 2)) * ((endAngle * Math.PI) / 180) +\n                    (radius / process)) / (range.currentRadius - (endWidth / 2))) * 180) / Math.PI;\n                roundedStartAngle = ((((range.currentRadius) * ((startAngle * Math.PI) / 180) +\n                    (degreeValue < (range.roundedCornerRadius / 2) && range.isLinearCircularGradient\n                        ? degreeValue <= 1 ? 0 : (radius / 4) : radius)) / (range.currentRadius)) * 180) / Math.PI;\n                roundedEndAngle = ((((range.currentRadius) * ((endAngle * Math.PI) / 180) -\n                    (degreeValue < (range.roundedCornerRadius / 2) && range.isLinearCircularGradient\n                        ? degreeValue <= 1 ? 0 : (radius / 4) : radius)) / (range.currentRadius)) * 180) / Math.PI;\n                if (roundedStartAngle > roundedEndAngle && (roundedStartAngle - roundedEndAngle) <= radius) {\n                    roundedStartAngle = startAngle;\n                    roundedEndAngle = endAngle;\n                }\n                if (this.gauge.gradientModule && ((!isNullOrUndefined(range.linearGradient)\n                    && !isNullOrUndefined(range.linearGradient.colorStop)) || (!isNullOrUndefined(range.radialGradient)\n                    && !isNullOrUndefined(range.radialGradient.colorStop)))) {\n                    if (range.isLinearCircularGradient) {\n                        endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n                        var degree = getDegree(startAngle, endAngle);\n                        var rangeColorLength = range.linearGradient.colorStop.length;\n                        var degreeRange = ((axis.startAngle === axis.endAngle ?\n                            (axis.startAngle === 0 && axis.endAngle === 0 ? 360 : axis.startAngle) :\n                            (axis.endAngle - axis.startAngle)) - degree * (rangeColorLength - 1));\n                        var degreeRangeValue = void 0;\n                        if (degreeRange <= 360 && degreeRange >= 270) {\n                            degreeRangeValue = 270;\n                        }\n                        else if (degreeRange <= 270 && degreeRange >= 180) {\n                            degreeRangeValue = 180;\n                        }\n                        else if (degreeRange <= 180 && degreeRange >= 90) {\n                            degreeRangeValue = 90;\n                        }\n                        else if (degreeRange <= 90 && degreeRange >= 0) {\n                            degreeRangeValue = 0;\n                        }\n                        var gradientDegree = axis.direction === 'AntiClockWise' ?\n                            (axis.startAngle === axis.endAngle ? 0 : axis.startAngle) + degree * ((rangeColorLength - 1) - colorIndex)\n                            : axis.startAngle + degree * (colorIndex);\n                        var gradientAngle = axis.startAngle < axis.endAngle ? axis.direction === 'AntiClockWise'\n                            ? axis.ranges.length > 1 ? rangeIndex === 0 ? (360 - (axis.startAngle\n                                + (degree * (colorIndex)))) : (axis.startAngle + (degree * (colorIndex + 1))) :\n                                axis.startAngle + (degreeRangeValue + degree * ((rangeColorLength - 1) - colorIndex)) : axis.startAngle\n                            + (degree * (colorIndex)) : axis.endAngle === 360 || axis.startAngle === axis.endAngle\n                            ? axis.direction === 'AntiClockWise' ? axis.startAngle === axis.endAngle ?\n                                (axis.startAngle === 0 && axis.endAngle === 0 ? 0 : 360) - axis.startAngle +\n                                    degreeRangeValue + (degree * ((rangeColorLength - 1) - colorIndex))\n                                : degree * ((rangeColorLength - 1) - colorIndex) : degree * (colorIndex) :\n                            gradientDegree < 360 ? gradientDegree : gradientDegree - 360;\n                        range.gradientAngle = rangeIndex === 0 ? axis.rangeGap ? gradientAngle + axis.rangeGap\n                            : gradientAngle : axis.rangeGap > 0 ? axis.ranges[rangeIndex - 1]['gradientAngle'] + axis.rangeGap\n                            : axis.ranges[rangeIndex - 1]['gradientAngle'];\n                        if (axis.direction === 'AntiClockWise' && (axis.ranges.length > 1\n                            ? colorIndex === rangeColorLength - 1 : colorIndex === 0)) {\n                            range.gradientAntiAngle = gradientAngle;\n                        }\n                        if (rangeIndex !== 0) {\n                            gradientAngle = axis.direction === 'AntiClockWise' ? axis.ranges.length > 1 ?\n                                axis.ranges[rangeIndex - 1]['gradientAntiAngle'] - gradientAngle + axis.startAngle :\n                                axis.ranges[rangeIndex - 1]['gradientAntiAngle'] + gradientAngle :\n                                range.gradientAngle + gradientAngle - axis.startAngle;\n                            range.gradientAngle = axis.rangeGap != null && axis.rangeGap > 0 ? colorIndex === rangeColorLength - 1 ?\n                                gradientAngle + axis.ranges[rangeIndex - 1]['gradientAngle'] : gradientAngle : gradientAngle;\n                            if (axis.direction === 'AntiClockWise' && (axis.ranges.length > 1\n                                ? colorIndex === rangeColorLength - 1 : colorIndex === 0)) {\n                                range.gradientAntiAngle = gradientAngle;\n                            }\n                        }\n                        if (gradientAngle > 45 && gradientAngle <= 115\n                            || (gradientAngle >= 0 && gradientAngle <= 45 && (rangeColorLength - 1) <= 2)) {\n                            direction = axis.direction === 'AntiClockWise' ? 'bottom' : 'top';\n                        }\n                        else if (gradientAngle > 115 && gradientAngle < 170) {\n                            direction = axis.direction === 'AntiClockWise' ? 'left' : 'right';\n                        }\n                        else if (gradientAngle >= 170 && gradientAngle <= 280) {\n                            direction = axis.direction === 'AntiClockWise' ? 'top' : 'bottom';\n                        }\n                        else if (gradientAngle > 280 && gradientAngle <= 360\n                            || (gradientAngle >= 0 && gradientAngle <= 45 && (rangeColorLength - 1) >= 2)) {\n                            direction = axis.direction === 'AntiClockWise' ? 'right' : 'left';\n                        }\n                    }\n                    gradientRangeColor = this.gauge.gradientModule.getGradientColorString(range, colorIndex, direction, rangeIndex);\n                }\n                range.rangeColor = gradientRangeColor ? gradientRangeColor : range.rangeColor;\n                if (range.roundedCornerRadius) {\n                    if (range.isLinearCircularGradient && range.linearGradient.colorStop.length > 1) {\n                        if (colorIndex === 0 || colorIndex === range.linearGradient.colorStop.length - 1) {\n                            if (axis.direction === 'ClockWise') {\n                                this.roundedRangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, (colorIndex === range.linearGradient.colorStop.length - 1\n                                    ? Math.floor(startAngle) : Math.floor(roundedStartAngle)), (colorIndex !== 0 ? Math.ceil(roundedEndAngle) : Math.ceil(endAngle)), ((colorIndex === range.linearGradient.colorStop.length - 1) ? startAngle : oldStart), (colorIndex !== 0 ? oldEnd : endAngle), location, colorIndex);\n                            }\n                            else {\n                                this.roundedRangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, (colorIndex === 0 ? Math.floor(startAngle) : Math.floor(roundedStartAngle)), (colorIndex === range.linearGradient.colorStop.length - 1\n                                    ? Math.ceil(endAngle) : Math.ceil(roundedEndAngle)), ((colorIndex === 0) ? startAngle : oldStart), (colorIndex === range.linearGradient.colorStop.length - 1 ? endAngle : oldEnd), location, colorIndex);\n                            }\n                        }\n                        else {\n                            this.rangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, Math.floor(startAngle), Math.ceil(endAngle), colorIndex);\n                        }\n                    }\n                    else {\n                        this.roundedRangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, Math.floor(roundedStartAngle), Math.ceil(roundedEndAngle), oldStart, oldEnd, location, colorIndex);\n                    }\n                }\n                else {\n                    this.rangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, Math.floor(startAngle), Math.ceil(endAngle), colorIndex);\n                }\n            }\n            else if ((range.start === range.end) && ((range.start >= min && range.end <= max) || (range.end >= min && range.start <= max))) {\n                this.rangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, Math.floor(startAngle), Math.ceil(endAngle), colorIndex);\n            }\n        }\n    };\n    /**\n     * Method to render the rounded range path of the circular gauge.\n     *\n     * @param {Range} range - Specifies the range.\n     * @param {number} rangeIndex - Specifies the index of the range.\n     * @param {number} index - Specifies the index of the axis.\n     * @param {number} startWidth - Specifies the startwidth for the range.\n     * @param {number} endWidth - Specifies the endwidth for the range.\n     * @param {Element} rangeElement - Specifies the element.\n     * @param {number} roundedStartAngle - Specifies the rounded path of the start angle.\n     * @param {number} roundedEndAngle - Specifies the rounded path of the end angle.\n     * @param {number} oldStart - Specifies the rounded path of the old start value.\n     * @param {number} oldEnd - Specifies the rounded path of the old end value..\n     * @param {GaugeLocation} location - Specifies the location.\n     * @param {number} colorIndex - Specifies the index of the lineargradient colorstop.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.roundedRangeAppendPathCalculation = function (range, rangeIndex, index, startWidth, endWidth, rangeElement, roundedStartAngle, roundedEndAngle, oldStart, oldEnd, location, colorIndex) {\n        range.pathElement.push(appendPath(new PathOption((!range.isLinearCircularGradient ? this.gauge.element.id + '_Axis_' + index + '_Range_' + rangeIndex\n            : this.gauge.element.id + '_Axis_' + index + '_Range_' + rangeIndex + '_Circular_' + colorIndex), range.rangeColor, 0, range.rangeColor, range.opacity, '0', getRoundedPathArc(location, Math.floor(roundedStartAngle), Math.ceil(roundedEndAngle), oldStart, oldEnd, range.currentRadius, startWidth, endWidth, range, this.gauge.axes[index]), '', ''), rangeElement, this.gauge));\n    };\n    /**\n     * Method to render the rounded range path of the circular gauge.\n     *\n     * @param {Range} range - Specifies the range.\n     * @param {number} rangeIndex - Specifies the index of the range.\n     * @param {number} index - Specifies the index of the axis.\n     * @param {number} startWidth - Specifies the startwidth for the range.\n     * @param {number} endWidth - Specifies the endwidth for the range.\n     * @param {Element} rangeElement - Specifies the element.\n     * @param {number} startAngle - Specifies the rounded path of the start angle.\n     * @param {number} endAngle - Specifies the rounded path of the end angle.\n     * @param {number} colorIndex - Specifies the index of the lineargradient colorstop.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.rangeAppendPathCalculation = function (range, rangeIndex, index, startWidth, endWidth, rangeElement, startAngle, endAngle, colorIndex) {\n        range.pathElement.push(appendPath(new PathOption(!range.isLinearCircularGradient ? this.gauge.element.id + '_Axis_' + index + '_Range_' +\n            rangeIndex : this.gauge.element.id + '_Axis_' + index + '_Range_' +\n            rangeIndex + '_Circular_' + colorIndex, range.rangeColor, 0, range.rangeColor, range.opacity, '0', getPathArc(this.gauge.midPoint, Math.floor(startAngle), Math.ceil(endAngle), range.currentRadius, startWidth, endWidth, range, this.gauge.axes[index]), '', ''), rangeElement, this.gauge));\n    };\n    /**\n     * Method to render the axis range of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisRange = function (axis, index, element) {\n        var _this = this;\n        var ele = (document.getElementById(this.gauge.element.id + '_Axis_Ranges_ ' + index));\n        var rangeElement = (ele) ? document.getElementById(this.gauge.element.id + '_Axis_Ranges_ ' + index) :\n            this.gauge.renderer.createGroup({ id: this.gauge.element.id + '_Axis_Ranges_' + index });\n        var startWidth;\n        var startEndDifference;\n        var endWidth;\n        var previousEndWidth;\n        var previousStartWidth;\n        axis.ranges.map(function (range, rangeIndex) {\n            range.isLinearCircularGradient = !isNullOrUndefined(_this.gauge.gradientModule)\n                && !isNullOrUndefined(range.linearGradient) && isNullOrUndefined(range.linearGradient.startValue)\n                && isNullOrUndefined(range.linearGradient.endValue) && !isNullOrUndefined(range.linearGradient.colorStop);\n            range.pathElement = [];\n            if (!isNullOrUndefined(range.offset) && range.offset.length > 0) {\n                range.currentDistanceFromScale = stringToNumber(range.offset, axis.currentRadius);\n            }\n            else {\n                range.currentDistanceFromScale = range.offset;\n            }\n            _this.calculateRangeRadius(axis, range);\n            if (range.startWidth.length > 0) {\n                startWidth = toPixel(range.startWidth, range.currentRadius);\n            }\n            else {\n                startWidth = range.startWidth;\n            }\n            if (range.endWidth.length > 0) {\n                endWidth = toPixel(range.endWidth, range.currentRadius);\n            }\n            else {\n                endWidth = range.endWidth;\n            }\n            range.currentRadius = _this.calculateRangeRadiusWithPosition(axis, range, startWidth);\n            if (range.isLinearCircularGradient) {\n                for (var i = 0; i < range.linearGradient.colorStop.length; i++) {\n                    if (i <= (range.linearGradient.colorStop.length - 1)) {\n                        previousEndWidth = i === 0 ? endWidth : previousEndWidth;\n                        previousStartWidth = i === 0 ? startWidth : previousStartWidth;\n                        startEndDifference = (Math.abs(previousStartWidth - previousEndWidth) / (range.linearGradient.colorStop.length));\n                        if (i > 0) {\n                            startWidth = endWidth;\n                            endWidth = previousStartWidth > previousEndWidth ? startWidth - startEndDifference\n                                : startWidth + startEndDifference;\n                        }\n                        else {\n                            endWidth = previousStartWidth > previousEndWidth ? startWidth - startEndDifference\n                                : startWidth + startEndDifference;\n                        }\n                    }\n                    else {\n                        startWidth = previousStartWidth > previousEndWidth ? startWidth - startEndDifference\n                            : startWidth + startEndDifference;\n                        endWidth = (previousEndWidth);\n                    }\n                    _this.drawRangePath(axis, range, startWidth, endWidth, rangeIndex, index, rangeElement, i);\n                }\n            }\n            else {\n                if (!(range.start === range.end && axis.direction === 'AntiClockWise' && axis.startAngle === axis.endAngle)) {\n                    _this.drawRangePath(axis, range, startWidth, endWidth, rangeIndex, index, rangeElement, null);\n                }\n            }\n        });\n        element.appendChild(rangeElement);\n    };\n    /**\n     * Method to calculate the radius of the axis range.\n     *\n     * @return {void}\n     */\n    AxisRenderer.prototype.calculateRangeRadius = function (axis, range) {\n        var radius = range.radius !== null ? range.radius : '100%';\n        range.currentRadius = stringToNumber(radius, axis.currentRadius);\n    };\n    AxisRenderer.prototype.calculateRangeRadiusWithPosition = function (axis, range, startWidth) {\n        var actualRadius = !isNullOrUndefined(range.position) && range.position !== 'Auto' && isNullOrUndefined(range.radius) ?\n            (range.position === 'Outside' ? (range.currentRadius + axis.lineStyle.width / 2 + range.currentDistanceFromScale) :\n                range.position === 'Inside' ? (range.currentRadius - axis.lineStyle.width / 2 - range.currentDistanceFromScale) :\n                    (range.currentRadius + startWidth / 2 - range.currentDistanceFromScale)) : range.currentRadius;\n        return actualRadius;\n    };\n    /**\n     * Method to get the range color of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.setRangeColor = function (axis) {\n        var rangeColors = getRangePalette(this.gauge.theme);\n        axis.ranges.map(function (range, index) {\n            range.rangeColor = range.color ? range.color : rangeColors[index % rangeColors.length];\n        });\n    };\n    /**\n     *\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.destroy = function () {\n        this.gauge = null;\n        this.majorValues = [];\n    };\n    return AxisRenderer;\n}());\nexport { AxisRenderer };\n","import { stringToNumber, textElement, appendPath, getAngleFromValue, getLocationFromAngle, getRoundedPathArc, calculateShapes, PathOption, Size, TextOption } from '../utils/helper-common';\nimport { linear, getCompleteArc } from '../utils/helper-pointer-renderer';\nimport { Animation, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { animationComplete } from '../model/constants';\n/**\n * Specifies the Axis rendering for circular gauge\n */\nvar PointerRenderer = /** @class */ (function () {\n    /**\n     * Constructor for pointer renderer.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @private.\n     */\n    function PointerRenderer(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * Method to render the axis pointers of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} axisIndex - Specifies the axis index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @param {boolean} animate - Specifies the boolean value.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.drawPointers = function (axis, axisIndex, element, gauge, animate) {\n        var _this = this;\n        if (animate === void 0) { animate = true; }\n        var pointerElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Pointers_' + axisIndex\n        });\n        var childElement;\n        if (this.gauge.allowComponentRender) {\n            axis.pointers.map(function (pointer, pointerIndex) {\n                if (!isNullOrUndefined(pointer.offset) && pointer.offset.length > 0) {\n                    pointer.currentDistanceFromScale = stringToNumber(pointer.offset, axis.currentRadius);\n                }\n                else {\n                    pointer.currentDistanceFromScale = pointer.offset;\n                }\n                pointer.pathElement = [];\n                _this.calculatePointerRadius(axis, pointer);\n                childElement = gauge.renderer.createGroup({\n                    id: gauge.element.id + '_Axis_' + axisIndex + '_Pointer_' + pointerIndex\n                });\n                _this['draw' + pointer.type + 'Pointer'](axis, axisIndex, pointerIndex, childElement, gauge);\n                _this.setPointerValue(axis, pointer, pointer.currentValue);\n                pointerElement.appendChild(childElement);\n                if ((animate || pointer.animation.enable) && (!_this.gauge.isPropertyChange || pointer.isPointerAnimation)) {\n                    pointer.previousValue = !_this.gauge.isPropertyChange ? axis.minimum : pointer.previousValue;\n                    _this.doPointerAnimation(childElement, pointer, axis);\n                }\n            });\n            element.appendChild(pointerElement);\n        }\n    };\n    /**\n     * Measure the pointer length of the circular gauge.\n     *\n     * @returns {void}\n     */\n    PointerRenderer.prototype.calculatePointerRadius = function (axis, pointer) {\n        var padding = 5;\n        pointer.currentRadius = !isNullOrUndefined(pointer.radius) ?\n            stringToNumber(pointer.radius, axis.currentRadius) : pointer.position !== 'Auto' ?\n            this.pointerRadiusForPosition(axis, pointer) : (axis.currentRadius - (axis.farSize + padding));\n    };\n    /**\n     * Measure the pointer length of the circular gauge based on pointer position.\n     *\n     * @returns {number}\n     */\n    PointerRenderer.prototype.pointerRadiusForPosition = function (axis, pointer) {\n        if (pointer.markerShape === 'Text') {\n            var pointerRadius = void 0;\n            var pointerSize = parseInt(pointer.textStyle.size, 10);\n            var markerOffset = pointer.position === 'Cross' ? pointerSize / 5 : 0;\n            // eslint-disable-next-line prefer-const\n            pointerRadius = pointer.position === 'Inside' ?\n                (axis.currentRadius - pointerSize / 1.2 - axis.lineStyle.width / 2 - markerOffset - pointer.currentDistanceFromScale) :\n                pointer.position === 'Outside' ?\n                    (axis.currentRadius + axis.lineStyle.width / 2 + pointerSize / 4 + markerOffset +\n                        pointer.currentDistanceFromScale) :\n                    (axis.currentRadius - pointerSize / 6 - markerOffset - pointer.currentDistanceFromScale);\n            return pointerRadius;\n        }\n        else {\n            var pointerRadius = void 0;\n            var rangeBarOffset = pointer.type === 'RangeBar' ? pointer.pointerWidth : 0;\n            var markerOffset = pointer.type === 'Marker' ? ((pointer.markerShape === 'InvertedTriangle' ||\n                pointer.markerShape === 'Triangle') ? (pointer.position === 'Cross' ? pointer.markerWidth / 2 : 0) :\n                pointer.markerWidth / 2) : 0;\n            // eslint-disable-next-line prefer-const\n            pointerRadius = pointer.position === 'Inside' ?\n                (axis.currentRadius - axis.lineStyle.width / 2 - markerOffset - pointer.currentDistanceFromScale) :\n                pointer.position === 'Outside' ?\n                    (axis.currentRadius + rangeBarOffset + axis.lineStyle.width / 2 + markerOffset + pointer.currentDistanceFromScale) :\n                    (axis.currentRadius + rangeBarOffset / 2 - pointer.currentDistanceFromScale -\n                        ((pointer.markerShape === 'InvertedTriangle' || pointer.markerShape === 'Triangle') ? markerOffset : 0));\n            return pointerRadius;\n        }\n    };\n    /**\n     * Method to render the needle pointer of the ciruclar gauge.\n     *\n     * @param {Axis} axis - Specifies the axis\n     * @param {number} axisIndex - Specifies the axis index.\n     * @param {number} index - Specifies the index.\n     * @param {Element} parentElement - Specifies the parent element.\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     */\n    PointerRenderer.prototype.drawNeedlePointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var needle = pointer.needleTail;\n        var cap = pointer.cap;\n        var pointerRadius;\n        var location;\n        var direction;\n        var needleStartWidth = pointer.needleStartWidth;\n        var needleEndWidth = pointer.needleEndWidth;\n        var mid = gauge.midPoint;\n        var width = pointer.pointerWidth / 2;\n        var rectDirection;\n        var gradientColor;\n        var gradientTailColor;\n        var gradientCapColor;\n        // To render the needle\n        location = getLocationFromAngle(0, pointer.currentRadius, mid);\n        if ((needleStartWidth === 0) && (needleEndWidth === 0) && width) {\n            direction = 'M ' + mid.x + ' ' + (mid.y) + ' L ' + (location.x) + ' ' + mid.y +\n                ' L ' + (mid.x) + ' ' + (mid.y) + ' Z';\n        }\n        else {\n            direction = 'M ' + mid.x + ' ' + (mid.y - width - needleEndWidth) + ' L ' + (location.x) + ' ' + mid.y +\n                ' L ' + location.x + ' ' + (mid.y + needleStartWidth) + ' L ' + mid.x + ' ' + (mid.y + width + needleEndWidth) + ' Z';\n        }\n        if (gauge.gradientModule) {\n            gradientColor = gauge.gradientModule.getGradientColorString(pointer);\n        }\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Needle_' + index, gradientColor ? gradientColor :\n            pointer.color || this.gauge.themeStyle.needleColor, pointer.border.width, pointer.border.color, null, pointer.border.dashArray, direction), parentElement, gauge));\n        // eslint-disable-next-line prefer-const\n        pointerRadius = stringToNumber(pointer.needleTail.length, pointer.currentRadius);\n        // To render the rect element for touch\n        rectDirection = 'M ' + mid.x + ' ' + (mid.y - width) + ' L ' + (location.x) + ' ' + (mid.y - width) +\n            ' L ' + location.x + ' ' + (mid.y + width) + ' L ' + mid.x + ' ' + (mid.y + width);\n        // To render the needle tail\n        if (gauge.gradientModule) {\n            gradientTailColor = gauge.gradientModule.getGradientColorString(needle);\n        }\n        if (pointerRadius) {\n            location = getLocationFromAngle(180, pointerRadius, gauge.midPoint);\n            direction = 'M ' + mid.x + ' ' + (mid.y - width) +\n                ' L ' + (location.x) + ' ' + (mid.y - width) +\n                ' L ' + (location.x) + ' ' + (mid.y + width) +\n                ' L ' + (mid.x) + ' ' + (mid.y + width) + ' Z';\n            pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleTail_' + index, gradientTailColor ? gradientTailColor : pointer.needleTail.color || this.gauge.themeStyle.needleTailColor, pointer.needleTail.border.width, pointer.needleTail.border.color, null, pointer.needleTail.border.dashArray, direction), parentElement, gauge));\n            rectDirection += ' L ' + location.x + ' ' + (mid.y + width) + ' L ' + location.x + ' ' + (mid.y - width);\n        }\n        // To render the cap\n        if (gauge.gradientModule) {\n            gradientCapColor = gauge.gradientModule.getGradientColorString(cap);\n        }\n        if (pointer.cap.radius) {\n            pointer.pathElement.push(appendPath(calculateShapes(mid, 'Circle', new Size(pointer.cap.radius * 2, pointer.cap.radius * 2), '', new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleCap_' + index, gradientCapColor ? gradientCapColor : pointer.cap.color || this.gauge.themeStyle.capColor, pointer.cap.border.width, pointer.cap.border.color, null, pointer.cap.border.dashArray, '', '')), parentElement, gauge, 'Ellipse'));\n        }\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleRect_' + index, 'transparent', 0, 'transpanret', null, '0', rectDirection + ' Z'), parentElement, gauge));\n    };\n    /**\n     * Method to set the pointer value of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Pointer} pointer - Specifies the pointer.\n     * @param {number} value - Specifies the value.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.setPointerValue = function (axis, pointer, value) {\n        var _this = this;\n        var checkMinValue = value === axis.visibleRange.min && pointer.type === 'RangeBar';\n        var location = this.gauge.midPoint;\n        var isClockWise = axis.direction === 'ClockWise';\n        var radius = pointer.roundedCornerRadius;\n        var minRadius = (radius * 0.25);\n        if (radius > 0 && radius <= 5) {\n            radius = 6;\n            minRadius = (radius * 0.25);\n        }\n        var startAngle = getAngleFromValue(axis.visibleRange.min, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        if (isClockWise) {\n            if (startAngle > endAngle) {\n                endAngle = Math.round(startAngle) === Math.round(endAngle) && !checkMinValue ?\n                    Math.round(endAngle) - (pointer.roundedCornerRadius > 0 ? 1.5 : 0.5) : Math.round(endAngle);\n            }\n            else {\n                endAngle = startAngle === endAngle && !checkMinValue ? endAngle + 1 : endAngle;\n            }\n        }\n        else {\n            endAngle = Math.round(startAngle) === Math.round(endAngle) && !checkMinValue ?\n                [startAngle, startAngle = (endAngle > startAngle ? endAngle + (pointer.roundedCornerRadius > 0 ? 1.5 : 0.5) : endAngle - 1)][0]\n                : [startAngle, startAngle = endAngle][0];\n        }\n        if (value <= (axis.visibleRange.min + axis.visibleRange.interval) && pointer.roundedCornerRadius) {\n            radius = value === axis.visibleRange.min || (axis.visibleRange.min + 1) ? 8 : radius;\n            radius /= 2;\n            minRadius = radius * 0.25;\n        }\n        var oldStartValue = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((startAngle * Math.PI) / 180) -\n            (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        var oldEndValue = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((endAngle * Math.PI) / 180) +\n            (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        var angleValue = value === axis.maximum && (axis.startAngle === axis.endAngle ||\n            Math.abs(axis.startAngle - axis.endAngle) === 360) && pointer.type === 'RangeBar' ? 45 : 180;\n        var roundStartAngle = ((((pointer.currentRadius) * ((startAngle * Math.PI) / angleValue) +\n            radius) / (pointer.currentRadius)) * angleValue) / Math.PI;\n        var roundEndAngle = ((((pointer.currentRadius) * ((endAngle * Math.PI) / angleValue) -\n            radius) / (pointer.currentRadius)) * angleValue) / Math.PI;\n        if (roundStartAngle > roundEndAngle && (roundStartAngle - roundEndAngle) <= 36 && pointer.type === 'RangeBar') {\n            roundStartAngle = startAngle;\n            roundEndAngle = endAngle;\n        }\n        if (isNullOrUndefined(pointer.currentRadius)) {\n            this.calculatePointerRadius(axis, pointer);\n        }\n        pointer.pathElement.map(function (element) {\n            if (pointer.type === 'RangeBar') {\n                if (radius && !checkMinValue) {\n                    element.setAttribute('d', getRoundedPathArc(location, Math.floor(roundStartAngle), Math.ceil(roundEndAngle), oldStartValue, oldEndValue, pointer.currentRadius, pointer.pointerWidth, pointer.pointerWidth));\n                    radius = 0;\n                }\n                else {\n                    element.setAttribute('d', getCompleteArc(location, startAngle, endAngle, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth), checkMinValue));\n                }\n            }\n            else {\n                if (pointer.type === 'Marker' && pointer.markerShape === 'Text') {\n                    _this.calculateTextElement(axis, pointer, value, element);\n                }\n                else {\n                    element.setAttribute('transform', 'rotate(' + getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise) + ',' + location.x + ',' + location.y + ')');\n                }\n            }\n            element.setAttribute('aria-label', pointer.description || 'Pointer:' + value.toString());\n        });\n    };\n    /**\n     * Method to set the text value of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Pointer} pointer - Specifies the pointer.\n     * @param {number} value - Specifies the value.\n     * @param {Element} element - Specifies the text element.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.calculateTextElement = function (axis, pointer, value, element) {\n        var textangle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        var textlocation = getLocationFromAngle(textangle, pointer.currentRadius, this.gauge.midPoint);\n        element.setAttribute('transform', 'rotate(' + (textangle + 90) + ',' + textlocation.x + ',' + textlocation.y + ')');\n        element.setAttribute('x', String(textlocation.x));\n        element.setAttribute('y', String(textlocation.y));\n    };\n    /**\n     * Method to render the marker pointer of the ciruclar gauge.\n     *\n     * @param {Axis} axis - Specifies the axis\n     * @param {number} axisIndex - Specifies the axis index.\n     * @param {number} index - Specifies the index.\n     * @param {Element} parentElement - Specifies the parent element.\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     */\n    PointerRenderer.prototype.drawMarkerPointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var gradientMarkerColor;\n        var angle = Math.round(getAngleFromValue(pointer.value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));\n        var shapeBasedOnPosition = pointer.markerShape;\n        if (gauge.gradientModule) {\n            gradientMarkerColor = gauge.gradientModule.getGradientColorString(pointer);\n        }\n        if (isNullOrUndefined(pointer.radius) && !isNullOrUndefined(pointer.position) && (pointer.markerShape === 'InvertedTriangle' ||\n            pointer.markerShape === 'Triangle')) {\n            shapeBasedOnPosition = ((pointer.position === 'Outside' || pointer.position === 'Cross') && pointer.markerShape === 'Triangle' ?\n                'InvertedTriangle' : (pointer.position === 'Inside' &&\n                pointer.markerShape === 'InvertedTriangle' ? 'Triangle' : pointer.markerShape));\n        }\n        var location = getLocationFromAngle((pointer.markerShape === 'Text') ? angle : 0, pointer.currentRadius, gauge.midPoint);\n        if (pointer.markerShape === 'Text') {\n            var style = {\n                size: pointer.textStyle.size,\n                color: pointer.textStyle.color || this.gauge.themeStyle.pointerColor,\n                fontFamily: pointer.textStyle.fontFamily,\n                fontStyle: pointer.textStyle.fontStyle,\n                fontWeight: pointer.textStyle.fontWeight || this.gauge.themeStyle.fontWeight,\n                opacity: pointer.textStyle.opacity\n            };\n            var textOption = new TextOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Marker_' + index, location.x, location.y, 'middle', pointer.text, 'rotate(' + (angle + 90) + ',' +\n                (location.x) + ',' + location.y + ')', 'auto');\n            var textObject = textElement(textOption, style, style.color, parentElement, 'pointer-events : auto; ');\n            textObject.style.visibility = (pointer.animation.enable && (!this.gauge.isPropertyChange || pointer.isPointerAnimation) && this.gauge.animatePointer) ? 'hidden' : 'visible';\n            pointer.pathElement.push(textObject);\n        }\n        else {\n            pointer.pathElement.push(appendPath(calculateShapes(location, shapeBasedOnPosition, new Size(pointer.markerWidth, pointer.markerHeight), pointer.imageUrl, new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Marker_' + index, gradientMarkerColor ? gradientMarkerColor : pointer.color || this.gauge.themeStyle.pointerColor, pointer.border.width, pointer.border.color, null, pointer.border.dashArray, '', '')), parentElement, gauge, pointer.markerShape === 'Circle' ? 'Ellipse' : (pointer.markerShape === 'Image' ? 'Image' : 'Path')));\n        }\n    };\n    /**\n     * Method to render the range bar pointer of the ciruclar gauge.\n     *\n     * @param {Axis} axis - Specifies the axis\n     * @param {number} axisIndex - Specifies the axis index.\n     * @param {number} index - Specifies the index.\n     * @param {Element} parentElement - Specifies the parent element.\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     */\n    PointerRenderer.prototype.drawRangeBarPointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var gradientBarColor;\n        if (gauge.gradientModule) {\n            gradientBarColor = gauge.gradientModule.getGradientColorString(pointer);\n        }\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_RangeBar_' + index, gradientBarColor ? gradientBarColor :\n            pointer.color || this.gauge.themeStyle.pointerColor, pointer.border.width, pointer.border.color, 1, pointer.border.dashArray, ''), parentElement, gauge));\n    };\n    /**\n     * Method to perform the animation of the pointer in circular gauge.\n     *\n     * @param {Element} pointerElement - specifies the pointer element.\n     * @param {Pointer} pointer - Specifies the pointer.\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {void}\n     */\n    PointerRenderer.prototype.doPointerAnimation = function (pointerElement, pointer, axis) {\n        var _this = this;\n        var startValue = !isNullOrUndefined(pointer.previousValue) ? pointer.previousValue : axis.visibleRange.min;\n        var endValue = pointer.currentValue;\n        if (pointer.animation.enable && startValue !== endValue && this.gauge.animatePointer) {\n            pointer.pathElement.map(function (element) {\n                if (pointer.type === 'RangeBar') {\n                    _this.performRangeBarAnimation(element, startValue, endValue, axis, pointer);\n                }\n                else {\n                    if (pointer.type === 'Marker' && pointer.markerShape === 'Text') {\n                        _this.performTextAnimation(pointerElement, startValue, endValue, axis, pointer);\n                    }\n                    else {\n                        _this.performNeedleAnimation(element, startValue, endValue, axis, pointer);\n                    }\n                }\n            });\n        }\n    };\n    /**\n     * @param {HTMLElement} element - specifies the element.\n     * @param {number} start - specifies the start.\n     * @param {number} end - specifies the end.\n     * @param {Axis} axis - specifies the axis.\n     * @param {Pointer} pointer - specfies the pointer.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.performTextAnimation = function (element, start, end, axis, pointer) {\n        var _this = this;\n        var isClockWise = axis.direction === 'ClockWise';\n        var textangle;\n        var textlocation;\n        var pointerValue = 0;\n        var timeStamp;\n        start = typeof (start) === 'string' ? parseInt(start, 10) : start;\n        end = typeof (end) === 'string' ? parseInt(end, 10) : end;\n        element = !isNullOrUndefined(element.children[0]) ? element.children[0] : element;\n        var val = Math.abs(start - end);\n        new Animation({}).animate(element, {\n            duration: pointer.animation.duration,\n            progress: function (args) {\n                if (args.timeStamp > args.delay) {\n                    timeStamp = (args.timeStamp / pointer.animation.duration);\n                    pointerValue = end > start ? start + (timeStamp * val) : start - (timeStamp * val);\n                    textangle = getAngleFromValue(pointerValue, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n                    textlocation = getLocationFromAngle(textangle, pointer.currentRadius, _this.gauge.midPoint);\n                    element.setAttribute('transform', 'rotate(' + (textangle + 90) + ',' + textlocation.x + ',' + textlocation.y + ')');\n                    element.setAttribute('x', String(textlocation.x));\n                    element.setAttribute('y', String(textlocation.y));\n                    element.style.visibility = 'visible';\n                }\n            },\n            end: function () {\n                _this.setPointerValue(axis, pointer, end);\n                pointer.isPointerAnimation = false;\n                _this.gauge.trigger(animationComplete, { axis: axis, pointer: pointer });\n            }\n        });\n    };\n    /**\n     * Perform the needle and marker pointer animation for circular gauge.\n     *\n     * @param {HTMLElement} element - Specifies the element\n     * @param {number} start - Specifies the start\n     * @param {number} end - Specifies the end\n     * @param {Axis} axis - Specifies the axis\n     * @param {Pointer} pointer - Specifies the pointer.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.performNeedleAnimation = function (element, start, end, axis, pointer) {\n        var _this = this;\n        var isClockWise = axis.direction === 'ClockWise';\n        start = typeof (start) === 'string' ? parseInt(start, 10) : start;\n        end = typeof (end) === 'string' ? parseInt(end, 10) : end;\n        var startAngle = getAngleFromValue(start, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var pointAngle = getAngleFromValue(end, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = startAngle > pointAngle ? (pointAngle + 360) : pointAngle;\n        var sweepAngle;\n        new Animation({}).animate(element, {\n            duration: pointer.animation.duration,\n            progress: function (args) {\n                sweepAngle = (start < end || Math.round(startAngle) === Math.round(endAngle)) ?\n                    isClockWise ? (endAngle - startAngle) : (endAngle - startAngle - 360) :\n                    isClockWise ? (endAngle - startAngle - 360) : (endAngle - startAngle);\n                element.style.animation = 'None';\n                if (start !== end) {\n                    element.setAttribute('transform', 'rotate(' + linear(args.timeStamp, startAngle, sweepAngle, args.duration) + ',' +\n                        _this.gauge.midPoint.x.toString() + ',' + _this.gauge.midPoint.y.toString() + ')');\n                }\n            },\n            end: function () {\n                _this.setPointerValue(axis, pointer, end);\n                pointer.isPointerAnimation = false;\n                if (pointer.type === 'Marker' || (element.id.indexOf('_Pointer_NeedleCap') >= 0)) {\n                    _this.gauge.trigger(animationComplete, { axis: axis, pointer: pointer });\n                }\n            }\n        });\n    };\n    /**\n     * Perform the range bar pointer animation for circular gauge.\n     *\n     * @param {HTMLElement} element - Specifies the element.\n     * @param {number} start - Specifies the start.\n     * @param {number} end - Specifies the end.\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Pointer} pointer - Specifies the pointer.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.performRangeBarAnimation = function (element, start, end, axis, pointer) {\n        var _this = this;\n        start = typeof (start) === 'string' ? parseInt(start, 10) : start;\n        end = typeof (end) === 'string' ? parseInt(end, 10) : end;\n        var pointerValue;\n        var timeStamp;\n        var val = Math.abs(start - end);\n        new Animation({}).animate(element, {\n            duration: pointer.animation.duration,\n            progress: function (arg) {\n                timeStamp = (arg.timeStamp / arg.duration);\n                pointerValue = end > start ? start + (timeStamp * val) : start - (timeStamp * val);\n                _this.setPointerValue(axis, pointer, pointerValue);\n            },\n            end: function () {\n                _this.setPointerValue(axis, pointer, end);\n                pointer.isPointerAnimation = false;\n                _this.gauge.trigger(animationComplete, { axis: axis, pointer: pointer });\n            }\n        });\n    };\n    /**\n     *\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.destroy = function () {\n        this.gauge = null;\n    };\n    return PointerRenderer;\n}());\nexport { PointerRenderer };\n","import { createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { stringToNumber, measureText, getLocationFromAngle, getLabelFormat, VisibleLabels, isCompleteAngle, Size, Rect } from '../utils/helper-common';\nimport { calculateSum } from '../utils/helper-axis-panel';\nimport { axisLabelRender, radiusCalculate } from '../model/constants';\nimport { AxisRenderer } from './axis-renderer';\nimport { PointerRenderer } from './pointer-renderer';\n/**\n * Specifies the CircularGauge Axis Layout\n */\nvar AxisLayoutPanel = /** @class */ (function () {\n    function AxisLayoutPanel(gauge) {\n        this.gauge = gauge;\n        this.axisRenderer = new AxisRenderer(gauge);\n        this.pointerRenderer = new PointerRenderer(gauge);\n    }\n    /**\n     * Measure the calculate the axis size and radius.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.measureAxis = function (rect) {\n        this.measureAxisSize(this.gauge, rect);\n        this.calculateAxesRadius();\n    };\n    /**\n     * Measure to calculate the axis radius of the circular gauge.\n     *\n     * @returns {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateAxesRadius = function () {\n        var _this = this;\n        var totalRadius;\n        var currentRadius;\n        var rangeMaximumRadius = 0;\n        var xMarginDiff = this.gauge.margin.left + this.gauge.margin.right;\n        var yMarginDiff = this.gauge.margin.top + this.gauge.margin.bottom;\n        var _loop_1 = function (axis) {\n            totalRadius = (Math.min(axis.rect.width, axis.rect.height) / 2);\n            currentRadius = axis.radius != null ? stringToNumber(axis.radius, totalRadius) : totalRadius;\n            // eslint-disable-next-line prefer-spread\n            rangeMaximumRadius = Math.max.apply(Math, axis.ranges.map(function (value) {\n                return value.radius ?\n                    (value.radius.indexOf('%') < 0 ? 100 : parseInt(value.radius, 10)) : 0;\n            }));\n            currentRadius = (rangeMaximumRadius > 100 && axis.radius == null) ?\n                (currentRadius * 100) / rangeMaximumRadius : currentRadius;\n            axis.currentRadius = currentRadius - axis.nearSize;\n            if (this_1.gauge.moveToCenter && this_1.gauge.axes.length === 1 &&\n                isNullOrUndefined(this_1.gauge.centerXpoint) && isNullOrUndefined(this_1.gauge.centerYpoint)) {\n                var endAngle = void 0;\n                var startAngle = axis.startAngle;\n                var startPoint = getLocationFromAngle(startAngle - 90, currentRadius, this_1.gauge.midPoint);\n                endAngle = axis.endAngle;\n                endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n                var endPoint = getLocationFromAngle(endAngle - 90, currentRadius, this_1.gauge.midPoint);\n                var xDiff = void 0;\n                var yDiff = void 0;\n                var startXDiff = void 0;\n                var endXDiff = void 0;\n                var startYDiff = void 0;\n                var endYDiff = void 0;\n                var newPoint = void 0;\n                if (startAngle > endAngle ? Math.abs(startAngle - endAngle) > 90 ? true : false : true) {\n                    if ((startAngle >= 270 && startAngle <= 360) && ((endAngle > 270 && endAngle <= 360) ||\n                        (endAngle >= 0 && endAngle <= 180))) {\n                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(startPoint.x - this_1.gauge.gaugeRect.x));\n                        newPoint = (endAngle <= 360 && endAngle >= 270) ? this_1.gauge.midPoint : (endAngle <= 90) ? endPoint :\n                            getLocationFromAngle(90 - 90, currentRadius, this_1.gauge.midPoint);\n                        endXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.width);\n                        startPoint = (endAngle <= 360 && endAngle >= 270) ? endPoint :\n                            getLocationFromAngle(360 - 90, currentRadius, this_1.gauge.midPoint);\n                        startYDiff = Math.abs(startPoint.y - this_1.gauge.gaugeRect.y);\n                        endPoint = (endAngle <= 360 && endAngle >= 270 || (endAngle >= 0 && endAngle < 90)) ?\n                            this_1.gauge.midPoint : (endAngle >= 90 && endAngle <= 180) ? endPoint :\n                            getLocationFromAngle(180 - 90, currentRadius, this_1.gauge.midPoint);\n                        endYDiff = Math.abs(endPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                    }\n                    else if ((startAngle >= 0 && startAngle < 90) && (endAngle >= 0 && endAngle <= 270)) {\n                        startYDiff = Math.abs(startPoint.y - this_1.gauge.gaugeRect.y);\n                        newPoint = (endAngle >= 180) ? getLocationFromAngle(180 - 90, currentRadius, this_1.gauge.midPoint) :\n                            endPoint;\n                        endYDiff = Math.abs(newPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                        startPoint = (endAngle >= 180) ? endPoint : this_1.gauge.midPoint;\n                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(startPoint.x - this_1.gauge.gaugeRect.x));\n                        endPoint = (endAngle >= 90) ? getLocationFromAngle(90 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;\n                        endXDiff = Math.abs(endPoint.x - this_1.gauge.gaugeRect.width);\n                    }\n                    else if ((startAngle >= 90 && startAngle < 180) && (endAngle > 90 && endAngle <= 360)) {\n                        newPoint = (endAngle <= 180) ? this_1.gauge.midPoint : (endAngle >= 270) ?\n                            getLocationFromAngle(270 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;\n                        startXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.x);\n                        endXDiff = Math.abs(startPoint.x - this_1.gauge.gaugeRect.width);\n                        startPoint = (endAngle > 270) ? getLocationFromAngle(endAngle - 90, currentRadius, this_1.gauge.midPoint) :\n                            this_1.gauge.midPoint;\n                        startYDiff = Math.abs(this_1.gauge.gaugeRect.y - startPoint.y);\n                        endPoint = (endAngle >= 180) ? getLocationFromAngle(180 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;\n                        endYDiff = Math.abs(endPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                    }\n                    else if ((startAngle >= 180 && startAngle <= 270) && ((endAngle <= 360 && endAngle >= 270) ||\n                        (endAngle <= 180 && endAngle >= 0))) {\n                        newPoint = (endAngle > 180 && endAngle < 270) ? endPoint :\n                            getLocationFromAngle(270 - 90, currentRadius, this_1.gauge.midPoint);\n                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(newPoint.x - this_1.gauge.gaugeRect.x));\n                        newPoint = (endAngle >= 180 && endAngle <= 360) ? this_1.gauge.midPoint : (endAngle <= 90) ? endPoint :\n                            getLocationFromAngle(0, currentRadius, this_1.gauge.midPoint);\n                        endXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.width);\n                        newPoint = (endAngle > 180 && endAngle < 270) ? this_1.gauge.midPoint : (endAngle >= 270 && endAngle <= 360) ?\n                            endPoint : getLocationFromAngle(360 - 90, currentRadius, this_1.gauge.midPoint);\n                        startYDiff = Math.abs(newPoint.y - this_1.gauge.gaugeRect.y);\n                        endPoint = (endAngle <= 360 && endAngle >= 270 || (endAngle >= 0 && endAngle < 90)) ?\n                            startPoint : ((270 - startAngle) < (endAngle - 90)) ? endPoint : startPoint;\n                        endYDiff = Math.abs(endPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                    }\n                    if ((!isNullOrUndefined(startXDiff) && !isNullOrUndefined(endXDiff) && !isNullOrUndefined(startYDiff) &&\n                        !isNullOrUndefined(endYDiff)) && ((startXDiff > 0 || endXDiff > 0) && (startYDiff > 0 || endYDiff > 0))) {\n                        xDiff = Math.abs((startXDiff + endXDiff) - xMarginDiff);\n                        yDiff = Math.abs((startYDiff + endYDiff) - yMarginDiff);\n                        this_1.gauge.midPoint.x = this_1.gauge.midPoint.x - (startXDiff / 2) + (endXDiff / 2);\n                        this_1.gauge.midPoint.y = this_1.gauge.midPoint.y - (startYDiff / 2) + (endYDiff / 2);\n                        totalRadius = (Math.min(this_1.gauge.gaugeRect.width, this_1.gauge.gaugeRect.height) / 2) +\n                            (Math.min(xDiff, yDiff) / 2);\n                        axis.currentRadius = (axis.radius != null ? stringToNumber(axis.radius, totalRadius) : totalRadius) - axis.nearSize;\n                    }\n                }\n            }\n            axis.visibleRange.interval = this_1.calculateNumericInterval(axis, axis.rect);\n            var args = {\n                cancel: false, name: radiusCalculate, currentRadius: axis.currentRadius, gauge: this_1.gauge,\n                midPoint: this_1.gauge.midPoint, axis: axis\n            };\n            this_1.gauge.trigger('radiusCalculate', args, function () {\n                axis.currentRadius = args.currentRadius;\n                _this.gauge.midPoint = args.midPoint;\n                _this.calculateVisibleLabels(axis);\n            });\n        };\n        var this_1 = this;\n        for (var _i = 0, _a = this.gauge.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            _loop_1(axis);\n        }\n    };\n    /**\n     * Measure to calculate the axis size.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.measureAxisSize = function (gauge, rect) {\n        var _this = this;\n        var sum;\n        this.computeSize(gauge.axes, rect);\n        gauge.axes.map(function (axis, index) {\n            sum = calculateSum(index, _this.farSizes.length - 1, _this.farSizes);\n            axis.rect = new Rect(rect.x + sum, rect.y + sum, rect.width - (sum * 2), rect.height - (sum * 2));\n        });\n    };\n    /**\n     * Calculate the axis values of the circular gauge.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateAxisValues = function (rect) {\n        for (var _i = 0, _a = this.gauge.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            this.calculateVisibleRange(axis, rect);\n            this.calculateVisibleLabels(axis);\n        }\n    };\n    /**\n     * Calculate the visible range of an axis.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Rect} rect - Specifies the rect.\n     * @returns {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateVisibleRange = function (axis, rect) {\n        var interval = axis.majorTicks.interval;\n        var minimumValue = Math.min(axis.minimum === null ? 0 : axis.minimum, axis.maximum !== null ? axis.maximum : 100);\n        var maximumValue = Math.max(axis.minimum, axis.maximum === null ? 100 : axis.maximum);\n        axis.pointers.map(function (pointer) {\n            pointer.currentValue = pointer.value !== null ?\n                pointer.value < minimumValue ? minimumValue : pointer.value > maximumValue ? maximumValue : pointer.value\n                : minimumValue;\n            minimumValue = axis.minimum === null ? Math.min(pointer.currentValue, minimumValue) : minimumValue;\n            maximumValue = axis.maximum === null ? Math.max(pointer.currentValue, maximumValue) : maximumValue;\n        });\n        minimumValue = (minimumValue === maximumValue) ?\n            (interval !== null ? minimumValue - interval : minimumValue - 1) : minimumValue;\n        axis.visibleRange = { min: minimumValue, max: maximumValue, interval: interval };\n        axis.visibleRange.interval = this.calculateNumericInterval(axis, rect);\n    };\n    /**\n     * Calculate the numeric intervals of an axis range.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateNumericInterval = function (axis, rect) {\n        var allowComponentRender = ((!isNullOrUndefined(axis.minimum) && !isNullOrUndefined(axis.maximum)\n            && axis.minimum !== axis.maximum) || (isNullOrUndefined(axis.minimum) || isNullOrUndefined(axis.maximum)));\n        if (!allowComponentRender) {\n            return 0;\n        }\n        else if (axis.majorTicks.interval !== null) {\n            return axis.majorTicks.interval;\n        }\n        var totalAngle = axis.endAngle - axis.startAngle;\n        totalAngle = totalAngle <= 0 ? (totalAngle + 360) : totalAngle;\n        return this.calculateNiceInterval(axis.visibleRange.max, axis.visibleRange.min, axis.currentRadius ? axis.currentRadius : (rect.width / 2), totalAngle);\n    };\n    /**\n     * Calculate the nice interval of an axis range.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateNiceInterval = function (maxValue, minValue, radius, degree) {\n        var delta = maxValue - minValue;\n        var circumference = 2 * Math.PI * radius * (degree / 360);\n        var desiredIntervalsCount = Math.max((circumference * ((0.533 * 3) / 100)), 1);\n        var niceInterval = delta / desiredIntervalsCount;\n        var minInterval = Math.pow(10, Math.floor(Math.log(niceInterval) / Math.log(10)));\n        for (var _i = 0, _a = [10, 5, 2, 1]; _i < _a.length; _i++) {\n            var interval = _a[_i];\n            var currentInterval = minInterval * interval;\n            if (desiredIntervalsCount < (delta / currentInterval)) {\n                break;\n            }\n            niceInterval = currentInterval;\n        }\n        return niceInterval;\n    };\n    /**\n     * Calculate the visible labels of an axis.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateVisibleLabels = function (axis) {\n        var style = axis.labelStyle;\n        var customLabelFormat = style.format && style.format.match('{value}') !== null;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var format = this.gauge.intl.getNumberFormat({\n            format: getLabelFormat(style.format), useGrouping: this.gauge.useGroupingSeparator\n        });\n        var argsData;\n        axis.visibleLabels = [];\n        var roundValue;\n        var interval = axis.visibleRange.interval;\n        var max = axis.visibleRange.max;\n        if ((isNullOrUndefined(axis.minimum) && isNullOrUndefined(axis.maximum)) || axis.minimum !== axis.maximum) {\n            var _loop_2 = function (i) {\n                roundValue = axis.roundingPlaces ? parseFloat(i.toFixed(axis.roundingPlaces)) : i;\n                argsData = {\n                    cancel: false, name: axisLabelRender, axis: axis,\n                    text: customLabelFormat ? style.format.replace(new RegExp('{value}', 'g'), format(roundValue)) :\n                        format(roundValue),\n                    value: roundValue\n                };\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var axisLabelRenderSuccess = function (argsData) {\n                    if (!argsData.cancel) {\n                        axis.visibleLabels.push(new VisibleLabels(argsData.text, i));\n                    }\n                };\n                axisLabelRenderSuccess.bind(this_2);\n                this_2.gauge.trigger(axisLabelRender, argsData, axisLabelRenderSuccess);\n            };\n            var this_2 = this;\n            for (var i = axis.visibleRange.min; (i <= max && interval); i += interval) {\n                _loop_2(i);\n            }\n        }\n        var lastLabel = axis.visibleLabels.length ? axis.visibleLabels[axis.visibleLabels.length - 1].value : null;\n        var maxVal = axis.visibleRange.max;\n        if (!isNullOrUndefined(lastLabel) && lastLabel !== maxVal && axis.showLastLabel === true) {\n            argsData = {\n                cancel: false, name: axisLabelRender, axis: axis,\n                text: customLabelFormat ? style.format.replace(new RegExp('{value}', 'g'), format(maxVal)) :\n                    format(maxVal),\n                value: maxVal\n            };\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var axisLabelRenderSuccess = function (argsData) {\n                if (!argsData.cancel) {\n                    axis.visibleLabels.push(new VisibleLabels(argsData.text, maxVal));\n                }\n            };\n            axisLabelRenderSuccess.bind(this);\n            this.gauge.trigger(axisLabelRender, argsData, axisLabelRenderSuccess);\n        }\n        this.getMaxLabelWidth(this.gauge, axis);\n    };\n    /**\n     * Measure the axes available size.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.computeSize = function (axes, rect) {\n        var lineSize;\n        var outerHeight;\n        var innerHeight;\n        var heightForCross;\n        var axisPadding = 5;\n        var majorTickOffset = 0;\n        var minorTickOffset = 0;\n        var labelOffset = 0;\n        var labelPadding = 10;\n        this.farSizes = [];\n        this.calculateAxisValues(rect);\n        for (var _i = 0, axes_1 = axes; _i < axes_1.length; _i++) {\n            var axis = axes_1[_i];\n            lineSize = (axis.lineStyle.width / 2);\n            outerHeight = 0;\n            innerHeight = 0;\n            heightForCross = axis.majorTicks.position === 'Cross' ? axis.majorTicks.height / 2 : heightForCross;\n            heightForCross = (axis.minorTicks.position === 'Cross' && heightForCross < axis.minorTicks.height / 2) ?\n                axis.minorTicks.height / 2 : heightForCross;\n            heightForCross = (axis.labelStyle.position === 'Cross' && heightForCross < axis.maxLabelSize.height / 2) ?\n                axis.maxLabelSize.height / 2 : heightForCross;\n            lineSize = lineSize < heightForCross ? heightForCross : lineSize;\n            majorTickOffset = axis.majorTicks.offset;\n            minorTickOffset = axis.minorTicks.offset;\n            labelOffset = axis.labelStyle.offset;\n            labelPadding = axis.labelStyle.shouldMaintainPadding ? 10 : 0;\n            // Calculating the outer space of the axis\n            outerHeight += !(axis.majorTicks.position === 'Outside' && axis.minorTicks.position === 'Outside' &&\n                axis.labelStyle.position === 'Outside') ? axisPadding : 0;\n            outerHeight += (axis.majorTicks.position === 'Outside' ? (axis.majorTicks.height + lineSize) : 0) +\n                (axis.labelStyle.position === 'Outside' ? (axis.maxLabelSize.height + labelOffset + labelPadding) : 0) +\n                ((axis.minorTicks.position === 'Outside' && !(axis.majorTicks.position === 'Outside')) ?\n                    (axis.minorTicks.height + lineSize) : 0) + lineSize;\n            outerHeight += (axis.majorTicks.position === 'Outside' && axis.minorTicks.position === 'Outside') ?\n                Math.max(majorTickOffset, minorTickOffset) : (axis.majorTicks.position === 'Outside' ?\n                majorTickOffset : axis.minorTicks.position === 'Outside' ? minorTickOffset : 0);\n            // Calculating the inner space of the axis\n            innerHeight += ((axis.majorTicks.position === 'Inside') ? (axis.majorTicks.height + lineSize) : 0) +\n                ((axis.labelStyle.position === 'Inside') ? (axis.maxLabelSize.height + labelOffset + labelPadding) : 0) +\n                ((axis.minorTicks.position === 'Inside' && axis.majorTicks.position === 'Outside') ?\n                    (axis.minorTicks.height + lineSize) : 0) + lineSize;\n            innerHeight += ((axis.majorTicks.position === 'Inside') && (axis.minorTicks.position === 'Inside')) ?\n                Math.max(majorTickOffset, minorTickOffset) : ((axis.majorTicks.position === 'Inside') ?\n                majorTickOffset : (axis.minorTicks.position === 'Inside') ? minorTickOffset : 0);\n            if (this.farSizes[this.farSizes.length - 1]) {\n                this.farSizes[this.farSizes.length - 1] += (innerHeight + outerHeight);\n            }\n            axis.nearSize = outerHeight - axisPadding;\n            axis.farSize = innerHeight;\n            outerHeight = (this.gauge.axes.length === (this.farSizes.length + 1)) ? 0 : outerHeight;\n            this.farSizes.push(outerHeight);\n        }\n    };\n    /**\n     * To render the Axis element of the circular gauge.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.renderAxes = function (animate) {\n        var _this = this;\n        if (animate === void 0) { animate = true; }\n        var gauge = this.gauge;\n        var renderer = this.axisRenderer;\n        var element;\n        var axesElements = gauge.renderer.createGroup({\n            'id': gauge.element.id + '_AxesCollection',\n            'clip-path': 'url(#' + gauge.element.id + '_GaugeAreaClipRect_' + ')'\n        });\n        // To append the secondary element for annotation and tooltip\n        var annotationElement = createElement('div', {\n            id: gauge.element.id + '_Secondary_Element'\n        });\n        annotationElement.style.position = 'relative';\n        gauge.element.appendChild(annotationElement);\n        gauge.axes.map(function (axis, index) {\n            element = gauge.renderer.createGroup({\n                id: gauge.element.id + '_Axis_Group_' + index\n            });\n            _this.gauge.allowComponentRender = ((!isNullOrUndefined(axis.minimum) && !isNullOrUndefined(axis.maximum)\n                && axis.minimum !== axis.maximum) || (isNullOrUndefined(axis.minimum) || isNullOrUndefined(axis.maximum)));\n            renderer.checkAngles(axis);\n            renderer.drawAxisOuterLine(axis, index, element, gauge);\n            renderer.drawAxisRange(axis, index, element);\n            renderer.drawAxisLine(axis, index, element, gauge);\n            renderer.drawMajorTickLines(axis, index, element, gauge);\n            renderer.drawMinorTickLines(axis, index, element, gauge);\n            renderer.drawAxisLabels(axis, index, element, gauge);\n            _this.pointerRenderer.drawPointers(axis, index, element, gauge, animate);\n            if (gauge.annotationsModule) {\n                gauge.annotationsModule.renderAnnotation(axis, index, gauge);\n            }\n            axesElements.appendChild(element);\n        });\n        // For append clip rect for axes\n        gauge.svgObject.appendChild(gauge.renderer.drawClipPath({\n            'id': gauge.element.id + '_GaugeAreaClipRect_',\n            'x': 0, 'y': 0,\n            'width': gauge.availableSize.width,\n            'height': gauge.availableSize.height,\n            'fill': 'transparent', 'stroke': 'transparent'\n        }));\n        gauge.svgObject.appendChild(axesElements);\n    };\n    /**\n     * Calculate maximum label width for the axis.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {void}\n     */\n    AxisLayoutPanel.prototype.getMaxLabelWidth = function (gauge, axis) {\n        axis.maxLabelSize = new Size(0, 0);\n        for (var _i = 0, _a = axis.visibleLabels; _i < _a.length; _i++) {\n            var label = _a[_i];\n            label.size = measureText(label.text, axis.labelStyle.font);\n            axis.maxLabelSize.width = label.size.width > axis.maxLabelSize.width ?\n                label.size.width : axis.maxLabelSize.width;\n            axis.maxLabelSize.height = label.size.height > axis.maxLabelSize.height ?\n                label.size.height : axis.maxLabelSize.height;\n        }\n    };\n    AxisLayoutPanel.prototype.destroy = function () {\n        this.gauge = null;\n        this.farSizes = [];\n        if (!isNullOrUndefined(this.axisRenderer)) {\n            this.axisRenderer.destroy();\n        }\n        this.axisRenderer = null;\n        if (!isNullOrUndefined(this.pointerRenderer)) {\n            this.pointerRenderer.destroy();\n        }\n        this.pointerRenderer = null;\n    };\n    return AxisLayoutPanel;\n}());\nexport { AxisLayoutPanel };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { removeElement, getElement, stringToNumber, measureText, textElement, appendPath, calculateShapes, PathOption, RectOption, Size, GaugeLocation, Rect, TextOption } from '../utils/helper-common';\nimport { textTrim, showTooltip } from '../utils/helper-legend';\nimport { Property, Complex, ChildProperty, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Font, Border, Margin } from '../model/base';\nimport { Theme } from '../model/theme';\n/**\n * Sets and gets the location of the legend in circular gauge.\n */\nvar Location = /** @class */ (function (_super) {\n    __extends(Location, _super);\n    function Location() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Location.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Location.prototype, \"y\", void 0);\n    return Location;\n}(ChildProperty));\nexport { Location };\n/**\n * Sets and gets the options to customize the legend for the ranges in the circular gauge.\n */\nvar LegendSettings = /** @class */ (function (_super) {\n    __extends(LegendSettings, _super);\n    function LegendSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property(true)\n    ], LegendSettings.prototype, \"toggleVisibility\", void 0);\n    __decorate([\n        Property('Center')\n    ], LegendSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LegendSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LegendSettings.prototype, \"shapeBorder\", void 0);\n    __decorate([\n        Property(8)\n    ], LegendSettings.prototype, \"padding\", void 0);\n    __decorate([\n        Property(1)\n    ], LegendSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('Auto')\n    ], LegendSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property('Circle')\n    ], LegendSettings.prototype, \"shape\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"width\", void 0);\n    __decorate([\n        Complex(Theme.legendLabelFont, Font)\n    ], LegendSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapeHeight\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapeWidth\", void 0);\n    __decorate([\n        Property(5)\n    ], LegendSettings.prototype, \"shapePadding\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Location)\n    ], LegendSettings.prototype, \"location\", void 0);\n    __decorate([\n        Property('transparent')\n    ], LegendSettings.prototype, \"background\", void 0);\n    __decorate([\n        Complex({ left: 0, right: 0, top: 0, bottom: 0 }, Margin)\n    ], LegendSettings.prototype, \"margin\", void 0);\n    return LegendSettings;\n}(ChildProperty));\nexport { LegendSettings };\n/*\n * Sets and gets the module to add the legend in the circular gauge.\n */\nvar Legend = /** @class */ (function () {\n    function Legend(gauge) {\n        this.legendRegions = [];\n        this.rowCount = 0; // legend row counts per page\n        this.pageButtonSize = 8;\n        this.pageXCollections = []; // pages of x locations\n        this.maxColumns = 0;\n        this.maxWidth = 0;\n        this.currentPage = 1;\n        this.pagingRegions = [];\n        /**\n         * @private\n         */\n        this.position = 'Auto';\n        this.gauge = gauge;\n        this.toggledIndexes = [];\n        this.legend = this.gauge.legendSettings;\n        this.legendID = this.gauge.element.id + '_gauge_legend';\n        this.addEventListener();\n    }\n    /**\n     * Binding events for legend module.\n     *\n     * @returns {void}\n     */\n    Legend.prototype.addEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        //   this.gauge.on(Browser.touchMoveEvent, this.mouseMove, this);\n        this.gauge.on('click', this.click, this);\n        // this.gauge.on(Browser.touchEndEvent, this.mouseEnd, this);\n    };\n    /**\n     * UnBinding events for legend module.\n     *\n     * @returns {void}\n     */\n    Legend.prototype.removeEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        //  this.gauge.off(Browser.touchMoveEvent, this.mouseMove);\n        this.gauge.off('click', this.click);\n        //  this.gauge.off(Browser.touchEndEvent, this.mouseEnd);\n    };\n    /**\n     * Get the legend options.\n     *\n     * @param {Axis[]} axes - Specifies the axes.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.getLegendOptions = function (axes) {\n        this.legendCollection = [];\n        var range;\n        var text = '';\n        for (var i = 0; i < axes.length; i++) {\n            for (var j = 0; j < axes[i].ranges.length; j++) {\n                range = axes[i].ranges[j];\n                if (!isNullOrUndefined(range.start) && !isNullOrUndefined(range.end) && (range.start !== range.end)) {\n                    text = range.legendText ? range.legendText : range.start + ' - ' + range.end;\n                    this.legendCollection.push(new LegendOptions(text, text, range.color, this.legend.shape, this.legend.visible, this.legend.border, this.legend.shapeBorder, this.legend.shapeWidth, this.legend.shapeHeight, j, i));\n                }\n            }\n        }\n    };\n    Legend.prototype.calculateLegendBounds = function (rect, availableSize) {\n        var legend = this.legend;\n        this.position = (legend.position !== 'Auto') ? legend.position :\n            (availableSize.width > availableSize.height ? 'Right' : 'Bottom');\n        this.legendBounds = new Rect(rect.x, rect.y, 0, 0);\n        this.isVertical = (this.position === 'Left' || this.position === 'Right');\n        if (this.isVertical) {\n            this.legendBounds.height = stringToNumber(legend.height, availableSize.height - (rect.y - this.gauge.margin.top)) || rect.height;\n            this.legendBounds.width = stringToNumber(legend.width || '20%', availableSize.width);\n        }\n        else {\n            this.legendBounds.width = stringToNumber(legend.width, availableSize.width) || rect.width;\n            this.legendBounds.height = stringToNumber(legend.height || '20%', availableSize.height);\n        }\n        this.getLegendBounds(availableSize, this.legendBounds, legend);\n        this.getLocation(this.position, legend.alignment, this.legendBounds, rect, availableSize);\n    };\n    /**\n     * To find legend alignment for chart and accumulation chart\n     *\n     * @param {number} start - Specifies the start.\n     * @param {number} size - Specifies the size.\n     * @param {number} legendSize - Specifies the  legendSize.\n     * @param {Alignment} alignment - Specifies the alignment.\n     * @returns {number} - Returns the start value.\n     */\n    Legend.prototype.alignLegend = function (start, size, legendSize, alignment) {\n        switch (alignment) {\n            case 'Far':\n                start = (size - legendSize) - start;\n                break;\n            case 'Center':\n                start = ((size - legendSize) / 2);\n                break;\n        }\n        return start;\n    };\n    /**\n     * To find legend location based on position, alignment for chart and accumulation chart\n     *\n     * @param {LegendPosition} position - Specifies the position.\n     * @param {Alignment} alignment - Specifies the alignment.\n     * @param {Rect} legendBounds - Specifies the legendBounds.\n     * @param {Rect} rect - Specifies the rect.\n     * @param {Size} availableSize - Specifies the availableSize.\n     * @returns {void}\n     */\n    Legend.prototype.getLocation = function (position, alignment, legendBounds, rect, availableSize) {\n        var padding = this.legend.border.width;\n        var legendHeight = legendBounds.height + padding + this.legend.margin.top + this.legend.margin.bottom;\n        var legendWidth = legendBounds.width + padding + this.legend.margin.left + this.legend.margin.right;\n        var marginBottom = this.gauge.margin.bottom;\n        if (position === 'Bottom') {\n            legendBounds.x = this.alignLegend(legendBounds.x, availableSize.width, legendBounds.width, alignment);\n            legendBounds.y = rect.y + (rect.height - legendHeight) + padding + this.legend.margin.top;\n            this.subtractThickness(rect, 0, 0, 0, legendHeight);\n        }\n        else if (position === 'Top') {\n            legendBounds.x = this.alignLegend(legendBounds.x, availableSize.width, legendBounds.width, alignment);\n            legendBounds.y = rect.y + padding + this.legend.margin.top;\n            this.subtractThickness(rect, 0, 0, legendHeight, 0);\n        }\n        else if (position === 'Right') {\n            legendBounds.x = rect.x + (rect.width - legendBounds.width) + this.legend.margin.right;\n            legendBounds.y = rect.y + this.alignLegend(0, availableSize.height - (rect.y + marginBottom), legendBounds.height, alignment);\n            this.subtractThickness(rect, 0, legendWidth, 0, 0);\n        }\n        else {\n            legendBounds.x = legendBounds.x + this.legend.margin.left;\n            legendBounds.y = rect.y + this.alignLegend(0, availableSize.height - (rect.y + marginBottom), legendBounds.height, alignment);\n            this.subtractThickness(rect, legendWidth, 0, 0, 0);\n        }\n    };\n    /**\n     * Renders the legend.\n     *\n     * @param {LegendSettingsModel} legend - Specifies the legend.\n     * @param {Rect} legendBounds - Specifies the legendBounds.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.renderLegend = function (legend, legendBounds) {\n        var firstLegend = this.findFirstLegendPosition(this.legendCollection);\n        var padding = legend.padding;\n        this.legendRegions = [];\n        this.maxItemHeight = Math.max(this.legendCollection[0].textSize.height, legend.shapeHeight);\n        var legendGroup = this.gauge.renderer.createGroup({ id: this.legendID + '_g' });\n        var legendTranslateGroup = this.createLegendElements(legendBounds, legendGroup, legend, this.legendID);\n        if (firstLegend !== this.legendCollection.length) {\n            this.totalPages = 0;\n            var legendAxisGroup = void 0; // legendItem group for each series group element\n            // starting shape center x,y position && to resolve lint error used new line for declaration\n            var start = new GaugeLocation((!this.gauge.enableRtl) ? legendBounds.x + padding + (legend.shapeWidth / 2) : (!this.isVertical) ? legendBounds.width + legendBounds.x - (padding) - (legend.shapeWidth) : legendBounds.x + this.maxWidth - padding - legend.shapeWidth / 2, legendBounds.y + padding + this.maxItemHeight / 2);\n            var textOptions = new TextOption('', start.x, start.y, 'start');\n            var textPadding = (2 * legend.shapePadding) + (2 * padding) + legend.shapeWidth;\n            var count = 0;\n            this.pageXCollections = [];\n            this.legendCollection[firstLegend].location = start;\n            var previousLegend = this.legendCollection[firstLegend];\n            for (var _i = 0, _a = this.legendCollection; _i < _a.length; _i++) {\n                var legendOption = _a[_i];\n                if (legendOption.render && legendOption.text !== '') {\n                    legendAxisGroup = this.gauge.renderer.createGroup({\n                        id: this.legendID + '_g_' + count\n                    });\n                    this.getRenderPoint(legendOption, start, textPadding, previousLegend, legendBounds, count, firstLegend);\n                    this.renderSymbol(legendOption, legendAxisGroup, legendOption.axisIndex, legendOption.rangeIndex);\n                    this.renderText(legendOption, legendAxisGroup, textOptions, legendOption.axisIndex, legendOption.rangeIndex);\n                    if (legendAxisGroup) {\n                        legendAxisGroup.style.cursor = (!legend.toggleVisibility) ? 'auto' : 'pointer';\n                    }\n                    if (legendTranslateGroup) {\n                        legendTranslateGroup.appendChild(legendAxisGroup);\n                    }\n                    previousLegend = legendOption;\n                }\n                count++;\n            }\n            if (this.isPaging) {\n                this.renderPagingElements(legendBounds, textOptions, legendGroup);\n            }\n            else {\n                this.totalPages = 1;\n            }\n        }\n        this.appendChildElement(this.gauge.svgObject, legendGroup);\n        this.setStyles(this.toggledIndexes);\n    };\n    /**\n     * To render legend paging elements for chart and accumulation chart\n     *\n     * @param {Rect} bounds - Specifies the bounds.\n     * @param {TextOption} textOption - Specifies the textOption.\n     * @param {Element} legendGroup - Specifies the legendGroup.\n     * @returns {void}\n     */\n    Legend.prototype.renderPagingElements = function (bounds, textOption, legendGroup) {\n        var paginggroup = this.gauge.renderer.createGroup({ id: this.legendID + '_navigation' });\n        this.pagingRegions = [];\n        legendGroup.appendChild(paginggroup);\n        var grayColor = this.gauge.themeStyle.labelColor;\n        var legend = this.gauge.legendSettings; // to solve parameter lint error, legend declaration is here\n        var padding = 8; // const padding for paging elements\n        if (!this.isVertical) {\n            this.totalPages = Math.ceil(this.totalPages / Math.max(1, this.rowCount - 1));\n        }\n        else {\n            this.totalPages = Math.ceil(this.totalPages / this.maxColumns);\n        }\n        var symbolOption = new PathOption(this.legendID + '_pageup', 'transparent', 5, grayColor, 1, '', '');\n        var iconSize = this.pageButtonSize;\n        if (paginggroup) {\n            paginggroup.style.cursor = 'pointer';\n        }\n        // Page left arrow drawing calculation started here\n        this.clipPathHeight = (this.rowCount - 1) * (this.maxItemHeight + legend.padding);\n        this.clipRect.setAttribute('height', this.clipPathHeight.toString());\n        var x = bounds.x + iconSize / 2;\n        var y = bounds.y + this.clipPathHeight + ((bounds.height - this.clipPathHeight) / 2);\n        var size = measureText(this.totalPages + '/' + this.totalPages, legend.textStyle);\n        appendPath(calculateShapes({ x: x, y: y }, 'LeftArrow', new Size(iconSize, iconSize), '', symbolOption), paginggroup, this.gauge, 'Path');\n        this.pagingRegions.push(new Rect(!this.gauge.enableRtl ?\n            x + bounds.width - (2 * (iconSize + padding) + padding + size.width) - iconSize * 0.5 : x, y - iconSize * 0.5, iconSize, iconSize));\n        // Page numbering rendering calculation started here\n        textOption.x = x + (iconSize / 2) + padding;\n        textOption.y = y + (size.height / 4);\n        textOption.id = this.legendID + '_pagenumber';\n        textOption.text = !this.gauge.enableRtl ? '1/' + this.totalPages : this.totalPages + '/1';\n        var pageTextElement = textElement(textOption, legend.textStyle, grayColor, paginggroup);\n        x = (textOption.x + padding + (iconSize / 2) + size.width);\n        symbolOption.id = this.legendID + '_pagedown';\n        appendPath(calculateShapes({ x: x, y: y }, 'RightArrow', new Size(iconSize, iconSize), '', symbolOption), paginggroup, this.gauge, 'Path');\n        this.pagingRegions.push(new Rect(!this.gauge.enableRtl ?\n            x + (bounds.width - (2 * (iconSize + padding) + padding + size.width) - iconSize * 0.5) : x, y - iconSize * 0.5, iconSize, iconSize));\n        //placing the navigation buttons and page numbering in legend right corner\n        var translateX = (this.gauge.enableRtl) ? legend.border.width + (iconSize / 2) : bounds.width - (2 * (iconSize + padding) + padding + size.width);\n        paginggroup.setAttribute('transform', 'translate(' + translateX + ', ' + 0 + ')');\n        this.translatePage(pageTextElement, this.currentPage - 1, this.currentPage);\n    };\n    /**\n     * To translate legend pages for chart and accumulation chart\n     *\n     * @param {Element} pagingText - Specifies the pagingText.\n     * @param {number} page - Specifies the page.\n     * @param {number} pageNumber - Specifies the pageNumber.\n     * @returns {number} - Returns the size.\n     */\n    Legend.prototype.translatePage = function (pagingText, page, pageNumber) {\n        var size = (this.clipPathHeight) * page;\n        var translate = 'translate(0,-' + size + ')';\n        if (this.isVertical) {\n            var pageX = this.pageXCollections[page * this.maxColumns];\n            size = (!this.gauge.enableRtl) ? pageX - this.legendBounds.x : (this.legendBounds.x + this.maxWidth) - pageX;\n            size = size < 0 ? 0 : size; // to avoid small pixel variation\n            translate = ((!this.gauge.enableRtl) ? 'translate(-' : 'translate(') + size + ',0)';\n        }\n        this.legendTranslateGroup.setAttribute('transform', translate);\n        pagingText.textContent = !this.gauge.enableRtl ? (pageNumber) + '/' + this.totalPages : this.totalPages + '/' + pageNumber;\n        this.currentPage = pageNumber;\n        return size;\n    };\n    /**\n     * To render legend text for chart and accumulation chart\n     *\n     * @param {LegendOptions} legendOption - Specifies the legendOption.\n     * @param {Element} group - Specifies the group.\n     * @param {TextOption} textOptions - Specifies the textOptions.\n     * @param {number} axisIndex - Specifies the axisIndex.\n     * @param {number} rangeIndex - Specifies the rangeIndex.\n     * @returns {void}\n     */\n    Legend.prototype.renderText = function (legendOption, group, textOptions, axisIndex, rangeIndex) {\n        var legend = this.gauge.legendSettings;\n        var hiddenColor = '#D3D3D3';\n        textOptions.id = this.legendID + '_Axis_' + axisIndex + '_text_' + rangeIndex;\n        var fontcolor = legendOption.visible ? legend.textStyle.color || this.gauge.themeStyle.labelColor : hiddenColor;\n        legend.textStyle.fontFamily = legend.textStyle.fontFamily || this.gauge.themeStyle.labelFontFamily;\n        legend.textStyle.fontWeight = legend.textStyle.fontWeight || this.gauge.themeStyle.fontWeight;\n        textOptions.text = legendOption.text;\n        textOptions.x = this.gauge.enableRtl ? (legendOption.location.x - (measureText(legendOption.text, legend.textStyle).width +\n            legend.shapeWidth / 2 + legend.shapePadding)) : (legendOption.location.x + (legend.shapeWidth / 2) + legend.shapePadding);\n        textOptions.y = legendOption.location.y + this.maxItemHeight / 4;\n        textElement(textOptions, legend.textStyle, fontcolor, group, '');\n    };\n    /**\n     * To render legend symbols for chart and accumulation chart\n     *\n     * @param {LegendOptions} legendOption - Specifies the legendOption.\n     * @param {Element} group - Specifies the group.\n     * @param {number} axisIndex - Specifies the axisIndex.\n     * @param {number} rangeIndex - Specifies the rangeIndex.\n     * @returns {void}\n     */\n    Legend.prototype.renderSymbol = function (legendOption, group, axisIndex, rangeIndex) {\n        legendOption.fill = legendOption.fill ? legendOption.fill :\n            this.gauge.axes[axisIndex].ranges[rangeIndex].rangeColor;\n        appendPath(calculateShapes(legendOption.location, legendOption.shape, new Size(legendOption.shapeWidth, legendOption.shapeHeight), '', new PathOption(this.legendID + '_Axis_' + axisIndex + '_Shape_' + rangeIndex, legendOption.fill, legendOption.shapeBorder.width, legendOption.shapeBorder.color, null, legendOption.shapeBorder.dashArray, '', '')), group, this.gauge, legendOption.shape === 'Circle' ? 'Ellipse' : 'Path');\n    };\n    /**\n     * To find legend rendering locations from legend options.\n     *\n     * @param {LegendOptions} legendOption - Specifies the legendOption.\n     * @param {GaugeLocation} start - Specifies the start.\n     * @param {number} textPadding - Specifies the textPadding.\n     * @param {LegendOptions} prevLegend - Specifies the prevLegend.\n     * @param {Rect} rect - Specifies the rect.\n     * @param {number} count - Specifies the count.\n     * @param {number} firstLegend - Specifies the firstLegend.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.getRenderPoint = function (legendOption, start, textPadding, prevLegend, rect, count, firstLegend) {\n        var padding = this.legend.padding;\n        if (this.isVertical) {\n            if (count === firstLegend || (prevLegend.location.y + (this.maxItemHeight * 1.5) + (padding * 2) > rect.y + rect.height)) {\n                legendOption.location.x = prevLegend.location.x + ((count === firstLegend) ? 0 : (!this.gauge.enableRtl) ?\n                    this.maxColumnWidth : -this.maxColumnWidth - (4 * this.legend.shapePadding) / 3);\n                legendOption.location.y = start.y;\n                var textStartLoc = (this.legend.shapeWidth / 2) + padding;\n                this.pageXCollections.push(legendOption.location.x + ((!this.gauge.enableRtl) ? -textStartLoc : textStartLoc));\n                this.totalPages++;\n            }\n            else {\n                legendOption.location.x = prevLegend.location.x;\n                legendOption.location.y = prevLegend.location.y + this.maxItemHeight + padding;\n            }\n        }\n        else {\n            var previousBound = (prevLegend.location.x + ((!this.gauge.enableRtl) ? prevLegend.textSize.width + textPadding : -prevLegend.textSize.width - textPadding));\n            if (this.isWithinBounds(previousBound, (legendOption.textSize.width + textPadding) - padding, rect, this.legend.shapeWidth / 2)) {\n                legendOption.location.y = (count === firstLegend) ? prevLegend.location.y :\n                    prevLegend.location.y + this.maxItemHeight + padding;\n                legendOption.location.x = start.x;\n            }\n            else {\n                legendOption.location.y = prevLegend.location.y;\n                legendOption.location.x = (count === firstLegend) ? prevLegend.location.x : previousBound;\n            }\n            this.totalPages = this.totalRowCount;\n        }\n        var availablewidth = this.getAvailWidth(legendOption.location.x, this.legendBounds.width);\n        legendOption.text = textTrim(+availablewidth.toFixed(4), legendOption.text, this.legend.textStyle);\n    };\n    Legend.prototype.isWithinBounds = function (previousBound, textWidth, legendBounds, shapeWidth) {\n        if (!this.gauge.enableRtl) {\n            return (previousBound + textWidth) > (legendBounds.x + legendBounds.width + shapeWidth);\n        }\n        else {\n            return (previousBound - textWidth) < (legendBounds.x - shapeWidth);\n        }\n    };\n    /**\n     * To show or hide the legend on clicking the legend.\n     *\n     * @param {Event} event - Specifies the event argument.\n     * @returns {void}\n     *\n     * @private\n     */\n    Legend.prototype.click = function (event) {\n        var targetId = event.target.id;\n        var legendItemsId = ['_text_', '_Shape_'];\n        var index;\n        var toggledIndex = -1;\n        if (targetId.indexOf(this.legendID) > -1) {\n            for (var _i = 0, legendItemsId_1 = legendItemsId; _i < legendItemsId_1.length; _i++) {\n                var id = legendItemsId_1[_i];\n                if (targetId.indexOf(id) > -1) {\n                    var axisIndex = parseInt(targetId.split(this.legendID + '_Axis_')[1].split(id)[0], 10);\n                    var rangeIndex = parseInt(targetId.split(this.legendID + '_Axis_')[1].split(id)[1], 10);\n                    if (this.gauge.legendSettings.toggleVisibility && !isNaN(rangeIndex)) {\n                        var legendOption = this.legendByIndex(axisIndex, rangeIndex, this.legendCollection);\n                        index = new Index(axisIndex, rangeIndex, !legendOption.render);\n                        if (this.toggledIndexes.length === 0) {\n                            this.toggledIndexes.push(index);\n                        }\n                        else {\n                            for (var i = 0; i < this.toggledIndexes.length; i++) {\n                                if (this.toggledIndexes[i].axisIndex === index.axisIndex &&\n                                    this.toggledIndexes[i].rangeIndex === index.rangeIndex) {\n                                    toggledIndex = i;\n                                    break;\n                                }\n                                else {\n                                    toggledIndex = -1;\n                                }\n                            }\n                            if (toggledIndex === -1) {\n                                this.toggledIndexes.push(index);\n                            }\n                            else {\n                                this.toggledIndexes[toggledIndex].isToggled =\n                                    !this.toggledIndexes[toggledIndex].isToggled;\n                            }\n                        }\n                        this.setStyles(this.toggledIndexes);\n                    }\n                }\n            }\n        }\n        if (targetId.indexOf(this.legendID + '_pageup') > -1) {\n            this.changePage(event, !this.gauge.enableRtl ? true : false);\n        }\n        else if (targetId.indexOf(this.legendID + '_pagedown') > -1) {\n            this.changePage(event, !this.gauge.enableRtl ? false : true);\n        }\n    };\n    /**\n     * Set toggled legend styles.\n     *\n     * @param {Index[]} toggledIndexes - Specifies the toggledIndexes.\n     * @returns {void}\n     */\n    Legend.prototype.setStyles = function (toggledIndexes) {\n        for (var i = 0; i < toggledIndexes.length; i++) {\n            var count = 0;\n            for (var j = 0; j < toggledIndexes[i].rangeIndex; j++) {\n                var rangeStart = this.gauge.axes[toggledIndexes[i].axisIndex].ranges[j].start;\n                var rangeEnd = this.gauge.axes[toggledIndexes[i].axisIndex].ranges[j].end;\n                if (rangeStart === rangeEnd) {\n                    count++;\n                }\n            }\n            var rangeID = this.gauge.element.id + '_Axis_' + toggledIndexes[i].axisIndex + '_Range_' + toggledIndexes[i].rangeIndex;\n            var shapeID = this.legendID + '_Axis_' + toggledIndexes[i].axisIndex + '_Shape_' + toggledIndexes[i].rangeIndex;\n            var textID = this.legendID + '_Axis_' + toggledIndexes[i].axisIndex + '_text_' + toggledIndexes[i].rangeIndex;\n            var rangeElement = this.gauge.svgObject.querySelector('#' + rangeID);\n            var shapeElement = this.gauge.svgObject.querySelector('#' + shapeID);\n            var textElement_1 = this.gauge.svgObject.querySelector('#' + textID);\n            if (toggledIndexes[i].isToggled) {\n                if (!isNullOrUndefined(rangeElement)) {\n                    rangeElement.style.visibility = 'visible';\n                    shapeElement.setAttribute('fill', this.legendCollection[toggledIndexes[i].rangeIndex - count].fill);\n                    textElement_1.setAttribute('fill', this.legend.textStyle.color || this.gauge.themeStyle.labelColor);\n                }\n            }\n            else {\n                var hiddenColor = '#D3D3D3';\n                if (!isNullOrUndefined(rangeElement)) {\n                    rangeElement.style.visibility = 'hidden';\n                    shapeElement.setAttribute('fill', hiddenColor);\n                    textElement_1.setAttribute('fill', hiddenColor);\n                }\n            }\n        }\n    };\n    /**\n     * To get legend by index\n     *\n     * @param {number} axisIndex - Specifies the axisIndex.\n     * @param {number} rangeIndex - Specifies the rangeIndex.\n     * @param {LegendOptions[]} legendCollections - Specifies the legendCollections.\n     * @returns {LegendOptions} - Specifies the LegendOptions.\n     */\n    Legend.prototype.legendByIndex = function (axisIndex, rangeIndex, legendCollections) {\n        for (var _i = 0, legendCollections_1 = legendCollections; _i < legendCollections_1.length; _i++) {\n            var legend = legendCollections_1[_i];\n            if (legend.axisIndex === axisIndex && legend.rangeIndex === rangeIndex) {\n                return legend;\n            }\n        }\n        return null;\n    };\n    /**\n     * To change legend pages for chart and accumulation chart\n     *\n     * @param {Event} event - Specifies the event.\n     * @param {boolean} pageUp - Specifies the pageUp.\n     * @returns {void}\n     */\n    Legend.prototype.changePage = function (event, pageUp) {\n        var pageText = document.getElementById(this.legendID + '_pagenumber');\n        var page = parseInt(pageText.textContent.split('/')[!this.gauge.enableRtl ? 0 : 1], 10);\n        if (pageUp && page > 1) {\n            this.translatePage(pageText, (page - 2), (page - 1));\n        }\n        else if (!pageUp && page < this.totalPages) {\n            this.translatePage(pageText, page, (page + 1));\n        }\n    };\n    /**\n     * To find available width from legend x position.\n     *\n     * @param {number} tx - Specifies the tx value.\n     * @param {number} width - Specifies the width.\n     * @returns {number} - Returns the number.\n     */\n    Legend.prototype.getAvailWidth = function (tx, width) {\n        if (this.isVertical) {\n            width = this.maxWidth;\n        }\n        return width - ((this.legend.padding * 2) + this.legend.shapeWidth + this.legend.shapePadding);\n    };\n    /**\n     * To create legend rendering elements for chart and accumulation chart\n     *\n     * @param {Rect} legendBounds - Specifies the legendBounds.\n     * @param {Element} legendGroup - Specifies the legendGroup.\n     * @param {LegendSettingsModel} legend - Specifies the legend.\n     * @param {string} id - Specifies the id.\n     * @returns {Element} - Returns the element.\n     */\n    Legend.prototype.createLegendElements = function (legendBounds, legendGroup, legend, id) {\n        var padding = legend.padding;\n        var options = new RectOption(id + '_element', legend.background, legend.border, legend.opacity, legendBounds);\n        options.width = this.isVertical ? this.maxWidth : legendBounds.width;\n        // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n        legendGroup ? legendGroup.appendChild(this.gauge.renderer.drawRectangle(options)) : this.gauge.renderer.drawRectangle(options);\n        var legendItemsGroup = this.gauge.renderer.createGroup({ id: id + '_collections' });\n        legendGroup.appendChild(legendItemsGroup);\n        this.legendTranslateGroup = this.gauge.renderer.createGroup({ id: id + '_translate_g' });\n        legendItemsGroup.appendChild(this.legendTranslateGroup);\n        var clippath = this.gauge.renderer.createClipPath({ id: id + '_clipPath' });\n        options.id += '_clipPath_rect';\n        options.width = this.isVertical ? options.width - padding : options.width;\n        this.clipRect = this.gauge.renderer.drawRectangle(options);\n        clippath.appendChild(this.clipRect);\n        this.appendChildElement(this.gauge.svgObject, clippath);\n        legendItemsGroup.style.cssText = 'clip-path:url(#' + clippath.id + ')';\n        return this.legendTranslateGroup;\n    };\n    /**\n     * Method to append child element\n     *\n     * @param {Element} parent - Specifies the element.\n     * @param {Element} childElement - Specifies the child element.\n     * @returns {void}\n     */\n    Legend.prototype.appendChildElement = function (parent, childElement) {\n        var existChild = parent.querySelector('#' + childElement.id);\n        var element = (existChild || getElement(childElement.id));\n        var child = childElement;\n        if (existChild) {\n            parent.replaceChild(child, element);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    };\n    /**\n     * To find first valid legend text index for chart and accumulation chart\n     *\n     * @param {LegendOptions[]} legendCollection - Specifies the legend collection.\n     * @returns {number} - Returns the count.\n     */\n    Legend.prototype.findFirstLegendPosition = function (legendCollection) {\n        var count = 0;\n        for (var _i = 0, legendCollection_1 = legendCollection; _i < legendCollection_1.length; _i++) {\n            var legend = legendCollection_1[_i];\n            if (legend.render && legend.text !== '') {\n                break;\n            }\n            count++;\n        }\n        return count;\n    };\n    /**\n     * To find legend bounds for accumulation chart.\n     *\n     * @param {Size} availableSize - Specifies the availableSize.\n     * @param {Rect} legendBounds - Specifies the legendBounds.\n     * @param {LegendSettingsModel} legend - Specifies the legend.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.getLegendBounds = function (availableSize, legendBounds, legend) {\n        var extraWidth = 0;\n        var extraHeight = 0;\n        var padding = legend.padding;\n        if (!this.isVertical) {\n            extraHeight = !legend.height ? ((availableSize.height / 100) * 5) : 0;\n        }\n        else {\n            extraWidth = !legend.width ? ((availableSize.width / 100) * 5) : 0;\n        }\n        legendBounds.width += extraWidth;\n        legendBounds.height += extraHeight;\n        var maximumWidth = 0;\n        var rowWidth = 0;\n        var rowCount = 0;\n        var columnWidth = [];\n        var columnHeight = 0;\n        var legendWidth = 0;\n        this.maxItemHeight = Math.max(measureText('MeasureText', legend.textStyle).height, legend.shapeHeight);\n        var legendEventArgs;\n        var render = false;\n        for (var _i = 0, _a = this.legendCollection; _i < _a.length; _i++) {\n            var legendOption = _a[_i];\n            legendEventArgs = {\n                fill: legendOption.fill, text: legendOption.text, shape: legendOption.shape,\n                name: 'legendRender', cancel: false\n            };\n            this.gauge.trigger('legendRender', legendEventArgs);\n            legendOption.render = !legendEventArgs.cancel;\n            legendOption.text = legendEventArgs.text;\n            legendOption.fill = legendEventArgs.fill;\n            legendOption.shape = legendEventArgs.shape;\n            legendOption.textSize = measureText(legendOption.text, legend.textStyle);\n            if (legendOption.render && legendOption.text !== '') {\n                render = true;\n                legendWidth = legend.shapeWidth + (2 * legend.shapePadding) + legendOption.textSize.width + (2 * padding);\n                if (this.isVertical) {\n                    ++rowCount;\n                    columnHeight = (rowCount * (this.maxItemHeight + padding)) + padding;\n                    if ((rowCount * (this.maxItemHeight + padding)) + padding > legendBounds.height) {\n                        columnHeight = Math.max(columnHeight, (rowCount * (this.maxItemHeight + padding)) + padding);\n                        rowWidth = rowWidth + maximumWidth;\n                        columnWidth.push(maximumWidth);\n                        this.totalPages = Math.max(rowCount, this.totalPages || 1);\n                        maximumWidth = 0;\n                        rowCount = 1;\n                    }\n                    maximumWidth = Math.max(legendWidth, maximumWidth);\n                }\n                else {\n                    rowWidth = rowWidth + legendWidth;\n                    if (legendBounds.width < (padding + rowWidth)) {\n                        maximumWidth = Math.max(maximumWidth, (rowWidth + padding - legendWidth));\n                        if (rowCount === 0 && (legendWidth !== rowWidth)) {\n                            rowCount = 1;\n                        }\n                        rowWidth = legendWidth;\n                        rowCount++;\n                        columnHeight = (rowCount * (this.maxItemHeight + padding)) + padding;\n                    }\n                }\n            }\n        }\n        if (this.isVertical) {\n            rowWidth = rowWidth + maximumWidth;\n            this.isPaging = legendBounds.width < (rowWidth + padding);\n            columnHeight = Math.max(columnHeight, ((this.totalPages || 1) * (this.maxItemHeight + padding)) + padding);\n            this.isPaging = this.isPaging && (this.totalPages > 1);\n            if (columnWidth[columnWidth.length - 1] !== maximumWidth) {\n                columnWidth.push(maximumWidth);\n            }\n        }\n        else {\n            this.isPaging = legendBounds.height < columnHeight;\n            this.totalPages = this.totalRowCount = rowCount;\n            columnHeight = Math.max(columnHeight, (this.maxItemHeight + padding) + padding);\n        }\n        this.maxColumns = 0; // initialization for max columns\n        var width = this.isVertical ? this.getMaxColumn(columnWidth, legendBounds.width, padding, rowWidth + padding) :\n            Math.max(rowWidth + padding, maximumWidth);\n        if (render) { // if any legends not skipped in event check\n            this.setBounds(width, columnHeight, legend, legendBounds);\n        }\n        else {\n            this.setBounds(0, 0, legend, legendBounds);\n        }\n    };\n    /**\n     * @param {Rect} rect - Specifies the rect.\n     * @param {number} left - Specifies the left.\n     * @param {number} right - Specifies the right.\n     * @param {number} top - Specifies the top.\n     * @param {number} bottom - Specifies the bottom.\n     * @returns {Rect} - Returns the rect.\n     * @private\n     */\n    Legend.prototype.subtractThickness = function (rect, left, right, top, bottom) {\n        rect.x += left;\n        rect.y += top;\n        rect.width -= left + right;\n        rect.height -= top + bottom;\n        return rect;\n    };\n    /**\n     * To set bounds for chart and accumulation chart\n     *\n     * @param {number} computedWidth - Specifies compute width.\n     * @param {number} computedHeight - Specifies compute height.\n     * @param {LegendSettingsModel} legend - Specifies the legend.\n     * @param {Rect} legendBounds - Specifies the legend bounds.\n     * @returns {void}\n     */\n    Legend.prototype.setBounds = function (computedWidth, computedHeight, legend, legendBounds) {\n        computedWidth = computedWidth < legendBounds.width ? computedWidth : legendBounds.width;\n        computedHeight = computedHeight < legendBounds.height ? computedHeight : legendBounds.height;\n        legendBounds.width = !legend.width ? computedWidth : legendBounds.width;\n        legendBounds.height = !legend.height ? computedHeight : legendBounds.height;\n        this.rowCount = Math.max(1, Math.ceil((legendBounds.height - legend.padding) / (this.maxItemHeight + legend.padding)));\n        if (this.rowCount === 1 && (legend.position === 'Bottom' || legend.position === 'Top') && (!isNullOrUndefined(legend.width) && legend.width.indexOf(\"%\") > -1)) {\n            legendBounds.width = computedWidth;\n        }\n    };\n    /**\n     * To find maximum column size for legend\n     *\n     * @param {number[]} columns - Specifies the columns\n     * @param {number} width - Specifies the width\n     * @param {number} padding - Specifies the padding\n     * @param {number} rowWidth - Specifies the row width\n     * @returns {number} - Returns the number\n     */\n    Legend.prototype.getMaxColumn = function (columns, width, padding, rowWidth) {\n        var maxPageColumn = padding;\n        this.maxColumnWidth = Math.max.apply(null, columns);\n        for (var i = 0; i < columns.length; i++) {\n            maxPageColumn += this.maxColumnWidth;\n            this.maxColumns++;\n            if (maxPageColumn + padding > width) {\n                maxPageColumn -= this.maxColumnWidth;\n                this.maxColumns--;\n                break;\n            }\n        }\n        this.isPaging = (maxPageColumn < rowWidth) && (this.totalPages > 1);\n        if (maxPageColumn === padding) {\n            maxPageColumn = width;\n        }\n        this.maxColumns = Math.max(1, this.maxColumns);\n        this.maxWidth = maxPageColumn;\n        return maxPageColumn;\n    };\n    /**\n     * To show or hide trimmed text tooltip for legend.\n     *\n     * @param {Event} event - Specifies the event.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.move = function (event) {\n        var x = this.gauge.mouseX;\n        var y = this.gauge.mouseY;\n        var targetId = event.target.id;\n        if (event.target.textContent.indexOf('...') > -1 && targetId.indexOf('_gauge_legend_') > -1) {\n            var axisIndex = parseInt(targetId.split(this.gauge.element.id + '_gauge_legend_Axis_')[1].split('_text_')[0], 10);\n            var rangeIndex = parseInt(targetId.split(this.gauge.element.id + '_gauge_legend_Axis_')[1].split('_text_')[1], 10);\n            var text = '';\n            for (var _i = 0, _a = this.legendCollection; _i < _a.length; _i++) {\n                var legends = _a[_i];\n                if (legends.rangeIndex === rangeIndex && legends.axisIndex === axisIndex) {\n                    text = legends.originalText;\n                }\n            }\n            showTooltip(text, x, y, this.gauge.element.offsetWidth, this.gauge.element.id + '_EJ2_Legend_Tooltip', getElement(this.gauge.element.id + '_Secondary_Element'));\n        }\n        else {\n            removeElement(this.gauge.element.id + '_EJ2_Legend_Tooltip');\n        }\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name.\n     */\n    Legend.prototype.getModuleName = function () {\n        return 'Legend';\n    };\n    /**\n     * To destroy the legend.\n     *\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.destroy = function () {\n        this.legendCollection = [];\n        this.legendRenderingCollections = [];\n        this.legendRegions = [];\n        this.titleRect = null;\n        this.pageXCollections = [];\n        this.clipRect = null;\n        this.legendTranslateGroup = null;\n        this.legend = null;\n        this.pagingRegions = [];\n        this.toggledIndexes = [];\n        this.legendBounds = null;\n        this.removeEventListener();\n        this.gauge = null;\n    };\n    return Legend;\n}());\nexport { Legend };\n/**\n * @private\n */\nvar Index = /** @class */ (function () {\n    function Index(axisIndex, rangeIndex, isToggled) {\n        this.axisIndex = axisIndex;\n        this.rangeIndex = rangeIndex;\n        this.isToggled = isToggled;\n    }\n    return Index;\n}());\nexport { Index };\n/**\n * Class for legend options\n *\n * @private\n */\nvar LegendOptions = /** @class */ (function () {\n    function LegendOptions(text, originalText, fill, shape, visible, border, shapeBorder, shapeWidth, shapeHeight, rangeIndex, axisIndex) {\n        this.location = { x: 0, y: 0 };\n        this.text = text;\n        this.originalText = originalText;\n        this.fill = fill;\n        this.shape = shape;\n        this.visible = visible;\n        this.border = border;\n        this.shapeBorder = shapeBorder;\n        this.shapeWidth = shapeWidth;\n        this.shapeHeight = shapeHeight;\n        this.rangeIndex = rangeIndex;\n        this.axisIndex = axisIndex;\n    }\n    return LegendOptions;\n}());\nexport { LegendOptions };\n","import { createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { PdfPageOrientation, PdfDocument, PdfBitmap } from '@syncfusion/ej2-pdf-export';\n/**\n * Represent the Pdf export for gauge\n *\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     *\n     * @param {CircularGauge} control - Specfies the instance of the gauge.\n     */\n    // eslint-disable-next-line\n    function PdfExport(control) {\n    }\n    /**\n     * To export the file as image/svg format\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of Circular Gauge.\n     * @param {ExportType} type - Specifies the type of the document.\n     * @param {string} fileName Specfies the file name of the document.\n     * @param {PdfPageOrientation} orientation - Specfies the orientation of the PDF document to export the gauge.\n     * @param {boolean} allowDownload - Specfies whether to download the document or not.\n     * @returns {Promise<string>} - Returns the promise string\n     * @private\n     */\n    PdfExport.prototype.export = function (gauge, type, fileName, orientation, allowDownload) {\n        // eslint-disable-next-line\n        var promise = new Promise(function (resolve, reject) {\n            var element = createElement('canvas', {\n                id: 'ej2-canvas',\n                attrs: {\n                    'width': gauge.availableSize.width.toString(),\n                    'height': gauge.availableSize.height.toString()\n                }\n            });\n            orientation = isNullOrUndefined(orientation) ? PdfPageOrientation.Landscape : orientation;\n            var exportElement = gauge.svgObject.cloneNode(true);\n            var backgroundElement = exportElement.childNodes[0];\n            var backgroundColor = backgroundElement.getAttribute('fill');\n            if ((gauge.theme === 'Tailwind' || gauge.theme === 'Bootstrap5' || gauge.theme === 'Fluent' || gauge.theme === 'Material3') && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                exportElement.childNodes[0].setAttribute('fill', 'rgba(255,255,255, 1)');\n            }\n            else if ((gauge.theme === 'TailwindDark' || gauge.theme === 'Bootstrap5Dark' || gauge.theme === 'FluentDark' || gauge.theme === 'Material3Dark') && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                exportElement.childNodes[0].setAttribute('fill', 'rgba(0, 0, 0, 1)');\n            }\n            var url = window.URL.createObjectURL(new Blob([(new XMLSerializer()).serializeToString(exportElement)], { type: 'image/svg+xml' }));\n            var image = new Image();\n            var context = element.getContext('2d');\n            image.onload = (function () {\n                context.drawImage(image, 0, 0);\n                window.URL.revokeObjectURL(url);\n                var document = new PdfDocument();\n                var imageString = element.toDataURL('image/jpeg').replace('image/jpeg', 'image/octet-stream');\n                document.pageSettings.orientation = orientation;\n                imageString = imageString.slice(imageString.indexOf(',') + 1);\n                document.pages.add().graphics.\n                    drawImage(new PdfBitmap(imageString), 0, 0, gauge.availableSize.width, gauge.availableSize.height);\n                if (allowDownload) {\n                    document.save(fileName + '.pdf');\n                    document.destroy();\n                }\n                else {\n                    resolve(null);\n                }\n            });\n            image.src = url;\n        });\n        return promise;\n    };\n    PdfExport.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'PdfExport';\n    };\n    /**\n     * To destroy the PdfExport.\n     *\n     * @returns {void}\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    PdfExport.prototype.destroy = function () { };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { createElement, Browser } from '@syncfusion/ej2-base';\n/**\n * Represent the Image Export for gauge\n *\n * @hidden\n */\nvar ImageExport = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     *\n     *  @param {CircularGauge} control - Specfies the instance of the gauge\n     */\n    // eslint-disable-next-line\n    function ImageExport(control) {\n    }\n    /**\n     * To export the file as image/svg format\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of Circular Gauge.\n     * @param {ExportType} type - Specifies the type of the image file.\n     * @param {string} fileName - Specifies the file name of the image file.\n     * @param {boolean} allowDownload - Specifies whether to download the image file or not.\n     * @returns {Promise<string>} - Returns promise string.\n     * @private\n     */\n    ImageExport.prototype.export = function (gauge, type, fileName, allowDownload) {\n        var _this = this;\n        // eslint-disable-next-line\n        var promise = new Promise(function (resolve, reject) {\n            var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n            var element = createElement('canvas', {\n                id: 'ej2-canvas',\n                attrs: {\n                    'width': gauge.availableSize.width.toString(),\n                    'height': gauge.availableSize.height.toString()\n                }\n            });\n            var exportElement = gauge.svgObject.cloneNode(true);\n            var backgroundElement = exportElement.childNodes[0];\n            var backgroundColor = backgroundElement.getAttribute('fill');\n            if ((gauge.theme === 'Tailwind' || gauge.theme === 'Bootstrap5' || gauge.theme === 'Fluent' || gauge.theme === 'Material3') && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                exportElement.childNodes[0].setAttribute('fill', 'rgba(255,255,255, 1)');\n            }\n            else if ((gauge.theme === 'TailwindDark' || gauge.theme === 'Bootstrap5Dark' || gauge.theme === 'FluentDark' || gauge.theme === 'Material3Dark') && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                exportElement.childNodes[0].setAttribute('fill', 'rgba(0, 0, 0, 1)');\n            }\n            var svgData = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">' +\n                exportElement.outerHTML +\n                '</svg>';\n            var url = window.URL.createObjectURL(new Blob(type === 'SVG' ? [svgData] :\n                [(new XMLSerializer()).serializeToString(exportElement)], { type: 'image/svg+xml' }));\n            if (type === 'SVG') {\n                if (allowDownload) {\n                    _this.triggerDownload(fileName, type, url, isDownload);\n                }\n                else {\n                    resolve(null);\n                }\n            }\n            else {\n                var image_1 = new Image();\n                var context_1 = element.getContext('2d');\n                image_1.onload = (function () {\n                    context_1.drawImage(image_1, 0, 0);\n                    window.URL.revokeObjectURL(url);\n                    if (allowDownload) {\n                        _this.triggerDownload(fileName, type, element.toDataURL('image/png').replace('image/png', 'image/octet-stream'), isDownload);\n                    }\n                    else {\n                        if (type === 'JPEG') {\n                            resolve(element.toDataURL('image/jpeg'));\n                        }\n                        else if (type === 'PNG') {\n                            resolve(element.toDataURL('image/png'));\n                        }\n                    }\n                });\n                image_1.src = url;\n            }\n        });\n        return promise;\n    };\n    ImageExport.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'ImageExport';\n    };\n    /**\n     * To destroy the ImageExport.\n     *\n     * @returns {void}\n     * @private\n     */\n    /* eslint-disable-next-line @typescript-eslint/no-empty-function */\n    ImageExport.prototype.destroy = function () { };\n    /**\n     * To trigger the download element\n     *\n     * @param {string} fileName - Specifies the file name.\n     * @param {ExportType} type - Specifies the export type.\n     * @param {string} url - Specifies the url.\n     * @param {boolean} isDownload - Specifies the boolean value.\n     * @returns {void}\n     */\n    ImageExport.prototype.triggerDownload = function (fileName, type, url, isDownload) {\n        createElement('a', {\n            attrs: {\n                'download': fileName + '.' + type.toLocaleLowerCase(),\n                'href': url\n            }\n        }).dispatchEvent(new MouseEvent(isDownload ? 'click' : 'move', {\n            view: window,\n            bubbles: false,\n            cancelable: true\n        }));\n    };\n    return ImageExport;\n}());\nexport { ImageExport };\n","import { print as printFunction, createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { getElement } from '../utils/helper-common';\nimport { beforePrint } from './constants';\n/**\n * Represent the print for gauge\n *\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     *\n     * @param {CircularGauge} control - Specifies the instance of the gauge.\n     */\n    // eslint-disable-next-line\n    function Print(control) {\n    }\n    /**\n     * To print the gauge\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of Circular Gauge.\n     * @param {string[] | string | Element} elements - Specifies the element.\n     * @returns {void}\n     * @private\n     */\n    Print.prototype.print = function (gauge, elements) {\n        var printWindow = window.open('', 'print', 'height=' + window.outerHeight + ',width=' + window.outerWidth + ',tabbar=no');\n        printWindow.moveTo(0, 0);\n        printWindow.resizeTo(screen.availWidth, screen.availHeight);\n        var argsData = {\n            cancel: false, htmlContent: this.getHTMLContent(gauge, elements), name: beforePrint\n        };\n        // eslint-disable-next-line\n        gauge.trigger('beforePrint', argsData, function (beforePrintArgs) {\n            if (!argsData.cancel) {\n                printFunction(argsData.htmlContent, printWindow);\n            }\n        });\n    };\n    /**\n     * To get the html string of the gauge\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of Circular Gauge.\n     * @param { string[] | string | Element} elements - Specifies the element.\n     * @returns {Element} - Returns the div element.\n     * @private\n     */\n    Print.prototype.getHTMLContent = function (gauge, elements) {\n        var div = createElement('div');\n        if (elements) {\n            if (elements instanceof Array) {\n                elements.forEach(function (value) {\n                    div.appendChild(getElement(value).cloneNode(true));\n                });\n            }\n            else if (elements instanceof Element) {\n                div.appendChild(elements.cloneNode(true));\n            }\n            else {\n                div.appendChild(getElement(elements).cloneNode(true));\n            }\n        }\n        else {\n            var exportElement = gauge.element.cloneNode(true);\n            var backgroundElement = exportElement.getElementsByTagName('svg')[0];\n            if (!isNullOrUndefined(backgroundElement)) {\n                backgroundElement = backgroundElement.childNodes[0];\n                if (!isNullOrUndefined(backgroundElement)) {\n                    var backgroundColor = backgroundElement.getAttribute('fill');\n                    if ((gauge.theme === 'Tailwind' || gauge.theme === 'Bootstrap5' || gauge.theme === 'Fluent' || gauge.theme === 'Material3') && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                        backgroundElement.setAttribute('fill', 'rgba(255,255,255, 1)');\n                    }\n                    else if ((gauge.theme === 'TailwindDark' || gauge.theme === 'Bootstrap5Dark' || gauge.theme === 'FluentDark' || gauge.theme === 'Material3Dark') && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                        backgroundElement.setAttribute('fill', 'rgba(0, 0, 0, 1)');\n                    }\n                }\n            }\n            div.appendChild(exportElement);\n        }\n        return div;\n    };\n    Print.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Print';\n    };\n    /**\n     * To destroy the Print.\n     *\n     * @returns {void}\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    Print.prototype.destroy = function () { };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex, Collection, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\n/**\n * Specifies the color information for the gradient in the circular gauge.\n */\nvar ColorStop = /** @class */ (function (_super) {\n    __extends(ColorStop, _super);\n    function ColorStop() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#000000')\n    ], ColorStop.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], ColorStop.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('0%')\n    ], ColorStop.prototype, \"offset\", void 0);\n    __decorate([\n        Property('')\n    ], ColorStop.prototype, \"style\", void 0);\n    return ColorStop;\n}(ChildProperty));\nexport { ColorStop };\n/**\n * Specifies the position in percentage from which the radial gradient must be applied.\n */\nvar GradientPosition = /** @class */ (function (_super) {\n    __extends(GradientPosition, _super);\n    function GradientPosition() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('0%')\n    ], GradientPosition.prototype, \"x\", void 0);\n    __decorate([\n        Property('0%')\n    ], GradientPosition.prototype, \"y\", void 0);\n    return GradientPosition;\n}(ChildProperty));\nexport { GradientPosition };\n/**\n * This specifies the properties of the linear gradient colors for the circular gauge.\n */\nvar LinearGradient = /** @class */ (function (_super) {\n    __extends(LinearGradient, _super);\n    function LinearGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], LinearGradient.prototype, \"startValue\", void 0);\n    __decorate([\n        Property(null)\n    ], LinearGradient.prototype, \"endValue\", void 0);\n    __decorate([\n        Collection([{ color: '#000000', opacity: 1, offset: '0%', style: '' }], ColorStop)\n    ], LinearGradient.prototype, \"colorStop\", void 0);\n    return LinearGradient;\n}(ChildProperty));\nexport { LinearGradient };\n/**\n * This specifies the properties of the radial gradient colors for the circular gauge.\n */\nvar RadialGradient = /** @class */ (function (_super) {\n    __extends(RadialGradient, _super);\n    function RadialGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('0%')\n    ], RadialGradient.prototype, \"radius\", void 0);\n    __decorate([\n        Complex({ x: '0%', y: '0%' }, GradientPosition)\n    ], RadialGradient.prototype, \"outerPosition\", void 0);\n    __decorate([\n        Complex({ x: '0%', y: '0%' }, GradientPosition)\n    ], RadialGradient.prototype, \"innerPosition\", void 0);\n    __decorate([\n        Collection([{ color: '#000000', opacity: 1, offset: '0%', style: '' }], ColorStop)\n    ], RadialGradient.prototype, \"colorStop\", void 0);\n    return RadialGradient;\n}(ChildProperty));\nexport { RadialGradient };\n/**\n * Sets and gets the module that enables the gradient option for pointers and ranges.\n *\n * @hidden\n */\nvar Gradient = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge\n     */\n    function Gradient(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * To get linear gradient string for pointers and ranges\n     *\n     * @param { PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.\n     * @param {name} name - Specifies the name of the gradient.\n     * @param {name} direction - Specifies the gradient position.\n     * @returns {string} - Returns the string value.\n     * @private\n     */\n    Gradient.prototype.calculateLinearGradientPosition = function (element, name, direction) {\n        var linearPosition = {\n            id: name,\n            x1: (isNullOrUndefined(element.linearGradient.startValue) && name.indexOf('range') !== -1\n                ? (direction === 'right' ? '100%' : '0%')\n                : (!isNullOrUndefined(element.linearGradient.startValue) ? ((element.linearGradient.startValue.indexOf('%') === -1 ?\n                    element.linearGradient.startValue :\n                    parseFloat(element.linearGradient.startValue).toString()) + '%') : '0%')),\n            x2: (isNullOrUndefined(element.linearGradient.endValue) && name.indexOf('range') !== -1 ?\n                (direction === 'left' ? '100%' : '0%') :\n                (!isNullOrUndefined(element.linearGradient.endValue) ? ((element.linearGradient.endValue.indexOf('%') === -1 ?\n                    element.linearGradient.endValue : parseFloat(element.linearGradient.endValue).toString()) + '%') : '100%')),\n            y1: (isNullOrUndefined(element.linearGradient.startValue) && name.indexOf('range') !== -1\n                ? (direction === 'bottom' ? '100%' : '0%') : '0%'),\n            y2: (isNullOrUndefined(element.linearGradient.endValue) && name.indexOf('range') !== -1\n                ? (direction === 'top' ? '100%' : '0%') : '0%')\n        };\n        return linearPosition;\n    };\n    /**\n     * To get linear gradient string for pointers and ranges\n     *\n     * @param { PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.\n     * @param {number} index - Specifies the index of the axis.\n     * @param { string } direction - Specifies the gradient position.\n     * @param { number } rangeIndex - Specifies the index of the range.\n     * @returns {string} - Returns the string value.\n     * @private\n     */\n    Gradient.prototype.getLinearGradientColor = function (element, index, direction, rangeIndex) {\n        var render = new SvgRenderer('');\n        var colors = (isNullOrUndefined(element.linearGradient.startValue) &&\n            isNullOrUndefined(element.linearGradient.endValue) && !isNullOrUndefined(rangeIndex)) ?\n            this.getCircularGradientColor(element.linearGradient.colorStop, index) :\n            this.getGradientColor(element.linearGradient.colorStop);\n        var name = (isNullOrUndefined(element.linearGradient.startValue) &&\n            isNullOrUndefined(element.linearGradient.endValue) && !isNullOrUndefined(rangeIndex)) ?\n            '_' + this.gauge.svgObject.id + '_range_' +\n                rangeIndex + '_color_' + index + '_' + 'linearGradient'\n            : '_' + this.gauge.svgObject.id + '_' + this.gauge.gradientCount + '_' + 'linearGradient';\n        var gradientPosition = this.calculateLinearGradientPosition(element, name, direction);\n        gradientPosition = {\n            id: gradientPosition.id,\n            x1: gradientPosition.x1,\n            x2: gradientPosition.x2,\n            y1: gradientPosition.y1,\n            y2: gradientPosition.y2\n        };\n        var def = render.drawGradient('linearGradient', gradientPosition, colors);\n        this.gauge.svgObject.appendChild(def);\n        return 'url(#' + name + ')';\n    };\n    /**\n     * To get color, opacity, offset and style for circular gradient path.\n     *\n     * @param {ColorStopModel[]} colorStop - Specifies the colorStop.\n     * @param {number} index - Specifies the index.\n     * @returns {GradientColor[]} - return the gradient color value.\n     * @private\n     */\n    Gradient.prototype.getCircularGradientColor = function (colorStop, index) {\n        var colors = [];\n        var colorIndex = index;\n        for (var j = colorIndex; j < (index === (colorStop.length - 1) ? index + 1 : index + 2); j++) {\n            var color = {\n                color: colorStop[j].color,\n                colorStop: colorStop[j].offset,\n                opacity: colorStop[j].opacity ? colorStop[j].opacity.toString() : '1',\n                style: colorStop[j].style\n            };\n            colors.push(color);\n            colorIndex++;\n        }\n        return colors;\n    };\n    /**\n     * To get the radial gradient string.\n     *\n     * @param {PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.\n     * @returns {string} - Returns the string.\n     * @private\n     */\n    Gradient.prototype.getRadialGradientColor = function (element) {\n        var render = new SvgRenderer('');\n        var colors = this.getGradientColor(element.radialGradient.colorStop);\n        var name = '_' + this.gauge.svgObject.id + '_' + this.gauge.gradientCount + '_' + 'radialGradient';\n        var gradientPosition = {\n            id: name,\n            r: (element.radialGradient.radius.indexOf('%') === -1 ?\n                element.radialGradient.radius :\n                parseFloat(element.radialGradient.radius).toString()) + '%',\n            cx: (element.radialGradient.outerPosition.x.indexOf('%') === -1 ?\n                element.radialGradient.outerPosition.x :\n                parseFloat(element.radialGradient.outerPosition.x).toString()) + '%',\n            cy: (element.radialGradient.outerPosition.y.indexOf('%') === -1 ?\n                element.radialGradient.outerPosition.y :\n                parseFloat(element.radialGradient.outerPosition.y).toString()) + '%',\n            fx: (element.radialGradient.innerPosition.x.indexOf('%') === -1 ?\n                element.radialGradient.innerPosition.x :\n                parseFloat(element.radialGradient.innerPosition.x).toString()) + '%',\n            fy: (element.radialGradient.innerPosition.y.indexOf('%') === -1 ?\n                element.radialGradient.innerPosition.y :\n                parseFloat(element.radialGradient.innerPosition.y).toString()) + '%'\n        };\n        var def = render.drawGradient('radialGradient', gradientPosition, colors);\n        this.gauge.svgObject.appendChild(def);\n        return 'url(#' + name + ')';\n    };\n    /**\n     * To get color, opacity, offset and style.\n     *\n     * @param { ColorStopModel[]} colorStop - Specifies the color stop.\n     * @returns {GradientColor[]} - Returns the gradientColor.\n     * @private\n     */\n    Gradient.prototype.getGradientColor = function (colorStop) {\n        var colors = [];\n        for (var j = 0; j < colorStop.length; j++) {\n            var color = {\n                color: colorStop[j].color,\n                colorStop: colorStop[j].offset,\n                opacity: colorStop[j].opacity ? colorStop[j].opacity.toString() : '1',\n                style: colorStop[j].style\n            };\n            colors.push(color);\n        }\n        return colors;\n    };\n    /**\n     * To get a gradient color string\n     *\n     * @param {PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.\n     * @param {number} index - specifies the index.\n     * @param {string} direction - specifies the direction.\n     * @param {number} rangeIndex - specifies the index of range.\n     * @returns {string} - Returns the string\n     * @private\n     */\n    Gradient.prototype.getGradientColorString = function (element, index, direction, rangeIndex) {\n        var gradientColor;\n        if ((element.linearGradient && !isNullOrUndefined(element.linearGradient.colorStop)) ||\n            (element.radialGradient && !isNullOrUndefined(element.radialGradient.colorStop))) {\n            if (element.linearGradient) {\n                gradientColor = this.getLinearGradientColor(element, index, direction, rangeIndex);\n            }\n            else {\n                gradientColor = this.getRadialGradientColor(element);\n            }\n            this.gauge.gradientCount = this.gauge.gradientCount + 1;\n        }\n        else {\n            return null;\n        }\n        return gradientColor;\n    };\n    Gradient.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Gradient';\n    };\n    /**\n     * To destroy the Gradient.\n     *\n     * @returns {void}\n     * @private\n     */\n    Gradient.prototype.destroy = function () {\n        this.gauge = null;\n    };\n    return Gradient;\n}());\nexport { Gradient };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable max-len */\n/**\n * Circular Gauge\n */\nimport { Property, NotifyPropertyChanges, Component } from '@syncfusion/ej2-base';\nimport { Complex, Browser, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, Collection, Internationalization } from '@syncfusion/ej2-base';\nimport { remove, createElement } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { removeElement, getElement, stringToNumber, measureText, toPixel, textElement, getAngleFromValue, getAngleFromLocation, getPathArc, getPointer, RectOption, Size, GaugeLocation, Rect, TextOption } from './utils/helper-common';\nimport { setStyles, getValueFromAngle, getRange } from './utils/helper-circular-gauge';\nimport { Border, Margin, Font, TooltipSettings } from './model/base';\nimport { Axis } from './axes/axis';\nimport { Annotations } from './annotations/annotations';\nimport { GaugeTooltip } from './user-interaction/tooltip';\nimport { load, loaded, gaugeMouseMove, gaugeMouseLeave, gaugeMouseDown, pointerMove } from './model/constants';\nimport { rangeMove, pointerStart, rangeStart, pointerEnd, rangeEnd } from './model/constants';\nimport { gaugeMouseUp, dragEnd, dragMove, dragStart, resized } from './model/constants';\nimport { AxisLayoutPanel } from './axes/axis-panel';\nimport { getThemeStyle } from './model/theme';\nimport { LegendSettings, Legend } from './legend/legend';\nimport { PdfExport } from './model/pdf-export';\nimport { ImageExport } from './model/image-export';\nimport { Print } from './model/print';\nimport { Gradient } from './axes/gradient';\n/**\n * Represents the circular gauge control. This is used to customize the properties of the circular gauge to visualize the data in circular scale.\n * ```html\n * <div id=\"gauge\"/>\n * <script>\n *   var gaugeObj = new CircularGauge();\n *   gaugeObj.appendTo(\"#gauge\");\n * </script>\n * ```\n */\nvar CircularGauge = /** @class */ (function (_super) {\n    __extends(CircularGauge, _super);\n    /**\n     * Constructor for creating the widget\n     *\n     * @param {CircularGaugeModel} options - Specifies the options\n     * @param {string} element - Specifies the element\n     * @hidden\n     */\n    function CircularGauge(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.isRangeUpdate = false;\n        /** @private */\n        _this.isDrag = false;\n        /**\n         * @private\n         */\n        _this.gradientCount = 0;\n        return _this;\n    }\n    /**\n     * To create svg object, renderer and binding events for the container.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.preRender = function () {\n        this.unWireEvents();\n        this.trigger(load, { gauge: this });\n        this.initPrivateVariable();\n        this.setCulture();\n        this.createSvg();\n        this.wireEvents();\n    };\n    /**\n     * To render the circular gauge elements\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.render = function () {\n        this.setTheme();\n        this.calculateBounds();\n        this.isPropertyChange = false;\n        this.renderElements();\n        this.renderComplete();\n    };\n    CircularGauge.prototype.setTheme = function () {\n        this.themeStyle = getThemeStyle(this.theme);\n    };\n    /**\n     * Method to unbind events for circular gauge\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.unWireEvents = function () {\n        EventHandler.remove(this.element, Browser.touchStartEvent, this.gaugeOnMouseDown);\n        EventHandler.remove(this.element, Browser.touchMoveEvent, this.mouseMove);\n        EventHandler.remove(this.element, Browser.touchEndEvent, this.mouseEnd);\n        EventHandler.remove(this.element, 'click', this.gaugeOnMouseClick);\n        EventHandler.remove(this.element, 'contextmenu', this.gaugeRightClick);\n        EventHandler.remove(this.element, (Browser.isPointer ? 'pointerleave' : 'mouseleave'), this.mouseLeave);\n        window.removeEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.resizeEvent);\n    };\n    /**\n     * Method to bind events for circular gauge\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.wireEvents = function () {\n        /*! Bind the Event handler */\n        EventHandler.add(this.element, Browser.touchStartEvent, this.gaugeOnMouseDown, this);\n        EventHandler.add(this.element, Browser.touchMoveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, Browser.touchEndEvent, this.mouseEnd, this);\n        EventHandler.add(this.element, 'click', this.gaugeOnMouseClick, this);\n        EventHandler.add(this.element, 'contextmenu', this.gaugeRightClick, this);\n        EventHandler.add(this.element, (Browser.isPointer ? 'pointerleave' : 'mouseleave'), this.mouseLeave, this);\n        this.resizeEvent = this.gaugeResize.bind(this);\n        window.addEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.resizeEvent);\n        /*! Apply the style for circular gauge */\n        this.setGaugeStyle(this.element);\n    };\n    /**\n     * Handles the mouse click on accumulation chart.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.gaugeOnMouseClick = function (e) {\n        this.setMouseXY(e);\n        if (this.legendModule && this.legendSettings.visible) {\n            this.legendModule.click(e);\n        }\n        return false;\n    };\n    /**\n     * Handles the mouse move.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.mouseMove = function (e) {\n        var _this = this;\n        this.setMouseXY(e);\n        var args = this.getMouseArgs(e, 'touchmove', gaugeMouseMove);\n        this.trigger('gaugeMouseMove', args, function (observedArgs) {\n            var dragArgs;\n            if (!args.cancel) {\n                if ((_this.enablePointerDrag || _this.enableRangeDrag) && _this.svgObject.getAttribute('cursor') !== 'grabbing') {\n                    if ((args.target.id.indexOf('_Pointer_') !== -1 && _this.enablePointerDrag) || (_this.enableRangeDrag && args.target.id.indexOf('_Range_') !== -1)) {\n                        _this.svgObject.setAttribute('cursor', 'pointer');\n                    }\n                    else {\n                        _this.svgObject.setAttribute('cursor', 'auto');\n                    }\n                }\n                var svgElement = getElement(_this.element.id + '_svg');\n                var extraWidth = _this.element.getBoundingClientRect().left - svgElement.getBoundingClientRect().left;\n                if (_this.enablePointerDrag && _this.activePointer) {\n                    _this.isDrag = true;\n                    var dragPointInd = parseInt(_this.activePointer.pathElement[0].id.slice(-1), 10);\n                    var dragAxisInd = parseInt(_this.activePointer.pathElement[0].id.split('_Axis_')[1], 10);\n                    dragArgs = {\n                        axis: _this.activeAxis,\n                        pointer: _this.activePointer,\n                        previousValue: _this.activePointer.currentValue,\n                        name: dragMove,\n                        type: pointerMove,\n                        currentValue: null,\n                        axisIndex: dragAxisInd,\n                        pointerIndex: dragPointInd\n                    };\n                    _this.pointerDrag(new GaugeLocation(args.x + extraWidth, args.y), dragAxisInd, dragPointInd);\n                    dragArgs.currentValue = _this.activePointer.currentValue;\n                    _this.trigger(dragMove, dragArgs);\n                    _this.activeRange = null;\n                }\n                else if (_this.enableRangeDrag && _this.activeRange) {\n                    _this.isDrag = true;\n                    var dragAxisInd = parseInt(_this.activeRange.pathElement[0].id.split('_Axis_')[1], 10);\n                    var dragRangeInd = parseInt(_this.activeRange.pathElement[0].id.split('Range_')[1], 10);\n                    dragArgs = {\n                        axis: _this.activeAxis,\n                        name: dragMove,\n                        type: rangeMove,\n                        range: _this.activeRange,\n                        axisIndex: dragAxisInd,\n                        rangeIndex: dragRangeInd\n                    };\n                    _this.rangeDrag(new GaugeLocation(args.x + extraWidth, args.y), dragAxisInd, dragRangeInd);\n                    _this.trigger(dragMove, dragArgs);\n                }\n            }\n        });\n        if (!this.isTouch) {\n            if (this.legendModule && this.legendSettings.visible) {\n                this.legendModule.move(e);\n            }\n        }\n        this.notify(Browser.touchMoveEvent, e);\n        return false;\n    };\n    /**\n     * Handles the mouse leave.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.mouseLeave = function (e) {\n        this.setMouseXY(e);\n        this.activeAxis = null;\n        this.activePointer = null;\n        this.activeRange = null;\n        this.svgObject.setAttribute('cursor', 'auto');\n        var args = this.getMouseArgs(e, 'touchmove', gaugeMouseLeave);\n        this.trigger(gaugeMouseLeave, args);\n        return false;\n    };\n    /**\n     * Handles the mouse right click.\n     *\n     * @param {MouseEvent | PointerEvent} event - Specifies the pointer or mouse event.\n     * @returns {boolean} - Returns the boolean value.\n     * @private\n     */\n    CircularGauge.prototype.gaugeRightClick = function (event) {\n        if (event.buttons === 2 || event.pointerType === 'touch') {\n            event.preventDefault();\n            event.stopPropagation();\n            return false;\n        }\n        return true;\n    };\n    /**\n     * Handles the pointer draf while mouse move on gauge.\n     *\n     * @param {GaugeLocation} location - Specifies the location of the gauge\n     * @param {number} axisIndex - Specifies the axis index\n     * @param {number} pointerIndex - Specifies the pointer index\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.pointerDrag = function (location, axisIndex, pointerIndex) {\n        var axis = this.activeAxis;\n        var range = axis.visibleRange;\n        var value = getValueFromAngle(getAngleFromLocation(this.midPoint, location), range.max, range.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        if (value >= range.min && value <= range.max) {\n            this.axes[axisIndex].pointers[pointerIndex].value = value;\n            this.activePointer.currentValue = value;\n            this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, this.activePointer, value);\n        }\n    };\n    /**\n     * Handles the range draf while mouse move on gauge.\n     *\n     * @param {GaugeLocation} location - Specifies the gauge location\n     * @param {number} axisIndex - Specifies the axis index\n     * @param {number} rangeIndex - Specifies the range index\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.rangeDrag = function (location, axisIndex, rangeIndex) {\n        if (this.activeAxis) {\n            var axis = this.activeAxis;\n            var range = axis.visibleRange;\n            var value = getValueFromAngle(getAngleFromLocation(this.midPoint, location), range.max, range.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n            if (value >= range.min && value <= range.max) {\n                var previousValue1 = this.activeRange.currentValue;\n                this.activeRange.currentValue = value;\n                var add = (this.activeRange.end - this.activeRange.start);\n                var div = add / 2;\n                var avg = parseFloat(this.activeRange.start.toString()) + div;\n                var start = typeof this.activeRange.start === 'string' ? parseFloat(this.activeRange.start) : this.activeRange.start;\n                var end = typeof this.activeRange.end === 'string' ? parseFloat(this.activeRange.end) : this.activeRange.end;\n                this.startValue = (value < avg) ? value : ((previousValue1 < avg) ? previousValue1 : ((start < end) ? this.activeRange.start : this.activeRange.end));\n                this.endValue = (value < avg) ? ((previousValue1 > avg) ? previousValue1 : ((start < end) ? this.activeRange.end : this.activeRange.start)) : value;\n                this.axes[axisIndex].ranges[rangeIndex].start = this.startValue;\n                this.axes[axisIndex].ranges[rangeIndex].end = this.endValue;\n            }\n        }\n    };\n    /**\n     * Handles the mouse down on gauge.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.gaugeOnMouseDown = function (e) {\n        var _this = this;\n        this.setMouseXY(e);\n        var currentPointer;\n        var currentRange;\n        var args = this.getMouseArgs(e, 'touchstart', gaugeMouseDown);\n        this.trigger('gaugeMouseDown', args, function (observedArgs) {\n            if (!args.cancel &&\n                args.target.id.indexOf(_this.element.id + '_Axis_') >= 0 &&\n                args.target.id.indexOf('_Pointer_') >= 0) {\n                currentPointer = getPointer(args.target.id, _this);\n                _this.activeAxis = _this.axes[currentPointer.axisIndex];\n                _this.activePointer = _this.activeAxis.pointers[currentPointer.pointerIndex];\n                if (isNullOrUndefined(_this.activePointer.pathElement)) {\n                    _this.activePointer.pathElement = [e.target];\n                }\n                if (_this.activePointer.type === 'Marker' && _this.activePointer.markerShape === 'Text' && _this.activePointer.pathElement.length === 0) {\n                    _this.activePointer.pathElement = [e.target];\n                }\n                var pointInd = parseInt(_this.activePointer.pathElement[0].id.slice(-1), 10);\n                var axisInd = parseInt(_this.activePointer.pathElement[0].id.split('_Axis_')[1], 10);\n                _this.trigger(dragStart, {\n                    axis: _this.activeAxis,\n                    name: dragStart,\n                    type: pointerStart,\n                    pointer: _this.activePointer,\n                    currentValue: _this.activePointer.currentValue,\n                    pointerIndex: pointInd,\n                    axisIndex: axisInd\n                });\n                if (_this.enablePointerDrag) {\n                    _this.svgObject.setAttribute('cursor', 'grabbing');\n                }\n            }\n            else if (!args.cancel &&\n                args.target.id.indexOf(_this.element.id + '_Axis_') >= 0 &&\n                args.target.id.indexOf('_Range_') >= 0) {\n                currentRange = getRange(args.target.id, _this);\n                _this.activeAxis = _this.axes[currentRange.axisIndex];\n                _this.activeRange = _this.activeAxis.ranges[currentRange.rangeIndex];\n                if (isNullOrUndefined(_this.activeRange.pathElement)) {\n                    _this.activeRange.pathElement = [e.target];\n                }\n                var rangeInd = parseInt(_this.activeRange.pathElement[0].id.split('Range_')[1], 10);\n                var axisInd = parseInt(_this.activeRange.pathElement[0].id.split('_Axis_')[1], 10);\n                _this.trigger(dragStart, {\n                    axis: _this.activeAxis,\n                    name: dragStart,\n                    type: rangeStart,\n                    range: _this.activeRange,\n                    axisIndex: axisInd,\n                    rangeIndex: rangeInd\n                });\n                if (_this.enableRangeDrag) {\n                    _this.svgObject.setAttribute('cursor', 'grabbing');\n                }\n            }\n        });\n        return false;\n    };\n    /**\n     * Handles the mouse end.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.mouseEnd = function (e) {\n        this.setMouseXY(e);\n        var args = this.getMouseArgs(e, 'touchend', gaugeMouseUp);\n        this.isTouch = e.pointerType === 'touch' || e.pointerType === '2' || e.type === 'touchend';\n        this.trigger(gaugeMouseUp, args);\n        if (this.activeAxis && this.activePointer && this.enablePointerDrag) {\n            this.svgObject.setAttribute('cursor', 'auto');\n            var pointerInd = parseInt(this.activePointer.pathElement[0].id.slice(-1), 10);\n            var axisInd = parseInt(this.activePointer.pathElement[0].id.split('_Axis_')[1], 10);\n            this.trigger(dragEnd, {\n                name: dragEnd,\n                type: pointerEnd,\n                axis: this.activeAxis,\n                pointer: this.activePointer,\n                currentValue: this.activePointer.currentValue,\n                axisIndex: axisInd,\n                pointerIndex: pointerInd\n            });\n            this.activeAxis = null;\n            this.activePointer = null;\n            this.isDrag = false;\n        }\n        else if (this.activeAxis && this.activeRange && this.enableRangeDrag) {\n            this.svgObject.setAttribute('cursor', 'auto');\n            var rangeInd = parseInt(this.activeRange.pathElement[0].id.slice(-1), 10);\n            var axisInd = parseInt(this.activeRange.pathElement[0].id.split('_Axis_')[1], 10);\n            this.trigger(dragEnd, {\n                name: dragEnd,\n                type: rangeEnd,\n                axis: this.activeAxis,\n                range: this.activeRange,\n                axisIndex: axisInd,\n                rangeIndex: rangeInd\n            });\n            this.activeAxis = null;\n            this.activeRange = null;\n            this.isDrag = false;\n        }\n        if (!isNullOrUndefined(this.activePointer)) {\n            this.activePointer = null;\n        }\n        this.svgObject.setAttribute('cursor', 'auto');\n        this.notify(Browser.touchEndEvent, e);\n        return false;\n    };\n    /**\n     * Handles the mouse event arguments.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @param {string} type - Specifies the type\n     * @param {string} name - Specifies the name\n     * @returns {IMouseEventArgs} - Returns the mouse event args\n     * @private\n     */\n    CircularGauge.prototype.getMouseArgs = function (e, type, name) {\n        var rect = this.element.getBoundingClientRect();\n        var location = new GaugeLocation(-rect.left, -rect.top);\n        var isTouch = (e.type === type);\n        location.x += isTouch ? e.changedTouches[0].clientX : e.clientX;\n        location.y += isTouch ? e.changedTouches[0].clientY : e.clientY;\n        return {\n            cancel: false, name: name,\n            x: location.x, y: location.y,\n            target: isTouch ? e.target : e.target\n        };\n    };\n    /**\n     * Handles the gauge resize.\n     *\n     * @param {Event} e - Specifies the event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.gaugeResize = function (e) {\n        var _this = this;\n        if (!this.isDestroyed) {\n            // eslint-disable-next-line prefer-const\n            var args = {\n                gauge: this,\n                previousSize: this.availableSize,\n                name: resized,\n                cancel: false,\n                currentSize: this.calculateSvgSize()\n            };\n            this.trigger(resized, args);\n            if (!args.cancel) {\n                if (this.resizeTo) {\n                    clearTimeout(this.resizeTo);\n                }\n                if (!isNullOrUndefined(this.element) && this.element.classList.contains('e-circulargauge')) {\n                    this.animatePointer = false;\n                    this.resizeTo = window.setTimeout(function () {\n                        _this.createSvg();\n                        _this.calculateBounds();\n                        _this.renderElements();\n                    }, 500);\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * Applying styles for circular gauge elements\n     *\n     * @param {HTMLElement} element - Specifies the html element\n     * @returns {void}\n     */\n    CircularGauge.prototype.setGaugeStyle = function (element) {\n        element.style.touchAction = this.enablePointerDrag ? 'none' : 'element';\n        element.style.msTouchAction = this.enablePointerDrag ? 'none' : 'element';\n        element.style.msContentZooming = 'none';\n        element.style.msUserSelect = 'none';\n        element.style.webkitUserSelect = 'none';\n        element.style.position = 'relative';\n    };\n    /**\n     * Method to set culture for gauge\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.setCulture = function () {\n        this.intl = new Internationalization();\n    };\n    /**\n     * Methods to create svg element for circular gauge.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.createSvg = function () {\n        this.removeSvg();\n        if (isNullOrUndefined(this.renderer)) {\n            this.renderer = new SvgRenderer(this.element.id);\n        }\n        if (isNullOrUndefined(this.gaugeAxisLayoutPanel)) {\n            this.gaugeAxisLayoutPanel = new AxisLayoutPanel(this);\n        }\n        this.availableSize = this.calculateSvgSize();\n        this.svgObject = this.renderer.createSvg({\n            id: this.element.id + '_svg',\n            width: this.availableSize.width,\n            height: this.availableSize.height\n        });\n    };\n    /**\n     * To Remove the SVG from circular gauge.\n     *\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.removeSvg = function () {\n        removeElement(this.element.id + '_Secondary_Element');\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                while (this.svgObject.childNodes.length > 0) {\n                    this.svgObject.removeChild(this.svgObject.firstChild);\n                }\n                if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                    remove(this.svgObject);\n                }\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n        removeElement(this.element.id + '_svg');\n        this.clearTemplate();\n    };\n    /**\n     * To initialize the circular gauge private variable.\n     *\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.initPrivateVariable = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-circulargauge').length;\n            this.element.id = 'circulargauge_control_' + collection;\n        }\n        this.renderer = new SvgRenderer(this.element.id);\n        this.gaugeAxisLayoutPanel = new AxisLayoutPanel(this);\n        this.animatePointer = true;\n    };\n    /**\n     * To calculate the size of the circular gauge element.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.calculateSvgSize = function () {\n        var containerWidth = this.element.offsetWidth;\n        var containerHeight = this.element.offsetHeight;\n        var borderWidth = parseInt(this.element.style.borderWidth.split('px').join(''), 10) * 2;\n        var width = stringToNumber(this.width, containerWidth) || containerWidth || 600;\n        var height = stringToNumber(this.height, containerHeight) || containerHeight || 450;\n        width = !isNaN(borderWidth) ? (width - borderWidth) : width;\n        height = !isNaN(borderWidth) ? (height - borderWidth) : height;\n        return new Size(width, height);\n    };\n    /**\n     * To calculate the spacing of the circular gauge element.\n     *\n     * @param {number} top - Specifies the top value\n     * @param {number} left - Specifies the left value\n     * @param {number} width - Specifies the width\n     * @param {number} height - Specifies the height\n     * @param {number} radius - Specifies the radius\n     * @param {number} titleHeight - Specifies the titleHeight\n     * @param {number} isUpperAngle - Specifies the isUpperAngle\n     * @param {number} isLowerAngle - Specifies the isLowerAngle\n     * @param {number} isFullPercent - Specifies the boolean value\n     * @param {number} isUpper - Specifies the boolean value\n     * @param {number} isLower - Specifies the boolean value\n     * @returns {void}\n     */\n    /* eslint-disable max-len */\n    CircularGauge.prototype.radiusAndCenterCalculation = function (top, left, width, height, radius, titleHeight, isUpperAngle, isLowerAngle, isFullPercent, radiusPercent, isUpper, isLower) {\n        var rect;\n        var bottom = this.margin.bottom + this.border.width;\n        var minRadius;\n        var widthRadius;\n        var centerX;\n        var centerY;\n        if (this.moveToCenter && this.axes.length === 1 &&\n            isNullOrUndefined(this.centerXpoint) && isNullOrUndefined(this.centerYpoint)) {\n            rect = new Rect(left, top, width, height);\n        }\n        else {\n            if (!this.allowMargin) {\n                if (!isNullOrUndefined(this.legendModule) && (width > height) && (this.legendSettings.position === 'Top' || this.legendSettings.position === 'Bottom')) {\n                    minRadius = Math.min(width, height) / 2;\n                    rect = new Rect((left + (width / 2) - minRadius), (top + (height / 2) - minRadius), minRadius * 2, minRadius * 2);\n                }\n                else {\n                    if (width > height && (isLowerAngle && isLower || isUpperAngle && isUpper)) {\n                        widthRadius = ((width) / 2);\n                        var heightValue = isUpper && isLower ? (height / 2) : (height * (3 / 4));\n                        if (widthRadius > heightValue) {\n                            widthRadius = heightValue;\n                        }\n                        rect = new Rect((left + (width / 2) - widthRadius), (top + (height / 2) - widthRadius), widthRadius * 2, widthRadius * 2);\n                    }\n                    else {\n                        if (height > width) {\n                            var heightRadius = height / 2;\n                            rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - heightRadius), radius * 2, heightRadius * 2);\n                        }\n                        else {\n                            rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - radius), radius * 2, radius * 2);\n                        }\n                    }\n                }\n            }\n            else {\n                rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - radius), radius * 2, radius * 2);\n            }\n        }\n        this.gaugeRect = rect;\n        if (this.legendModule && this.legendSettings.visible) {\n            this.legendModule.getLegendOptions(this.axes);\n            this.legendModule.calculateLegendBounds(this.gaugeRect, this.availableSize);\n        }\n        if (!this.allowMargin) {\n            if (!isNullOrUndefined(this.legendModule) && (isUpperAngle || isLowerAngle) && (width > height) && (this.legendSettings.position === 'Top' || this.legendSettings.position === 'Bottom')) {\n                var difference = height - this.gaugeRect.height;\n                this.gaugeRect.width = width - ((this.availableSize.width - this.gaugeRect.width) / 2);\n                this.gaugeRect.y = this.gaugeRect.y - difference;\n                this.gaugeRect.height = this.gaugeRect.height + difference + ((this.availableSize.height - this.gaugeRect.height) / 2);\n            }\n            else if (!isNullOrUndefined(this.legendModule) && (isUpperAngle || isLowerAngle) && (width > height) && (this.legendSettings.position === 'Left' || this.legendSettings.position === 'Right')) {\n                var difference = this.gaugeRect.height - this.gaugeRect.width;\n                this.gaugeRect.x = this.legendSettings.position === 'Right'\n                    ? this.gaugeRect.x + this.margin.right : this.gaugeRect.x;\n                this.gaugeRect.width = this.legendSettings.position === 'Left' ?\n                    Math.abs(width - ((this.availableSize.width - this.gaugeRect.width + difference) / 2))\n                    : Math.abs(width - ((this.availableSize.width - this.gaugeRect.width) / 2) - 10);\n            }\n            centerX = this.centerXpoint !== null ?\n                stringToNumber(this.centerXpoint, this.availableSize.width) : this.gaugeRect.x + (this.gaugeRect.width / 2);\n            if ((isUpperAngle || isLowerAngle) && !isNullOrUndefined(this.legendModule)) {\n                centerX = (this.legendSettings.position === 'Top' || this.legendSettings.position === 'Bottom')\n                    ? this.availableSize.width / 2 : this.legendSettings.position === 'Right' ? (this.gaugeRect.width / 2) + this.margin.right :\n                    centerX;\n            }\n            centerY = ((isUpperAngle || isLowerAngle) ? (isUpperAngle ?\n                (((this.gaugeRect.height * (3 / 4) + this.gaugeRect.y) - bottom))\n                : (((this.gaugeRect.height * (1 / 4)) + (this.gaugeRect.y)))) : this.gaugeRect.y + (this.gaugeRect.height / 2));\n            centerY = !isFullPercent && (isUpperAngle || isLowerAngle) ? (this.gaugeRect.height / 2) + this.gaugeRect.y + (radiusPercent * (3 / 4) * (1 / 2)) : centerY;\n            if (!isNullOrUndefined(this.axes) && this.axes.length > 1 && !isNullOrUndefined(this.midPoint)) {\n                isUpper = isUpperAngle ? isUpperAngle : isUpper;\n                isLower = isLowerAngle ? isLowerAngle : isLower;\n                if (isUpper && isLower) {\n                    centerY = (this.availableSize.height / 2) - bottom;\n                }\n            }\n        }\n        else {\n            centerX = this.centerXpoint !== null ?\n                stringToNumber(this.centerXpoint, this.availableSize.width) : this.gaugeRect.x + (this.gaugeRect.width / 2);\n            centerY = this.centerYpoint !== null ?\n                stringToNumber(this.centerYpoint, this.availableSize.height) : this.gaugeRect.y + (this.gaugeRect.height / 2);\n        }\n        this.midPoint = new GaugeLocation(centerX, centerY);\n    };\n    /**\n     * Method to calculate the availble size for circular gauge.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.calculateBounds = function () {\n        var padding = 5;\n        var rect;\n        var margin = this.margin;\n        var titleHeight = 0;\n        if (this.title) {\n            titleHeight = measureText(this.title, this.titleStyle).height + padding;\n        }\n        var top = margin.top + titleHeight + this.border.width;\n        var left = margin.left + this.border.width;\n        var isUpper = false;\n        var isLower = false;\n        var width = this.availableSize.width - left - margin.right - this.border.width;\n        var height = this.availableSize.height - top - this.border.width - margin.bottom;\n        var radius = Math.min(width, height) / 2;\n        this.centerXpoint = (this.centerX === '') ? null : this.centerX;\n        this.centerYpoint = (this.centerY === '') ? null : this.centerY;\n        if (this.moveToCenter && this.axes.length === 1 &&\n            isNullOrUndefined(this.centerXpoint) && isNullOrUndefined(this.centerYpoint)) {\n            rect = new Rect(left, top, width, height);\n        }\n        if (!this.allowMargin) {\n            for (var j = 0; j < this.axes.length; j++) {\n                var isUpperAngle = 270 <= this.axes[j].startAngle && this.axes[j].startAngle <= 360 &&\n                    0 <= this.axes[j].endAngle && this.axes[j].endAngle <= 90;\n                var isLowerAngle = 90 >= this.axes[j].startAngle && this.axes[j].startAngle <= 180 &&\n                    180 <= this.axes[j].endAngle && 270 <= this.axes[j].endAngle && 0 !== this.axes[j].startAngle &&\n                    360 !== this.axes[j].endAngle;\n                isUpper = isUpperAngle ? isUpperAngle : isUpper;\n                isLower = isLowerAngle ? isLowerAngle : isLower;\n                var isFullPercent = this.axes[j].radius !== null ? parseInt(this.axes[0].radius.split('%')[0], 10) >= 100 : true;\n                var radiusPercent = this.axes[j].radius !== null ? radius * (parseInt(this.axes[0].radius.split('%')[0], 10) / 100) : radius;\n                this.radiusAndCenterCalculation(top, left, width, height, radius, titleHeight, isUpperAngle, isLowerAngle, isFullPercent, radiusPercent, isUpper, isLower);\n            }\n        }\n        else {\n            rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - radius), radius * 2, radius * 2);\n            this.radiusAndCenterCalculation(top, left, width, height, radius, titleHeight, false, false, null, null, false, false);\n        }\n        this.gaugeAxisLayoutPanel.measureAxis(this.gaugeRect);\n    };\n    /**\n     * To render elements for circular gauge\n     *\n     * @param {boolean} animate - Specifies whether animation is true or false\n     * @returns {void}\n     */\n    CircularGauge.prototype.renderElements = function (animate) {\n        if (animate === void 0) { animate = true; }\n        this.renderBorder();\n        this.renderTitle();\n        this.gaugeAxisLayoutPanel.renderAxes(animate);\n        this.renderLegend();\n        this.element.appendChild(this.svgObject);\n        this.trigger(loaded, { gauge: this });\n        removeElement('gauge-measuretext');\n    };\n    /**\n     * Method to render legend for accumulation chart\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.renderLegend = function () {\n        if (!this.legendModule || !this.legendSettings.visible) {\n            return null;\n        }\n        if (this.legendModule.legendCollection.length) {\n            this.legendModule.renderLegend(this.legendSettings, this.legendModule.legendBounds);\n        }\n    };\n    /**\n     * Method to render the title for circular gauge.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.renderTitle = function () {\n        if (this.title) {\n            // eslint-disable-next-line prefer-const\n            var style = {\n                color: this.titleStyle.color,\n                size: this.titleStyle.size || this.themeStyle.fontSize,\n                fontFamily: this.titleStyle.fontFamily || this.themeStyle.fontFamily,\n                fontStyle: this.titleStyle.fontStyle,\n                fontWeight: this.titleStyle.fontWeight || this.themeStyle.titleFontWeight,\n                opacity: this.titleStyle.opacity\n            };\n            var titleSize = style.size;\n            if (!isNaN(Number(titleSize))) {\n                style.size = titleSize + 'px';\n            }\n            var size = measureText(this.title, style);\n            var options = new TextOption(this.element.id + '_CircularGaugeTitle', this.availableSize.width / 2, this.margin.top + 3 * (size.height / 4), 'middle', this.title);\n            var element = textElement(options, style, style.color || this.themeStyle.titleFontColor, this.svgObject, '');\n            element.setAttribute('aria-label', this.description || this.title);\n            element.setAttribute('role', '');\n            element.setAttribute('tabindex', this.tabIndex.toString());\n        }\n    };\n    /**\n     * Method to render the border for circular gauge.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.renderBorder = function () {\n        var borderWidth = this.border.width;\n        if (borderWidth > 0 || (this.background || this.themeStyle.backgroundColor)) {\n            this.svgObject.appendChild(this.renderer.drawRectangle(new RectOption(this.element.id + '_CircularGaugeBorder', this.background || this.themeStyle.backgroundColor, this.border, null, new Rect(borderWidth / 2, borderWidth / 2, this.availableSize.width - borderWidth, this.availableSize.height - borderWidth))));\n        }\n    };\n    /* eslint-disable valid-jsdoc */\n    /**\n     * This method is used to set the pointer value dynamically for circular gauge.\n     *\n     * @param {number} axisIndex - Specifies the index value for the axis in circular gauge.\n     * @param {number} pointerIndex - Specifies the index value for the pointer in circular gauge.\n     * @param {number} value - Specifies the value for the pointer in circular gauge.\n     */\n    CircularGauge.prototype.setPointerValue = function (axisIndex, pointerIndex, value) {\n        var _this = this;\n        var axis = this.axes[axisIndex];\n        var pointer = axis.pointers[pointerIndex];\n        var pointerRadius = pointer.currentRadius;\n        if (!this.isDestroyed && pointer.currentValue !== value) {\n            var enableAnimation_1 = pointer.animation.enable;\n            value = value < axis.visibleRange.min ? axis.visibleRange.min : value;\n            value = value > axis.visibleRange.max ? axis.visibleRange.max : value;\n            pointer['isPointerAnimation'] = true;\n            pointer.pathElement.map(function (element) {\n                if (pointer.type === 'RangeBar') {\n                    setStyles(element, pointer.color, pointer.border);\n                    if (enableAnimation_1) {\n                        _this.gaugeAxisLayoutPanel.pointerRenderer.performRangeBarAnimation(element, pointer.currentValue, value, axis, pointer);\n                    }\n                    else {\n                        _this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, pointer, value);\n                    }\n                }\n                else {\n                    if (element.id.indexOf('_Pointer_NeedleCap_') >= 0) {\n                        setStyles(element, pointer.cap.color, pointer.cap.border);\n                    }\n                    else if (element.id.indexOf('_Pointer_NeedleTail_') >= 0) {\n                        setStyles(element, pointer.needleTail.color, pointer.needleTail.border);\n                    }\n                    else if (element.id.indexOf('_Pointer_NeedleRect_') >= 0) {\n                        setStyles(element, 'transparent', { color: 'transparent', width: 0 });\n                    }\n                    else if (pointer.type === 'Marker' && pointer.markerShape !== 'Text') {\n                        setStyles(element, pointer.color, pointer.border);\n                    }\n                    if (enableAnimation_1) {\n                        if (pointer.type === 'Marker' && pointer.markerShape === 'Text') {\n                            _this.gaugeAxisLayoutPanel.pointerRenderer.performTextAnimation(element, pointer.currentValue, value, axis, pointer);\n                        }\n                        else {\n                            _this.gaugeAxisLayoutPanel.pointerRenderer.performNeedleAnimation(element, pointer.currentValue, value, axis, pointer);\n                        }\n                    }\n                    else {\n                        _this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, pointer, value);\n                    }\n                }\n            });\n        }\n        this.isProtectedOnChange = true;\n        pointer.previousValue = pointer.currentValue;\n        pointer.currentValue = value;\n        pointer.value = value;\n        this.isProtectedOnChange = false;\n    };\n    /**\n     * This method is used to set the annotation content dynamically for circular gauge.\n     *\n     * @param {number} axisIndex - Specifies the index value for the axis in circular gauge.\n     * @param {number} annotationIndex - Specifies the index value for the annotation in circular gauge.\n     * @param {string | Function} content - Specifies the content for the annotation in circular gauge.\n     * @returns {void}\n     */\n    CircularGauge.prototype.setAnnotationValue = function (axisIndex, annotationIndex, content) {\n        if (!this.isDestroyed) {\n            var isElementExist = getElement(this.element.id + '_Annotations_' + axisIndex) !== null;\n            var element = getElement(this.element.id + '_Annotations_' + axisIndex) ||\n                createElement('div', {\n                    id: this.element.id + '_Annotations_' + axisIndex\n                });\n            var annotation = this.axes[axisIndex].annotations[annotationIndex];\n            if (content !== null) {\n                removeElement(this.element.id + '_Axis_' + axisIndex + '_Annotation_' + annotationIndex);\n                annotation.content = content;\n                this.annotationsModule.createTemplate(element, annotationIndex, axisIndex, this);\n                var secondaryElement = getElement(this.element.id + '_Secondary_Element');\n                if (!isElementExist && !isNullOrUndefined(secondaryElement)) {\n                    secondaryElement.appendChild(element);\n                }\n            }\n        }\n    };\n    /**\n     * This method is used to print the rendered circular gauge.\n     *\n     * @param {string[] | string | Element} id - Specifies the element to print the circular gauge.\n     */\n    CircularGauge.prototype.print = function (id) {\n        if (this.allowPrint && this.printModule) {\n            this.printModule.print(this, id);\n        }\n    };\n    /**\n     * This method is used to perform the export functionality for the circular gauge.\n     *\n     * @param {ExportType} type - Specifies the type of the export.\n     * @param {string} fileName - Specifies the file name for the exported file.\n     * @param {PdfPageOrientation}  orientation - Specifies the orientation for the exported PDF document.\n     * @param {boolean} allowDownload - Specifies whether to download as a file.\n     * @returns {Promise<string>} - Specifies the base64 string of the exported image which is returned when the allowDownload is set to false.\n     */\n    CircularGauge.prototype.export = function (type, fileName, orientation, allowDownload) {\n        var _this = this;\n        if (isNullOrUndefined(allowDownload)) {\n            allowDownload = true;\n        }\n        if (type === 'PDF' && this.allowPdfExport && this.pdfExportModule) {\n            // eslint-disable-next-line\n            return new Promise(function (resolve, reject) {\n                resolve(_this.pdfExportModule.export(_this, type, fileName, orientation, allowDownload));\n            });\n        }\n        else if (this.allowImageExport && (type !== 'PDF') && this.imageExportModule) {\n            // eslint-disable-next-line\n            return new Promise(function (resolve, reject) {\n                resolve(_this.imageExportModule.export(_this, type, fileName, allowDownload));\n            });\n        }\n        return null;\n    };\n    /**\n     * Method to set mouse x, y from events\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {void}\n     */\n    CircularGauge.prototype.setMouseXY = function (e) {\n        var pageX;\n        var pageY;\n        var svgRect = getElement(this.element.id + '_svg').getBoundingClientRect();\n        var rect = this.element.getBoundingClientRect();\n        if (e.type.indexOf('touch') > -1) {\n            this.isTouch = true;\n            var touchArg = e;\n            pageY = touchArg.changedTouches[0].clientY;\n            pageX = touchArg.changedTouches[0].clientX;\n        }\n        else {\n            this.isTouch = e.pointerType === 'touch' || e.pointerType === '2';\n            pageX = e.clientX;\n            pageY = e.clientY;\n        }\n        this.mouseY = (pageY - rect.top) - Math.max(svgRect.top - rect.top, 0);\n        this.mouseX = (pageX - rect.left) - Math.max(svgRect.left - rect.left, 0);\n    };\n    /**\n     * This method is used to set the range values dynamically for circular gauge.\n     *\n     * @param {number} axisIndex - Specifies the index value for the axis in circular gauge.\n     * @param {number} rangeIndex - Specifies the index value for the range in circular gauge.\n     * @param {number} start - Specifies the start value for the current range in circular gauge.\n     * @param {number} end - Specifies the end value for the current range in circular gauge.\n     */\n    CircularGauge.prototype.setRangeValue = function (axisIndex, rangeIndex, start, end) {\n        var element = getElement(this.element.id + '_Axis_' + axisIndex + '_Range_' + rangeIndex);\n        var axis = this.axes[axisIndex];\n        var range = axis.ranges[rangeIndex];\n        var axisRange = axis.visibleRange;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startValue = Math.min(Math.max(start, axisRange.min), end);\n        var endValue = Math.min(Math.max(start, end), axisRange.max);\n        var oldRangeStart = range.start;\n        var oldRangeEnd = range.end;\n        range.start = start;\n        range.end = end;\n        if (range.start !== range.end && oldRangeStart === oldRangeEnd && this.legendModule && this.legendSettings.visible) {\n            this.legendModule.getLegendOptions(this.axes);\n            var height = this.legendModule.legendBounds.height + this.legendSettings.margin.top + this.legendSettings.margin.bottom + this.legendSettings.border.width;\n            var width = this.legendModule.legendBounds.width + this.legendSettings.margin.left + this.legendSettings.margin.right + this.legendSettings.border.width;\n            // eslint-disable-next-line prefer-const\n            var rect = this.gaugeRect;\n            var position = this.legendModule.position;\n            if (position === 'Bottom') {\n                rect.height = rect.height + height;\n            }\n            if (position === 'Top') {\n                rect.height = rect.height + height;\n                rect.y = rect.y - height;\n            }\n            if (position === 'Left') {\n                rect.width = rect.width + width;\n                rect.x = rect.x - width;\n            }\n            if (position === 'Right') {\n                rect.width = rect.width + width;\n            }\n            this.legendModule.calculateLegendBounds(rect, this.availableSize);\n            if (this.legendModule.legendCollection.length) {\n                this.legendModule.renderLegend(this.legendSettings, this.legendModule.legendBounds);\n            }\n        }\n        this.isRangeUpdate = true;\n        var startAngle = getAngleFromValue(startValue, axisRange.max, axisRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = getAngleFromValue(endValue, axisRange.max, axisRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var startWidth;\n        if (range.startWidth.length > 0) {\n            startWidth = toPixel(range.startWidth, range.currentRadius);\n        }\n        else {\n            startWidth = range.startWidth;\n        }\n        var endWidth;\n        if (range.endWidth.length > 0) {\n            endWidth = toPixel(range.endWidth, range.currentRadius);\n        }\n        else {\n            endWidth = range.endWidth;\n        }\n        endAngle = isClockWise ? endAngle : [startAngle, startAngle = endAngle][0];\n        endWidth = isClockWise ? endWidth : [startWidth, startWidth = endWidth][0];\n        element.setAttribute('d', getPathArc(this.midPoint, Math.round(startAngle), Math.round(endAngle), range.currentRadius, startWidth, endWidth, range, axis));\n        setStyles(element, (range.color ? range.color : range.rangeColor), {\n            color: (range.color ? range.color : range.rangeColor),\n            width: 0\n        });\n    };\n    /**\n     * This method destroys the circular gauge. This method removes the events associated with the circular gauge and disposes the objects created for rendering and updating the circular gauge.\n     *\n     * @method destroy\n     * @return {void}\n     * @member of Circular-Gauge\n     */\n    CircularGauge.prototype.destroy = function () {\n        this.unWireEvents();\n        if (!isNullOrUndefined(this.tooltipModule)) {\n            this.tooltipModule.removeEventListener();\n        }\n        _super.prototype.destroy.call(this);\n        if (!isNullOrUndefined(this.gaugeAxisLayoutPanel)) {\n            this.gaugeAxisLayoutPanel.destroy();\n        }\n        this.availableSize = null;\n        this.midPoint = null;\n        this.activePointer = null;\n        this.activeAxis = null;\n        this.activeRange = null;\n        this.gaugeRect = null;\n        this.gaugeAxisLayoutPanel = null;\n        this.themeStyle = null;\n        this.removeSvg();\n        this.svgObject = null;\n        this.renderer = null;\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     *\n     * @returns {ModuleDeclaration[]} - Returns the modules\n     * @private\n     */\n    CircularGauge.prototype.requiredModules = function () {\n        var modules = [];\n        var annotationEnable = false;\n        var axes = this.axes;\n        axes.map(function (axis) {\n            axis.annotations.map(function (annotation) {\n                annotationEnable = annotationEnable || annotation.content !== null;\n            });\n        });\n        if (annotationEnable) {\n            modules.push({\n                member: 'Annotations',\n                args: [this, Annotations]\n            });\n        }\n        if (this.tooltip.enable) {\n            modules.push({\n                member: 'Tooltip',\n                args: [this, GaugeTooltip]\n            });\n        }\n        if (this.allowPrint) {\n            modules.push({\n                member: 'Print',\n                args: [this, Print]\n            });\n        }\n        if (this.allowImageExport) {\n            modules.push({\n                member: 'ImageExport',\n                args: [this, ImageExport]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport',\n                args: [this, PdfExport]\n            });\n        }\n        if (this.legendSettings.visible) {\n            modules.push({\n                member: 'Legend',\n                args: [this, Legend]\n            });\n        }\n        modules.push({\n            member: 'Gradient',\n            args: [this, Gradient]\n        });\n        return modules;\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string} - Returns the string\n     * @private\n     */\n    CircularGauge.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @param {CircularGaugeModel} newProp - Specifies the new property\n     * @param {CircularGaugeModel} oldProp - Specifies the old property\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // property method calculated\n        if (!this.isDestroyed) {\n            this.isPropertyChange = true;\n            var renderer = false;\n            var refreshBounds = false;\n            var refreshWithoutAnimation = false;\n            var isPointerValueSame = (Object.keys(newProp).length === 1 && newProp instanceof Object &&\n                !isNullOrUndefined(this.activePointer));\n            for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                switch (prop) {\n                    case 'height':\n                    case 'width':\n                    case 'centerX':\n                    case 'centerY':\n                    case 'margin':\n                        this.createSvg();\n                        refreshBounds = true;\n                        break;\n                    case 'title':\n                        refreshBounds = (newProp.title === '' || oldProp.title === '');\n                        renderer = !(newProp.title === '' || oldProp.title === '');\n                        break;\n                    case 'titleStyle':\n                        if (newProp.titleStyle && newProp.titleStyle.size) {\n                            refreshBounds = true;\n                        }\n                        else {\n                            renderer = true;\n                        }\n                        break;\n                    case 'border':\n                        renderer = true;\n                        break;\n                    case 'background':\n                        renderer = true;\n                        break;\n                    case 'legendSettings':\n                        refreshWithoutAnimation = true;\n                        break;\n                    case 'axes':\n                        // eslint-disable-next-line no-case-declarations\n                        var axesPropertyLength = Object.keys(newProp.axes).length;\n                        for (var x = 0; x < axesPropertyLength; x++) {\n                            if (!isNullOrUndefined(newProp.axes[x])) {\n                                var collection = Object.keys(newProp.axes[x]);\n                                for (var _b = 0, collection_1 = collection; _b < collection_1.length; _b++) {\n                                    var collectionProp = collection_1[_b];\n                                    if (collectionProp === 'pointers') {\n                                        var pointerPropertyLength = Object.keys(newProp.axes[x].pointers).length;\n                                        for (var y = 0; y < pointerPropertyLength; y++) {\n                                            var index = parseInt(Object.keys(newProp.axes[x].pointers)[y], 10);\n                                            if (!isNullOrUndefined(Object.keys(newProp.axes[x].pointers[index]))) {\n                                                this.axes[x].pointers[index]['previousValue'] = this.axes[x].pointers[index]['currentValue'];\n                                                this.axes[x].pointers[index]['isPointerAnimation'] = Object.keys(newProp.axes[x].pointers[index]).indexOf('value') > -1;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        refreshWithoutAnimation = true;\n                        break;\n                }\n            }\n            if (!isPointerValueSame && !this.isRangeUpdate) {\n                if (!refreshBounds && renderer) {\n                    this.removeSvg();\n                    this.renderElements();\n                }\n                if (refreshBounds) {\n                    this.removeSvg();\n                    this.calculateBounds();\n                    this.renderElements();\n                }\n                if (refreshWithoutAnimation && !renderer && !refreshBounds) {\n                    this.removeSvg();\n                    this.calculateBounds();\n                    this.renderElements(false);\n                }\n            }\n            this.isRangeUpdate = false;\n        }\n    };\n    /**\n     * Get component name for circular gauge\n     *\n     * @returns {string} - Returns the module name\n     * @private\n     */\n    CircularGauge.prototype.getModuleName = function () {\n        return 'circulargauge';\n    };\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ color: 'transparent', width: 0 }, Border)\n    ], CircularGauge.prototype, \"border\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"background\", void 0);\n    __decorate([\n        Property('')\n    ], CircularGauge.prototype, \"title\", void 0);\n    __decorate([\n        Complex({ size: null, color: null, fontWeight: null, fontFamily: null }, Font)\n    ], CircularGauge.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], CircularGauge.prototype, \"margin\", void 0);\n    __decorate([\n        Collection([{}], Axis)\n    ], CircularGauge.prototype, \"axes\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], CircularGauge.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"enablePointerDrag\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"enableRangeDrag\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"allowPrint\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"allowImageExport\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"centerX\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"centerY\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"moveToCenter\", void 0);\n    __decorate([\n        Property('Material')\n    ], CircularGauge.prototype, \"theme\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"description\", void 0);\n    __decorate([\n        Property(1)\n    ], CircularGauge.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Property(true)\n    ], CircularGauge.prototype, \"allowMargin\", void 0);\n    __decorate([\n        Complex({}, LegendSettings)\n    ], CircularGauge.prototype, \"legendSettings\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"axisLabelRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"radiusCalculate\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"annotationRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"legendRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"tooltipRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragMove\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragEnd\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseMove\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseDown\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseUp\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"resized\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"beforePrint\", void 0);\n    CircularGauge = __decorate([\n        NotifyPropertyChanges\n    ], CircularGauge);\n    return CircularGauge;\n}(Component));\nexport { CircularGauge };\n"],"names":["measureText","text","font","htmlObject","document","getElementById","createElement","id","body","appendChild","style","getFontStyle","innerText","cssText","Size","clientWidth","clientHeight","toPixel","value","maxDimension","undefined","indexOf","parseInt","size","fontStyle","fontWeight","fontFamily","opacity","color","textElement","options","parent","styles","renderOptions","renderer","SvgRenderer","x","y","fill","text-anchor","anchor","transform","dominant-baseline","baseLine","createText","appendPath","element","gauge","functionName","setAttribute","isCompleteAngle","startAngle","endAngle","totalAngle","Math","floor","getDegree","degree","getAngleFromValue","maximumValue","minimumValue","isClockWise","angle","round","getAngleFromLocation","center","point","atan2","PI","getLocationFromAngle","radius","radian","GaugeLocation","cos","sin","getPathArc","start","end","startWidth","endWidth","range","axis","isNullOrUndefined","startRadius","position","isLinearCircularGradient","direction","endRadius","arcRadius","insideArcRadius","insideEndRadius","insideStartRadius","getRangePath","getCirclePath","arcPath","arcStartOne","arcEndOne","arcStartTwo","arcEndTwo","clockWise","innerStart","innerEnd","pointPosition","arcRoundedPath","outerOldEnd","innerOldEnd","innerOldStart","outerOldStart","roundedPath","arcWidthPath","endArc","startArc","widthDifference","abs","roundedCornerRadius","arcWidthPathCalculation","roundedArcWidthPathCalculation","startValueToAngle","maximum","minimum","endRadii","sqrt","pow","centerStartDistance","centerDistance","arcStart","arcEnd","angleValueDirection","endRadiusValue","arcTwo","startGreater","arcOne","degreeAngle","degreeValueOne","degreeValueTwo","startAddArc","startSubArc","getRoundedPathArc","actualStart","actualEnd","oldStart","oldEnd","getTemplateFunction","template","templateFn","templateComplier","isNaN","parseFloat","querySelectorAll","length","charAt","querySelector","innerHTML","trim","isVue","isVue3","e","removeElement","getElement","remove","stringToNumber","containerSize","getPointer","targetId","tempString","replace","split","axisIndex","pointerIndex","getLabelFormat","format","match","calculateShapes","location","shape","url","path","space","width","height","locX","locY","isLegend","merge","rx","ry","cx","cy","d","href","stroke","setStyles","border","setStyleAttribute","stroke-width","getValueFromAngle","getRange","rangeIndex","getMousePosition","pageX","pageY","elementRect","getBoundingClientRect","pageXOffset","ownerDocument","defaultView","pageYOffset","clientTop","documentElement","clientLeft","positionX","left","positionY","top","getElementSize","elementSize","tooltipData","templateElement","templateLength","calculateSum","from","to","values","sum","getRangeColor","ranges","min","max","currentRange","filter","rangeColor","linear","currentTime","startValue","endValue","duration","getCompleteArc","innerRadius","checkMinValue","getCompletePath","textTrim","maxWidth","label","i","substring","showTooltip","areaWidth","tooltip","toString","Theme","__extends","extendStatics","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","CustomizeOption","PathOption","_super","dashArray","_this","call","RectOption","rect","Rect","TextOption","VisibleLabels","__decorate","decorators","target","key","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Border","apply","Property","ChildProperty","Font","RangeTooltip","Complex","AnnotationTooltip","Margin","TooltipSettings","axisLabelFont","legendLabelFont","Line","Label","Range","Tick","Cap","NeedleTail","Animation","Annotation","Pointer","isPointerAnimation","Axis","visibleLabels","Collection","animationComplete","axisLabelRender","tooltipRender","gaugeMouseLeave","dragStart","dragMove","dragEnd","Annotations","renderAnnotation","index","availableSize","parentElement","annotations","map","annotation","annotationIndex","content","createTemplate","childElementCount","renderReactTemplates","axes","childElement","zIndex","autoAngle","argsData","cancel","name","textStyle","trigger","observedArgs","length_1","slice","annotationElement","updateLocation","currentRadius","midPoint","measureElementRect","description","getModuleName","destroy","bounds","GaugeTooltip","tooltipId","borderStyle","addEventListener","renderTooltip","gaugeId","getAttribute","touchArg","samePointerEle","isTooltipRender","type","changedTouches","pointerEle","svgRect_1","svgObject","axisRect_1","rect_1","currentPointer","currentAxis","angle_1","currentValue","visibleRange","tooltipFormat","labelStyle","customLabelFormat","intl","getNumberFormat","useGrouping","useGroupingSeparator","tooltipElement","tooltipEle","enablePointerDrag","showAtMousePosition","roundValue","roundedValue","pointerContent","RegExp","tooltipArgs","pointer","event","appendInBodyTag","tooltipRect","findPosition","pointerTextStyle","themeStyle","tooltipFontColor","tooltipTextOpacity","tooltipFontSize","svgTooltip","svgTooltipCreate","arrowInverted","tooltipFillOpacity","appendTo","tooltipPosition","isDrag","rangeSvgRect_1","rangeElementRect","rangeAxisRect_1","rect_2","rangeAngle_1","rangeTooltipFormat","rangeSettings","rangeFormat","roundStartValue","roundEndValue","startData_1","endData_1","rangeContent","enableRtl","rangeTooltipArgs","rangeTooltipTextStyle_1","rangeTemplate","checkParentAnnotationId","annotationTargetElement","annotationSvgRect","annotationElementRect","rect_3","currentAnnotation","annotationAngle","annotationContent","annotationSettings","annotationTooltipArgs","annotationTemplate","elementSizeAn","annotationTextStyle","fontSize","removeTooltip","clearTemplate","children","isAngular","gaugeRect","offsetLeft","tooltipLeft","tooltipArg","Tooltip","enable","data","enableRTL","enableAnimation","SanitizeHtmlHelper","sanitize","inverted","areaBounds","tooltipFillColor","controlInstance","className","child","roundingPlaces","toFixed","isTemplate","addLeft","addTop","addHeight","addWidth","isTooltipRemoved","getElementsByClassName","mouseUpHandler","clearTimeout","setTimeout","bind","isDestroyed","on","Browser","touchMoveEvent","touchEndEvent","removeEventListener","off","AxisRenderer","drawAxisOuterLine","background","setRangeColor","checkAngles","drawAxisLine","lineStyle","lineColor","allowComponentRender","drawAxisLabels","textWidth","textHeight","currentTextWidth","currentTextHeight","previousLocation","currentLocation","lastLabelLocation","lastLabelAngle","lastLabelAnchor","lastTextWidth","lastTextHeight","labelElement","createGroup","labelCollection","labelsVisible","checkLabelOpposed","majorTicks","minorTicks","labelPadding","shouldMaintainPadding","labelColor","nearSize","maxLabelSize","offset","farSize","hideIntersectingLabel","findAnchor","showLastLabel","hiddenLabel","offsetAxisLabelsize","getAxisLabelStartPosition","labelFontFamily","lastlabel","FindAxisLabelCollision","useRangeColor","previousWidth","previousHeight","currentWidth","currentHeight","actualLocation","anchorPosition","drawMinorTickLines","minorTickElements","minorLineStyle","minorInterval","interval","isRangeColor","minorTickColor","majorValues","calculateTicks","drawMajorTickLines","majorTickElements","majorLineStyle","majorTickColor","push","axisLineWidth","drawRangePath","rangeElement","colorIndex","roundedStartAngle","roundedEndAngle","gradientRangeColor","rangeSplitValue","linearGradient","colorStop","rangeStart","rangeEnd","isAngleCross360","rangeGap","startAndEndRangeGap","process","degreeValue","gradientModule","radialGradient","rangeColorLength","degreeRange","degreeRangeValue","gradientDegree","gradientAngle","gradientAntiAngle","getGradientColorString","roundedRangeAppendPathCalculation","ceil","rangeAppendPathCalculation","pathElement","drawAxisRange","startEndDifference","previousEndWidth","previousStartWidth","currentDistanceFromScale","calculateRangeRadius","calculateRangeRadiusWithPosition","rangeColors","theme","palette","toLowerCase","getRangePalette","PointerRenderer","drawPointers","animate","pointerElement","pointers","calculatePointerRadius","setPointerValue","animation","isPropertyChange","previousValue","doPointerAnimation","pointerRadiusForPosition","markerShape","pointerSize","markerOffset","rangeBarOffset","pointerWidth","markerWidth","drawNeedlePointer","pointerRadius","rectDirection","gradientColor","gradientTailColor","gradientCapColor","needle","needleTail","cap","needleStartWidth","needleEndWidth","mid","needleColor","needleTailColor","capColor","minRadius","oldStartValue","oldEndValue","angleValue","roundStartAngle","roundEndAngle","calculateTextElement","textangle","textlocation","String","drawMarkerPointer","gradientMarkerColor","shapeBasedOnPosition","pointerColor","textObject","visibility","animatePointer","markerHeight","imageUrl","drawRangeBarPointer","gradientBarColor","performRangeBarAnimation","performTextAnimation","performNeedleAnimation","timeStamp","val","progress","args","delay","sweepAngle","pointAngle","pointerValue","arg","AxisLayoutPanel","axisRenderer","pointerRenderer","measureAxis","measureAxisSize","calculateAxesRadius","totalRadius","rangeMaximumRadius","xMarginDiff","margin","right","yMarginDiff","bottom","_loop_1","this_1","moveToCenter","centerXpoint","centerYpoint","startPoint","endPoint","xDiff","yDiff","startXDiff","endXDiff","startYDiff","endYDiff","newPoint","calculateNumericInterval","calculateVisibleLabels","_i","_a","computeSize","farSizes","calculateAxisValues","calculateVisibleRange","calculateNiceInterval","maxValue","minValue","delta","circumference","desiredIntervalsCount","niceInterval","minInterval","log","currentInterval","_loop_2","axisLabelRenderSuccess","this_2","lastLabel","maxVal","getMaxLabelWidth","lineSize","outerHeight","innerHeight","heightForCross","majorTickOffset","minorTickOffset","labelOffset","axes_1","renderAxes","axesElements","clip-path","annotationsModule","drawClipPath","Location","LegendSettings","Legend","legendRegions","rowCount","pageButtonSize","pageXCollections","maxColumns","currentPage","pagingRegions","toggledIndexes","legend","legendSettings","legendID","click","getLegendOptions","legendCollection","j","legendText","LegendOptions","visible","shapeBorder","shapeWidth","shapeHeight","calculateLegendBounds","legendBounds","isVertical","getLegendBounds","getLocation","alignment","alignLegend","legendSize","padding","legendHeight","legendWidth","marginBottom","subtractThickness","renderLegend","firstLegend","findFirstLegendPosition","maxItemHeight","textSize","legendGroup","legendTranslateGroup","createLegendElements","totalPages","legendAxisGroup","textOptions","textPadding","shapePadding","count","previousLegend","legendOption","render","getRenderPoint","renderSymbol","renderText","cursor","toggleVisibility","isPaging","renderPagingElements","appendChildElement","textOption","paginggroup","grayColor","symbolOption","iconSize","clipPathHeight","clipRect","pageTextElement","translateX","translatePage","pagingText","page","pageNumber","translate","textContent","group","fontcolor","prevLegend","maxColumnWidth","textStartLoc","previousBound","isWithinBounds","totalRowCount","availablewidth","getAvailWidth","toggledIndex","legendItemsId_1","legendByIndex","Index","isToggled","changePage","rangeID","shapeID","textID","shapeElement","textElement_1","legendCollections","legendCollections_1","pageUp","pageText","tx","drawRectangle","legendItemsGroup","clippath","createClipPath","existChild","replaceChild","legendCollection_1","extraWidth","extraHeight","maximumWidth","rowWidth","columnWidth","columnHeight","legendEventArgs","getMaxColumn","setBounds","computedWidth","computedHeight","columns","maxPageColumn","move","mouseX","mouseY","legends","originalText","offsetWidth","legendRenderingCollections","titleRect","PdfExport","control","export","fileName","orientation","allowDownload","Promise","resolve","reject","attrs","PdfPageOrientation","Landscape","exportElement","cloneNode","backgroundColor","childNodes","window","URL","createObjectURL","Blob","XMLSerializer","serializeToString","image","Image","context","getContext","onload","drawImage","revokeObjectURL","PdfDocument","imageString","toDataURL","pageSettings","pages","add","graphics","PdfBitmap","save","src","ImageExport","isDownload","userAgent","svgData","outerHTML","triggerDownload","image_1","context_1","download","toLocaleLowerCase","dispatchEvent","MouseEvent","view","bubbles","cancelable","Print","print","elements","printWindow","open","outerWidth","moveTo","resizeTo","screen","availWidth","availHeight","htmlContent","getHTMLContent","beforePrintArgs","printFunction","div","forEach","Element","backgroundElement","getElementsByTagName","ColorStop","GradientPosition","LinearGradient","RadialGradient","Gradient","calculateLinearGradientPosition","x1","x2","y1","y2","getLinearGradientColor","colors","getCircularGradientColor","getGradientColor","gradientCount","gradientPosition","def","drawGradient","getRadialGradientColor","outerPosition","fx","innerPosition","fy","CircularGauge","isRangeUpdate","preRender","unWireEvents","initPrivateVariable","setCulture","createSvg","wireEvents","setTheme","calculateBounds","renderElements","renderComplete","titleFontColor","titleFontWeight","getThemeStyle","EventHandler","touchStartEvent","gaugeOnMouseDown","mouseMove","mouseEnd","gaugeOnMouseClick","gaugeRightClick","isPointer","mouseLeave","isTouch","resizeEvent","gaugeResize","setGaugeStyle","setMouseXY","legendModule","getMouseArgs","dragArgs","enableRangeDrag","svgElement","activePointer","dragPointInd","dragAxisInd","activeAxis","pointerDrag","activeRange","dragRangeInd","rangeDrag","notify","buttons","pointerType","preventDefault","stopPropagation","gaugeAxisLayoutPanel","previousValue1","avg","pointInd","axisInd","rangeInd","pointerInd","clientX","clientY","previousSize","currentSize","calculateSvgSize","classList","contains","touchAction","msTouchAction","msContentZooming","msUserSelect","webkitUserSelect","Internationalization","removeSvg","removeChild","firstChild","hasChildNodes","parentNode","collection","containerWidth","containerHeight","offsetHeight","borderWidth","join","radiusAndCenterCalculation","titleHeight","isUpperAngle","isLowerAngle","isFullPercent","radiusPercent","isUpper","isLower","widthRadius","centerX","centerY","allowMargin","heightValue","heightRadius","difference","title","titleStyle","renderBorder","renderTitle","titleSize","Number","tabIndex","enableAnimation_1","isProtectedOnChange","setAnnotationValue","isElementExist","secondaryElement","allowPrint","printModule","allowPdfExport","pdfExportModule","allowImageExport","imageExportModule","svgRect","setRangeValue","axisRange","oldRangeStart","oldRangeEnd","tooltipModule","requiredModules","modules","annotationEnable","member","getPersistData","addOnPersist","onPropertyChanged","newProp","oldProp","refreshBounds","refreshWithoutAnimation","isPointerValueSame","keys","axesPropertyLength","_b","collection_1","pointerPropertyLength","Event","NotifyPropertyChanges","Component"],"mappings":"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"}