{"version":3,"file":"ej2-treemap.min.js","sources":["../../src/treemap/utils/helper.js","../../src/treemap/model/theme.js","../../src/treemap/model/constants.js","../../src/treemap/model/base.js","../../src/treemap/layout/render-panel.js","../../src/treemap/model/print.js","../../src/treemap/model/image-export.js","../../src/treemap/model/pdf-export.js","../../src/treemap/treemap.js","../../src/treemap/layout/legend.js","../../src/treemap/user-interaction/highlight-selection.js","../../src/treemap/user-interaction/tooltip.js","../../src/global.js"],"sourcesContent":["import { createElement, compile, merge, isNullOrUndefined, remove, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\n/**\n * Specifies the size parameters.\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    return Size;\n}());\nexport { Size };\n/**\n *\n * @param {string} value - specifies the text.\n * @param {number} containerSize - specifies the container size value.\n * @returns {number} - Returns the number value which is converted from string.\n */\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Internal use of type rect\n *\n * @private\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return Rect;\n}());\nexport { Rect };\n/**\n * Internal use of rectangle options\n *\n * @private\n */\nvar RectOption = /** @class */ (function () {\n    function RectOption(id, fill, border, opacity, rect, dashArray) {\n        this.y = rect.y;\n        this.x = rect.x;\n        this.height = rect.height;\n        this.width = rect.width;\n        this.id = id;\n        this.fill = fill;\n        this.opacity = opacity;\n        this.stroke = border.color;\n        this['stroke-width'] = border.width;\n        this['stroke-dasharray'] = dashArray;\n    }\n    return RectOption;\n}());\nexport { RectOption };\nvar PathOption = /** @class */ (function () {\n    function PathOption(id, fill, width, color, opacity, dashArray, d) {\n        this.id = id;\n        this.opacity = opacity;\n        this.fill = fill;\n        this.stroke = color;\n        this['stroke-width'] = width;\n        this['stroke-dasharray'] = dashArray;\n        this.d = d;\n    }\n    return PathOption;\n}());\nexport { PathOption };\n/**\n * Function to measure the height and width of the text.\n *\n * @param  {string} text - Specifies the text.\n * @param  {FontModel} font - Specifies the font.\n * @returns {Size} - Returns the size.\n * @private\n */\nexport function measureText(text, font) {\n    var measureObject = document.getElementById('treeMapMeasureText');\n    if (measureObject === null) {\n        measureObject = createElement('text', { id: 'treeMapMeasureText' });\n        document.body.appendChild(measureObject);\n    }\n    measureObject.innerHTML = SanitizeHtmlHelper.sanitize(text);\n    measureObject.style.position = 'absolute';\n    measureObject.style.fontSize = font.size;\n    measureObject.style.fontWeight = font.fontWeight;\n    measureObject.style.fontStyle = font.fontStyle;\n    measureObject.style.fontFamily = font.fontFamily;\n    measureObject.style.visibility = 'hidden';\n    measureObject.style.top = '-100';\n    measureObject.style.left = '0';\n    measureObject.style.whiteSpace = 'nowrap';\n    // For bootstrap line height issue\n    measureObject.style.lineHeight = 'normal';\n    return new Size(measureObject.clientWidth, measureObject.clientHeight);\n}\n/**\n * Internal use of text options\n *\n * @private\n */\nvar TextOption = /** @class */ (function () {\n    function TextOption(id, x, y, anchor, text, transform, baseLine, connectorText) {\n        if (transform === void 0) { transform = ''; }\n        this.transform = '';\n        this.baseLine = 'auto';\n        this.id = id;\n        this.text = text;\n        this.transform = transform;\n        this.anchor = anchor;\n        this.x = x;\n        this.y = y;\n        this.baseLine = baseLine;\n        this.connectorText = connectorText;\n    }\n    return TextOption;\n}());\nexport { TextOption };\n/**\n * Trim the title text\n *\n * @param {number} maxWidth - Specifies the maximum width\n * @param {string} text - Specifies the text\n * @param {FontModel} font - Specifies the font\n * @returns {string} - Returns the string\n * @private\n */\nexport function textTrim(maxWidth, text, font) {\n    var label = text;\n    var size = measureText(text, font).width;\n    if (size > maxWidth) {\n        var textLength = text.length;\n        for (var i = textLength - 1; i >= 0; --i) {\n            label = text.substring(0, i) + '...';\n            size = measureText(label, font).width;\n            if (size <= maxWidth || label.length < 4) {\n                if (label.length < 4) {\n                    label = ' ';\n                }\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/**\n * Specifies the location parameters.\n */\nvar Location = /** @class */ (function () {\n    function Location(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return Location;\n}());\nexport { Location };\n/**\n * Method to calculate x position of title\n *\n * @param {Rect} location - Specifies the location of text.\n * @param {Alignment} alignment - Specifies the alignment of the text.\n * @param {Size} textSize - Specifies the size of the text.\n * @param {type} type - Specifies whether the provided text is title or subtitle.\n * @returns {Location} - Returns the location of text.\n * @private\n */\nexport function findPosition(location, alignment, textSize, type) {\n    var x;\n    switch (alignment) {\n        case 'Near':\n            x = location.x;\n            break;\n        case 'Center':\n            x = (type === 'title') ? (location.width / 2 - textSize.width / 2) :\n                ((location.x + (location.width / 2)) - textSize.width / 2);\n            break;\n        case 'Far':\n            x = (type === 'title') ? (location.width - location.y - textSize.width) :\n                ((location.x + location.width) - textSize.width);\n            break;\n    }\n    var y = (type === 'title') ? location.y + (textSize.height / 2) : ((location.y + location.height / 2) + textSize.height / 2);\n    return new Location(x, y);\n}\n/**\n *\n * @param {SvgRenderer} renderer - Specifies the rendering element of the SVG.\n * @param {any} renderOptions - Specifies the settings of the text.\n * @param {string} text - Specifies the text.\n * @returns {HTMLElement} - Returns the HTML element for the text.\n */\nexport function createTextStyle(renderer, renderOptions, text) {\n    var htmlObject = renderer.createText(renderOptions, text);\n    htmlObject.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n    htmlObject.style['user-select'] = 'none';\n    htmlObject.style['-moz-user-select'] = 'none';\n    htmlObject.style['-webkit-touch-callout'] = 'none';\n    htmlObject.style['-webkit-user-select'] = 'none';\n    htmlObject.style['-khtml-user-select'] = 'none';\n    htmlObject.style['-ms-user-select'] = 'none';\n    htmlObject.style['-o-user-select'] = 'none';\n    return htmlObject;\n}\n/**\n * Internal rendering of text\n *\n * @param {TextOption} options - Specifies the text option\n * @param {FontModel} font - Specifies the font model\n * @param {string} color - Specifies the color\n * @param {HTMLElement | Element} parent - Specifies the parent element of the text\n * @param {boolean} isMinus - Specifies the boolean value\n * @returns {Element} - Returns the element\n * @private\n */\nexport function renderTextElement(options, font, color, parent, isMinus) {\n    if (isMinus === void 0) { isMinus = false; }\n    var renderOptions = {\n        'font-size': font.size,\n        'font-style': font.fontStyle,\n        'font-family': font.fontFamily,\n        'font-weight': font.fontWeight,\n        'text-anchor': options.anchor,\n        'transform': options.transform,\n        'opacity': font.opacity,\n        'dominant-baseline': options.baseLine,\n        'id': options.id,\n        'x': options.x,\n        'y': options.y,\n        'fill': color\n    };\n    var text = typeof options.text === 'string' ? options.text : isMinus ? options.text[options.text.length - 1] : options.text[0];\n    var tspanElement;\n    var renderer = new SvgRenderer('');\n    var height;\n    var htmlObject;\n    var breadCrumbText = !isNullOrUndefined(text) && !isNullOrUndefined(options.connectorText) ?\n        (text.search(options.connectorText[1]) >= 0) : false;\n    if (breadCrumbText) {\n        var drilledLabel = text;\n        var spacing = 5;\n        var drillLevelText = drilledLabel.split('#');\n        for (var z = 0; z < drillLevelText.length; z++) {\n            var drillText = (drillLevelText[z].search(options.connectorText) !== -1 &&\n                !isNullOrUndefined(options.connectorText)) ?\n                options.connectorText : drillLevelText[z];\n            renderOptions['id'] = options.id + '_' + z;\n            htmlObject = createTextStyle(renderer, renderOptions, drillText);\n            if (z % 2 === 0 && z !== 0) {\n                var re = /\\s+/g;\n                drillText = drillText.replace(re, '&nbsp');\n            }\n            var size = measureText(drillText, font);\n            renderOptions['x'] = z !== 0 ? renderOptions['x'] + size.width : renderOptions['x'] + size.width + spacing;\n            parent.appendChild(htmlObject);\n        }\n    }\n    else {\n        htmlObject = createTextStyle(renderer, renderOptions, text);\n        parent.appendChild(htmlObject);\n    }\n    if (typeof options.text !== 'string' && options.text.length > 1) {\n        for (var i = 1, len = options.text.length; i < len; i++) {\n            height = (measureText(options.text[i], font).height);\n            tspanElement = renderer.createTSpan({\n                'x': options.x, 'id': options.id,\n                'y': (options.y) + (i * height)\n            }, options.text[i]);\n            htmlObject.appendChild(tspanElement);\n        }\n        parent.appendChild(htmlObject);\n    }\n    return htmlObject;\n}\n/**\n *\n * @param {string} targetId - Specifies the id of the element to which template is to be appended.\n * @param {Element} targetElement - Specifies the element to which template is to be appended.\n * @param {string} contentItemTemplate - Specifies the content to be appended as template.\n * @returns {void}\n */\nexport function setItemTemplateContent(targetId, targetElement, contentItemTemplate) {\n    var itemSelect = targetId.split('_RectPath')[0];\n    var itemTemplate;\n    if (targetId.indexOf('_LabelTemplate') > -1) {\n        itemTemplate = targetElement;\n    }\n    else {\n        itemTemplate = document.querySelector('#' + itemSelect + '_LabelTemplate');\n    }\n    if (!isNullOrUndefined(itemTemplate)) {\n        itemTemplate.innerHTML = contentItemTemplate;\n    }\n}\n/**\n *\n * @param {string} id - Specifies the id of the element.\n * @returns {Element} - Returns the element.\n */\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/**\n *\n * @param {any} a - Specifies the first order of TreeMap leaf elements.\n * @param {any} b - Specifies the second order of TreeMap leaf elements.\n * @returns {number} - Returns the order of the TreeMap leaf element.\n */\nexport function itemsToOrder(a, b) {\n    return a['weight'] === b['weight'] ? 0 : a['weight'] < b['weight'] ? 1 : -1;\n}\n/**\n *\n * @param {string[]} source - Specifies the data from the data source.\n * @param {string} pathName - Specifies the path name in the data source.\n * @param {any} processData - Specifies the data source object.\n * @param {TreeMap} treemap - Specifies the treemap instance.\n * @returns {boolean} - Specifies whether data is available in the data source or not.\n */\nexport function isContainsData(source, pathName, processData, treemap) {\n    var isExist = false;\n    var name = '';\n    var path;\n    var leaf = treemap.leafItemSettings;\n    for (var i = 0; i < source.length; i++) {\n        path = treemap.levels[i] ? treemap.levels[i].groupPath : leaf.labelPath ? leaf.labelPath :\n            treemap.weightValuePath;\n        var data = processData[path] || 'undefined';\n        if (source[i] === data) {\n            name += data + (i === source.length - 1 ? '' : '#');\n            if (name === pathName) {\n                isExist = true;\n                break;\n            }\n        }\n    }\n    return isExist;\n}\n/**\n *\n * @param {any} data - Specifies the data to which the children elements to be found.\n * @returns {any} - Returns the children elements of the TreeMap leaf element.\n */\nexport function findChildren(data) {\n    var children;\n    if (data) {\n        var keys = Object.keys(data);\n        children = {};\n        for (var i = 0; i < keys.length; i++) {\n            if (data[keys[i]] instanceof Array) {\n                children['values'] = data[keys[i]];\n                children['key'] = keys[i];\n                break;\n            }\n        }\n    }\n    return children;\n}\n/**\n *\n * @param {any} data - Specifies the data to which highlight must be done.\n * @param {items} items - Specifies the data source items.\n * @param {string} mode - Specifies the mode of highlight.\n * @param {TreeMap} treeMap - Specifies the treemap instance.\n * @returns {string[]} - Returns the highlighted items.\n */\nexport function findHightLightItems(data, items, mode, treeMap) {\n    if (mode === 'Child') {\n        items.push(data['levelOrderName']);\n        var children = findChildren(data)['values'];\n        if (children && children.length > 0) {\n            for (var i = 0; i < children.length; i++) {\n                if (items.indexOf(children[i]['levelOrderName']) === -1) {\n                    items.push(children[i]['levelOrderName']);\n                }\n            }\n            for (var j = 0; j < children.length; j++) {\n                findHightLightItems(children[j], items, mode, treeMap);\n            }\n        }\n    }\n    else if (mode === 'Parent') {\n        if (typeof data['levelOrderName'] === 'string' && items.indexOf(data['levelOrderName']) === -1) {\n            items.push(data['levelOrderName']);\n            findHightLightItems(data['parent'], items, mode, treeMap);\n        }\n    }\n    else if (mode === 'All') {\n        var parentName = data['levelOrderName'].split('#')[0];\n        var currentItem = void 0;\n        for (var i = 0; i < treeMap.layout.renderItems.length; i++) {\n            currentItem = treeMap.layout.renderItems[i];\n            if ((currentItem['levelOrderName']).indexOf(parentName) > -1 && items.indexOf(currentItem['levelOrderName']) === -1) {\n                items.push(currentItem['levelOrderName']);\n            }\n        }\n    }\n    else {\n        items.push(data['levelOrderName']);\n    }\n    return items;\n}\n/**\n * Function to compile the template function for maps.\n *\n * @param {string} template - Specifies the template\n * @returns {Function} - Returns the template function\n * @private\n */\nexport function getTemplateFunction(template) {\n    var templateFn = null;\n    try {\n        if (typeof template !== 'function' && document.querySelectorAll(template).length) {\n            templateFn = compile(document.querySelector(template).innerHTML.trim());\n        }\n        else {\n            templateFn = compile(template);\n        }\n    }\n    catch (e) {\n        templateFn = compile(template);\n    }\n    return templateFn;\n}\n/**\n * @private\n * @param {HTMLCollection} element - Specifies the element\n * @param {string} labelId - Specifies the label id\n * @param {Object} data - Specifies the data\n * @returns {HTMLElement} - Returns the element\n */\nexport function convertElement(element, labelId, data) {\n    var childElement = createElement('div', {\n        id: labelId\n    });\n    childElement.style.cssText = 'position: absolute;pointer-events: auto;';\n    var elementLength = element.length;\n    while (elementLength > 0) {\n        childElement.appendChild(element[0]);\n        elementLength--;\n    }\n    var templateHtml = childElement.innerHTML;\n    var keys = Object.keys(data);\n    for (var i = 0; i < keys.length; i++) {\n        var regExp = RegExp;\n        templateHtml = templateHtml.replace(new regExp('{{:' + keys[i] + '}}', 'g'), data[keys[i].toString()]);\n    }\n    childElement.innerHTML = templateHtml;\n    return childElement;\n}\n/**\n *\n * @param {Rect} rect - Specifies the area.\n * @param {LabelPosition} position - Specifies the position\n * @param {Size} labelSize - Specifies the label size.\n * @param {string} type - Specifies the type.\n * @param {TreeMap} treemap - Specifies the treemap instance.\n * @returns {Location} - Returns the text location.\n */\nexport function findLabelLocation(rect, position, labelSize, type, treemap) {\n    var location = new Location(0, 0);\n    var padding = 5;\n    var paddings = 2;\n    var x = (type === 'Template') ? treemap.areaRect.x : 0;\n    var y = (type === 'Template') ? treemap.areaRect.y : 0;\n    location.x = (Math.abs(x - ((position.indexOf('Left') > -1) ? rect.x + padding : !(position.indexOf('Right') > -1) ?\n        rect.x + ((rect.width / 2) - (labelSize.width / 2)) : (rect.x + rect.width) - labelSize.width))) - paddings;\n    if (treemap.enableDrillDown && (treemap.renderDirection === 'BottomLeftTopRight'\n        || treemap.renderDirection === 'BottomRightTopLeft')) {\n        location.y = Math.abs((rect.y + rect.height) - labelSize.height + padding);\n    }\n    else {\n        location.y = Math.abs(y - ((position.indexOf('Top') > -1) ? (type === 'Template' ? rect.y : rect.y + labelSize.height) :\n            !(position.indexOf('Bottom') > -1) ? type === 'Template' ? (rect.y + ((rect.height / 2) - (labelSize.height / 2))) :\n                (rect.y + (rect.height / 2) + labelSize.height / 4) : (rect.y + rect.height) - labelSize.height));\n    }\n    return location;\n}\n/**\n *\n * @param {HTMLElement} element - Specifies the element to be measured.\n * @param {HTMLElement} parentElement - Specifies the parent element of the element to be measured.\n * @returns {Size} - Returns the element size.\n */\nexport function measureElement(element, parentElement) {\n    var size = new Size(0, 0);\n    parentElement.appendChild(element);\n    size.height = element.offsetHeight;\n    size.width = element.offsetWidth;\n    var measureElementId = document.getElementById(element.id);\n    measureElementId.parentNode.removeChild(measureElementId);\n    return size;\n}\n/**\n *\n * @param {Rect} rect - Specifies the area.\n * @returns {number} - Returns the area width.\n */\nexport function getArea(rect) {\n    return (rect.width - rect.x) * (rect.height - rect.y);\n}\n/**\n *\n * @param {Rect} input - Specifies input for the calculation.\n * @returns {number} - Returns the shortest edge.\n */\nexport function getShortestEdge(input) {\n    var container = convertToContainer(input);\n    var width = container.width;\n    var height = container.height;\n    var result = Math.min(width, height);\n    return result;\n}\n/**\n *\n * @param {Rect} rect - Specifies the rectangle bounds of the container.\n * @returns {Rect} - Returns the rectangle bounds.\n */\nexport function convertToContainer(rect) {\n    var x = rect.x;\n    var y = rect.y;\n    var width = rect.width;\n    var height = rect.height;\n    return {\n        x: x,\n        y: y,\n        width: width - x,\n        height: height - y\n    };\n}\n/**\n *\n * @param {Rect} container - Specifies the rectangle bounds of the container.\n * @returns {Rect} - Returns the rectangle bounds.\n */\nexport function convertToRect(container) {\n    var xOffset = container.x;\n    var yOffset = container.y;\n    var width = container.width;\n    var height = container.height;\n    return {\n        x: xOffset,\n        y: yOffset,\n        width: xOffset + width,\n        height: yOffset + height\n    };\n}\n/**\n *\n * @param {number} pageX - Specifies the horizontal position of the mouse location.\n * @param {number} pageY - Specifies the vertical position of the mouse location.\n * @param {Element} element - Specifies the element to which the click is done.\n * @returns {Location} - Returns the clicked location.\n */\nexport function getMousePosition(pageX, pageY, element) {\n    var elementRect = element.getBoundingClientRect();\n    var pageXOffset = element.ownerDocument.defaultView.pageXOffset;\n    var pageYOffset = element.ownerDocument.defaultView.pageYOffset;\n    var clientTop = element.ownerDocument.documentElement.clientTop;\n    var clientLeft = element.ownerDocument.documentElement.clientLeft;\n    var positionX = elementRect.left + pageXOffset - clientLeft;\n    var positionY = elementRect.top + pageYOffset - clientTop;\n    return new Location((pageX - positionX), (pageY - positionY));\n}\n/**\n *\n * @param {ColorMappingModel[]} colorMapping - Specifies the color mapping instance.\n * @param {string} equalValue - Specifies the equal value.\n * @param {number | string} value - Specifies the range value.\n * @returns {any} - Returns the color mapping object.\n * @private\n */\nexport function colorMap(colorMapping, equalValue, value) {\n    var fill;\n    var paths = [];\n    var opacity;\n    if (isNullOrUndefined(equalValue) && (isNullOrUndefined(value) && isNaN(value))) {\n        return null;\n    }\n    for (var i = 0; i < colorMapping.length; i++) {\n        var isEqualColor = false;\n        var dataValue = value;\n        if (!isNullOrUndefined(colorMapping[i].from) && !isNullOrUndefined(colorMapping[i].to)\n            && !isNullOrUndefined(colorMapping[i].value)) {\n            if ((value >= colorMapping[i].from && colorMapping[i].to >= value) &&\n                (colorMapping[i].value === equalValue)) {\n                isEqualColor = true;\n                if (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') {\n                    fill = !isEqualColor ? colorCollections(colorMapping[i], dataValue) : colorMapping[i].color[0];\n                }\n                else {\n                    fill = colorMapping[i].color;\n                }\n            }\n        }\n        else if ((!isNullOrUndefined(colorMapping[i].from) && !isNullOrUndefined(colorMapping[i].to))\n            || !isNullOrUndefined((colorMapping[i].value))) {\n            if ((value >= colorMapping[i].from && colorMapping[i].to >= value)\n                || (colorMapping[i].value === equalValue)) {\n                if (colorMapping[i].value === equalValue) {\n                    isEqualColor = true;\n                }\n                if (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') {\n                    fill = !isEqualColor ? colorCollections(colorMapping[i], dataValue) : colorMapping[i].color[0];\n                }\n                else {\n                    fill = colorMapping[i].color;\n                }\n            }\n        }\n        if (((value >= colorMapping[i].from && value <= colorMapping[i].to)\n            || (colorMapping[i].value === equalValue))\n            && !isNullOrUndefined(colorMapping[i].minOpacity) && !isNullOrUndefined(colorMapping[i].maxOpacity)\n            && fill) {\n            opacity = deSaturationColor(colorMapping[i], value);\n        }\n        if ((fill === '' || isNullOrUndefined(fill))\n            && isNullOrUndefined(colorMapping[i].from) && isNullOrUndefined(colorMapping[i].to)\n            && isNullOrUndefined(colorMapping[i].minOpacity) && isNullOrUndefined(colorMapping[i].maxOpacity)\n            && isNullOrUndefined(colorMapping[i].value)) {\n            fill = (Object.prototype.toString.call(colorMapping[i].color) === '[object Array]') ?\n                colorMapping[i].color[0] : colorMapping[i].color;\n        }\n        opacity = !isNullOrUndefined(opacity) ? opacity : '1';\n        paths.push(fill);\n    }\n    for (var j = paths.length - 1; j >= 0; j--) {\n        fill = paths[j];\n        j = (fill) ? -1 : j;\n    }\n    return { fill: fill, opacity: opacity };\n}\n/**\n *\n * @param {ColorMappingModel} colorMapping - Specifies the color mapping object.\n * @param {number} rangeValue - Specifies the range value.\n * @returns {string} - Returns the opacity for the color mapping.\n * @private\n */\nexport function deSaturationColor(colorMapping, rangeValue) {\n    var opacity = 1;\n    if ((rangeValue >= colorMapping.from && rangeValue <= colorMapping.to)) {\n        var ratio = (rangeValue - colorMapping.from) / (colorMapping.to - colorMapping.from);\n        opacity = (ratio * (colorMapping.maxOpacity - colorMapping.minOpacity)) + colorMapping.minOpacity;\n    }\n    return opacity.toString();\n}\n/**\n *\n * @param {ColorMappingModel} colorMap - Specifies the color mapping object.\n * @param {number} value - Specifies the range value.\n * @returns {string} - Returns the fill color.\n */\nexport function colorCollections(colorMap, value) {\n    var gradientFill = getColorByValue(colorMap, value);\n    return gradientFill;\n}\n/**\n *\n * @param {number} r - Specifies the red color value.\n * @param {number} g - Specifies the green color value.\n * @param {number} b - Specifies the blue color value.\n * @returns {string} - Returns the fill color.\n */\nexport function rgbToHex(r, g, b) {\n    return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\n/**\n *\n * @param {ColorMappingModel} colorMap - Specifies the color mapping.\n * @param {number} value - Specifies the range value.\n * @returns {string} - Returns the fill color.\n */\nexport function getColorByValue(colorMap, value) {\n    var color = '';\n    var rbg;\n    if (Number(value) === colorMap.from) {\n        color = colorMap.color[0];\n    }\n    else if (Number(value) === colorMap.to) {\n        color = colorMap.color[colorMap.color.length - 1];\n    }\n    else {\n        rbg = getGradientColor(Number(value), colorMap);\n        color = rgbToHex(rbg.r, rbg.g, rbg.b);\n    }\n    return color;\n}\n/**\n *\n * @param {number} value - Specifies the range value.\n * @param {ColorMappingModel} colorMap - Specifies the color mapping.\n * @returns {ColorValue} - Returns the color value object.\n */\nexport function getGradientColor(value, colorMap) {\n    var previousOffset = colorMap.from;\n    var nextOffset = colorMap.to;\n    var percent = 0;\n    var full = nextOffset - previousOffset;\n    var midColor;\n    percent = (value - previousOffset) / full;\n    var previousColor;\n    var nextColor;\n    if (colorMap.color.length <= 2) {\n        previousColor = colorMap.color[0].charAt(0) === '#' ? colorMap.color[0] : colorNameToHex(colorMap.color[0]);\n        nextColor = colorMap.color[colorMap.color.length - 1].charAt(0) === '#' ?\n            colorMap.color[colorMap.color.length - 1] : colorNameToHex(colorMap.color[colorMap.color.length - 1]);\n    }\n    else {\n        previousColor = colorMap.color[0].charAt(0) === '#' ? colorMap.color[0] : colorNameToHex(colorMap.color[0]);\n        nextColor = colorMap.color[colorMap.color.length - 1].charAt(0) === '#' ?\n            colorMap.color[colorMap.color.length - 1] : colorNameToHex(colorMap.color[colorMap.color.length - 1]);\n        var a = full / (colorMap.color.length - 1);\n        var b = void 0;\n        var c = void 0;\n        var length_1 = colorMap.color.length - 1;\n        var splitColorValueOffset = [];\n        var splitColor = {};\n        for (var j = 1; j < length_1; j++) {\n            c = j * a;\n            b = previousOffset + c;\n            splitColor = { b: b, color: colorMap.color[j] };\n            splitColorValueOffset.push(splitColor);\n        }\n        for (var i = 0; i < splitColorValueOffset.length; i++) {\n            if (previousOffset <= value && value <= splitColorValueOffset[i]['b'] && i === 0) {\n                midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                    splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                nextColor = midColor;\n                percent = value < splitColorValueOffset[i]['b'] ? 1 - Math.abs((value - splitColorValueOffset[i]['b']) / a)\n                    : (value - splitColorValueOffset[i]['b']) / a;\n            }\n            else if (splitColorValueOffset[i]['b'] <= value && value <= nextOffset && i === (splitColorValueOffset.length - 1)) {\n                midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                    splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                previousColor = midColor;\n                percent = value < splitColorValueOffset[i]['b'] ?\n                    1 - Math.abs((value - splitColorValueOffset[i]['b']) / a) : (value - splitColorValueOffset[i]['b']) / a;\n            }\n            if (i !== splitColorValueOffset.length - 1 && i < splitColorValueOffset.length) {\n                if (splitColorValueOffset[i]['b'] <= value && value <= splitColorValueOffset[i + 1]['b']) {\n                    midColor = splitColorValueOffset[i]['color'].charAt(0) === '#' ?\n                        splitColorValueOffset[i]['color'] : colorNameToHex(splitColorValueOffset[i]['color']);\n                    previousColor = midColor;\n                    nextColor = splitColorValueOffset[i + 1]['color'].charAt(0) === '#' ?\n                        splitColorValueOffset[i + 1]['color'] : colorNameToHex(splitColorValueOffset[i + 1]['color']);\n                    percent = Math.abs((value - splitColorValueOffset[i + 1]['b'])) / a;\n                }\n            }\n        }\n    }\n    return getPercentageColor(percent, previousColor, nextColor);\n}\n/**\n *\n * @param {number} percent - Specifies the percentage of the color.\n * @param {number} previous - Specifies the previous color.\n * @param {number} next - Specifies the next color.\n * @returns {ColorValue} - Returns the color value object.\n */\nexport function getPercentageColor(percent, previous, next) {\n    var nextColor = next.split('#')[1];\n    var prevColor = previous.split('#')[1];\n    var r = getPercentage(percent, parseInt(prevColor.substr(0, 2), 16), parseInt(nextColor.substr(0, 2), 16));\n    var g = getPercentage(percent, parseInt(prevColor.substr(2, 2), 16), parseInt(nextColor.substr(2, 2), 16));\n    var b = getPercentage(percent, parseInt(prevColor.substr(4, 2), 16), parseInt(nextColor.substr(4, 2), 16));\n    return new ColorValue(r, g, b);\n}\n/**\n *\n * @param {number} percent - Specifies the percentage of the color.\n * @param {number} previous - Specifies the previous color.\n * @param {number} next - Specifies the next color.\n * @returns {number} - Returns the color value.\n */\nexport function getPercentage(percent, previous, next) {\n    var full = next - previous;\n    return Math.round((previous + (full * percent)));\n}\n/**\n *\n * @param {number} maximumWidth - Specifies the length of the text.\n * @param {string} dataLabel - Specifies the label.\n * @param {FontModel} font - Specifies the font of the label.\n * @returns {string[]} - Returns the labels.\n */\nexport function wordWrap(maximumWidth, dataLabel, font) {\n    var textCollection = dataLabel.split(' ');\n    var label = '';\n    var labelCollection = [];\n    var text;\n    for (var i = 0, len = textCollection.length; i < len; i++) {\n        text = textCollection[i];\n        if (measureText(label.concat(text), font).width < maximumWidth) {\n            label = label.concat((label === '' ? '' : ' ') + text);\n        }\n        else {\n            if (label !== '') {\n                labelCollection.push(textTrim(maximumWidth, label, font));\n                label = text;\n            }\n            else {\n                labelCollection.push(textTrim(maximumWidth, text, font));\n                text = '';\n            }\n        }\n        if (label && i === len - 1) {\n            labelCollection.push(textTrim(maximumWidth, label, font));\n        }\n    }\n    return labelCollection;\n}\n/**\n *\n * @param {number} maxWidth - Specifies the length of the text.\n * @param {string} label - Specifies the label.\n * @param {FontModel} font - Specifies the font of the label.\n * @returns {string[]} - Returns the labels.\n */\nexport function textWrap(maxWidth, label, font) {\n    var resultText = [];\n    var currentLength = 0;\n    var totalWidth = measureText(label, font).width;\n    var totalLength = label.length;\n    if (maxWidth >= totalWidth) {\n        resultText.push(label);\n        return resultText;\n    }\n    else {\n        for (var i = label.length; i > currentLength; i--) {\n            var sliceString = label.slice(currentLength, i);\n            totalWidth = measureText(sliceString, font).width;\n            if (totalWidth <= maxWidth) {\n                resultText.push(sliceString);\n                currentLength += sliceString.length;\n                if (totalLength === currentLength) {\n                    return resultText;\n                }\n                i = totalLength + 1;\n            }\n        }\n    }\n    return resultText;\n}\n/**\n * hide function\n *\n * @param {number} maxWidth - Specifies the maximum width.\n * @param {number} maxHeight - Specifies the maximum height.\n * @param {string} text - Specifies the text.\n * @param {FontModel} font - Specifies the font.\n * @returns {string} - Returns the hidden text.\n * @private\n */\nexport function hide(maxWidth, maxHeight, text, font) {\n    var hideText = text;\n    var textSize = measureText(text, font);\n    hideText = (textSize.width > maxWidth || textSize.height > maxHeight) ? ' ' : text;\n    return hideText;\n}\n/**\n *\n * @param {number} a - Specifies the first value of the leaf.\n * @param {number} b - Specifies the second value of the leaf.\n * @returns {number} - Returns whether values are equal or not.\n */\nexport function orderByArea(a, b) {\n    if (a['itemArea'] === b['itemArea']) {\n        return 0;\n    }\n    else if (a['itemArea'] < b['itemArea']) {\n        return 1;\n    }\n    return -1;\n}\n/**\n *\n * @param {TreeMap} treemap - Specifies the treemap instance.\n * @param {Element} element - Specifies the selected TreeMap leaf item.\n * @param {string} className -Specifies the selected class name.\n * @returns {void}\n */\nexport function maintainSelection(treemap, element, className) {\n    var elementId = treemap.levelSelection;\n    if (elementId) {\n        for (var index = 0; index < elementId.length; index++) {\n            if (element.getAttribute('id') === elementId[index]) {\n                if (element.childElementCount > 0) {\n                    element.children[0].setAttribute('class', className);\n                    applyOptions(element.childNodes[0], {\n                        border: treemap.selectionSettings.border, fill: treemap.selectionSettings.fill,\n                        opacity: treemap.selectionSettings.opacity\n                    });\n                }\n            }\n            else {\n                element.setAttribute('class', '');\n            }\n        }\n    }\n}\n/**\n *\n * @param {TreeMap} treemap - Specifies the treemap instance.\n * @param {Element} legendGroup - Specifies the selected element.\n * @returns {void}\n */\nexport function legendMaintain(treemap, legendGroup) {\n    var elementId = treemap.legendId;\n    if (elementId) {\n        for (var i = 0; i < elementId.length; i++) {\n            for (var j = 0; j < legendGroup.childElementCount; j++) {\n                if (legendGroup.childNodes[j]['id'] === elementId[i]) {\n                    var treemapSVGRectElement = legendGroup.childNodes[j];\n                    treemapSVGRectElement.setAttribute('fill', treemap.selectionSettings.fill);\n                    treemapSVGRectElement.setAttribute('stroke', treemap.selectionSettings.border.color);\n                    treemapSVGRectElement.setAttribute('stroke-width', (treemap.selectionSettings.border.width).toString());\n                    treemapSVGRectElement.setAttribute('opacity', treemap.selectionSettings.opacity);\n                }\n            }\n        }\n    }\n}\n/**\n *\n * @param {HTMLCollection} elements - Specifies the selected TreeMap element.\n * @param {string} type - Specifies the selection type.\n * @param {TreeMap} treemap - Specifies the TreeMap instance.\n * @returns {void}\n */\nexport function removeClassNames(elements, type, treemap) {\n    var element;\n    var options = {};\n    for (var j = 0; j < elements.length; j++) {\n        element = isNullOrUndefined(elements[j].childNodes[0]) ? elements[j] :\n            elements[j].childNodes[0];\n        options = treemap.layout.renderItems[parseFloat(element.id.split('_Item_Index_')[1])]['options'];\n        applyOptions(element, options);\n        elements[j].classList.remove(type);\n        j -= 1;\n    }\n}\n/**\n *\n * @param {SVGPathElement} element - Specifies the SVG path element.\n * @param {any} options - Specifies the settings for the SVG path element.\n * @returns {void}\n */\nexport function applyOptions(element, options) {\n    element.setAttribute('opacity', options['opacity']);\n    if (!isNullOrUndefined(options['fill'])) {\n        element.setAttribute('fill', options['fill']);\n    }\n    element.setAttribute('stroke', options['border']['color']);\n    element.setAttribute('stroke-width', options['border']['width']);\n}\n/**\n *\n * @param {string} format - Specifies the format value.\n * @param {any} data - Specifies the data source object.\n * @param {TreeMap} treemap - Specifies the TreeMap instance.\n * @returns {string} - Returns the formatted text.\n */\nexport function textFormatter(format, data, treemap) {\n    if (isNullOrUndefined(format)) {\n        return null;\n    }\n    var keys = Object.keys(data);\n    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n        var key = keys_1[_i];\n        format = format.split('${' + key + '}').join(formatValue(data[key], treemap).toString());\n    }\n    return format;\n}\n/**\n *\n * @param {number} value - Specifies the text to be formatted.\n * @param {TreeMap} treemap - Specifies the TreeMap instance.\n * @returns {string | number} - Returns the formatted text.\n */\nexport function formatValue(value, treemap) {\n    var formatValue;\n    var formatFunction;\n    if (treemap.format && !isNaN(Number(value))) {\n        formatFunction = treemap.intl.getNumberFormat({ format: treemap.format, useGrouping: treemap.useGroupingSeparator });\n        formatValue = formatFunction(Number(value));\n    }\n    else {\n        formatValue = value;\n    }\n    return formatValue ? formatValue : '';\n}\n/**\n * @private\n */\nvar ColorValue = /** @class */ (function () {\n    function ColorValue(r, g, b) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n    }\n    return ColorValue;\n}());\nexport { ColorValue };\n/**\n * @param {ColorValue} value - Specfies the color value\n * @returns {string} - Returns the string\n * @private\n */\nexport function convertToHexCode(value) {\n    return '#' + componentToHex(value.r) + componentToHex(value.g) + componentToHex(value.b);\n}\n/**\n * @param {number} value - Specifies the value\n * @returns {string} - Returns the string\n * @private */\nexport function componentToHex(value) {\n    var hex = value.toString(16);\n    return hex.length === 1 ? '0' + hex : hex;\n}\n/**\n * @param {string} hex - Specifies the hex value\n * @returns {ColorValue} - Returns the color value\n * @private\n */\nexport function convertHexToColor(hex) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? new ColorValue(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)) :\n        new ColorValue(255, 255, 255);\n}\n/**\n * @param {string} color - Specifies the color\n * @returns {string} - Returns the string\n * @private\n */\nexport function colorNameToHex(color) {\n    color = color === 'transparent' ? 'white' : color;\n    var element = document.getElementById('treeMapMeasureText');\n    element.style.color = color;\n    color = window.getComputedStyle(element).color;\n    var isRGBValue = color.replace(/[()RGBrgba ]/g, '').split(',');\n    return convertToHexCode(new ColorValue(parseInt(isRGBValue[0], 10), parseInt(isRGBValue[1], 10), parseInt(isRGBValue[2], 10)));\n}\n/**\n * @param {Location} location - Specifies the location\n * @param {string} shape - Specifies the shape\n * @param {Size} size - Specifies the size\n * @param {string} url - Specifies the url\n * @param {PathOption} options - Specifies the options\n * @param {string} label - Specifies the label\n * @returns {Element} - Returns the element\n * @private\n */\nexport function drawSymbol(location, shape, size, url, options, label) {\n    var svgRenderer = new SvgRenderer('');\n    var temp = renderLegendShape(location, size, shape, options, url);\n    var htmlElement = svgRenderer['draw' + temp.functionName](temp.renderOption);\n    htmlElement.setAttribute('aria-label', label);\n    return htmlElement;\n}\n/**\n * @param {Location} location - Specifies the location\n * @param {Size} size - Specifies the size\n * @param {string} shape - Specifies the shape\n * @param {PathOption} options - Specifies the path option\n * @param {string} url - Specifies the string\n * @returns {IShapes} - Returns the shapes\n * @private\n */\nexport function renderLegendShape(location, size, shape, options, url) {\n    var renderPath;\n    var functionName = 'Path';\n    var shapeWidth = size.width;\n    var shapeHeight = size.height;\n    var shapeX = location.x;\n    var shapeY = location.y;\n    var x = location.x + (-shapeWidth / 2);\n    var y = location.y + (-shapeHeight / 2);\n    switch (shape) {\n        case 'Circle':\n        case 'Bubble':\n            functionName = 'Ellipse';\n            merge(options, { 'rx': shapeWidth / 2, 'ry': shapeHeight / 2, 'cx': shapeX, 'cy': shapeY });\n            break;\n        case 'VerticalLine':\n            renderPath = 'M' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' + 'L' + ' ' + shapeX + ' '\n                + (shapeY + (-shapeHeight / 2));\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Diamond':\n            renderPath = 'M' + ' ' + x + ' ' + shapeY + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + shapeY + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + shapeY + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Rectangle':\n            renderPath = 'M' + ' ' + x + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (-shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Triangle':\n            renderPath = 'M' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (-shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (shapeY + (shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'InvertedTriangle':\n            renderPath = 'M' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX - (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' ' +\n                'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + (shapeY - (shapeHeight / 2)) + ' z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Pentagon':\n            // eslint-disable-next-line no-case-declarations\n            var eq = 72;\n            // eslint-disable-next-line no-case-declarations\n            var xValue = void 0;\n            // eslint-disable-next-line no-case-declarations\n            var yValue = void 0;\n            for (var i = 0; i <= 5; i++) {\n                xValue = (shapeWidth / 2) * Math.cos((Math.PI / 180) * (i * eq));\n                yValue = (shapeWidth / 2) * Math.sin((Math.PI / 180) * (i * eq));\n                if (i === 0) {\n                    renderPath = 'M' + ' ' + (shapeX + xValue) + ' ' + (shapeY + yValue) + ' ';\n                }\n                else {\n                    renderPath = renderPath.concat('L' + ' ' + (shapeX + xValue) + ' ' + (shapeY + yValue) + ' ');\n                }\n            }\n            renderPath = renderPath.concat('Z');\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Star':\n            renderPath = 'M ' + (location.x + size.width / 3) + ' ' + (location.y - size.height / 2) + ' L ' + (location.x - size.width / 2)\n                + ' ' + (location.y + size.height / 6) + ' L ' + (location.x + size.width / 2) + ' ' + (location.y + size.height / 6)\n                + ' L ' + (location.x - size.width / 3) + ' ' + (location.y - size.height / 2) + ' L ' + location.x + ' ' +\n                (location.y + size.height / 2) + ' L ' + (location.x + size.width / 3) + ' ' + (location.y - size.height / 2) + ' Z';\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Cross':\n            renderPath = 'M' + ' ' + x + ' ' + shapeY + ' ' + 'L' + ' ' + (shapeX + (shapeWidth / 2)) + ' ' + shapeY + ' ' +\n                'M' + ' ' + shapeX + ' ' + (shapeY + (shapeHeight / 2)) + ' ' + 'L' + ' ' + shapeX + ' ' +\n                (shapeY + (-shapeHeight / 2));\n            merge(options, { 'd': renderPath });\n            break;\n        case 'Image':\n            functionName = 'Image';\n            merge(options, { 'href': url, 'height': shapeHeight, 'width': shapeWidth, x: x, y: y });\n            break;\n    }\n    return { renderOption: options, functionName: functionName };\n}\n/**\n *\n * @param {any} data - Specifies the data source object.\n * @param {any} item - Specifies the leaf item.\n * @returns {boolean} - Returns whether the TreeMap item is level item or leaf item.\n */\nexport function isParentItem(data, item) {\n    var isParentItem = false;\n    for (var j = 0; j < data.length; j++) {\n        if (item['levelOrderName'] === data[j]['levelOrderName']) {\n            isParentItem = true;\n            break;\n        }\n    }\n    return isParentItem;\n}\n/**\n * Specifies the data to be received through Ajax request for treemap.\n */\nvar TreeMapAjax = /** @class */ (function () {\n    function TreeMapAjax(options, type, async, contentType, sendData) {\n        this.dataOptions = options;\n        this.type = type || 'GET';\n        this.async = async || true;\n        this.contentType = contentType;\n        this.sendData = sendData;\n    }\n    return TreeMapAjax;\n}());\nexport { TreeMapAjax };\n/**\n *\n * @param {any[]} collection - Specifies the legend collection.\n * @returns {void}\n * @private\n */\nexport function removeShape(collection) {\n    if (collection.length > 0) {\n        for (var i = 0; i < collection.length; i++) {\n            var item = collection[i];\n            setColor(item['legendEle'], item['oldFill'], item['oldOpacity'], item['oldBorderColor'], item['oldBorderWidth']);\n        }\n    }\n}\n/**\n *\n * @param {any[]} collection - Specifies the legend collection.\n * @returns {void}\n * @private\n */\nexport function removeLegend(collection) {\n    if (collection.length > 0) {\n        for (var j = 0; j < collection.length; j++) {\n            var item = collection[j];\n            setColor(item['legendEle'], item['oldFill'], item['oldOpacity'], item['oldBorderColor'], item['oldBorderWidth']);\n            var dataCount = item['ShapeCollection']['Elements'].length;\n            for (var k = 0; k < dataCount; k++) {\n                setColor(item['ShapeCollection']['Elements'][k], item['shapeOldFill'], item['shapeOldOpacity'], item['shapeOldBorderColor'], item['shapeOldBorderWidth']);\n            }\n        }\n    }\n}\n/**\n *\n * @param {Element} element - Specifies the selected element.\n * @param {string} fill - Specifies the fill color.\n * @param {string} opacity - Specifies the opacity.\n * @param {string} borderColor - Specifies the border color.\n * @param {string} borderWidth - Specifies the border width.\n * @returns {void}\n */\nexport function setColor(element, fill, opacity, borderColor, borderWidth) {\n    element.setAttribute('fill', fill);\n    element.setAttribute('opacity', opacity);\n    element.setAttribute('stroke', borderColor);\n    element.setAttribute('stroke-width', borderWidth);\n}\n/**\n *\n * @param {any[]} collection - Specifies the selected item collection.\n * @param {any[]} element - Specifies the selected element collection.\n * @param {TreeMap} treemap - Specifies the TreeMap instance.\n * @returns {void}\n */\nexport function removeSelectionWithHighlight(collection, element, treemap) {\n    removeShape(collection);\n    element = [];\n    removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n}\n/**\n *\n * @param {number} length - Specifies the length of the legend group.\n * @param {any} item - Specifies the legend item.\n * @param {TreeMap} treemap - Specifies the TreeMap instance.\n * @returns {number} - Returns the legend index.\n */\nexport function getLegendIndex(length, item, treemap) {\n    var index;\n    for (var i = 0; i < length; i++) {\n        var dataLength = treemap.treeMapLegendModule.legendCollections[i]['legendData'].length;\n        for (var j = 0; j < dataLength; j++) {\n            if (treemap.treeMapLegendModule.legendCollections[i]['legendData'][j]['levelOrderName'] === item['levelOrderName']) {\n                index = i;\n                break;\n            }\n        }\n    }\n    return index;\n}\n/**\n *\n * @param {any[]} collection - Specifies the legend collection.\n * @param {number} index - Specifies the index of legend.\n * @param {number} number - Specifies the leaf item index.\n * @param {Element} legendElement - Specifies the legend element.\n * @param {Element} shapeElement - Specifies the shape element.\n * @param {any[]} renderItems - Specifies the item index.\n * @param {any[]} legendCollection - Specifies the legend collection.\n * @returns {void}\n */\nexport function pushCollection(collection, index, number, legendElement, shapeElement, renderItems, legendCollection) {\n    collection.push({\n        legendEle: legendElement, oldFill: legendCollection[index]['legendFill'],\n        oldOpacity: legendCollection[index]['opacity'], oldBorderColor: legendCollection[index]['borderColor'],\n        oldBorderWidth: legendCollection[index]['borderWidth'],\n        shapeElement: shapeElement, shapeOldFill: renderItems[number]['options']['fill'],\n        shapeOldOpacity: renderItems[number]['options']['opacity'],\n        shapeOldBorderColor: renderItems[number]['options']['border']['color'],\n        shapeOldBorderWidth: renderItems[number]['options']['border']['width']\n    });\n}\n/**\n * To trigger the download element\n *\n * @param {string} fileName - Specifies the file name\n * @param {ExportType} type - Specifies the type\n * @param {string} url - Specifies the url\n * @param {boolean} isDownload - Specifies the boolean value\n * @returns {void}\n * @private\n */\nexport function triggerDownload(fileName, type, url, isDownload) {\n    createElement('a', {\n        attrs: {\n            'download': fileName + '.' + type.toLocaleLowerCase(),\n            'href': url\n        }\n    }).dispatchEvent(new MouseEvent(isDownload ? 'click' : 'move', {\n        view: window,\n        bubbles: false,\n        cancelable: true\n    }));\n}\n/**\n *\n * @param {string} id - Specifies the id of the element to be removed.\n * @returns {void}\n */\nexport function removeElement(id) {\n    var element = document.getElementById(id);\n    return element ? remove(element) : null;\n}\n","/**\n * Maps Themes doc\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport var Theme;\n(function (Theme) {\n    /**\n     * @private\n     */\n    Theme.mapsTitleFont = {\n        size: '14px',\n        fontWeight: 'Medium',\n        color: '#424242',\n        fontStyle: 'Medium',\n        fontFamily: 'Roboto, Noto, Sans-serif'\n    };\n})(Theme || (Theme = {}));\n/**\n * To get the theme style based on treemap theme.\n *\n * @param {TreeMapTheme} theme Specifies the theme of the treemap control.\n * @returns {IThemeStyle} Returns the theme.\n * @private\n */\nexport function getThemeStyle(theme) {\n    var style;\n    var color;\n    switch (theme.toLowerCase()) {\n        case 'materialdark':\n            color = '#303030';\n            break;\n        case 'fabricdark':\n            color = '#201F1F';\n            break;\n        case 'bootstrapdark':\n            color = '#1A1A1A';\n            break;\n    }\n    switch (theme.toLowerCase()) {\n        case 'bootstrapdark':\n        case 'fabricdark':\n        case 'materialdark':\n            style = {\n                backgroundColor: color,\n                titleFontColor: '#FFFFFF',\n                titleFontWeight: 'Normal',\n                subTitleFontColor: '#FFFFFF',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                tooltipFontSize: '13px',\n                legendTitleColor: '#DADADA',\n                legendTextColor: '#DADADA',\n                fontSize: '15px',\n                fontWeight: 'Normal',\n                subtitleFontSize: '14px',\n                legendFontSize: '13px',\n                fontFamily: 'Roboto, Noto, Sans-serif'\n            };\n            break;\n        case 'highcontrast':\n            style = {\n                backgroundColor: '#000000',\n                titleFontColor: '#FFFFFF',\n                titleFontWeight: 'Normal',\n                subTitleFontColor: '#FFFFFF',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                tooltipFontSize: '13px',\n                legendTitleColor: '#FFFFFF',\n                legendTextColor: '#FFFFFF',\n                fontSize: '15px',\n                fontWeight: 'Normal',\n                subtitleFontSize: '14px',\n                legendFontSize: '13px',\n                fontFamily: 'Roboto, Noto, Sans-serif'\n            };\n            break;\n        case 'bootstrap4':\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#212529',\n                titleFontWeight: 'Normal',\n                subTitleFontColor: '#212529',\n                tooltipFillColor: '#000000',\n                tooltipFontColor: '#FFFFFF',\n                tooltipFontSize: '13px',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9,\n                legendTitleColor: '#212529',\n                legendTextColor: '#212529',\n                fontFamily: 'HelveticaNeue-Medium',\n                fontSize: '16px',\n                fontWeight: 'Normal',\n                subtitleFontSize: '14px',\n                legendFontSize: '14px',\n                labelFontFamily: 'HelveticaNeue'\n            };\n            break;\n        case 'tailwind':\n            style = {\n                backgroundColor: 'transparent',\n                titleFontColor: '#374151',\n                titleFontWeight: 'Normal',\n                subTitleFontColor: '#374151',\n                tooltipFillColor: '#111827',\n                tooltipFontColor: '#F9FAFB',\n                tooltipFontSize: '13px',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                legendTitleColor: '#374151',\n                legendTextColor: '#374151',\n                fontFamily: 'Inter',\n                fontSize: '14px',\n                fontWeight: 'Normal',\n                subtitleFontSize: '12px',\n                legendFontSize: '12px',\n                labelFontFamily: 'Inter'\n            };\n            break;\n        case 'tailwinddark':\n            style = {\n                backgroundColor: 'transparent',\n                titleFontColor: '#D1D5DB',\n                titleFontWeight: 'Normal',\n                subTitleFontColor: '#D1D5DB',\n                tooltipFillColor: '#F9FAFB',\n                tooltipFontColor: '#1F2937',\n                tooltipFontSize: '13px',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                legendTitleColor: '#D1D5DB',\n                legendTextColor: '#D1D5DB',\n                fontFamily: 'Inter',\n                fontWeight: 'Normal',\n                fontSize: '14px',\n                subtitleFontSize: '12px',\n                legendFontSize: '12px',\n                labelFontFamily: 'Inter'\n            };\n            break;\n        case 'bootstrap5':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#212529',\n                titleFontWeight: 'Normal',\n                subTitleFontColor: '#212529',\n                tooltipFillColor: '#212529',\n                tooltipFontColor: '#F9FAFB',\n                tooltipFontSize: '13px',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                legendTitleColor: '#212529',\n                legendTextColor: '#212529',\n                fontFamily: 'Helvetica Neue',\n                fontSize: '14px',\n                fontWeight: 'Normal',\n                subtitleFontSize: '12px',\n                legendFontSize: '12px',\n                labelFontFamily: 'Helvetica Neue'\n            };\n            break;\n        case 'bootstrap5dark':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#FFFFFF',\n                titleFontWeight: 'Normal',\n                subTitleFontColor: '#FFFFFF',\n                tooltipFillColor: '#E9ECEF',\n                tooltipFontColor: '#212529',\n                tooltipFontSize: '13px',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                legendTitleColor: '#FFFFFF',\n                legendTextColor: '#FFFFFF',\n                fontFamily: 'Helvetica Neue',\n                fontSize: '14px',\n                fontWeight: 'Normal',\n                subtitleFontSize: '12px',\n                legendFontSize: '12px',\n                labelFontFamily: 'Helvetica Neue'\n            };\n            break;\n        case 'fluent':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#201F1E',\n                titleFontWeight: 'Normal',\n                subTitleFontColor: '#201F1E',\n                tooltipFillColor: '#FFFFFF',\n                tooltipFontColor: '#323130',\n                tooltipFontSize: '13px',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                legendTitleColor: '#201F1E',\n                legendTextColor: '#201F1E',\n                fontFamily: 'Segoe UI',\n                fontSize: '14px',\n                fontWeight: 'Normal',\n                subtitleFontSize: '12px',\n                legendFontSize: '12px',\n                labelFontFamily: 'Segoe UI'\n            };\n            break;\n        case 'fluentdark':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#F3F2F1',\n                titleFontWeight: 'Normal',\n                subTitleFontColor: '#F3F2F1',\n                tooltipFillColor: '#252423',\n                tooltipFontColor: '#F3F2F1',\n                tooltipFontSize: '13px',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                legendTitleColor: '#F3F2F1',\n                legendTextColor: '#F3F2F1',\n                fontFamily: 'Segoe UI',\n                fontSize: '14px',\n                fontWeight: 'Normal',\n                subtitleFontSize: '12px',\n                legendFontSize: '12px',\n                labelFontFamily: 'Segoe UI'\n            };\n            break;\n        case 'material3':\n            style = {\n                backgroundColor: 'transparent',\n                titleFontColor: '#1C1B1F',\n                titleFontWeight: '500',\n                subTitleFontColor: '#1C1B1F',\n                tooltipFillColor: '#313033',\n                tooltipFontColor: '#F4EFF4',\n                tooltipFontSize: '14px',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                legendTitleColor: '#1C1B1F',\n                legendTextColor: '#49454E',\n                fontFamily: 'Roboto',\n                fontSize: '16px',\n                fontWeight: '400',\n                subtitleFontSize: '14px',\n                legendFontSize: '14px',\n                labelFontFamily: 'Roboto'\n            };\n            break;\n        case 'material3dark':\n            style = {\n                backgroundColor: 'transparent',\n                titleFontColor: '#E6E1E5',\n                titleFontWeight: '500',\n                subTitleFontColor: '#E6E1E5',\n                tooltipFillColor: '#E6E1E5',\n                tooltipFontColor: '#313033',\n                tooltipFontSize: '14px',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                legendTitleColor: '#E6E1E5',\n                legendTextColor: '#CAC4D0',\n                fontFamily: 'Roboto',\n                fontSize: '16px',\n                fontWeight: '400',\n                subtitleFontSize: '14px',\n                legendFontSize: '14px',\n                labelFontFamily: 'Roboto'\n            };\n            break;\n        default:\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#424242',\n                titleFontWeight: 'Normal',\n                subTitleFontColor: '#424242',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                tooltipFontSize: '13px',\n                legendTitleColor: '#353535',\n                legendTextColor: '#353535',\n                fontSize: '15px',\n                fontWeight: 'Normal',\n                subtitleFontSize: '14px',\n                legendFontSize: '13px',\n                fontFamily: 'Roboto, Noto, Sans-serif'\n            };\n            break;\n    }\n    return style;\n}\n","/**\n * TreeMap constants doc\n */\n/**\n * Triggers when the treemap is on load.\n *\n * @private\n */\nexport var load = 'load';\n/**\n * Triggers after treemap rendered.\n *\n * @private\n */\nexport var loaded = 'loaded';\n/**\n * Trigger before call the print method.\n *\n * @private\n */\nexport var beforePrint = 'beforePrint';\n/**\n * Trigger before each treemap item rendered.\n *\n * @private\n */\nexport var itemRendering = 'itemRendering';\n/**\n * Trigger after click on treemap item.\n *\n * @private\n */\nexport var drillStart = 'drillStart';\n/**\n * Trigger after drill start event completed.\n *\n * @private\n */\nexport var drillEnd = 'drillEnd';\n/**\n * Trigger after select the treemap item.\n *\n * @private\n */\nexport var itemSelected = 'itemSelected';\n/**\n * Trigger after hover on the treemap item.\n *\n * @private\n */\nexport var itemHighlight = 'itemHighlight';\n/**\n * Trigger after mouse hover on the treemap item.\n *\n * @private\n */\nexport var tooltipRendering = 'tooltipRendering';\n/**\n * Trigger after click on the treemap item.\n *\n * @private\n */\nexport var itemClick = 'itemClick';\n/**\n * Trigger after mouse hover on the treemap item.\n *\n * @private\n */\nexport var itemMove = 'itemMove';\n/**\n * Trigger after click on the treemap item.\n *\n * @private\n */\nexport var click = 'click';\n/**\n * Trigger after double click on the treemap item.\n *\n * @private\n */\nexport var doubleClick = 'doubleClick';\n/**\n * Trigger after right click on the treemap item.\n *\n * @private\n */\nexport var rightClick = 'rightClick';\n/**\n * Trigger after mouse hover on the treemap item.\n *\n * @private\n */\nexport var mouseMove = 'mouseMove';\n/**\n * Trigger before each treemap item.\n *\n * @private\n */\nexport var legendItemRendering = 'legendItemRendering';\n/**\n * Trigger before legend items.\n *\n * @private\n */\nexport var legendRendering = 'legendRendering';\n/**\n * Trigger after resize the treemap.\n *\n * @private\n */\nexport var resize = 'resize';\n/**\n * Define the font family in treemap.\n *\n * @private\n */\nexport var defaultFont = 'Roboto, Segoe UI, Noto, Sans-serif';\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * Maps base doc\n */\nimport { Property, ChildProperty, Complex, Collection } from '@syncfusion/ej2-base';\nimport { defaultFont } from './constants';\n/**\n * Sets and gets the options for customizing the color and width of the border in treemap.\n */\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#808080')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Border.prototype, \"width\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Sets and gets the margin for the treemap.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Sets and gets the options to customize the style of the text contents in the treemap.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property(null)\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property(defaultFont)\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * Sets and gets the options for customizing the title of the treemap.\n */\nvar CommonTitleSettings = /** @class */ (function (_super) {\n    __extends(CommonTitleSettings, _super);\n    function CommonTitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CommonTitleSettings.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], CommonTitleSettings.prototype, \"description\", void 0);\n    return CommonTitleSettings;\n}(ChildProperty));\nexport { CommonTitleSettings };\n/**\n * Sets and gets the options for customizing the subtitle of the treemap.\n */\nvar SubTitleSettings = /** @class */ (function (_super) {\n    __extends(SubTitleSettings, _super);\n    function SubTitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ fontFamily: null, fontWeight: null }, Font)\n    ], SubTitleSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Center')\n    ], SubTitleSettings.prototype, \"alignment\", void 0);\n    return SubTitleSettings;\n}(CommonTitleSettings));\nexport { SubTitleSettings };\n/**\n * Sets and gets the options for customizing the title of the treemap.\n */\nvar TitleSettings = /** @class */ (function (_super) {\n    __extends(TitleSettings, _super);\n    function TitleSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ fontFamily: null, fontWeight: null }, Font)\n    ], TitleSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Center')\n    ], TitleSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Complex({}, SubTitleSettings)\n    ], TitleSettings.prototype, \"subtitleSettings\", void 0);\n    return TitleSettings;\n}(CommonTitleSettings));\nexport { TitleSettings };\n/**\n * Sets and gets the options to customize the color-mapping in treemap.\n */\nvar ColorMapping = /** @class */ (function (_super) {\n    __extends(ColorMapping, _super);\n    function ColorMapping() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"from\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"to\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"label\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"value\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"minOpacity\", void 0);\n    __decorate([\n        Property(null)\n    ], ColorMapping.prototype, \"maxOpacity\", void 0);\n    __decorate([\n        Property(true)\n    ], ColorMapping.prototype, \"showLegend\", void 0);\n    return ColorMapping;\n}(ChildProperty));\nexport { ColorMapping };\n/**\n * Sets and gets the options for customizing the legend of the treemap.\n */\nvar LegendSettings = /** @class */ (function (_super) {\n    __extends(LegendSettings, _super);\n    function LegendSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Default')\n    ], LegendSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('transparent')\n    ], LegendSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property('Circle')\n    ], LegendSettings.prototype, \"shape\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ size: '12px', fontFamily: null, fontWeight: null }, Font)\n    ], LegendSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(1)\n    ], LegendSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(15)\n    ], LegendSettings.prototype, \"shapeWidth\", void 0);\n    __decorate([\n        Property(15)\n    ], LegendSettings.prototype, \"shapeHeight\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapePadding\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Complex({ color: '#000000', width: 0 }, Border)\n    ], LegendSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ color: '#000000', width: 0 }, Border)\n    ], LegendSettings.prototype, \"shapeBorder\", void 0);\n    __decorate([\n        Complex({}, CommonTitleSettings)\n    ], LegendSettings.prototype, \"title\", void 0);\n    __decorate([\n        Complex({ size: '14px' }, Font)\n    ], LegendSettings.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Property('Bottom')\n    ], LegendSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property('None')\n    ], LegendSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"invertedPointer\", void 0);\n    __decorate([\n        Property('After')\n    ], LegendSettings.prototype, \"labelPosition\", void 0);\n    __decorate([\n        Property('None')\n    ], LegendSettings.prototype, \"labelDisplayMode\", void 0);\n    __decorate([\n        Property('Center')\n    ], LegendSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Property({ x: 0, y: 0 })\n    ], LegendSettings.prototype, \"location\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"showLegendPath\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"valuePath\", void 0);\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"removeDuplicateLegend\", void 0);\n    return LegendSettings;\n}(ChildProperty));\nexport { LegendSettings };\n/**\n * Sets and gets the settings for drill down to visualize the treemap rendered in the initial state.\n */\nvar InitialDrillSettings = /** @class */ (function (_super) {\n    __extends(InitialDrillSettings, _super);\n    function InitialDrillSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], InitialDrillSettings.prototype, \"groupIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], InitialDrillSettings.prototype, \"groupName\", void 0);\n    return InitialDrillSettings;\n}(ChildProperty));\nexport { InitialDrillSettings };\n/**\n * Sets and gets the options for customizing the leaf item of the treemap.\n */\nvar LeafItemSettings = /** @class */ (function (_super) {\n    __extends(LeafItemSettings, _super);\n    function LeafItemSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(false)\n    ], LeafItemSettings.prototype, \"autoFill\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LeafItemSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(0)\n    ], LeafItemSettings.prototype, \"gap\", void 0);\n    __decorate([\n        Property(10)\n    ], LeafItemSettings.prototype, \"padding\", void 0);\n    __decorate([\n        Property(1)\n    ], LeafItemSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(true)\n    ], LeafItemSettings.prototype, \"showLabels\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelPath\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelFormat\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], LeafItemSettings.prototype, \"labelPosition\", void 0);\n    __decorate([\n        Complex({ color: null, size: '12px' }, Font)\n    ], LeafItemSettings.prototype, \"labelStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], LeafItemSettings.prototype, \"labelTemplate\", void 0);\n    __decorate([\n        Property('Center')\n    ], LeafItemSettings.prototype, \"templatePosition\", void 0);\n    __decorate([\n        Property('Trim')\n    ], LeafItemSettings.prototype, \"interSectAction\", void 0);\n    __decorate([\n        Collection([], ColorMapping)\n    ], LeafItemSettings.prototype, \"colorMapping\", void 0);\n    return LeafItemSettings;\n}(ChildProperty));\nexport { LeafItemSettings };\n/**\n * Sets and gets the options for customizing the tooltip of the treemap.\n */\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('')\n    ], TooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(0.75)\n    ], TooltipSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(['Circle'])\n    ], TooltipSettings.prototype, \"markerShapes\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({ fontFamily: defaultFont, size: null, fontWeight: null }, Font)\n    ], TooltipSettings.prototype, \"textStyle\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\n/**\n * Sets and gets the options for customizing the selection of the leaf items in treemap.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property(null)\n    ], SelectionSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property('0.5')\n    ], SelectionSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], SelectionSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Item')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n/**\n * Sets and gets the options for customizing the highlighting of the treemap item,\n * when the mouse hover is performed in it.\n */\nvar HighlightSettings = /** @class */ (function (_super) {\n    __extends(HighlightSettings, _super);\n    function HighlightSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], HighlightSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('#808080')\n    ], HighlightSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property('0.5')\n    ], HighlightSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], HighlightSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property('Item')\n    ], HighlightSettings.prototype, \"mode\", void 0);\n    return HighlightSettings;\n}(ChildProperty));\nexport { HighlightSettings };\n/**\n * Sets and gets the options for customizing the level leaf items of the treemap.\n */\nvar LevelSettings = /** @class */ (function (_super) {\n    __extends(LevelSettings, _super);\n    function LevelSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"groupPath\", void 0);\n    __decorate([\n        Property(0)\n    ], LevelSettings.prototype, \"groupGap\", void 0);\n    __decorate([\n        Property(10)\n    ], LevelSettings.prototype, \"groupPadding\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LevelSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Property(false)\n    ], LevelSettings.prototype, \"autoFill\", void 0);\n    __decorate([\n        Property(1)\n    ], LevelSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(true)\n    ], LevelSettings.prototype, \"showHeader\", void 0);\n    __decorate([\n        Property(20)\n    ], LevelSettings.prototype, \"headerHeight\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"headerTemplate\", void 0);\n    __decorate([\n        Property(null)\n    ], LevelSettings.prototype, \"headerFormat\", void 0);\n    __decorate([\n        Property('Near')\n    ], LevelSettings.prototype, \"headerAlignment\", void 0);\n    __decorate([\n        Complex({ color: null, size: '13px' }, Font)\n    ], LevelSettings.prototype, \"headerStyle\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], LevelSettings.prototype, \"templatePosition\", void 0);\n    __decorate([\n        Collection([], ColorMapping)\n    ], LevelSettings.prototype, \"colorMapping\", void 0);\n    return LevelSettings;\n}(ChildProperty));\nexport { LevelSettings };\n","import { Rect, itemsToOrder, TextOption, measureText, textTrim, hide, wordWrap, textWrap, getTemplateFunction, convertElement, findLabelLocation, PathOption, textFormatter, colorNameToHex, convertHexToColor, colorMap, measureElement, convertToContainer, convertToRect, getShortestEdge, getArea, orderByArea, isParentItem, maintainSelection } from '../utils/helper';\nimport { isNullOrUndefined, createElement, extend } from '@syncfusion/ej2-base';\nimport { findChildren, renderTextElement } from '../utils/helper';\nimport { itemRendering } from '../model/constants';\n/**\n * To calculate and render the shape layer\n */\nvar LayoutPanel = /** @class */ (function () {\n    function LayoutPanel(treemap) {\n        this.treemap = treemap;\n    }\n    LayoutPanel.prototype.processLayoutPanel = function () {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var data;\n        var totalRect;\n        if (this.treemap.treemapLevelData.levelsData && this.treemap.treemapLevelData.levelsData.length > 0) {\n            data = (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) &&\n                !isNullOrUndefined(this.treemap.initialDrillDown.groupName)) &&\n                (isNullOrUndefined(this.treemap.drilledItems) ? isNullOrUndefined(this.treemap.drilledItems)\n                    : this.treemap.drilledItems.length === 0) ?\n                this.getDrilldownData(this.treemap.treemapLevelData.levelsData[0], [])[0] : this.treemap.treemapLevelData.levelsData[0];\n            totalRect = extend({}, this.treemap.areaRect, totalRect, false);\n            if (!isNullOrUndefined(this.treemap.treeMapLegendModule) && !isNullOrUndefined(this.treemap.totalRect)) {\n                if (this.treemap.legendSettings.position !== 'Float') {\n                    totalRect = this.treemap.totalRect;\n                }\n            }\n            if (!isNullOrUndefined(this.treemap.currentLevel) &&\n                (isNullOrUndefined(this.treemap.drilledItems) ? !isNullOrUndefined(this.treemap.drilledItems)\n                    : this.treemap.drilledItems.length !== 0)) {\n                var count = this.treemap.drilledItems.length - 1;\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var x = this.treemap.drilledItems[count]['data'];\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var y = {};\n                y[this.treemap.drilledItems[count]['data']['groupName']] = [x];\n                if (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) && !this.treemap.enableBreadcrumb) {\n                    this.treemap.currentLevel = this.treemap.drilledItems[count]['data']['groupIndex'];\n                }\n                this.calculateLayoutItems(y || this.treemap.treemapLevelData.levelsData[0], totalRect);\n                this.renderLayoutItems();\n            }\n            else {\n                if (!isNullOrUndefined(this.treemap.initialDrillDown.groupIndex) &&\n                    (isNullOrUndefined(this.treemap.drilledItems) ? isNullOrUndefined(this.treemap.drilledItems)\n                        : this.treemap.drilledItems.length === 0)) {\n                    this.treemap.currentLevel = this.treemap.initialDrillDown.groupIndex;\n                }\n                this.calculateLayoutItems(data || this.treemap.treemapLevelData.levelsData[0], totalRect);\n                this.renderLayoutItems();\n            }\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.getDrilldownData = function (data, drillData) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var treemap = this.treemap;\n        var newData = {};\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var child = findChildren(data)['values'];\n        if (child && child.length > 0 && drillData.length === 0) {\n            for (var i = 0; i < child.length; i++) {\n                if (child[i]['groupIndex'] === treemap.initialDrillDown.groupIndex &&\n                    child[i]['name'] === treemap.initialDrillDown.groupName) {\n                    child[i]['isDrilled'] = true;\n                    newData[child[i]['groupName']] = [child[i]];\n                    drillData.push(newData);\n                }\n            }\n            for (var j = 0; j < child.length; j++) {\n                this.getDrilldownData(child[j], drillData);\n            }\n        }\n        return drillData;\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n    LayoutPanel.prototype.calculateLayoutItems = function (data, rect) {\n        this.renderItems = [];\n        this.parentData = [];\n        if (!isNullOrUndefined(this.treemap.weightValuePath)) {\n            if (this.treemap.layoutType.indexOf('SliceAndDice') > -1) {\n                this.computeSliceAndDiceDimensional(data, rect);\n            }\n            else {\n                rect.height = rect.height + rect.y;\n                rect.width = rect.width + rect.x;\n                this.computeSquarifyDimensional(data, rect);\n            }\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.computeSliceAndDiceDimensional = function (data, coords) {\n        var leafItem = this.treemap.leafItemSettings;\n        var rect;\n        var groups = this.treemap.levels;\n        var groupIndex;\n        var isLeafItem = false;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var children = findChildren(data)['values'];\n        var gap;\n        var headerHeight;\n        if (children && children.length > 0) {\n            this.sliceAndDiceProcess(children, coords);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < children.length; i++) {\n                    groupIndex = children[i]['groupIndex'];\n                    isLeafItem = (groups.length === 0 || groupIndex === groups.length);\n                    gap = isLeafItem ? leafItem.gap : groups[groupIndex].groupGap;\n                    headerHeight = groups.length === 0 ? 0 : groups[groupIndex] ? groups[groupIndex].showHeader ?\n                        groups[groupIndex].headerHeight : 0 : groups[groupIndex - 1].showHeader ?\n                        groups[groupIndex - 1].headerHeight : 0;\n                    rect = children[i]['rect'];\n                    rect = new Rect(rect.x + (gap / 2), rect.y + (headerHeight + (gap / 2)), rect.width - gap, Math.abs(rect.height - (gap + headerHeight)));\n                    this.computeSliceAndDiceDimensional(children[i], rect);\n                }\n            }\n        }\n        return data;\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.sliceAndDiceProcess = function (processData, rect) {\n        var parentArea = rect.height * rect.width;\n        var levels = this.treemap.levels;\n        var childValue;\n        var alottedValue = 0;\n        var totalWeight = 0;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        processData.forEach(function (data) { totalWeight += data['weight']; });\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        processData.forEach(function (child) {\n            child['weightArea'] = parentArea * child['weight'] / totalWeight;\n        });\n        var isHorizontal = (this.treemap.layoutType === 'SliceAndDiceAuto') ? (rect.width > rect.height) :\n            (this.treemap.layoutType === 'SliceAndDiceHorizontal');\n        processData.sort(itemsToOrder);\n        for (var i = 0; i < processData.length; i++) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var item = processData[i];\n            item['isLeafItem'] = (levels.length === 0) || ((this.treemap.isHierarchicalData ||\n                isNullOrUndefined(this.treemap.leafItemSettings.labelPath)) ?\n                item['groupIndex'] === levels.length - 1 : item['groupIndex'] === this.treemap.levels.length);\n            if (isHorizontal) {\n                childValue = ((parentArea / totalWeight) * processData[i]['weight']) / rect.height;\n                if (alottedValue <= rect.width) {\n                    processData[i]['rect'] = new Rect(alottedValue + rect.x, rect.y, childValue, rect.height);\n                }\n            }\n            else {\n                childValue = ((parentArea / totalWeight) * processData[i]['weight']) / rect.width;\n                if (alottedValue <= rect.height) {\n                    processData[i]['rect'] = new Rect(rect.x, alottedValue + rect.y, rect.width, childValue);\n                }\n            }\n            alottedValue += childValue;\n            this.renderItems.push(processData[i]);\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.computeSquarifyDimensional = function (data, coords) {\n        var leaf = this.treemap.leafItemSettings;\n        var rect;\n        var levels = this.treemap.levels;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var item;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var child = findChildren(data)['values'];\n        var index;\n        var padding;\n        var headerHeight;\n        if (child && child.length > 0) {\n            if (this.parentData.length === 0) {\n                this.parentData = [];\n                this.parentData.push(child);\n            }\n            this.calculateChildrenLayout(data, child, coords);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < child.length; i++) {\n                    item = child[i];\n                    index = item['groupIndex'];\n                    rect = item['rect'];\n                    padding = (item['isLeafItem'] ? leaf.padding : levels[index].groupPadding) / 2;\n                    headerHeight = this.treemap.isHierarchicalData ? index === 0 && item['isLeafItem'] ? 0 : levels[index] ?\n                        levels[index].showHeader ? levels[index].headerHeight : 0 : 0 :\n                        (levels.length === 0) ? 0 : levels[index] ?\n                            levels[index].showHeader ? levels[index].headerHeight : 0 : 0;\n                    rect = new Rect(rect.x + padding, rect.y + (headerHeight + padding), rect.width - padding, rect.height - padding);\n                    if (!item['isLeafItem'] && item['weight'] > 0) {\n                        this.computeSquarifyDimensional(child[i], rect);\n                    }\n                }\n            }\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.calculateChildrenLayout = function (parent, children, coords) {\n        this.computeTotalArea(children, getArea(coords));\n        children.sort(orderByArea);\n        this.performRowsLayout(children, [], coords, []);\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.performRowsLayout = function (data, currentRow, rect, stack) {\n        var dataLength = data.length;\n        if (dataLength === 0) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var newCoordinates = this.getCoordinates(currentRow, rect);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var newStack = stack.concat(newCoordinates);\n            return newStack;\n        }\n        var width = getShortestEdge(rect);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var nextDatum = data[0];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var restData = data.slice(1, dataLength);\n        if (this.aspectRatio(currentRow, nextDatum, width)) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var newRow = currentRow.concat(nextDatum);\n            return this.performRowsLayout(restData, newRow, rect, stack);\n        }\n        else {\n            var currentRowLength = currentRow.length;\n            var valueSum = 0;\n            for (var i = 0; i < currentRowLength; i += 1) {\n                valueSum += currentRow[i]['itemArea'];\n            }\n            var newContainer = this.cutArea(rect, valueSum);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var newCoordinates = this.getCoordinates(currentRow, rect);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var newStack = stack.concat(newCoordinates);\n            return this.performRowsLayout(data, [], newContainer, newStack);\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.aspectRatio = function (currentRow, nextDatum, length) {\n        if (currentRow.length === 0) {\n            return true;\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var newRow = currentRow.concat(nextDatum);\n            var currentMaxAspectRatio = this.findMaxAspectRatio(currentRow, length);\n            var newMaxAspectRatio = this.findMaxAspectRatio(newRow, length);\n            return (currentMaxAspectRatio >= newMaxAspectRatio);\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.findMaxAspectRatio = function (row, length) {\n        var rowLength = row.length;\n        var minArea = Infinity;\n        var maxArea = -Infinity;\n        var sumArea = 0;\n        for (var i = 0; i < rowLength; i += 1) {\n            var area = row[i]['itemArea'];\n            if (area < minArea) {\n                minArea = area;\n            }\n            if (area > maxArea) {\n                maxArea = area;\n            }\n            sumArea += area;\n        }\n        var result = Math.max((Math.pow(length, 2)) * maxArea / (Math.pow(sumArea, 2)), (Math.pow(sumArea, 2)) /\n            ((Math.pow(length, 2)) * minArea));\n        return result;\n    };\n    LayoutPanel.prototype.cutArea = function (rect, area) {\n        var newContainer = convertToContainer(rect);\n        var width = newContainer.width;\n        var height = newContainer.height;\n        var xOffset = newContainer.x;\n        var yOffset = newContainer.y;\n        if (width >= height) {\n            var areaWidth = area / height;\n            var newWidth = width - areaWidth;\n            var container = {\n                x: xOffset + areaWidth,\n                y: yOffset,\n                width: newWidth,\n                height: height\n            };\n            return convertToRect(container);\n        }\n        else {\n            var areaHeight = area / width;\n            var newHeight = height - areaHeight;\n            var container = {\n                x: xOffset,\n                y: yOffset + areaHeight,\n                width: width,\n                height: newHeight\n            };\n            return convertToRect(container);\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.getCoordinates = function (row, rect) {\n        var container = convertToContainer(rect);\n        var width = container.width;\n        var height = container.height;\n        var xOffset = container.x;\n        var yOffset = container.y;\n        var rowLength = row.length;\n        var levels = this.treemap.levels;\n        var leaf = this.treemap.leafItemSettings;\n        var index;\n        var valueSum = 0;\n        for (var i = 0; i < rowLength; i += 1) {\n            valueSum += row[i]['itemArea'];\n        }\n        var areaWidth = valueSum / height;\n        var areaHeight = valueSum / width;\n        var subXOffset = xOffset;\n        var subYOffset = yOffset;\n        var padding;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var coordinates = [];\n        var isParent;\n        var parentRect;\n        for (var i = 0; i < rowLength; i += 1) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var item = row[i];\n            index = item['groupIndex'];\n            item['isLeafItem'] = (levels.length === 0) || (this.treemap.isHierarchicalData ? index === levels.length :\n                isNullOrUndefined(leaf.labelPath) ? false : index === levels.length);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            isParent = isParentItem(this.parentData[0], item);\n            parentRect = isParent ? this.treemap.areaRect : item['parent'].rect;\n            padding = item['isLeafItem'] ? leaf.padding : levels[index].groupPadding;\n            if (width >= height) {\n                var y1 = subYOffset + item['itemArea'] / areaWidth;\n                item['rect'] = {\n                    x: subXOffset,\n                    y: subYOffset,\n                    width: subXOffset + areaWidth,\n                    height: y1\n                };\n                subYOffset = y1;\n            }\n            else {\n                var x1 = subXOffset + item['itemArea'] / areaHeight;\n                item['rect'] = {\n                    x: subXOffset,\n                    y: subYOffset,\n                    width: x1,\n                    height: subYOffset + areaHeight\n                };\n                subXOffset = x1;\n            }\n            if (item['weight'] > 0 && (isParent || (Math.round(rect.y + (padding / 2)) <=\n                Math.round(parentRect.y + (parentRect.height - parentRect.y)) && Math.round(rect.x + (padding / 2)) <=\n                Math.round(parentRect.x + (parentRect.width - parentRect.x))))) {\n                this.renderItems.push(item);\n                coordinates.push(item);\n            }\n        }\n        return coordinates;\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.computeTotalArea = function (data, area) {\n        var dataLength = data.length;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var result = [];\n        for (var i = 0; i < dataLength; i += 1) {\n            var dataLength_1 = data.length;\n            var dataSum = 0;\n            for (var i_1 = 0; i_1 < dataLength_1; i_1 += 1) {\n                dataSum += data[i_1]['weight'];\n            }\n            var multiplier = area / dataSum;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var datum = void 0;\n            for (var j = 0; j < dataLength_1; j++) {\n                datum = data[j];\n                datum['itemArea'] = datum['weight'] * multiplier;\n                result.push(datum);\n            }\n        }\n        return result;\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n    LayoutPanel.prototype.onDemandProcess = function (childItems) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var parentItem = {};\n        var totalRect;\n        parentItem = childItems[0]['parent'];\n        this.treemap.currentLevel = parentItem['isDrilled'] ? parentItem['groupIndex'] : null;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var parentItemGroupname = {};\n        if (isNullOrUndefined(parentItem['groupName'])) {\n            parentItemGroupname = parentItem;\n        }\n        else {\n            parentItemGroupname[parentItem['groupName']] = [parentItem];\n        }\n        totalRect = extend({}, this.treemap.areaRect, totalRect, false);\n        if (!isNullOrUndefined(this.treemap.treeMapLegendModule) && !isNullOrUndefined(this.treemap.totalRect)) {\n            totalRect = this.treemap.totalRect;\n        }\n        var count = this.treemap.levels.length;\n        for (var i = 0; i < count; i++) {\n            var levelCount = childItems[0]['groupIndex'];\n            if (count === levelCount) {\n                this.treemap.levels[count] = this.treemap.levels[i];\n            }\n            else {\n                this.treemap.levels.splice(count - 1, 1);\n            }\n        }\n        this.calculateLayoutItems(parentItemGroupname, totalRect);\n        this.renderLayoutItems();\n    };\n    /** @private */\n    LayoutPanel.prototype.renderLayoutItems = function () {\n        var _this = this;\n        var position;\n        var treeMap = this.treemap;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var txtVisible;\n        var getItemColor;\n        var eventArgs;\n        this.renderer = treeMap.renderer;\n        var pathOptions;\n        var elementID = treeMap.element.id;\n        var index;\n        var templatePosition;\n        var mode = treeMap.layoutType;\n        var rect;\n        var format;\n        var interSectAction = this.treemap.leafItemSettings.interSectAction;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var fill;\n        var item;\n        var renderText;\n        var opacity;\n        var rectPath = '';\n        var secondaryEle = document.getElementById(treeMap.element.id + '_Secondary_Element');\n        var groupId;\n        var templateEle;\n        var gap;\n        var textStyle;\n        var levels = treeMap.levels;\n        this.layoutGroup = this.renderer.createGroup({ id: elementID + '_TreeMap_' + mode + '_Layout' });\n        var itemGroup;\n        var template;\n        var border;\n        var templateGroup = createElement('div', {\n            id: treeMap.element.id + '_Label_Template_Group',\n            className: 'template'\n        });\n        templateGroup.style.cssText = 'overflow: hidden; position: absolute;pointer-events: none;' +\n            'top:' + treeMap.areaRect.y + 'px;' +\n            'left:' + treeMap.areaRect.x + 'px;' +\n            'height:' + treeMap.areaRect.height + 'px;' +\n            'width:' + treeMap.areaRect.width + 'px;';\n        var isLeafItem = false;\n        var leaf = treeMap.leafItemSettings;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var childItems;\n        var connectorText;\n        var _loop_1 = function (i) {\n            item = this_1.renderItems[i];\n            index = item['groupIndex'];\n            if (this_1.treemap.drillDownView && isNullOrUndefined(this_1.treemap.currentLevel)\n                && index > 0 || this_1.treemap.drillDownView\n                && index > (this_1.treemap.currentLevel + 1)) {\n                return \"continue\";\n            }\n            rect = item['rect'];\n            isLeafItem = item['isLeafItem'];\n            groupId = elementID + '_Level_Index_' + index + '_Item_Index_' + i;\n            itemGroup = this_1.renderer.createGroup({ id: groupId + '_Group' });\n            gap = (isLeafItem ? leaf.gap : levels[index].groupGap) / 2;\n            var treemapItemRect = this_1.treemap.totalRect ? convertToContainer(this_1.treemap.totalRect) : this_1.treemap.areaRect;\n            if (treeMap.layoutType === 'Squarified') {\n                rect.width = Math.abs(rect.x - rect.width) - gap;\n                rect.height = Math.abs(rect.y - rect.height) - gap;\n            }\n            if (treeMap.renderDirection === 'TopRightBottomLeft') {\n                rect.x = (treemapItemRect.x + treemapItemRect.width) - rect.width - Math.abs(treemapItemRect.x - rect.x);\n            }\n            else if (treeMap.renderDirection === 'BottomLeftTopRight') {\n                rect.y = (treemapItemRect.y + treemapItemRect.height) - rect.height - Math.abs(treemapItemRect.y - rect.y);\n            }\n            else if (treeMap.renderDirection === 'BottomRightTopLeft') {\n                rect.x = (treemapItemRect.x + treemapItemRect.width) - rect.width - Math.abs(treemapItemRect.x - rect.x);\n                rect.y = (treemapItemRect.y + treemapItemRect.height) - rect.height - Math.abs(treemapItemRect.y - rect.y);\n            }\n            getItemColor = this_1.getItemColor(isLeafItem, item);\n            fill = getItemColor['fill'];\n            opacity = getItemColor['opacity'];\n            format = isLeafItem ? leaf.labelFormat : (levels[index]).headerFormat;\n            var levelName;\n            txtVisible = isLeafItem ? leaf.showLabels : (levels[index]).showHeader;\n            if (index === this_1.treemap.currentLevel) {\n                if (this_1.treemap.enableBreadcrumb) {\n                    var re = /#/gi;\n                    connectorText = '#' + this_1.treemap.breadcrumbConnector + '#';\n                    levelName = item['levelOrderName'].replace(re, connectorText);\n                    levelName = index !== 0 ? '#' + levelName : levelName;\n                }\n                else {\n                    levelName = item['name'];\n                }\n            }\n            else {\n                if (this_1.treemap.enableBreadcrumb) {\n                    item['isDrilled'] = false;\n                }\n                levelName = item['name'];\n            }\n            renderText = textFormatter(format, item['data'], this_1.treemap) || levelName || 'undefined';\n            childItems = findChildren(item)['values'];\n            renderText = !isLeafItem && childItems && childItems.length > 0 && this_1.treemap.enableDrillDown ?\n                !item['isDrilled'] ? treeMap.enableRtl ? renderText + ' [+]' : '[+] ' + renderText :\n                    treeMap.enableRtl ? renderText + ' [-]' : '[-] ' + renderText : renderText;\n            textStyle = (isLeafItem ? leaf.labelStyle : levels[index].headerStyle);\n            textStyle.fontFamily = this_1.treemap.themeStyle.labelFontFamily || textStyle.fontFamily;\n            textStyle.fontWeight = textStyle.fontWeight || this_1.treemap.themeStyle.fontWeight;\n            border = isLeafItem ? leaf.border : levels[index].border;\n            position = !isLeafItem ? (levels[index].headerAlignment) === 'Near' ? 'TopLeft' : (levels[index].headerAlignment) === 'Center' ?\n                'TopCenter' : 'TopRight' : leaf.labelPosition;\n            templatePosition = isLeafItem ? leaf.templatePosition : levels[index].templatePosition;\n            template = isLeafItem ? leaf.labelTemplate : levels[index].headerTemplate;\n            item['options'] = { border: border, opacity: opacity, fill: fill };\n            eventArgs = {\n                cancel: false, name: itemRendering, treemap: this_1.treemap, text: renderText,\n                currentItem: item, RenderItems: this_1.renderItems, options: item['options']\n            };\n            this_1.treemap.trigger(itemRendering, eventArgs, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    rectPath = ' M ' + rect.x + ' ' + rect.y + ' L ' + (rect.x + rect.width) + ' ' + rect.y +\n                        ' L ' + (rect.x + rect.width) + ' ' + (rect.y + rect.height) + ' L ' + rect.x + ' ' + (rect.y + rect.height) + 'z';\n                    pathOptions = new PathOption(groupId + '_RectPath', fill, border.width, border.color, opacity, null, rectPath);\n                    var path = _this.renderer.drawPath(pathOptions);\n                    itemGroup.appendChild(path);\n                    if (txtVisible) {\n                        if (eventArgs.text !== renderText) {\n                            eventArgs.text = textFormatter(eventArgs.text, item['data'], _this.treemap) || levelName;\n                        }\n                        _this.renderItemText(eventArgs.text.toString(), itemGroup, textStyle, rect, interSectAction, groupId, fill, position, connectorText);\n                    }\n                    if (template) {\n                        templateEle = _this.renderTemplate(secondaryEle, groupId, rect, templatePosition, template, item, isLeafItem);\n                        if (!isNullOrUndefined(templateEle)) {\n                            templateGroup.appendChild(templateEle);\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            _this.treemap.renderReactTemplates();\n                        }\n                    }\n                    itemGroup.setAttribute('aria-label', item['name']);\n                    itemGroup.setAttribute('role', '');\n                    itemGroup.setAttribute('tabindex', (_this.treemap.tabIndex + i + 2).toString());\n                    maintainSelection(_this.treemap, itemGroup, 'treeMapSelection');\n                    _this.layoutGroup.appendChild(itemGroup);\n                }\n            });\n        };\n        var this_1 = this;\n        for (var i = 0; i < this.renderItems.length; i++) {\n            _loop_1(i);\n        }\n        if (templateGroup.childNodes.length > 0) {\n            secondaryEle.appendChild(templateGroup);\n        }\n        this.treemap.svgObject.appendChild(this.layoutGroup);\n    };\n    LayoutPanel.prototype.renderItemText = function (text, parentElement, textStyle, rect, interSectAction, groupId, fill, position, connectorText) {\n        var padding = 5;\n        var textSize;\n        var textCollection = [];\n        var customText;\n        var tspanText = [];\n        var height = 0;\n        var textName;\n        textCollection = ((text.indexOf('<br>')) !== -1) ? text.split('<br>') : null;\n        customText = this.labelInterSectAction(rect, text, textStyle, interSectAction);\n        textSize = measureText(textCollection && textCollection[0] || customText[0], textStyle);\n        if (this.treemap.enableRtl) {\n            var labelSize = measureText(text, textStyle);\n            var drillSymbolCount = text.search('[+]') || text.search('[-]');\n            if (rect.width < labelSize.width && drillSymbolCount > 0) {\n                var label = text.substring(drillSymbolCount - 1, text.length);\n                var drillSymbol = '[+]';\n                var drillSymbolSize = measureText(drillSymbol, textStyle);\n                customText['0'] = textTrim(rect.width - drillSymbolSize.width - padding, customText[0], textStyle) + label;\n            }\n        }\n        var textLocation = findLabelLocation(rect, position, textSize, 'Text', this.treemap);\n        if (!isNullOrUndefined(textCollection)) {\n            var collection = [];\n            var texts = null;\n            var maxNumber = [];\n            for (var i = 0; i < textCollection.length; i++) {\n                texts = textTrim((rect.width - 5), textCollection[i], textStyle);\n                textSize = measureText(texts, textStyle);\n                height += textSize.height;\n                maxNumber.push(textSize.width);\n                collection.push(texts);\n            }\n            customText = collection;\n            textSize.width = Math.max.apply(null, maxNumber);\n            textSize.height = height;\n        }\n        if (interSectAction === 'WrapByWord' || interSectAction === 'Wrap' || interSectAction === 'Trim') {\n            for (var j = 0; j < customText.length; j++) {\n                textSize = measureText(customText[j], textStyle);\n                height += textSize.height;\n                if ((rect.height - padding) > height) {\n                    tspanText.push(customText[j]);\n                }\n            }\n            if (interSectAction === 'Wrap' && customText.length !== tspanText.length && tspanText.length) {\n                var collectionLength = tspanText.length - 1;\n                var stringText = tspanText[collectionLength];\n                stringText = stringText.substring(0, (stringText.length - 1)) + '...';\n                tspanText.splice(collectionLength);\n                if (stringText !== '...') {\n                    tspanText.push(stringText);\n                }\n            }\n        }\n        else {\n            textName = customText;\n            tspanText.push(textName);\n        }\n        var textOptions = new TextOption(groupId + '_Text', textLocation.x, textLocation.y, 'start', tspanText, '', '', connectorText);\n        renderTextElement(textOptions, textStyle, textStyle.color || this.getSaturatedColor(fill), parentElement);\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LayoutPanel.prototype.getItemColor = function (isLeafItem, item) {\n        var treemap = this.treemap;\n        var itemFill = isLeafItem ? treemap.leafItemSettings.fill : treemap.levels[item['groupIndex']].fill;\n        var itemOpacity = isLeafItem ? treemap.leafItemSettings.opacity : treemap.levels[item['groupIndex']].opacity;\n        if (!isNullOrUndefined(treemap.treemapLevelData.defaultLevelsData)) {\n            if (treemap.treemapLevelData.defaultLevelsData.length > 0) {\n                treemap.treemapLevelData.levelsData = treemap.treemapLevelData.defaultLevelsData;\n            }\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var parentData = findChildren(treemap.treemapLevelData.levelsData[0])['values'];\n        var colorMapping = isLeafItem ? treemap.leafItemSettings.colorMapping :\n            treemap.levels[item['groupIndex']].colorMapping;\n        if (colorMapping.length > 0) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var option = colorMap(colorMapping, item['data'][treemap.equalColorValuePath], item['data'][treemap.rangeColorValuePath]);\n            itemFill = !isNullOrUndefined(option['fill']) ? option['fill'] : treemap.leafItemSettings.fill;\n            itemOpacity = option['opacity'];\n        }\n        else {\n            for (var i = 0; i < parentData.length; i++) {\n                if (parentData[i]['levelOrderName'] === item['levelOrderName'].split('#')[0]) {\n                    itemFill = !isNullOrUndefined(itemFill) ? itemFill : !isNullOrUndefined(treemap.colorValuePath) ?\n                        parentData[i]['data'][treemap.colorValuePath] : treemap.palette.length > 0 ?\n                        treemap.palette[i % treemap.palette.length] : '#808080';\n                }\n            }\n        }\n        return { fill: itemFill, opacity: itemOpacity };\n    };\n    /**\n     * To find saturated color for datalabel\n     *\n     * @param {string} color - Specifies the color\n     * @returns {string} - Returns the color\n     */\n    LayoutPanel.prototype.getSaturatedColor = function (color) {\n        var saturatedColor = color;\n        saturatedColor = (saturatedColor === 'transparent') ? window.getComputedStyle(document.body, null).backgroundColor : saturatedColor;\n        var rgbValue = convertHexToColor(colorNameToHex(saturatedColor));\n        var contrast = Math.round((rgbValue.r * 299 + rgbValue.g * 587 + rgbValue.b * 114) / 1000);\n        return contrast >= 128 ? 'black' : 'white';\n    };\n    LayoutPanel.prototype.renderTemplate = function (\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    secondaryEle, groupId, rect, position, template, item, isLeafItem) {\n        var templateId = isLeafItem ? groupId + '_LabelTemplate' : groupId + '_HeaderTemplate';\n        var baseTemplateId = isLeafItem ? '_LabelTemplate' : '_HeaderTemplate';\n        if (isNullOrUndefined(template['prototype']) && typeof template === 'string') {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var keys = Object.keys(item['data']);\n            for (var i = 0; i < keys.length; i++) {\n                var regExp = RegExp;\n                template = template.replace(new regExp('{{:' + keys[i] + '}}', 'g'), item['data'][keys[i].toString()]);\n            }\n        }\n        var labelElement;\n        if (!isNullOrUndefined(document.getElementById(this.treemap.element.id + '_Secondary_Element'))) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var templateFn = getTemplateFunction(template);\n            var templateElement = templateFn(item['data'], this.treemap, template, this.treemap.element.id + baseTemplateId, false);\n            labelElement = convertElement(templateElement, templateId, item['data']);\n            var templateSize = measureElement(labelElement, secondaryEle);\n            var templateLocation = findLabelLocation(rect, position, templateSize, 'Template', this.treemap);\n            labelElement.style.left = templateLocation.x + 'px';\n            labelElement.style.top = templateLocation.y + 'px';\n        }\n        return labelElement;\n    };\n    LayoutPanel.prototype.labelInterSectAction = function (rect, text, textStyle, alignment) {\n        var textValue;\n        var maxWidth = rect.width - 10;\n        switch (alignment) {\n            case 'Hide':\n                textValue = [hide(maxWidth, rect.height, text, textStyle)];\n                break;\n            case 'Trim':\n                textValue = [textTrim((maxWidth + 3), text, textStyle)];\n                break;\n            case 'WrapByWord':\n                textValue = wordWrap(maxWidth, text, textStyle);\n                break;\n            case 'Wrap':\n                textValue = textWrap(maxWidth, text, textStyle);\n                break;\n        }\n        return textValue;\n    };\n    /**\n     *\n     * @returns {void}\n     * @private\n     */\n    LayoutPanel.prototype.destroy = function () {\n        this.treemap = null;\n        this.currentRect = null;\n        this.layoutGroup = null;\n        this.renderer = null;\n        this.renderItems = [];\n        this.parentData = [];\n    };\n    return LayoutPanel;\n}());\nexport { LayoutPanel };\n","import { print as printFunction, createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { getElement } from '../utils/helper';\nimport { beforePrint } from '../model/constants';\n/**\n * Print module handles the print functionality for treemap.\n *\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Maps\n     *\n     * @param {TreeMap} control - Specifies the treemap instance.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    function Print(control) {\n    }\n    /**\n     * This method is used to perform the print functionality in treemap.\n     *\n     * @param {TreeMap} treeMap - Specifies the treemap instance.\n     * @param { string[] | string | Element} elements - Specifies the element.\n     * @returns {void}\n     * @private\n     */\n    Print.prototype.print = function (treeMap, elements) {\n        var printWindow = window.open('', 'print', 'height=' + window.outerHeight + ',width=' + window.outerWidth + ',tabbar=no');\n        printWindow.moveTo(0, 0);\n        printWindow.resizeTo(screen.availWidth, screen.availHeight);\n        var argsData = {\n            cancel: false, htmlContent: this.getHTMLContent(treeMap, elements), name: beforePrint\n        };\n        treeMap.trigger(beforePrint, argsData, function () {\n            if (!argsData.cancel) {\n                printFunction(argsData.htmlContent, printWindow);\n            }\n        });\n    };\n    /**\n     * To get the html string of the Maps\n     *\n     * @param {TreeMap} treeMap - Specifies the treemap instance.\n     * @param {string[] | string | Element} elements - Specifies the element\n     * @returns {Element} - Returns the element\n     * @private\n     */\n    Print.prototype.getHTMLContent = function (treeMap, elements) {\n        var div = createElement('div');\n        if (elements) {\n            if (elements instanceof Array) {\n                elements.forEach(function (value) {\n                    div.appendChild(getElement(value).cloneNode(true));\n                });\n            }\n            else if (elements instanceof Element) {\n                div.appendChild(elements.cloneNode(true));\n            }\n            else {\n                div.appendChild(getElement(elements).cloneNode(true));\n            }\n        }\n        else {\n            var exportElement = treeMap.element.cloneNode(true);\n            var backgroundElement = exportElement.getElementsByTagName('svg')[0];\n            if (!isNullOrUndefined(backgroundElement)) {\n                backgroundElement = backgroundElement.childNodes[0];\n                if (!isNullOrUndefined(backgroundElement)) {\n                    var backgroundColor = backgroundElement.getAttribute('fill');\n                    if ((treeMap.theme === 'Tailwind' || treeMap.theme === 'Bootstrap5' || treeMap.theme === 'Fluent' || treeMap.theme === 'Material3') && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                        backgroundElement.setAttribute('fill', 'rgba(255,255,255, 1)');\n                    }\n                    else if ((treeMap.theme === 'TailwindDark' || treeMap.theme === 'Bootstrap5Dark' || treeMap.theme === 'FluentDark' || treeMap.theme === 'Material3Dark') && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                        backgroundElement.setAttribute('fill', 'rgba(0, 0, 0, 1)');\n                    }\n                }\n            }\n            div.appendChild(exportElement);\n        }\n        return div;\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name.\n     */\n    Print.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Print';\n    };\n    /**\n     * To destroy the Print module.\n     *\n     * @returns {void}\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    Print.prototype.destroy = function () { };\n    return Print;\n}());\nexport { Print };\n","import { createElement, Browser, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { triggerDownload } from '../utils/helper';\n/**\n * ImageExport module handles the export to image functionality for treemap.\n *\n * @hidden\n */\nvar ImageExport = /** @class */ (function () {\n    /**\n     * Constructor for Maps\n     *\n     * @param {TreeMap} control - Specifies the treemap instance\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    function ImageExport(control) {\n    }\n    /**\n     * This method is used to perform the export functionality for the rendered treemap.\n     *\n     * @param {TreeMap} treeMap - Specifies the treemap instance.\n     * @param {ExportType} type - Specifies the type of the image file.\n     * @param {string} fileName - Specifies the file name of the image file.\n     * @param {boolean} allowDownload - Specifies whether to download the file or not.\n     * @returns {Promise} - Returns the promise string.\n     * @private\n     */\n    ImageExport.prototype.export = function (treeMap, type, fileName, allowDownload) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unused-vars\n        var promise = new Promise(function (resolve, reject) {\n            var element = createElement('canvas', {\n                id: 'ej2-canvas',\n                attrs: {\n                    'height': treeMap.availableSize.height.toString(),\n                    'width': treeMap.availableSize.width.toString()\n                }\n            });\n            var exportElement = treeMap.svgObject.cloneNode(true);\n            var backgroundElement = exportElement.childNodes[0];\n            if (!isNullOrUndefined(backgroundElement)) {\n                var backgroundColor = backgroundElement.getAttribute('fill');\n                if ((treeMap.theme === 'Tailwind' || treeMap.theme === 'Bootstrap5' || treeMap.theme === 'Fluent' || treeMap.theme === 'Material3') && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                    exportElement.childNodes[0].setAttribute('fill', 'rgba(255,255,255, 1)');\n                }\n                else if ((treeMap.theme === 'TailwindDark' || treeMap.theme === 'Bootstrap5Dark' || treeMap.theme === 'FluentDark' || treeMap.theme === 'Material3Dark') && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                    exportElement.childNodes[0].setAttribute('fill', 'rgba(0, 0, 0, 1)');\n                }\n            }\n            var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n            var svgData = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">' +\n                exportElement.outerHTML +\n                '</svg>';\n            var url = window.URL.createObjectURL(new Blob(type === 'SVG' ? [svgData] :\n                [(new XMLSerializer()).serializeToString(exportElement)], { type: 'image/svg+xml' }));\n            if (type === 'SVG') {\n                if (allowDownload) {\n                    triggerDownload(fileName, type, url, isDownload);\n                }\n                else {\n                    resolve(null);\n                }\n            }\n            else {\n                var image_1 = new Image();\n                var context_1 = element.getContext('2d');\n                image_1.onload = (function () {\n                    context_1.drawImage(image_1, 0, 0);\n                    window.URL.revokeObjectURL(url);\n                    if (allowDownload) {\n                        triggerDownload(fileName, type, element.toDataURL('image/png').replace('image/png', 'image/octet-stream'), isDownload);\n                    }\n                    else {\n                        if (type === 'JPEG') {\n                            resolve(element.toDataURL('image/jpeg'));\n                        }\n                        else if (type === 'PNG') {\n                            resolve(element.toDataURL('image/png'));\n                        }\n                    }\n                });\n                image_1.src = url;\n            }\n        });\n        return promise;\n    };\n    ImageExport.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'ImageExport';\n    };\n    /**\n     * To destroy the ImageExport.\n     *\n     * @returns {void}\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    ImageExport.prototype.destroy = function () { };\n    return ImageExport;\n}());\nexport { ImageExport };\n","import { createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { PdfPageOrientation, PdfDocument, PdfBitmap } from '@syncfusion/ej2-pdf-export';\n/**\n * PdfExport module handles the export to pdf functionality for treemap.\n *\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for Maps\n     *\n     * @param {TreeMap} control - Specifies the treemap instance\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n    function PdfExport(control) {\n    }\n    /**\n     * This method is used to perform the export functionality for the rendered treemap.\n     *\n     * @param {TreeMap} treeMap - Specifies the treemap instance.\n     * @param {ExportType} type - Specifies the type of the document.\n     * @param {string} fileName - Specifies the name of the document.\n     * @param {PdfPageOrientation} orientation - Specifies the orientation of the PDF document to export the treemap.\n     * @param {boolean} allowDownload - Specifies whether to download the document or not.\n     * @returns {Promise} - Returns the string.\n     * @private\n     */\n    PdfExport.prototype.export = function (treeMap, type, fileName, orientation, allowDownload) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unused-vars\n        var promise = new Promise(function (resolve, reject) {\n            var element = createElement('canvas', {\n                id: 'ej2-canvas',\n                attrs: {\n                    'width': treeMap.availableSize.width.toString(),\n                    'height': treeMap.availableSize.height.toString()\n                }\n            });\n            orientation = isNullOrUndefined(orientation) ? PdfPageOrientation.Landscape : orientation;\n            var exportElement = treeMap.svgObject.cloneNode(true);\n            var backgroundElement = exportElement.childNodes[0];\n            if (!isNullOrUndefined(backgroundElement)) {\n                var backgroundColor = backgroundElement.getAttribute('fill');\n                if ((treeMap.theme === 'Tailwind' || treeMap.theme === 'Bootstrap5' || treeMap.theme === 'Fluent' || treeMap.theme === 'Material3') && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                    exportElement.childNodes[0].setAttribute('fill', 'rgba(255,255,255, 1)');\n                }\n                else if ((treeMap.theme === 'TailwindDark' || treeMap.theme === 'Bootstrap5Dark' || treeMap.theme === 'FluentDark' || treeMap.theme === 'Material3Dark') && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                    exportElement.childNodes[0].setAttribute('fill', 'rgba(0, 0, 0, 1)');\n                }\n            }\n            var url = window.URL.createObjectURL(new Blob([(new XMLSerializer()).serializeToString(exportElement)], { type: 'image/svg+xml' }));\n            var image = new Image();\n            var context = element.getContext('2d');\n            image.onload = (function () {\n                context.drawImage(image, 0, 0);\n                window.URL.revokeObjectURL(url);\n                var document = new PdfDocument();\n                var imageString = element.toDataURL('image/jpeg').replace('image/jpeg', 'image/octet-stream');\n                document.pageSettings.orientation = orientation;\n                imageString = imageString.slice(imageString.indexOf(',') + 1);\n                document.pages.add().graphics.drawImage(new PdfBitmap(imageString), 0, 0, (treeMap.availableSize.width - 60), treeMap.availableSize.height);\n                if (allowDownload) {\n                    document.save(fileName + '.pdf');\n                    document.destroy();\n                }\n                else {\n                    resolve(null);\n                }\n            });\n            image.src = url;\n        });\n        return promise;\n    };\n    PdfExport.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'PdfExport';\n    };\n    /**\n     * To destroy the PdfExport.\n     *\n     * @returns {void}\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    PdfExport.prototype.destroy = function () { };\n    return PdfExport;\n}());\nexport { PdfExport };\n","/**\n * Tree Map Components\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, NotifyPropertyChanges, Property, extend, Fetch } from '@syncfusion/ej2-base';\nimport { Complex, Collection } from '@syncfusion/ej2-base';\nimport { Event, Internationalization } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { isNullOrUndefined, createElement, EventHandler, Browser, remove } from '@syncfusion/ej2-base';\nimport { Border, Margin, TitleSettings, LegendSettings, InitialDrillSettings } from './model/base';\nimport { SelectionSettings, TooltipSettings, LevelSettings, LeafItemSettings, HighlightSettings } from './model/base';\nimport { Size, stringToNumber, RectOption, Rect, textTrim, measureText, findChildren, removeElement, setItemTemplateContent } from '../treemap/utils/helper';\nimport { removeClassNames, removeShape, textFormatter } from '../treemap/utils/helper';\nimport { findPosition, TextOption, renderTextElement, isContainsData, TreeMapAjax } from '../treemap/utils/helper';\nimport { load, loaded, drillStart, drillEnd } from '../treemap/model/constants';\nimport { itemClick, itemMove, click, mouseMove, resize, doubleClick, rightClick } from '../treemap/model/constants';\nimport { LayoutPanel } from './layout/render-panel';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { getThemeStyle } from './model/theme';\nimport { Print } from './model/print';\nimport { ImageExport } from './model/image-export';\nimport { PdfExport } from './model/pdf-export';\n/**\n * Represents the treemap control. It is used to visualize both hierarchical and flat data.\n * ```html\n * <div id=\"container\"/>\n * <script>\n *   var treemap = new TreeMap();\n *   treemap.appendTo(\"#container\");\n * </script>\n * ```\n */\nvar TreeMap = /** @class */ (function (_super) {\n    __extends(TreeMap, _super);\n    /**\n     * Constructor for TreeMap.\n     *\n     * @param {TreeMapModel} options - Specifies the treemap instance.\n     * @param {string | HTMLElement} element - Specifies the treemap element.\n     */\n    function TreeMap(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**\n         * resize the treemap\n         */\n        _this.isResize = false;\n        /** @private */\n        _this.orientation = 'Horizontal';\n        /** @private */\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        _this.drilledItems = [];\n        /** @private */\n        _this.isHierarchicalData = false;\n        /** @private */\n        _this.levelSelection = [];\n        /** @private */\n        _this.legendId = [];\n        return _this;\n    }\n    TreeMap.prototype.preRender = function () {\n        var _this = this;\n        this.trigger(load, { treemap: this }, function () {\n            _this.initPrivateVariable();\n            _this.unWireEVents();\n            _this.createSvg();\n            _this.wireEVents();\n            _this.setCulture();\n        });\n    };\n    TreeMap.prototype.render = function () {\n        this.renderElements();\n    };\n    TreeMap.prototype.renderElements = function () {\n        this.treemapLevelData = new LevelsData();\n        this.treemapLevelData.levelsData = null;\n        this.treemapLevelData.defaultLevelsData = null;\n        this.treemapLevelData.hierarchyData = null;\n        this.createSecondaryElement();\n        this.addTabIndex();\n        this.themeStyle = getThemeStyle(this.theme);\n        this.renderBorder();\n        this.renderTitle(this.titleSettings, 'title', null, null);\n        if (!isNullOrUndefined(this.treemapLevelData.levelsData)) {\n            this.treemapLevelData.defaultLevelsData = this.treemapLevelData.levelsData;\n        }\n        this.processDataManager();\n    };\n    TreeMap.prototype.processDataManager = function () {\n        var _this = this;\n        var dataModule;\n        var queryModule;\n        var fetchApiModule;\n        var localAjax;\n        if (this.dataSource instanceof DataManager) {\n            dataModule = this.dataSource;\n            queryModule = this.query instanceof Query ? this.query : new Query();\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var dataManager = dataModule.executeQuery(queryModule);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            dataManager.then(function (e) {\n                _this.dataSource = e['result'];\n                _this.renderTreeMapElements();\n            });\n        }\n        else if (this.dataSource instanceof TreeMapAjax) {\n            localAjax = this.dataSource;\n            fetchApiModule = new Fetch(localAjax.dataOptions, localAjax.type, localAjax.contentType);\n            fetchApiModule.onSuccess = function (args) {\n                _this.dataSource = args;\n                _this.renderTreeMapElements();\n            };\n            fetchApiModule.send(localAjax.sendData);\n        }\n        else {\n            this.renderTreeMapElements();\n        }\n    };\n    TreeMap.prototype.renderTreeMapElements = function () {\n        this.processingData();\n        if (this.treeMapLegendModule && this.legendSettings.visible) {\n            this.treeMapLegendModule.renderLegend();\n        }\n        this.layout.processLayoutPanel();\n        this.element.appendChild(this.svgObject);\n        this.elementChange();\n        this.trigger(loaded, { treemap: this, isResized: this.isResize });\n        this.isResize = false;\n        this.renderComplete();\n    };\n    TreeMap.prototype.createSvg = function () {\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n        if (isNullOrUndefined(this.renderer)) {\n            this.renderer = new SvgRenderer(this.element.id);\n        }\n        if (isNullOrUndefined(this.layout)) {\n            this.layout = new LayoutPanel(this);\n        }\n        this.clearTemplate();\n        var containerWidth = this.element.clientWidth;\n        var containerHeight = this.element.clientHeight;\n        this.availableSize = new Size(stringToNumber(this.width, containerWidth) || containerWidth || 600, stringToNumber(this.height, containerHeight) || containerHeight || 450);\n        this.svgObject = this.renderer.createSvg({\n            id: this.element.id + '_svg',\n            width: this.availableSize.width,\n            height: this.availableSize.height\n        });\n    };\n    /**\n     * To initilize the private varibales of treemap.\n     *\n     * @returns {void}\n     */\n    TreeMap.prototype.initPrivateVariable = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-treemap').length;\n            this.element.id = 'treemap_control_' + collection;\n        }\n        this.renderer = new SvgRenderer(this.element.id);\n        this.layout = new LayoutPanel(this);\n    };\n    TreeMap.prototype.createSecondaryElement = function () {\n        var secondaryEle = document.getElementById(this.element.id + '_Secondary_Element');\n        if (secondaryEle && secondaryEle.childElementCount > 0) {\n            secondaryEle.parentNode.removeChild(secondaryEle);\n        }\n        if (isNullOrUndefined(document.getElementById(this.element.id + '_Secondary_Element'))) {\n            var secondaryElement = createElement('div', {\n                id: this.element.id + '_Secondary_Element'\n            });\n            secondaryElement.style.cssText = 'position: absolute;z-index:1;';\n            this.element.appendChild(secondaryElement);\n        }\n    };\n    TreeMap.prototype.elementChange = function () {\n        if (this.treeMapLegendModule && this.legendSettings.visible && this.treeMapLegendModule.legendGroup && this.layout.layoutGroup\n            && !isNullOrUndefined(this.svgObject) && !isNullOrUndefined(document.getElementById(this.layout.layoutGroup.id))\n            && !isNullOrUndefined(document.getElementById(this.treeMapLegendModule.legendGroup.id))) {\n            this.svgObject.insertBefore(this.layout.layoutGroup, this.treeMapLegendModule.legendGroup);\n        }\n    };\n    /**\n     * Render the treemap border\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeMap.prototype.renderBorder = function () {\n        var width = this.border.width;\n        var borderElement = this.svgObject.querySelector('#' + this.element.id + '_TreeMap_Border');\n        if ((this.border.width > 0 || (this.background || this.themeStyle.backgroundColor)) && isNullOrUndefined(borderElement)) {\n            var borderRect = new RectOption(this.element.id + '_TreeMap_Border', this.background || this.themeStyle.backgroundColor, this.border, 1, new Rect(width / 2, width / 2, this.availableSize.width - width, this.availableSize.height - width));\n            this.svgObject.appendChild(this.renderer.drawRectangle(borderRect));\n        }\n        else if (borderElement) {\n            borderElement.setAttribute('fill', this.background || this.themeStyle.backgroundColor);\n        }\n    };\n    TreeMap.prototype.renderTitle = function (title, type, bounds, groupEle) {\n        var style = {\n            color: title.textStyle.color, size: title.textStyle.size, fontFamily: title.textStyle.fontFamily,\n            fontStyle: title.textStyle.fontStyle, fontWeight: title.textStyle.fontWeight, opacity: title.textStyle.opacity\n        };\n        var height;\n        var titlePadding = 10;\n        var width = (this.availableSize.width - this.margin.right - this.margin.left);\n        style.fontFamily = style.fontFamily || this.themeStyle.fontFamily;\n        style.fontWeight = style.fontWeight || this.themeStyle.titleFontWeight;\n        style.size = style.size || (type === 'title' ? this.themeStyle.fontSize : this.themeStyle.subtitleFontSize);\n        if (title.text) {\n            if (isNullOrUndefined(groupEle)) {\n                groupEle = this.renderer.createGroup({ id: this.element.id + '_Title_Group' });\n            }\n            var trimmedTitle = textTrim(width, title.text, style);\n            var elementSize = measureText(trimmedTitle, style);\n            var rect = (isNullOrUndefined(bounds)) ? new Rect(this.margin.left, this.margin.top, this.availableSize.width, this.availableSize.height) : bounds;\n            var location_1 = findPosition(rect, title.alignment, elementSize, type);\n            var options = new TextOption(this.element.id + '_TreeMap_' + type, location_1.x, location_1.y, 'start', trimmedTitle);\n            var titleBounds = new Rect(location_1.x, location_1.y, elementSize.width, elementSize.height);\n            var element = renderTextElement(options, style, style.color || (type === 'title' ? this.themeStyle.titleFontColor : this.themeStyle.subTitleFontColor), groupEle);\n            element.setAttribute('aria-label', title.description || title.text);\n            element.setAttribute('role', '');\n            element.setAttribute('tabindex', (this.tabIndex + (type === 'title' ? 1 : 2)).toString());\n            if ((type === 'title' && !title.subtitleSettings.text) || (type === 'subtitle')) {\n                height = (this.availableSize.height - titleBounds.y - titlePadding - this.margin.bottom);\n                this.areaRect = new Rect(this.margin.left, titleBounds.y + titlePadding, width, height);\n            }\n            if (type !== 'subtitle' && title.subtitleSettings.text) {\n                this.renderTitle(title.subtitleSettings, 'subtitle', titleBounds, groupEle);\n            }\n            else {\n                this.svgObject.appendChild(groupEle);\n            }\n        }\n        else {\n            height = (this.availableSize.height - this.margin.top - this.margin.bottom);\n            this.areaRect = new Rect(this.margin.left, this.margin.top, width, height);\n        }\n    };\n    TreeMap.prototype.processingData = function () {\n        var _this = this;\n        var path;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.dataSource = this.dataSource;\n        if (!isNullOrUndefined(this.dataSource) && this.dataSource.length > 0 && this.weightValuePath) {\n            this.treemapLevelData.levelsData = [];\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.dataSource.map(function (data) {\n                data[_this.weightValuePath] = (data[_this.weightValuePath]) ? data[_this.weightValuePath].toString() :\n                    data[_this.weightValuePath];\n            });\n            this.leafItemSettings.labelPath = this.leafItemSettings.labelPath || this.weightValuePath;\n            this.checkIsHierarchicalData();\n            if (this.levels.length === 0) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var data_1 = {};\n                data_1['level'] = 0;\n                path = this.leafItemSettings.labelPath;\n                data_1[path] = [];\n                for (var i = 0; i < this.dataSource.length; i++) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    var child = findChildren(this.dataSource[i])['values'];\n                    if (this.isHierarchicalData && child && child.length > 0) {\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        child.forEach(function (currentData) {\n                            if (currentData[path]) {\n                                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                                data_1[path].push({\n                                    groupIndex: 0, name: currentData[path],\n                                    levelOrderName: currentData[path].toString(),\n                                    data: currentData, weight: currentData[_this.weightValuePath]\n                                });\n                            }\n                        });\n                    }\n                    else {\n                        if (this.dataSource[i][path]) {\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            data_1[path].push({\n                                groupIndex: 0, name: this.dataSource[i][path], levelOrderName: this.dataSource[i][path].toString(), data: this.dataSource[i],\n                                weight: this.dataSource[i][this.weightValuePath]\n                            });\n                        }\n                    }\n                }\n                this.treemapLevelData.levelsData.push(data_1);\n            }\n            else {\n                if (this.isHierarchicalData) {\n                    this.treemapLevelData.hierarchyData = [];\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    this.treemapLevelData.hierarchyData = extend([], this.dataSource, this.treemapLevelData.hierarchyData, true);\n                    for (var i = 0; i < this.treemapLevelData.hierarchyData.length; i++) {\n                        this.processHierarchicalData(this.treemapLevelData.hierarchyData[i], i);\n                    }\n                    this.treemapLevelData.levelsData = this.treemapLevelData.hierarchyData;\n                }\n                else {\n                    this.processFlatJsonData();\n                    if (this.treemapLevelData.levelsData.length > 1) {\n                        this.reOrderLevelData(this.treemapLevelData.levelsData.length - 1);\n                    }\n                }\n                path = this.levels[0].groupPath;\n            }\n            if (!this.isHierarchicalData) {\n                this.findTotalWeight(this.treemapLevelData.levelsData[0][path], 'Parent');\n            }\n        }\n    };\n    TreeMap.prototype.checkIsHierarchicalData = function () {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var child;\n        this.dataSource = this.dataSource;\n        for (var i = 0; i < this.dataSource.length; i++) {\n            child = findChildren(this.dataSource[i])['values'];\n            if (child && child.length) {\n                this.isHierarchicalData = true;\n                break;\n            }\n            else if (i === this.dataSource.length - 1) {\n                this.isHierarchicalData = false;\n            }\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeMap.prototype.processHierarchicalData = function (data, dataCount) {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var childData;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var newData = {};\n        var levelIndex;\n        var path = this.leafItemSettings.labelPath ? this.leafItemSettings.labelPath : this.weightValuePath;\n        var key;\n        newData = findChildren(data);\n        childData = newData ? newData['values'] : null;\n        if (childData && childData.length > 0) {\n            key = newData['key'];\n            for (var i = 0; i < this.levels.length; i++) {\n                if (key === this.levels[i].groupPath) {\n                    levelIndex = i;\n                }\n            }\n            for (var j = 0; j < childData.length; j++) {\n                childData[j]['name'] = childData[j][path];\n                childData[j]['levelOrderName'] = (levelIndex === 0 ? childData[j]['name'] :\n                    data['levelOrderName'] + '#' + childData[j]['name']) + '';\n                var childItemLevel = childData[j]['levelOrderName'];\n                var childLevel = void 0;\n                if (childItemLevel.search('#') > 0) {\n                    childLevel = childItemLevel.split('#').length - 1;\n                }\n                childData[j]['groupIndex'] = isNullOrUndefined(levelIndex) ? childLevel === this.levels.length\n                    ? this.levels.length : childLevel : levelIndex;\n                if (levelIndex !== 0) {\n                    childData[j]['parent'] = data;\n                }\n                childData[j]['groupName'] = key;\n                childData[j]['data'] = childData[j];\n                childData[j]['isDrilled'] = false;\n                childData[j]['weight'] = childData[j][this.weightValuePath];\n            }\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            childData.forEach(function (currentData) {\n                _this.processHierarchicalData(currentData, dataCount);\n            });\n        }\n        if (dataCount === this.treemapLevelData.hierarchyData.length - 1) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var mainData_1 = this.treemapLevelData.hierarchyData[0][this.levels[0].groupPath];\n            for (var k = 0; k < this.treemapLevelData.hierarchyData.length; k++) {\n                childData = findChildren(this.treemapLevelData.hierarchyData[k])['values'];\n                if (k !== 0 && childData) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    childData.forEach(function (currentData) { mainData_1.push(currentData); });\n                    this.treemapLevelData.hierarchyData.splice(k, 1);\n                    k -= 1;\n                }\n            }\n            mainData_1 = this.treemapLevelData.hierarchyData[0][this.levels[0].groupPath];\n            for (var l = 0; l < mainData_1.length; l++) {\n                newData[this.levels[0].groupPath] = mainData_1;\n                mainData_1[l]['parent'] = newData;\n            }\n        }\n    };\n    /* eslint-disable valid-jsdoc */\n    /**\n     * This method is used to perform the print functionality in treemap.\n     *\n     * @param {string[] | string | Element} id - Specifies the element to print the treemap.\n     * @returns {void}\n     */\n    TreeMap.prototype.print = function (id) {\n        if (this.allowPrint && this.printModule) {\n            this.printModule.print(this, id);\n        }\n    };\n    /**\n     * This method is used to perform the export functionality for the rendered treemap.\n     *\n     * @param {ExportType} type - Specifies the extension type of the exported document.\n     * @param {string} fileName - Specifies file name for exporting the rendered TreeMap.\n     * @param {PdfPageOrientation} orientation - Specifies the orientation of the PDF document.\n     * @param {boolean} allowDownload - Specifies whether the exported file should be downloaded or not.\n     * @returns {string} - Specifies the base64 string of the exported image which is returned when the allowDownload is set to false.\n     */\n    TreeMap.prototype.export = function (type, fileName, orientation, allowDownload) {\n        var _this = this;\n        if (isNullOrUndefined(allowDownload)) {\n            allowDownload = true;\n        }\n        if (type === 'PDF' && this.allowPdfExport && this.pdfExportModule) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unused-vars\n            return new Promise(function (resolve, reject) {\n                resolve(_this.pdfExportModule.export(_this, type, fileName, orientation, allowDownload));\n            });\n        }\n        else if (this.allowImageExport && (type !== 'PDF') && this.imageExportModule) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unused-vars\n            return new Promise(function (resolve, reject) {\n                resolve(_this.imageExportModule.export(_this, type, fileName, allowDownload));\n            });\n        }\n        return null;\n    };\n    TreeMap.prototype.processFlatJsonData = function () {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.dataSource = this.dataSource;\n        var groupPath;\n        var orderNames = [];\n        for (var i = 0; i < this.levels.length + 1; i++) {\n            groupPath = this.levels[i] ? this.levels[i].groupPath : this.leafItemSettings.labelPath;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var level = {};\n            level['level'] = i;\n            level[groupPath] = [];\n            this.treemapLevelData.levelsData.push(level);\n            for (var j = 0; j < this.dataSource.length; j++) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var currentData = {};\n                var childName = '';\n                if (!isNullOrUndefined(groupPath)) {\n                    var name_1 = this.dataSource[j][groupPath];\n                    if (i !== 0) {\n                        for (var k = 0; k <= i; k++) {\n                            var childGroupPath = this.levels[k] ? this.levels[k].groupPath : groupPath;\n                            childName += (this.dataSource[j][childGroupPath]) + ((k === i) ? '' : '#');\n                        }\n                    }\n                    if (!(orderNames.length > 0 ? orderNames.indexOf(childName ?\n                        childName : name_1) !== -1 : false)) {\n                        currentData['name'] = name_1;\n                        currentData['levelOrderName'] = ((childName) ? childName : name_1) + '';\n                        currentData['groupIndex'] = i;\n                        currentData['isDrilled'] = false;\n                        currentData['groupName'] = groupPath;\n                        currentData['data'] = this.dataSource[j];\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        this.treemapLevelData.levelsData[(this.treemapLevelData.levelsData.length - 1)][groupPath].push(currentData);\n                        orderNames.push((childName) ? childName : name_1);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * This method orders the treemap level data.\n     *\n     * @param {number} start - Specifies the start value of the treemap level.\n     * @returns {void}\n     * @private\n     */\n    TreeMap.prototype.reOrderLevelData = function (start) {\n        var currentName;\n        var currentPath = this.levels[start] ? this.levels[start].groupPath : this.leafItemSettings.labelPath;\n        var prevPath = this.levels[start - 1].groupPath;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var currentData = this.treemapLevelData.levelsData[start][currentPath];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var previousData = this.treemapLevelData.levelsData[start - 1][prevPath];\n        for (var i = 0; i < currentData.length; i++) {\n            currentName = currentData[i]['levelOrderName'];\n            for (var j = 0; j < previousData.length; j++) {\n                previousData[j][currentPath] = isNullOrUndefined(previousData[j][currentPath]) ?\n                    [] : previousData[j][currentPath];\n                if (this.IsChildHierarchy(currentName.split('#'), previousData[j]['levelOrderName'].split('#'))) {\n                    if (isNullOrUndefined(currentData[i]['parent'])) {\n                        currentData[i]['parent'] = previousData[j];\n                    }\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    previousData[j][currentPath].push(currentData[i]);\n                    break;\n                }\n            }\n        }\n        this.findTotalWeight(this.treemapLevelData.levelsData[this.treemapLevelData.levelsData.length - 1][currentPath], 'Child');\n        this.treemapLevelData.levelsData.splice(start, 1);\n        if ((start - 1) > 0) {\n            this.reOrderLevelData(start - 1);\n        }\n    };\n    TreeMap.prototype.IsChildHierarchy = function (current, previous) {\n        var isChild = false;\n        for (var i = 0; i < previous.length; i++) {\n            if (current.length < i || previous[i] !== current[i]) {\n                return false;\n            }\n            else {\n                isChild = true;\n            }\n        }\n        return isChild;\n    };\n    /**\n     * This method finds the weight value of the treemap level.\n     *\n     * @param {any[]} processData - Specifies the treemap data.\n     * @param {string} type - Specifies the type of the data.\n     * @returns {void}\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeMap.prototype.findTotalWeight = function (processData, type) {\n        var _this = this;\n        var totalWeight;\n        var split;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var groupName;\n        var groupObj = {};\n        var _loop_1 = function (i) {\n            totalWeight = 0;\n            groupName = processData[i]['groupName'];\n            split = processData[i]['levelOrderName'].split('#');\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this_1.dataSource.forEach(function (data) {\n                if (isContainsData(split, processData[i]['levelOrderName'], data, _this)) {\n                    totalWeight += parseFloat(data[_this.weightValuePath]);\n                }\n            });\n            if (type === 'Parent') {\n                groupObj[groupName] = processData;\n                processData[i]['parent'] = groupObj;\n            }\n            processData[i]['weight'] = totalWeight;\n        };\n        var this_1 = this;\n        for (var i = 0; i < processData.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * To unbind event handlers for treemap.\n     *\n     * @returns {void}\n     * @private\n     */\n    TreeMap.prototype.unWireEVents = function () {\n        EventHandler.remove(this.element, 'click', this.clickOnTreeMap);\n        EventHandler.remove(this.element, 'dblclick', this.doubleClickOnTreeMap);\n        EventHandler.remove(this.element, 'contextmenu', this.rightClickOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchStartEvent, this.mouseDownOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchMoveEvent, this.mouseMoveOnTreeMap);\n        EventHandler.remove(this.element, Browser.touchEndEvent, this.mouseEndOnTreeMap);\n        EventHandler.remove(this.element, 'pointerleave mouseleave', this.mouseLeaveOnTreeMap);\n        window.removeEventListener('resize', this.resizeEvent);\n    };\n    /**\n     * To bind event handlers for treemap.\n     *\n     * @returns {void}\n     */\n    TreeMap.prototype.wireEVents = function () {\n        EventHandler.add(this.element, 'click', this.clickOnTreeMap, this);\n        EventHandler.add(this.element, 'dblclick', this.doubleClickOnTreeMap, this);\n        EventHandler.add(this.element, 'contextmenu', this.rightClickOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchStartEvent, this.mouseDownOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchMoveEvent, this.mouseMoveOnTreeMap, this);\n        EventHandler.add(this.element, Browser.touchEndEvent, this.mouseEndOnTreeMap, this);\n        EventHandler.add(this.element, 'pointerleave mouseleave', this.mouseLeaveOnTreeMap, this);\n        this.resizeEvent = this.resizeOnTreeMap.bind(this);\n        window.addEventListener('resize', this.resizeEvent);\n    };\n    /**\n     * Method to set culture for maps\n     *\n     * @returns {void}\n     */\n    TreeMap.prototype.setCulture = function () {\n        this.intl = new Internationalization();\n    };\n    /**\n     * To add tab index for treemap element\n     *\n     * @returns {void}\n     */\n    TreeMap.prototype.addTabIndex = function () {\n        this.element.setAttribute('aria-label', this.description || 'TreeMap Element');\n        this.element.setAttribute('role', '');\n        this.element.setAttribute('tabindex', this.tabIndex.toString());\n    };\n    /**\n     * This method handles the window resize event on treemap.\n     *\n     * @param {Event} e - Specifies the pointer event.\n     * @returns {void}\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    TreeMap.prototype.resizeOnTreeMap = function (e) {\n        var _this = this;\n        if (!this.isDestroyed) {\n            this.isResize = true;\n            var args_1 = {\n                name: resize,\n                cancel: false,\n                previousSize: this.availableSize,\n                currentSize: new Size(0, 0),\n                treemap: this\n            };\n            if (this.resizeTo) {\n                clearTimeout(this.resizeTo);\n            }\n            if (!isNullOrUndefined(this.element) && this.element.classList.contains('e-treemap')) {\n                this.resizeTo = setTimeout(function () {\n                    _this.unWireEVents();\n                    _this.createSvg();\n                    _this.refreshing = true;\n                    _this.wireEVents();\n                    args_1.currentSize = _this.availableSize;\n                    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                    _this.trigger(resize, args_1, function (observedArgs) {\n                        _this.render();\n                        _this.refreshing = false;\n                    });\n                }, 500);\n            }\n        }\n    };\n    /**\n     * This method handles the click event on the treemap.\n     *\n     * @param {PointerEvent} e - Specifies the mouse click event in the treemap.\n     * @returns {void}\n     * @private\n     */\n    TreeMap.prototype.clickOnTreeMap = function (e) {\n        var _this = this;\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var eventArgs;\n        var itemIndex;\n        var labelText = targetEle.innerHTML;\n        var clickArgs = { cancel: false, name: click, treemap: this, mouseEvent: e };\n        this.trigger(click, clickArgs);\n        if (targetId.indexOf('_Item_Index') > -1) {\n            e.preventDefault();\n            itemIndex = parseFloat(targetId.split('_Item_Index_')[1]);\n            eventArgs = {\n                cancel: false, name: itemClick, treemap: this, item: this.layout.renderItems[itemIndex], mouseEvent: e,\n                groupIndex: this.layout.renderItems[itemIndex]['groupIndex'], groupName: this.layout.renderItems[itemIndex]['name'],\n                text: labelText, contentItemTemplate: labelText\n            };\n            this.trigger(itemClick, eventArgs, function (observedArgs) {\n                if (observedArgs.text !== labelText || observedArgs.contentItemTemplate !== labelText) {\n                    if (isNullOrUndefined(_this.leafItemSettings.labelTemplate)) {\n                        observedArgs.text = textFormatter(observedArgs.text, observedArgs['item']['data'], observedArgs.treemap);\n                        targetEle.textContent = observedArgs.text;\n                    }\n                    else {\n                        setItemTemplateContent(targetId, targetEle, observedArgs.contentItemTemplate);\n                    }\n                }\n            });\n        }\n        var end = new Date().getMilliseconds();\n        var doubleTapTimer1;\n        if (!isNullOrUndefined(this.doubleClick)) {\n            if (!isNullOrUndefined(doubleTapTimer1) && end - doubleTapTimer1 < 500) {\n                this.doubleClickOnTreeMap(e);\n            }\n            doubleTapTimer1 = end;\n        }\n    };\n    /**\n     * This method handles the double click event in the treemap.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event of mouse click.\n     * @returns {void}\n     */\n    TreeMap.prototype.doubleClickOnTreeMap = function (e) {\n        var doubleClickArgs = { cancel: false, name: doubleClick, treemap: this, mouseEvent: e };\n        this.trigger(doubleClick, doubleClickArgs);\n        //this.notify('dblclick', e);\n    };\n    /**\n     * This method handles the right click event in the treemap.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event of mouse click.\n     * @returns {void}\n     * @private\n     */\n    TreeMap.prototype.rightClickOnTreeMap = function (e) {\n        var rightClickArgs = { cancel: false, name: rightClick, treemap: this, mouseEvent: e };\n        this.trigger(rightClick, rightClickArgs);\n    };\n    /**\n     * This method handles the mouse down event in the treemap.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event of mouse click.\n     * @returns {void}\n     * @private\n     */\n    TreeMap.prototype.mouseDownOnTreeMap = function (e) {\n        if (e.target.id.indexOf('_Item_Index') > -1) {\n            this.mouseDown = true;\n        }\n        this.notify(Browser.touchStartEvent, e);\n    };\n    /**\n     * This method handles the mouse move event in the treemap.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event of mouse click.\n     * @returns {void}\n     * @private\n     */\n    TreeMap.prototype.mouseMoveOnTreeMap = function (e) {\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var eventArgs;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var item;\n        var moveArgs = { cancel: false, name: mouseMove, treemap: this, mouseEvent: e };\n        this.trigger(mouseMove, moveArgs);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var childItems;\n        if (targetId.indexOf('_Item_Index') > -1) {\n            item = this.layout.renderItems[parseFloat(targetId.split('_Item_Index_')[1])];\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            childItems = findChildren(item)['values'];\n            this.element.style.cursor = (!item['isLeafItem'] && childItems && childItems.length > 0 && this.enableDrillDown) ?\n                'pointer' : 'auto';\n            eventArgs = { cancel: false, name: itemMove, treemap: this, item: item, mouseEvent: e };\n            this.trigger(itemMove, eventArgs);\n        }\n        this.notify(Browser.touchMoveEvent, e);\n    };\n    /**\n     * This method calculates the selected treemap levels.\n     *\n     * @param {string} labelText - Specifies the label text.\n     * @param {any} item - Specifies the treemap item.\n     * @returns {any} - Returns label of the drilled level.\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n    TreeMap.prototype.calculateSelectedTextLevels = function (labelText, item) {\n        //to find the levels by clicking the particular text both for drillDownView as true / false.\n        var drillLevel;\n        var k;\n        var text;\n        var levelLabels = item['levelOrderName'];\n        var levelText = levelLabels.split('#');\n        for (var _i = 0, _a = Object.keys(levelText); _i < _a.length; _i++) {\n            k = _a[_i];\n            if (levelText[k] === labelText) {\n                drillLevel = parseInt(k, 10);\n                text = labelText;\n            }\n        }\n        return { drillLevel: drillLevel, currentLevelLabel: text, levelText: levelText };\n    };\n    /**\n     * This method calculates the previous level of child items in treemap.\n     *\n     * @param {any} drillLevelValues - Specifies the values of drill level.\n     * @param {any} item - Specifies the treemap item.\n     * @param {boolean} directLevel - Specifies the current level.\n     * @returns {boolean} - check whether it is previous level or not.\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n    TreeMap.prototype.calculatePreviousLevelChildItems = function (drillLevelValues, item, directLevel) {\n        //By clicking any child items drilldown to the particular level.\n        //At the time store all the previous drilled level items in drilledItems\n        // This condition satisfies while drilldown View is set as false and the text contains '[+]'\n        var text;\n        var p = 0;\n        var levelItems;\n        var text1;\n        var drillTextLevel = this.layout.renderItems[0]['levelOrderName'].split('#').length;\n        for (var h = 0; h < drillTextLevel; h++) {\n            text1 = h === 0 ? drillLevelValues['levelText'][h] : text1 + '#' + drillLevelValues['levelText'][h];\n        }\n        p = drillTextLevel > 1 ? drillTextLevel : p;\n        for (var _i = 0, _a = Object['values'](this.layout.renderItems); _i < _a.length; _i++) {\n            levelItems = _a[_i];\n            var drillLevelText = levelItems['levelOrderName'].split('#');\n            if (drillLevelText[0] === drillLevelValues['levelText'][0]) {\n                text = p === 0 ? isNullOrUndefined(text1) ? text1 : drillLevelValues['levelText'][p] :\n                    directLevel ? text1 : text1 + '#' + drillLevelValues['levelText'][p];\n                if (text === levelItems['levelOrderName']) {\n                    this.drilledItems.push({ name: levelItems['levelOrderName'], data: levelItems });\n                    p++;\n                    directLevel = true;\n                    if (p <= item['groupIndex']) {\n                        text = text + '#' + drillLevelValues['levelText'][p];\n                        text1 = text;\n                    }\n                }\n            }\n        }\n        return directLevel;\n    };\n    /**\n     * This method compares the selected labels with the drill down items.\n     *\n     * @param {any} drillLevelValues - Specifies the values of drill level.\n     * @param {any} item - Specifies the treemap item.\n     * @param {number} i - Specifies the treemap item.\n     * @returns {any} - return the new drill down object.\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n    TreeMap.prototype.compareSelectedLabelWithDrillDownItems = function (drillLevelValues, item, i) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var drillLevelChild;\n        var newDrillItem = {};\n        var b = drillLevelValues['drillLevel'] + 1;\n        if (b === this.drilledItems[i]['data']['groupIndex']) {\n            drillLevelChild = this.drilledItems[i]['data']['parent'];\n            drillLevelChild['isDrilled'] = true;\n            newDrillItem[drillLevelChild[this.drilledItems[i]['data']['groupName']]]\n                = [drillLevelChild];\n            // to remove all the items after matched drilled items\n            this.drilledItems.splice(i, this.drilledItems.length);\n        }\n        else if (drillLevelValues['drillLevel'] === (this.drilledItems.length - 1)\n            || drillLevelValues['drillLevel'] === item['groupIndex']) {\n            newDrillItem[item['groupName']] = [item];\n        }\n        return newDrillItem;\n    };\n    /**\n     * This method handles mouse end event in treemap.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event of mouse.\n     * @returns {void}\n     * @private\n     */\n    TreeMap.prototype.mouseEndOnTreeMap = function (e) {\n        var _this = this;\n        var targetEle = e.target;\n        var targetId = targetEle.id;\n        var totalRect;\n        var startEvent;\n        var endEvent;\n        var directLevel = false;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var index;\n        var newDrillItem = {};\n        var item;\n        var process = true;\n        var layoutID = this.element.id + '_TreeMap_' + this.layoutType + '_Layout';\n        var drillLevel;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var templateID = this.element.id + '_Label_Template_Group';\n        var drillLevelValues;\n        if (targetId.indexOf('_Item_Index') > -1 && this.enableDrillDown && !this.drillMouseMove) {\n            if (e.cancelable) {\n                e.preventDefault();\n            }\n            index = parseFloat(targetId.split('_Item_Index_')[1]);\n            item = this.layout.renderItems[index];\n            var labelText = targetEle.textContent;\n            if (this.enableBreadcrumb) {\n                drillLevelValues = this.calculateSelectedTextLevels(labelText, item);\n                drillLevel = drillLevelValues['drillLevel'];\n                if (!this.drillDownView && labelText.search('[+]') !== -1) {\n                    directLevel = this.calculatePreviousLevelChildItems(drillLevelValues, item, directLevel);\n                }\n            }\n            if (this.levels.length !== 0 && !item['isLeafItem'] && findChildren(item)['values'] &&\n                findChildren(item)['values'].length > 0) {\n                if (this.drilledItems.length > 0) {\n                    item = directLevel ? this.drilledItems[this.drilledItems.length - 1]['data'] : item;\n                    for (var i = 0; i < this.drilledItems.length; i++) {\n                        if (!isNullOrUndefined(drillLevel)) { //Compare the selected text level with drilled items\n                            var drillLength = this.drilledItems.length;\n                            newDrillItem = this.compareSelectedLabelWithDrillDownItems(drillLevelValues, item, i);\n                            if (drillLength !== this.drilledItems.length) {\n                                i -= 1;\n                                break;\n                            }\n                        } //when clicking the levels drill back to the previous level process takes place\n                        if (item['levelOrderName'] === this.drilledItems[i]['name'] && !directLevel && isNullOrUndefined(drillLevel)) {\n                            if (item['groupIndex'] === 0 && item['parent'][item['groupName']] instanceof Array) {\n                                item['isDrilled'] = !(item['isDrilled']);\n                                if (!item['isDrilled']) {\n                                    newDrillItem = item['parent'];\n                                }\n                                else {\n                                    newDrillItem[item['groupName']] = [item];\n                                }\n                            }\n                            else {\n                                item['isDrilled'] = false;\n                                item['parent']['isDrilled'] = true;\n                                item = item['parent'];\n                                newDrillItem[item['groupName']] = [item];\n                            }\n                            this.drilledItems.splice(i, 1);\n                            i -= 1;\n                            break;\n                        }\n                        else if (i === this.drilledItems.length - 1 && isNullOrUndefined(drillLevel)) {\n                            item['isDrilled'] = true; // click the items move to next level.\n                            newDrillItem[item['groupName']] = [item];\n                        }\n                    }\n                }\n                else {\n                    item['isDrilled'] = true;\n                    newDrillItem[item['groupName']] = [item];\n                }\n                startEvent = {\n                    cancel: false, name: drillStart, treemap: this,\n                    element: targetEle, groupIndex: this.enableBreadcrumb &&\n                        this.drilledItems.length !== 0 && !isNullOrUndefined(drillLevel) ?\n                        this.drilledItems[this.drilledItems.length - 1]['data']['groupIndex'] : item['groupIndex'],\n                    groupName: this.enableBreadcrumb && this.drilledItems.length !== 0 && !isNullOrUndefined(drillLevel) ?\n                        this.drilledItems[this.drilledItems.length - 1]['data']['name'] : item['name'],\n                    rightClick: e.which === 3 ? true : false, childItems: null, item: newDrillItem\n                };\n                this.trigger(drillStart, startEvent, function (observedArgs) {\n                    _this.currentLevel = item['isDrilled'] && isNullOrUndefined(drillLevel) ? item['groupIndex'] :\n                        (!isNullOrUndefined(drillLevel) && _this.enableBreadcrumb && item['isDrilled']) ? drillLevel : null;\n                    if (!observedArgs.cancel) {\n                        if (document.getElementById(layoutID)) {\n                            var layerElementId = document.getElementById(layoutID);\n                            layerElementId.parentNode.removeChild(layerElementId);\n                        }\n                        totalRect = extend({}, _this.areaRect, totalRect, true);\n                        if (_this.legendSettings.visible && !isNullOrUndefined(_this.treeMapLegendModule)) {\n                            if (!isNullOrUndefined(newDrillItem)) {\n                                _this.treeMapLegendModule.legendGroup.textContent = '';\n                                _this.treeMapLegendModule.legendGroup = null;\n                                _this.treeMapLegendModule.widthIncrement = 0;\n                                _this.treeMapLegendModule.heightIncrement = 0;\n                                if (_this.enableBreadcrumb && !isNullOrUndefined(drillLevel)) {\n                                    _this.drilledLegendItems = {\n                                        name: _this.drilledItems[_this.drilledItems.length - 1]['data']['levelOrderName'],\n                                        data: _this.drilledItems[_this.drilledItems.length - 1]['data']\n                                    };\n                                }\n                                else {\n                                    _this.drilledLegendItems = { name: item['levelOrderName'], data: item };\n                                }\n                                _this.treeMapLegendModule.renderLegend();\n                            }\n                            totalRect = !isNullOrUndefined(_this.totalRect) ? _this.totalRect : totalRect;\n                        }\n                        if (document.getElementById(templateID)) {\n                            var drillElementId = document.getElementById(templateID);\n                            drillElementId.parentNode.removeChild(drillElementId);\n                        }\n                        if (!isNullOrUndefined(observedArgs.childItems) && !observedArgs.cancel) {\n                            _this.layout.onDemandProcess(observedArgs.childItems);\n                        }\n                        else {\n                            _this.layout.calculateLayoutItems(newDrillItem, totalRect);\n                            _this.layout.renderLayoutItems();\n                        }\n                    }\n                });\n                endEvent = { cancel: false, name: drillEnd, treemap: this, renderItems: this.layout.renderItems };\n                this.trigger(drillEnd, endEvent);\n                if (process) {\n                    if (!directLevel && isNullOrUndefined(drillLevel)) {\n                        this.drilledItems.push({ name: item['levelOrderName'], data: item });\n                    }\n                }\n            }\n        }\n        this.mouseDown = false;\n        this.notify(Browser.touchEndEvent, e);\n    };\n    /**\n     * This method handles mouse leave event in treemap.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event of mouse.\n     * @return {void}\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    TreeMap.prototype.mouseLeaveOnTreeMap = function (e) {\n        if (this.treeMapTooltipModule) {\n            this.treeMapTooltipModule.removeTooltip();\n        }\n        if (this.treeMapLegendModule) {\n            this.treeMapLegendModule.removeInteractivePointer();\n        }\n        removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', this);\n        if (this.treeMapHighlightModule) {\n            removeShape(this.treeMapHighlightModule.shapeHighlightCollection);\n            this.treeMapHighlightModule.highLightId = '';\n        }\n    };\n    /**\n     * This method is used to select or remove the selection of treemap item based on the provided selection settings.\n     *\n     * @param {string[]} levelOrder - Specifies the order of the level.\n     * @param {boolean} isSelected - Specifies whether the treemap item should be selected or the selection should be removed.\n     * @return {void}\n     */\n    TreeMap.prototype.selectItem = function (levelOrder, isSelected) {\n        if (isNullOrUndefined(isSelected)) {\n            isSelected = true;\n        }\n        var levelOrderName = '';\n        for (var i = 0; i < levelOrder.length; i++) {\n            if (i !== levelOrder.length - 1) {\n                levelOrderName += levelOrder[i] + '#';\n            }\n            else {\n                levelOrderName += levelOrder[i];\n            }\n        }\n        if (this.treeMapSelectionModule && this.selectionSettings.enable) {\n            this.treeMapSelectionModule.selectTreemapItem(levelOrderName, isSelected);\n        }\n    };\n    /**\n     * To provide the array of modules needed for maps rendering\n     *\n     * @returns {ModuleDeclaration[]} Returns the modules\n     * @private\n     */\n    TreeMap.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.tooltipSettings.visible) {\n            modules.push({\n                member: 'treeMapTooltip',\n                args: [this]\n            });\n        }\n        if (this.highlightSettings.enable) {\n            modules.push({\n                member: 'treeMapHighlight',\n                args: [this]\n            });\n        }\n        if (this.selectionSettings.enable) {\n            modules.push({\n                member: 'treeMapSelection',\n                args: [this]\n            });\n        }\n        if (this.legendSettings.visible) {\n            modules.push({\n                member: 'treeMapLegend',\n                args: [this]\n            });\n        }\n        if (this.allowPrint) {\n            modules.push({\n                member: 'Print',\n                args: [this, Print]\n            });\n        }\n        if (this.allowImageExport) {\n            modules.push({\n                member: 'ImageExport',\n                args: [this, ImageExport]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport',\n                args: [this, PdfExport]\n            });\n        }\n        return modules;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @param {TreeMapModel} newProp - Specifies the new property\n     * @param {TreeMapModel} oldProp - Specifies the old property\n     * @returns {void}\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    TreeMap.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.isDestroyed) {\n            var render = false;\n            for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                switch (prop) {\n                    case 'background':\n                        this.renderBorder();\n                        break;\n                    case 'height':\n                    case 'width':\n                    case 'layoutType':\n                    case 'levels':\n                    case 'drillDownView':\n                    case 'renderDirection':\n                    case 'leafItemSettings':\n                    case 'legendSettings':\n                    case 'dataSource':\n                        render = true;\n                        break;\n                }\n            }\n            if (render) {\n                this.createSvg();\n                this.renderElements();\n            }\n        }\n    };\n    /**\n     * Gets component name.\n     *\n     * @returns {string} - return the treemap instance.\n     * @private\n     */\n    TreeMap.prototype.getModuleName = function () {\n        return 'treemap';\n    };\n    /**\n     * This method destroys the treemap. This method removes the events associated with the treemap and disposes the objects created for rendering and updating the treemap.\n     */\n    TreeMap.prototype.destroy = function () {\n        this.unWireEVents();\n        removeElement('treeMapMeasureText');\n        this.drilledItems = [];\n        this.levelSelection = [];\n        this.legendId = [];\n        this.removeSvg();\n        _super.prototype.destroy.call(this);\n    };\n    TreeMap.prototype.removeSvg = function () {\n        removeElement(this.element.id + '_Secondary_Element');\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string} - Returns the string value.\n     * @private\n     */\n    TreeMap.prototype.getPersistData = function () {\n        return '';\n    };\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"allowPrint\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"allowImageExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TreeMap.prototype, \"border\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], TreeMap.prototype, \"margin\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"background\", void 0);\n    __decorate([\n        Property('Material')\n    ], TreeMap.prototype, \"theme\", void 0);\n    __decorate([\n        Complex({}, TitleSettings)\n    ], TreeMap.prototype, \"titleSettings\", void 0);\n    __decorate([\n        Property('Squarified')\n    ], TreeMap.prototype, \"layoutType\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"query\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"weightValuePath\", void 0);\n    __decorate([\n        Property('')\n    ], TreeMap.prototype, \"rangeColorValuePath\", void 0);\n    __decorate([\n        Property('')\n    ], TreeMap.prototype, \"equalColorValuePath\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"colorValuePath\", void 0);\n    __decorate([\n        Property([])\n    ], TreeMap.prototype, \"palette\", void 0);\n    __decorate([\n        Property('TopLeftBottomRight')\n    ], TreeMap.prototype, \"renderDirection\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"enableDrillDown\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"enableBreadcrumb\", void 0);\n    __decorate([\n        Property(' - ')\n    ], TreeMap.prototype, \"breadcrumbConnector\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"drillDownView\", void 0);\n    __decorate([\n        Complex({}, InitialDrillSettings)\n    ], TreeMap.prototype, \"initialDrillDown\", void 0);\n    __decorate([\n        Complex({}, LeafItemSettings)\n    ], TreeMap.prototype, \"leafItemSettings\", void 0);\n    __decorate([\n        Collection([], LevelSettings)\n    ], TreeMap.prototype, \"levels\", void 0);\n    __decorate([\n        Complex({}, HighlightSettings)\n    ], TreeMap.prototype, \"highlightSettings\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeMap.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], TreeMap.prototype, \"tooltipSettings\", void 0);\n    __decorate([\n        Complex({}, LegendSettings)\n    ], TreeMap.prototype, \"legendSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeMap.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"description\", void 0);\n    __decorate([\n        Property(1)\n    ], TreeMap.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeMap.prototype, \"format\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"drillStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"drillEnd\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemHighlight\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"tooltipRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"itemMove\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"doubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"rightClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"mouseMove\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"legendItemRendering\", void 0);\n    __decorate([\n        Event()\n    ], TreeMap.prototype, \"legendRendering\", void 0);\n    TreeMap = __decorate([\n        NotifyPropertyChanges\n    ], TreeMap);\n    return TreeMap;\n}(Component));\nexport { TreeMap };\n/**\n * @private\n */\nvar LevelsData = /** @class */ (function () {\n    function LevelsData() {\n    }\n    return LevelsData;\n}());\nexport { LevelsData };\n","import { findChildren, Location, Rect, Size, measureText, TextOption, PathOption, RectOption, drawSymbol, orderByArea, legendMaintain } from '../utils/helper';\nimport { Browser, isNullOrUndefined, EventHandler, extend } from '@syncfusion/ej2-base';\nimport { renderTextElement, textTrim } from '../utils/helper';\nimport { legendItemRendering, legendRendering } from '../model/constants';\n/**\n * Legend module class\n */\nvar TreeMapLegend = /** @class */ (function () {\n    function TreeMapLegend(treemap) {\n        this.page = 0;\n        /** @private */\n        this.legendBorderRect = new Rect(0, 0, 0, 0);\n        this.currentPage = 0;\n        /** @private */\n        this.heightIncrement = 0;\n        /** @private */\n        this.widthIncrement = 0;\n        this.textMaxWidth = 0;\n        this.legendInteractiveGradient = [];\n        this.legendItemRect = new Rect(0, 0, 0, 0);\n        this.treemap = treemap;\n        this.addEventListener();\n    }\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * method for legend\n     * @private\n     */\n    TreeMapLegend.prototype.renderLegend = function () {\n        var _this = this;\n        this.page = 0;\n        this.legendRenderingCollections = [];\n        this.legendCollections = [];\n        this.legendNames = [];\n        this.totalPages = [];\n        this.gradientCount = 1;\n        this.widthIncrement = 0;\n        this.heightIncrement = 0;\n        this.defsElement = this.treemap.renderer.createDefs();\n        this.treemap.svgObject.appendChild(this.defsElement);\n        var eventArgs = {\n            cancel: false, name: legendRendering, treemap: this.treemap, _changePosition: this.treemap.legendSettings.position,\n            position: this.treemap.legendSettings.position\n        };\n        this.treemap.trigger(legendRendering, eventArgs, function (observedArgs) {\n            if (!observedArgs.cancel && observedArgs._changePosition !== _this.treemap.legendSettings.position) {\n                _this.treemap.legendSettings.position = observedArgs._changePosition;\n            }\n            _this.calculateLegendBounds();\n            if (_this.legendCollections.length > 0) {\n                _this.drawLegend();\n            }\n        });\n    };\n    /** @private */\n    TreeMapLegend.prototype.calculateLegendBounds = function () {\n        var _this = this;\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        this.findColorMappingLegendItems(treemap.treemapLevelData.levelsData[0]);\n        if ((this.treemap.palette.length > 0 || !isNullOrUndefined(treemap.colorValuePath))\n            && this.legendCollections.length === 0) {\n            this.findPaletteLegendItems(treemap.treemapLevelData.levelsData[0]);\n        }\n        if (this.legendCollections.length > 0) {\n            // eslint-disable-next-line @typescript-eslint/tslint/config\n            this.legendCollections.sort(function (firstItem, nextItem) { return (firstItem.levelIndex > nextItem.levelIndex) ? 1 :\n                (firstItem.levelIndex < nextItem.levelIndex) ? -1 : 0; });\n            // eslint-disable-next-line @typescript-eslint/tslint/config\n            this.legendCollections.sort(function (firstItem, nextItem) { return (firstItem.groupIndex > nextItem.groupIndex) ? 1 :\n                (firstItem.groupIndex < nextItem.groupIndex) ? -1 : 0; });\n            // eslint-disable-next-line @typescript-eslint/tslint/config\n            this.legendCollections.sort(function (firstItem, nextItem) { return (firstItem.leafIndex > nextItem.leafIndex) ? 1 :\n                (firstItem.leafIndex < nextItem.leafIndex) ? -1 : 0; });\n            var defaultSize = 25;\n            var textPadding = 10;\n            var position = legend.position;\n            var legendTitle = legend.title.text;\n            var titleTextStyle = legend.titleStyle;\n            var legendMode = legend.mode;\n            var shapeX = 0;\n            var shapeY = 0;\n            var textX = 0;\n            var textY = 0;\n            var shapeHeight = legend.shapeHeight;\n            var shapeWidth = legend.shapeWidth;\n            var shapeLocation = [];\n            var textLocation = [];\n            var orientation_1 = (legend.orientation === 'None') ? ((position === 'Top' || position === 'Bottom'\n                || (position === 'Auto' && treemap.availableSize.width <= treemap.availableSize.height))\n                ? 'Horizontal' : 'Vertical') : legend.orientation;\n            var leftPadding = 10;\n            var topPadding = 10;\n            var spacing = 10;\n            var legendWidth = (legend.width.length > 1) ? (legend.width.indexOf('%') > -1) ? (treemap.availableSize.width / 100)\n                * parseFloat(legend.width) : parseFloat(legend.width) : null;\n            var legendHeight = (legend.height.length > 1) ? (legend.height.indexOf('%') > -1) ?\n                (treemap.availableSize.height / 100) * parseFloat(legend.height) : parseFloat(legend.height) : null;\n            titleTextStyle.fontFamily = treemap.themeStyle.fontFamily || titleTextStyle.fontFamily;\n            titleTextStyle.fontWeight = titleTextStyle.fontWeight || treemap.themeStyle.titleFontWeight;\n            titleTextStyle.size = treemap.themeStyle.legendFontSize || titleTextStyle.size;\n            var legendTitleSize = measureText(legendTitle, titleTextStyle);\n            var startX_1 = 0;\n            var startY_1 = 0;\n            var shapePadding = legend.shapePadding;\n            var itemTextStyle = legend.textStyle;\n            itemTextStyle.size = itemTextStyle.size || treemap.themeStyle.legendFontSize;\n            itemTextStyle.fontFamily = itemTextStyle.fontFamily || treemap.themeStyle.fontFamily;\n            itemTextStyle.fontWeight = itemTextStyle.fontWeight || treemap.themeStyle.fontWeight;\n            if (legendMode === 'Default') {\n                legendWidth = (isNullOrUndefined(legendWidth)) ? treemap.areaRect.width : legendWidth;\n                legendHeight = (isNullOrUndefined(legendHeight)) ? treemap.areaRect.height : legendHeight;\n                var j = 0;\n                for (var i = 0; i < this.legendCollections.length; i++) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    var legendItem = this.legendCollections[i];\n                    if (isNullOrUndefined(this.totalPages[this.page])) {\n                        this.totalPages[this.page] = { Page: (this.page + 1), Collection: [] };\n                    }\n                    var legendTextSize = measureText(legendItem['legendName'], itemTextStyle);\n                    this.textMaxWidth = Math.max(this.textMaxWidth, legendTextSize.width);\n                    if (i === 0) {\n                        startX_1 = shapeX = (leftPadding + (shapeWidth / 2));\n                        startY_1 = shapeY = topPadding + legendTitleSize.height + (shapeHeight > legendTextSize.height ? shapeHeight / 2\n                            : (legendTextSize.height / 4));\n                    }\n                    else {\n                        var maxSize = (legendTextSize.height > shapeHeight) ? legendTextSize.height : shapeHeight;\n                        if (orientation_1 === 'Horizontal') {\n                            var prvePositionX = (textLocation[j - 1].x + textLocation[j - 1].width) + textPadding + shapeWidth;\n                            if ((prvePositionX + shapePadding + legendTextSize.width) > legendWidth) {\n                                var nextPositionY = (textLocation[j - 1].y > (shapeLocation[j - 1].y + (shapeHeight / 2)) ?\n                                    textLocation[j - 1].y : (shapeLocation[j - 1].y + (shapeHeight / 2))) + topPadding;\n                                if ((nextPositionY + maxSize) > legendHeight) {\n                                    this.getPageChanged();\n                                    j = 0;\n                                    shapeLocation = [];\n                                    textLocation = [];\n                                    shapeX = startX_1;\n                                    shapeY = startY_1;\n                                }\n                                else {\n                                    shapeX = (shapeLocation[0].x);\n                                    shapeY = (nextPositionY + (maxSize / 2));\n                                }\n                            }\n                            else {\n                                shapeX = (prvePositionX - (shapeWidth / 2));\n                                shapeY = (shapeLocation[j - 1]).y;\n                            }\n                        }\n                        else {\n                            var prevPositionY = textLocation[j - 1].y > shapeLocation[j - 1].y + (shapeHeight / 2) ?\n                                textLocation[j - 1].y : shapeLocation[j - 1].y + (shapeHeight / 2);\n                            if ((prevPositionY + topPadding + maxSize) > legendHeight) {\n                                var nextPositionX = (textLocation[j - 1].x + this.textMaxWidth + textPadding);\n                                if ((nextPositionX + shapePadding + legendTextSize.width) > legendWidth) {\n                                    shapeX = startX_1;\n                                    shapeY = startY_1;\n                                    textLocation = [];\n                                    shapeLocation = [];\n                                    this.getPageChanged();\n                                    j = 0;\n                                }\n                                else {\n                                    shapeX = nextPositionX + (shapeWidth / 2);\n                                    shapeY = (shapeLocation[0].y);\n                                }\n                            }\n                            else {\n                                shapeX = shapeLocation[j - 1].x;\n                                shapeY = prevPositionY + topPadding + (shapeHeight / 2);\n                            }\n                        }\n                    }\n                    textX = shapeX + (shapeWidth / 2) + shapePadding;\n                    textY = shapeY + (legendTextSize.height / 4);\n                    shapeLocation.push({ x: shapeX, y: shapeY });\n                    textLocation.push({ x: textX, y: textY, width: legendTextSize.width, height: (legendTextSize.height / 2) });\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    this.totalPages[this.page]['Collection'].push({\n                        DisplayText: legendItem['legendName'], element: legendItem['gradientElement'],\n                        Shape: { x: shapeX, y: shapeY },\n                        Text: { x: textX, y: textY },\n                        Fill: legendItem['legendFill'],\n                        Data: legendItem['legendData'],\n                        Rect: {\n                            x: shapeLocation[j].x - (shapeWidth / 2),\n                            y: (shapeLocation[j].y - (shapeHeight / 2)) < (textY - legendTextSize.height) ?\n                                (shapeLocation[j].y - (shapeHeight / 2)) : (textY - legendTextSize.height),\n                            width: Math.abs((shapeLocation[j].x - (shapeWidth / 2)) - (textX + legendTextSize.width)),\n                            height: ((shapeHeight > legendTextSize.height) ? shapeHeight : legendTextSize.height)\n                        }\n                    });\n                    j++;\n                }\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var collection = this.totalPages[0]['Collection'];\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                collection.forEach(function (legendObj, index) {\n                    var legendRect = new Rect(legendObj['Rect']['x'], legendObj['Rect']['y'], legendObj['Rect']['width'], legendObj['Rect']['height']);\n                    if (index === 0) {\n                        startX_1 = legendRect.x;\n                        startY_1 = legendRect.y;\n                    }\n                    _this.widthIncrement = Math.max(_this.widthIncrement, Math.abs(startX_1 - (legendRect.x + legendRect.width)));\n                    _this.heightIncrement = Math.max(_this.heightIncrement, Math.abs(startY_1 - (legendRect.y + legendRect.height)));\n                });\n                legendWidth = ((this.widthIncrement < legendWidth) ? this.widthIncrement : legendWidth);\n                legendHeight = ((this.heightIncrement < legendHeight) ? this.heightIncrement : legendHeight);\n                this.legendItemRect = {\n                    x: collection[0]['Rect']['x'], y: collection[0]['Rect']['y'],\n                    width: legendWidth, height: legendHeight\n                };\n            }\n            else {\n                var legendLength = this.legendCollections.length;\n                var rectWidth = (orientation_1 === 'Horizontal') ? (isNullOrUndefined(legendWidth)) ? (treemap.areaRect.width / legendLength) :\n                    (legendWidth / legendLength) : (isNullOrUndefined(legendWidth)) ? defaultSize : legendWidth;\n                var rectHeight = (orientation_1 === 'Horizontal') ? (isNullOrUndefined(legendHeight)) ? defaultSize : legendHeight :\n                    (isNullOrUndefined(legendHeight)) ? (treemap.areaRect.height / legendLength) : (legendHeight / legendLength);\n                startX_1 = 0;\n                startY_1 = legendTitleSize.height + spacing;\n                var textPadding_1 = 10;\n                var placement = legend.labelPosition;\n                var itemStartX = 0;\n                var itemStartY = 0;\n                var labelAction = legend.labelDisplayMode;\n                var maxTextHeight = 0;\n                var maxTextWidth = 0;\n                for (var i = 0; i < this.legendCollections.length; i++) {\n                    startX_1 = (orientation_1 === 'Horizontal') ? (startX_1 + rectWidth) : startX_1;\n                    startY_1 = (orientation_1 === 'Horizontal') ? startY_1 : (startY_1 + rectHeight);\n                    var legendText = this.legendCollections[i]['legendName'];\n                    var itemTextSize = new Size(0, 0);\n                    if (labelAction === 'None') {\n                        itemTextSize = measureText(legendText, itemTextStyle);\n                    }\n                    else if (labelAction === 'Trim') {\n                        legendText = textTrim((orientation_1 === 'Horizontal' ? rectWidth : rectHeight), legendText, itemTextStyle);\n                        itemTextSize = measureText(legendText, itemTextStyle);\n                    }\n                    else {\n                        legendText = '';\n                    }\n                    maxTextHeight = Math.max(maxTextHeight, itemTextSize.height);\n                    maxTextWidth = Math.max(maxTextWidth, itemTextSize.width);\n                    if (itemTextSize.width > 0 && itemTextSize.height > 0) {\n                        if (orientation_1 === 'Horizontal') {\n                            textX = startX_1 + (rectWidth / 2);\n                            textY = (placement === 'After') ? (startY_1 + rectHeight + (itemTextSize.height / 2)) + textPadding_1 :\n                                (startY_1 - textPadding_1);\n                        }\n                        else {\n                            textX = (placement === 'After') ? startX_1 - (itemTextSize.width / 2) - textPadding_1\n                                : (startX_1 + rectWidth + itemTextSize.width / 2) + textPadding_1;\n                            textY = startY_1 + (rectHeight / 2) + (itemTextSize.height / 4);\n                        }\n                    }\n                    if (i === 0) {\n                        itemStartX = (orientation_1 === 'Horizontal') ? startX_1 : (placement === 'After') ?\n                            textX - (itemTextSize.width / 2) : startX_1;\n                        itemStartY = (orientation_1 === 'Horizontal') ? (placement === 'After') ? startY_1 :\n                            textY - (itemTextSize.height / 2) : startY_1;\n                    }\n                    if (i === legendLength - 1) {\n                        legendWidth = (orientation_1 === 'Horizontal') ? Math.abs((startX_1 + rectWidth) - itemStartX) :\n                            (rectWidth + maxTextWidth + textPadding_1);\n                        legendHeight = (orientation_1 === 'Horizontal') ? (rectHeight + (maxTextHeight / 2) + textPadding_1) :\n                            Math.abs((startY_1 + rectHeight) - itemStartY);\n                    }\n                    this.legendRenderingCollections.push({\n                        fill: this.legendCollections[i]['legendFill'], x: startX_1, y: startY_1,\n                        width: rectWidth, height: rectHeight, element: this.legendCollections[i]['gradientElement'],\n                        text: legendText, textX: textX, textY: textY,\n                        textWidth: itemTextSize.width, textHeight: itemTextSize.height,\n                        data: this.legendCollections[i]['legendData']\n                    });\n                }\n                this.legendItemRect = { x: itemStartX, y: itemStartY, width: legendWidth, height: legendHeight };\n            }\n        }\n    };\n    TreeMapLegend.prototype.getPageChanged = function () {\n        this.page++;\n        if (isNullOrUndefined(this.totalPages[this.page])) {\n            this.totalPages[this.page] = { Page: (this.page + 1), Collection: [] };\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeMapLegend.prototype.findColorMappingLegendItems = function (data) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var child = findChildren(data)['values'];\n        if (child && child.length > 0) {\n            this.calculateLegendItems(child);\n            if (this.treemap.levels.length > 0) {\n                for (var i = 0; i < child.length; i++) {\n                    this.findColorMappingLegendItems(child[i]);\n                }\n            }\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeMapLegend.prototype.findPaletteLegendItems = function (data) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var child;\n        var legendFillColor;\n        if (!isNullOrUndefined(this.treemap.drilledItems)) {\n            if (this.treemap.drilledItems.length === 0 && !isNullOrUndefined(this.treemap.initialDrillDown.groupName)\n                && isNullOrUndefined(this.treemap.drilledLegendItems)) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var items = findChildren(data)['values'];\n                for (var k = 0; k < items.length; k++) {\n                    if (items[k]['Name'] === this.treemap.initialDrillDown.groupName) {\n                        items[k]['isDrilled'] = !items[k]['isDrilled'];\n                        data = items[k];\n                        this.treemap.currentLevel = this.treemap.initialDrillDown.groupIndex;\n                        legendFillColor = this.treemap.palette.length > 0 ? this.treemap.palette[k % this.treemap.palette.length] :\n                            items[k]['data'][this.treemap.colorValuePath];\n                        break;\n                    }\n                }\n            }\n        }\n        if (this.treemap.enableDrillDown && !isNullOrUndefined(this.treemap.drilledLegendItems)) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var childElement = this.treemap.drilledLegendItems;\n            legendFillColor = childElement['data']['options']['fill'];\n            if (childElement['data']['isDrilled']) {\n                child = findChildren(childElement['data'])['values'];\n            }\n            else {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var parentElement = childElement['data']['parent'];\n                child = findChildren(parentElement)['values'];\n            }\n        }\n        else {\n            child = findChildren(data)['values'];\n        }\n        var isDuplicate;\n        var legendName;\n        if (child && child.length > 0) {\n            for (var i = 0; i < child.length; i++) {\n                if (isNullOrUndefined(child[i]['data'][this.treemap.legendSettings.showLegendPath]) ||\n                    child[i]['data'][this.treemap.legendSettings.showLegendPath]) {\n                    legendName = child[i]['data'][this.treemap.legendSettings.valuePath] ?\n                        child[i]['data'][this.treemap.legendSettings.valuePath] : child[i]['name'];\n                    isDuplicate = this.treemap.legendSettings.removeDuplicateLegend ?\n                        this.removeDuplicates(this.legendCollections, legendName) : false;\n                    if (!isDuplicate) {\n                        this.legendCollections.push({\n                            legendName: legendName,\n                            legendFill: this.treemap.palette.length > 0 ? !isNullOrUndefined(this.treemap.currentLevel)\n                                ? legendFillColor : this.treemap.palette[i % this.treemap.palette.length] :\n                                child[i]['data'][this.treemap.colorValuePath],\n                            legendData: [],\n                            itemArea: child[i]['weight']\n                        });\n                    }\n                }\n            }\n            this.legendCollections.sort(orderByArea);\n            if (this.treemap.palette.length > 0) {\n                for (var j = 0; j < this.legendCollections.length; j++) {\n                    this.legendCollections[j]['legendFill'] = !isNullOrUndefined(this.treemap.currentLevel)\n                        ? legendFillColor : this.treemap.palette[j % this.treemap.palette.length];\n                }\n            }\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeMapLegend.prototype.calculateLegendItems = function (data) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var isAddData;\n        var fill;\n        var rangeValue;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var currentData;\n        var legendText;\n        var isLeafItem;\n        var colorMapProcess = false;\n        var colorMapping;\n        var groupIndex;\n        var leaf = this.treemap.leafItemSettings;\n        var levels = this.treemap.levels;\n        var equalValue;\n        var position = this.treemap.legendSettings.position;\n        var gradientElement;\n        var x2;\n        var y2;\n        var actualValue;\n        var isDuplicate;\n        var isEqualColor;\n        var isRange;\n        var isDesaturation = false;\n        var legendIndex = 0;\n        var outfill;\n        var labelLegend;\n        var otherIndex;\n        this.outOfRangeLegend = null;\n        for (var i = 0; i < data.length; i++) {\n            fill = '';\n            isEqualColor = false;\n            isRange = false;\n            isDesaturation = false;\n            currentData = data[i]['data'];\n            groupIndex = data[i]['groupIndex'];\n            isLeafItem = (this.treemap.levels.length === 0 || groupIndex === this.treemap.levels.length);\n            colorMapping = isLeafItem ? leaf.colorMapping : levels[groupIndex].colorMapping;\n            for (var j = 0; j < colorMapping.length; j++) {\n                var colorMap = colorMapping[j];\n                gradientElement = null;\n                rangeValue = Number(currentData[this.treemap.rangeColorValuePath]);\n                equalValue = currentData[this.treemap.equalColorValuePath];\n                colorMap.value = !isNullOrUndefined(colorMap.value) ? colorMap.value.toString() : colorMap.value;\n                if (!isNullOrUndefined(colorMap.from) && !isNullOrUndefined(colorMap.to) &&\n                    rangeValue >= colorMap.from && rangeValue <= colorMap.to && colorMap.showLegend) {\n                    colorMapProcess = true;\n                    isRange = true;\n                    actualValue = colorMap.from + ' - ' + colorMap.to;\n                    legendText = !isNullOrUndefined(colorMap.label) ? colorMap.label : colorMap.from + ' - ' + colorMap.to;\n                    fill = isNullOrUndefined(colorMap.color) ? fill : colorMap.color;\n                    isAddData = this.isAddNewLegendData(actualValue);\n                }\n                else if (!isNullOrUndefined(colorMap.value) && equalValue === colorMap.value && colorMap.showLegend) {\n                    colorMapProcess = true;\n                    isEqualColor = true;\n                    actualValue = colorMap.value.toString();\n                    legendText = !isNullOrUndefined(colorMap.label) ? colorMap.label : colorMap.value.toString();\n                    fill = isNullOrUndefined(colorMap.color) ? fill :\n                        Object.prototype.toString.call(colorMap.color) === '[object Array]' ? colorMap.color[0] : colorMap.color;\n                    isAddData = this.isAddNewLegendData(actualValue);\n                }\n                if (colorMapProcess && isNullOrUndefined(colorMap.value) && colorMap.maxOpacity && colorMap.minOpacity\n                    && this.treemap.legendSettings.mode === 'Interactive') {\n                    var colors = [];\n                    isDesaturation = true;\n                    if (Object.prototype.toString.call(colorMap.color) === '[object Array]') {\n                        for (var q = 0; q < colorMap.color.length; q++) {\n                            var offsetColor = 100 / (colorMap.color.length - 1);\n                            var offsetValue = q * offsetColor + '%';\n                            var stop1Color = { colorStop: offsetValue.toString(), color: colorMap.color[q] };\n                            colors.push(stop1Color);\n                        }\n                    }\n                    else {\n                        var stop1Color = { colorStop: '0%', color: fill };\n                        var stop2Color = { colorStop: '100%', color: fill };\n                        colors.push(stop1Color);\n                        colors.push(stop2Color);\n                    }\n                    x2 = position === 'Top' || position === 'Bottom' ? '100%' : '0%';\n                    y2 = position === 'Top' || position === 'Bottom' ? '0%' : '100%';\n                    var gradient = {\n                        id: 'groupIndex_' + groupIndex + '_colorIndex_' + this.gradientCount, x1: '0%', y1: '0%', x2: x2, y2: y2\n                    };\n                    gradientElement = this.treemap.renderer.drawGradient('linearGradient', gradient, colors).childNodes[0];\n                    if (Object.prototype.toString.call(colorMap.color) !== '[object Array]') {\n                        gradientElement.childNodes[0].setAttribute('stop-opacity', colorMap.minOpacity.toString());\n                        gradientElement.childNodes[1].setAttribute('stop-opacity', colorMap.maxOpacity.toString());\n                    }\n                    this.defsElement.appendChild(gradientElement);\n                    this.gradientCount++;\n                }\n                isDuplicate = this.treemap.legendSettings.removeDuplicateLegend ?\n                    this.removeDuplicates(this.legendCollections, legendText) : false;\n                if (isAddData && isAddData['process'] && colorMapProcess && !isDuplicate) {\n                    colorMapProcess = false;\n                    fill = ((Object.prototype.toString.call(colorMap.color) === '[object Array]')) && isNullOrUndefined(gradientElement)\n                        && isNullOrUndefined(colorMap.value) ? this.legendGradientColor(colorMap, legendIndex) : fill;\n                    this.legendCollections.push({\n                        actualValue: actualValue, levelIndex: !isLeafItem ? j : -1, leafIndex: isLeafItem ? j : -1,\n                        legendName: legendText, legendFill: fill, legendData: [], groupIndex: !isLeafItem ? groupIndex : -1,\n                        gradientElement: !isNullOrUndefined(gradientElement) ? gradientElement : isNullOrUndefined(colorMap.value)\n                            ? this.legendLinearGradient : null, name: data[i]['name'],\n                        opacity: this.treemap.legendSettings.opacity, borderColor: this.treemap.legendSettings.border.color,\n                        borderWidth: this.treemap.legendSettings.border.width\n                    });\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    this.legendCollections[this.legendCollections.length - 1]['legendData'].push(data[i]);\n                    legendIndex++;\n                }\n                else if (colorMapProcess && !isDuplicate) {\n                    colorMapProcess = false;\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    this.legendCollections[isAddData['value']]['legendData'].push(data[i]);\n                }\n                if (!isRange && !isDesaturation && !isEqualColor) {\n                    if (isNullOrUndefined(colorMap.from) && isNullOrUndefined(colorMap.to)\n                        && isNullOrUndefined(colorMap.minOpacity) &&\n                        isNullOrUndefined(colorMap.maxOpacity) && isNullOrUndefined(colorMap.value) &&\n                        !isNullOrUndefined(colorMap.color)) {\n                        outfill = ((Object.prototype.toString.call(colorMap.color) === '[object Array]'))\n                            ? colorMap.color[0] : colorMap.color;\n                        labelLegend = !isNullOrUndefined(colorMap.label) ? colorMap.label : 'Others';\n                        if (isNullOrUndefined(this.outOfRangeLegend)) {\n                            this.legendCollections.push({\n                                actualValue: labelLegend, legendData: [],\n                                legendName: labelLegend, legendFill: outfill\n                            });\n                            otherIndex = this.legendCollections.length;\n                            this.outOfRangeLegend = this.legendCollections[otherIndex - 1];\n                            legendIndex++;\n                        }\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        this.legendCollections[otherIndex - 1]['legendData'].push(data[i]);\n                    }\n                }\n            }\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeMapLegend.prototype.removeDuplicates = function (legendCollection, text) {\n        var isDuplicate = false;\n        for (var i = 0; i < legendCollection.length; i++) {\n            if (legendCollection[i]['legendName'] === text) {\n                isDuplicate = true;\n                break;\n            }\n            else {\n                continue;\n            }\n        }\n        return isDuplicate;\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeMapLegend.prototype.isAddNewLegendData = function (legendText) {\n        var newDataProcess;\n        var itemValue;\n        if (this.legendCollections.length === 0) {\n            newDataProcess = true;\n        }\n        else {\n            for (var j = 0; j < this.legendCollections.length; j++) {\n                if (legendText === this.legendCollections[j]['actualValue']) {\n                    newDataProcess = false;\n                    itemValue = j;\n                    break;\n                }\n                else if (j === this.legendCollections.length - 1) {\n                    newDataProcess = true;\n                }\n            }\n        }\n        return { process: newDataProcess, value: itemValue };\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To draw the legend\n     * @private\n     */\n    TreeMapLegend.prototype.drawLegend = function () {\n        var legend = this.treemap.legendSettings;\n        var render = this.treemap.renderer;\n        var fill;\n        var textOptions;\n        var gradientElement;\n        var textFont = legend.textStyle;\n        this.legendGroup = render.createGroup({ id: this.treemap.element.id + '_Legend_Group' });\n        this.renderLegendBorder();\n        this.renderLegendTitle();\n        if (legend.mode === 'Default') {\n            this.drawLegendItem(this.currentPage);\n        }\n        else {\n            for (var i = 0; i < this.legendRenderingCollections.length; i++) {\n                var itemId = this.treemap.element.id + '_Legend_Index_' + i;\n                var textId = this.treemap.element.id + '_Legend_Index_' + i + '_Text';\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var item = this.legendRenderingCollections[i];\n                gradientElement = item['element'];\n                fill = gradientElement ? 'url(#' + gradientElement.id + ')' : item['fill'];\n                var bounds = new Rect(item['x'], item['y'], item['width'], item['height']);\n                var textLocation = new Location(item['textX'], item['textY']);\n                var rectOptions = new RectOption(itemId, fill, legend.shapeBorder, legend.opacity, bounds);\n                if (this.treemap.enableRtl) {\n                    if (this.treemap.legendSettings.position === 'Left' || this.treemap.legendSettings.position === 'Right'\n                        || (this.treemap.legendSettings.position === 'Auto'\n                            && this.treemap.availableSize.width >= this.treemap.availableSize.height)) {\n                        rectOptions.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                            - (this.translate.y + rectOptions.height) - Math.abs(this.legendBorderRect.y - rectOptions.y);\n                        textLocation.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                            - (this.translate.y) + (item['textHeight'] / 2)\n                            - Math.abs(this.legendBorderRect.y - textLocation.y);\n                    }\n                    else {\n                        rectOptions.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n                            - (this.translate.x + rectOptions.width)\n                            - Math.abs(this.legendBorderRect.x - rectOptions.x);\n                        textLocation.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n                            - this.translate.x - Math.abs(this.legendBorderRect.x - textLocation.x);\n                    }\n                }\n                textOptions = new TextOption(textId, textLocation.x, textLocation.y, 'middle', item['text'], '', '');\n                renderTextElement(textOptions, textFont, textFont.color || this.treemap.themeStyle.legendTextColor, this.legendGroup);\n                this.legendGroup.appendChild(render.drawRectangle(rectOptions));\n            }\n        }\n        legendMaintain(this.treemap, this.legendGroup);\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeMapLegend.prototype.defaultLegendRtlLocation = function (collection, spacing, treemap, legend) {\n        var shapeLocation = collection['Shape'];\n        var textLocation = collection['Text'];\n        var legendText = collection['DisplayText'];\n        var textSize = measureText(legendText, legend.textStyle);\n        shapeLocation.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n            - (this.translate.x + spacing) - Math.abs(this.legendBorderRect.x - shapeLocation.x);\n        textLocation.x = (this.translate.x + this.legendBorderRect.x + this.legendBorderRect.width)\n            - (this.translate.x + textSize.width + spacing) - Math.abs(this.legendBorderRect.x - textLocation.x);\n        if (treemap.legendSettings.position === 'Left' || treemap.legendSettings.position === 'Right'\n            || (treemap.legendSettings.position === 'Auto'\n                && this.treemap.availableSize.width >= this.treemap.availableSize.height)) {\n            shapeLocation.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                - this.translate.y - Math.abs(Math.abs(this.legendBorderRect.y) - shapeLocation.y) - (legend.shapeHeight / 2);\n            textLocation.y = (this.translate.y + this.legendBorderRect.y + this.legendBorderRect.height)\n                - this.translate.y - Math.abs(Math.abs(this.legendBorderRect.y) - textLocation.y);\n        }\n        return { shapeLocation: shapeLocation, textLocation: textLocation };\n    };\n    TreeMapLegend.prototype.drawLegendItem = function (page) {\n        var _this = this;\n        var treemap = this.treemap;\n        var spacing = 10;\n        var legend = treemap.legendSettings;\n        var shapeSize = new Size(legend.shapeWidth, legend.shapeHeight);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var textOptions;\n        var legendRtlLocation;\n        var render = treemap.renderer;\n        var shapeBorder = legend.shapeBorder;\n        var eventArgs;\n        if (page >= 0 && page < this.totalPages.length) {\n            if (document.getElementById(this.legendGroup.id)) {\n                document.getElementById(this.legendGroup.id).remove();\n            }\n            var isLineShape_1 = (legend.shape === 'HorizontalLine' || legend.shape === 'VerticalLine' || legend.shape === 'Cross');\n            var strokeColor_1 = isLineShape_1 ? isNullOrUndefined(legend.fill) ? '#000000' : legend.fill : shapeBorder.color;\n            var strokeWidth_1 = isLineShape_1 ? (shapeBorder.width === 0) ? 1 : shapeBorder.width : shapeBorder.width;\n            var _loop_1 = function (i) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var collection = this_1.totalPages[page]['Collection'][i];\n                var legendElement = render.createGroup({ id: treemap.element.id + '_Legend_Index_' + i });\n                var legendText = collection['DisplayText'];\n                var shapeId = treemap.element.id + '_Legend_Shape_Index_' + i;\n                var textId = treemap.element.id + '_Legend_Text_Index_' + i;\n                var shapeLocation = collection['Shape'];\n                var textLocation = collection['Text'];\n                if (treemap.enableRtl) {\n                    legendRtlLocation = this_1.defaultLegendRtlLocation(collection, spacing, treemap, legend);\n                    shapeLocation = legendRtlLocation['shapeLocation'];\n                    textLocation = legendRtlLocation['textLocation'];\n                }\n                eventArgs = {\n                    cancel: false, name: legendItemRendering, treemap: treemap, fill: collection['Fill'],\n                    shape: legend.shape, imageUrl: legend.imageUrl\n                };\n                treemap.trigger(legendItemRendering, eventArgs, function (observedArgs) {\n                    var renderOptions = new PathOption(shapeId, observedArgs.fill, strokeWidth_1, isLineShape_1 ? collection['Fill'] : strokeColor_1, legend.opacity, '');\n                    legendElement.appendChild(drawSymbol(shapeLocation, observedArgs.shape, shapeSize, observedArgs.imageUrl, renderOptions, legendText));\n                    textOptions = new TextOption(textId, textLocation.x, textLocation.y, 'start', legendText, '', '');\n                    renderTextElement(textOptions, legend.textStyle, legend.textStyle.color || treemap.themeStyle.legendTextColor, legendElement);\n                    _this.legendGroup.appendChild(legendElement);\n                });\n            };\n            var this_1 = this;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            for (var i = 0; i < this.totalPages[page]['Collection'].length; i++) {\n                _loop_1(i);\n            }\n            var pagingGroup = void 0;\n            var width = spacing;\n            var height = (spacing / 2);\n            if (this.page !== 0) {\n                var pagingText = (page + 1) + '/' + this.totalPages.length;\n                var pagingFont = legend.textStyle;\n                var pagingTextSize = measureText(pagingText, pagingFont);\n                var leftPageX = (this.legendItemRect.x + this.legendItemRect.width) - pagingTextSize.width -\n                    (width * 2) - spacing;\n                var rightPageX = (this.legendItemRect.x + this.legendItemRect.width);\n                var locY = (this.legendItemRect.y + this.legendItemRect.height) + (height / 2) + spacing;\n                var pageTextX = rightPageX - width - (pagingTextSize.width / 2) - (spacing / 2);\n                pagingGroup = render.createGroup({ id: treemap.element.id + '_Legend_Paging_Group' });\n                var leftPageElement = render.createGroup({ id: treemap.element.id + '_Legend_Left_Paging_Group' });\n                var rightPageElement = render.createGroup({ id: treemap.element.id + '_Legend_Right_Paging_Group' });\n                var rightPath = ' M ' + rightPageX + ' ' + locY + ' L ' + (rightPageX - width) + ' ' + (locY - height) +\n                    ' L ' + (rightPageX - width) + ' ' + (locY + height) + ' z ';\n                var leftPath = ' M ' + leftPageX + ' ' + locY + ' L ' + (leftPageX + width) + ' ' + (locY - height) +\n                    ' L ' + (leftPageX + width) + ' ' + (locY + height) + ' z ';\n                var leftPageOptions = new PathOption(treemap.element.id + '_Left_Page', '#a6a6a6', 0, '#a6a6a6', 1, '', leftPath);\n                leftPageElement.appendChild(render.drawPath(leftPageOptions));\n                var leftRectPageOptions = new RectOption(treemap.element.id + '_Left_Page_Rect', 'transparent', {}, 1, new Rect(leftPageX - (width / 2), (locY - (height * 2)), width * 2, spacing * 2), '');\n                leftPageElement.appendChild(render.drawRectangle(leftRectPageOptions));\n                this.wireEvents(leftPageElement);\n                var rightPageOptions = new PathOption(treemap.element.id + '_Right_Page', '#a6a6a6', 0, '#a6a6a6', 1, '', rightPath);\n                rightPageElement.appendChild(render.drawPath(rightPageOptions));\n                var rightRectPageOptions = new RectOption(treemap.element.id + '_Right_Page_Rect', 'transparent', {}, 1, new Rect((rightPageX - width), (locY - height), width, spacing), '');\n                rightPageElement.appendChild(render.drawRectangle(rightRectPageOptions));\n                this.wireEvents(rightPageElement);\n                pagingGroup.appendChild(leftPageElement);\n                pagingGroup.appendChild(rightPageElement);\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var pageTextOptions = {\n                    'id': treemap.element.id + '_Paging_Text',\n                    'x': pageTextX,\n                    'y': locY + (pagingTextSize.height / 4),\n                    'fill': '#a6a6a6',\n                    'font-size': '14px',\n                    'font-style': pagingFont.fontStyle,\n                    'font-family': pagingFont.fontFamily,\n                    'font-weight': pagingFont.fontWeight,\n                    'text-anchor': 'middle',\n                    'transform': '',\n                    'opacity': 1,\n                    'dominant-baseline': ''\n                };\n                pagingGroup.appendChild(render.createText(pageTextOptions, pagingText));\n                this.legendGroup.appendChild(pagingGroup);\n            }\n        }\n    };\n    TreeMapLegend.prototype.renderLegendBorder = function () {\n        var treemap = this.treemap;\n        var legend = treemap.legendSettings;\n        var legendTitle = legend.title.text;\n        var spacing = 10;\n        var textStyle = legend.titleStyle;\n        var title = textTrim((this.legendItemRect.width + (spacing * 2)), legendTitle, textStyle);\n        var textSize = measureText(title, textStyle);\n        this.legendBorderRect = new Rect((this.legendItemRect.x - spacing), (this.legendItemRect.y - spacing - textSize.height), (this.legendItemRect.width) + (spacing * 2), (this.legendItemRect.height) + (spacing * 2) + textSize.height +\n            (legend.mode === 'Interactive' ? 0 : (this.page !== 0) ? spacing : 0));\n        var renderOptions = new RectOption(treemap.element.id + '_Legend_Border', legend.background, legend.border, 1, this.legendBorderRect, '');\n        var legendBorder = treemap.renderer.drawRectangle(renderOptions);\n        legendBorder.style.pointerEvents = 'none';\n        this.legendGroup.appendChild(legendBorder);\n        this.getLegendAlignment(treemap, this.legendBorderRect.width, this.legendBorderRect.height, legend);\n        this.legendGroup.setAttribute('transform', 'translate( ' + (this.translate.x + (-(this.legendBorderRect.x))) + ' ' +\n            (this.translate.y + (-(this.legendBorderRect.y))) + ' )');\n        treemap.svgObject.appendChild(this.legendGroup);\n    };\n    TreeMapLegend.prototype.renderLegendTitle = function () {\n        var legend = this.treemap.legendSettings;\n        var textStyle = legend.titleStyle;\n        var legendTitle = legend.title.text;\n        var textOptions;\n        var spacing = 10;\n        var trimTitle = textTrim((this.legendItemRect.width + (spacing * 2)), legendTitle, textStyle);\n        var textSize = measureText(trimTitle, textStyle);\n        if (legendTitle) {\n            textOptions = new TextOption(this.treemap.element.id + '_LegendTitle', (this.legendItemRect.x) + (this.legendItemRect.width / 2), this.legendItemRect.y - (textSize.height / 2) - (spacing / 2), 'middle', trimTitle, '');\n            renderTextElement(textOptions, textStyle, textStyle.color || this.treemap.themeStyle.legendTitleColor, this.legendGroup);\n        }\n    };\n    /**\n     * To rendered the interactive pointer\n     *\n     * @param {PointerEvent | TouchEvent} e - Specifies the pointer argument.\n     * @returns {void}\n     * @private\n     */\n    TreeMapLegend.prototype.renderInteractivePointer = function (e) {\n        var treemap = this.treemap;\n        var target = e.target;\n        var interactiveId = treemap.element.id + '_Interactive_Legend';\n        target = !(e.type.indexOf('touch') > -1) ? target :\n            document.elementFromPoint(e.changedTouches[0].clientX, e.changedTouches[0].clientY);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var targetItem;\n        var legend = treemap.legendSettings;\n        if (target.id.indexOf('_Item_Index') > -1 && legend.visible && this.legendRenderingCollections.length > 0) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var currentData = void 0;\n            var legendRect = void 0;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var data = void 0;\n            var fill = void 0;\n            var stroke = void 0;\n            var strokeWidth = void 0;\n            var legendElement = void 0;\n            targetItem = treemap.layout.renderItems[parseFloat(target.id.split('_Item_Index_')[1])];\n            var svgRect = treemap.svgObject.getBoundingClientRect();\n            for (var i = 0; i < this.legendCollections.length; i++) {\n                currentData = this.legendCollections[i];\n                legendElement = document.getElementById(treemap.element.id + '_Legend_Index_' + i);\n                legendRect = legendElement.getBoundingClientRect();\n                var rect = new Rect(Math.abs(legendRect.left - svgRect.left), Math.abs(legendRect.top - svgRect.top), legendRect.width, legendRect.height);\n                fill = legendElement.getAttribute('fill');\n                stroke = legend.shapeBorder.color;\n                strokeWidth = legend.shapeBorder.width;\n                if (!isNullOrUndefined(currentData['legendData'])) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    data = currentData['legendData'];\n                    for (var j = 0; j < data.length; j++) {\n                        if (data[j]['levelOrderName'] === targetItem['levelOrderName']) {\n                            this.drawInteractivePointer(legend, fill, stroke, interactiveId, strokeWidth, rect);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            this.removeInteractivePointer();\n        }\n    };\n    TreeMapLegend.prototype.drawInteractivePointer = function (legend, fill, stroke, id, strokeWidth, rect) {\n        var path;\n        var locX;\n        var locY;\n        var height = 10;\n        var width = 10;\n        var direction = (legend.orientation === 'None') ? (legend.position === 'Top' || legend.position === 'Bottom')\n            ? 'Horizontal' : 'Vertical' : legend.orientation;\n        if (direction === 'Horizontal') {\n            if (!legend.invertedPointer) {\n                locX = rect.x + (rect.width / 2);\n                locY = rect.y;\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY - height) +\n                    ' L ' + (locX + width) + ' ' + (locY - height) + ' Z ';\n            }\n            else {\n                locX = rect.x + (rect.width / 2);\n                locY = rect.y + (rect.height);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY + height) +\n                    ' L ' + (locX + width) + ' ' + (locY + height) + ' Z ';\n            }\n        }\n        else {\n            if (!legend.invertedPointer) {\n                locX = rect.x + (rect.width);\n                locY = rect.y + (rect.height / 2);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX + width) + ' ' + (locY - height) +\n                    ' L ' + (locX + width) + ' ' + (locY + height) + ' z ';\n            }\n            else {\n                locX = rect.x;\n                locY = rect.y + (rect.height / 2);\n                path = ' M ' + locX + ' ' + locY + ' L ' + (locX - width) + ' ' + (locY - height) +\n                    ' L ' + (locX - width) + ' ' + (locY + height) + ' z ';\n            }\n        }\n        var pathOptions = new PathOption(id, fill, strokeWidth, stroke, 1, '', path);\n        this.treemap.svgObject.appendChild(this.treemap.renderer.drawPath(pathOptions));\n    };\n    TreeMapLegend.prototype.getLegendAlignment = function (treemap, width, height, legend) {\n        var x;\n        var y;\n        var spacing = 10;\n        var totalRect;\n        // eslint-disable-next-line prefer-const\n        totalRect = extend({}, treemap.areaRect, totalRect, true);\n        var areaX = totalRect.x;\n        var areaY = totalRect.y;\n        var areaHeight = totalRect.height;\n        var areaWidth = totalRect.width;\n        var totalWidth = treemap.availableSize.width;\n        var totalHeight = treemap.availableSize.height;\n        var position = legend.position === 'Auto' ? (totalWidth > totalHeight) ? 'Right' : 'Bottom' : legend.position;\n        if (legend.position === 'Float') {\n            this.translate = legend.location;\n        }\n        else {\n            switch (position) {\n                case 'Top':\n                case 'Bottom':\n                    totalRect.height = (areaHeight - height);\n                    x = (totalWidth / 2) - (width / 2);\n                    y = (position === 'Top') ? areaY : (areaY + totalRect.height) + spacing;\n                    totalRect.y = (position === 'Top') ? areaY + height + spacing : areaY;\n                    break;\n                case 'Left':\n                case 'Right':\n                    totalRect.width = (areaWidth - width);\n                    x = (position === 'Left') ? areaX : areaX + totalRect.width;\n                    y = (totalHeight / 2) - (height / 2);\n                    totalRect.x = (position === 'Left') ? areaX + width : areaX;\n                    break;\n            }\n            switch (legend.alignment) {\n                case 'Near':\n                    if (position === 'Top' || position === 'Bottom') {\n                        x = totalRect.x;\n                    }\n                    else {\n                        y = totalRect.y;\n                    }\n                    break;\n                case 'Far':\n                    if (position === 'Top' || position === 'Bottom') {\n                        x = totalWidth - width;\n                    }\n                    else {\n                        y = totalHeight - height;\n                    }\n                    break;\n            }\n            this.treemap.totalRect = totalRect;\n            this.translate = new Location(x, y);\n        }\n    };\n    /** @private */\n    TreeMapLegend.prototype.mouseUpHandler = function (e) {\n        this.renderInteractivePointer(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeInteractivePointer.bind(this), 3000);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To remove the interactive pointer\n     * @private\n     */\n    TreeMapLegend.prototype.removeInteractivePointer = function () {\n        if (document.getElementById(this.treemap.element.id + '_Interactive_Legend')) {\n            var legendElementId = document.getElementById(this.treemap.element.id + '_Interactive_Legend');\n            legendElementId.parentNode.removeChild(legendElementId);\n        }\n    };\n    /**\n     * To change the next page\n     *\n     * @param {PointerEvent} e - Specifies the pointer event argument.\n     * @returns {void}\n     * @private\n     */\n    TreeMapLegend.prototype.changeNextPage = function (e) {\n        this.currentPage = (e.target.id.indexOf('_Left_Page_') > -1) ? (this.currentPage - 1) :\n            (this.currentPage + 1);\n        if (this.currentPage >= 0 && this.currentPage < this.totalPages.length) {\n            this.drawLegend();\n        }\n        else {\n            this.currentPage = (e.target.id.indexOf('_Left_Page_') > -1) ? 0 : this.totalPages.length - 1;\n        }\n    };\n    /**\n     * Wire events for event handler\n     *\n     * @param {Element} element - Specifies the element.\n     * @returns {void}\n     * @private\n     */\n    TreeMapLegend.prototype.wireEvents = function (element) {\n        EventHandler.add(element, Browser.touchStartEvent, this.changeNextPage, this);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To add the event listener\n     * @private\n     */\n    TreeMapLegend.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.renderInteractivePointer, this);\n        this.treemap.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To remove the event listener\n     * @private\n     */\n    TreeMapLegend.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.renderInteractivePointer);\n        this.treemap.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} Returns the legend module name.\n     */\n    TreeMapLegend.prototype.getModuleName = function () {\n        return 'treeMapLegend';\n    };\n    /**\n     * To destroy the legend.\n     *\n     * @returns {void}\n     * @private\n     */\n    TreeMapLegend.prototype.destroy = function () {\n        this.legendRenderingCollections = [];\n        this.legendCollections = [];\n        this.outOfRangeLegend = null;\n        this.totalPages = [];\n        this.translate = null;\n        this.legendBorderRect = null;\n        this.legendGroup = null;\n        this.legendNames = [];\n        this.defsElement = null;\n        this.legendLinearGradient = null;\n        this.legendInteractiveGradient = [];\n        this.legendItemRect = null;\n        this.removeEventListener();\n        //TODO: The removeInteractivePointer method (calling method) is called in a timer in the mouseUpHandler method. Because of this handling, adding the below code results in a spec failure.\n        //this.treemap = null;\n    };\n    /**\n     * Get the gradient color for interactive legend.\n     *\n     * @param {ColorMappingModel} colorMap - Specifies the color mapping instance.\n     * @param {number} legendIndex - Specifies the index of legend.\n     * @returns {string} - Returns the legend color.\n     * @private\n     */\n    TreeMapLegend.prototype.legendGradientColor = function (colorMap, legendIndex) {\n        var legendFillColor;\n        var xmlns = 'http://www.w3.org/2000/svg';\n        if (!isNullOrUndefined(colorMap.color) && Object.prototype.toString.call(colorMap.color) === '[object Array]') {\n            var defElement = this.treemap.renderer.createDefs();\n            var linerGradientEle = document.createElementNS(xmlns, 'linearGradient');\n            var opacity = 1;\n            var position = this.treemap.legendSettings.position;\n            var x2 = position === 'Top' || position === 'Bottom' ? '100' : '0';\n            var y2 = position === 'Top' || position === 'Bottom' ? '0' : '100';\n            linerGradientEle.setAttribute('id', 'linear_' + legendIndex);\n            linerGradientEle.setAttribute('x1', 0 + '%');\n            linerGradientEle.setAttribute('y1', 0 + '%');\n            linerGradientEle.setAttribute('x2', x2 + '%');\n            linerGradientEle.setAttribute('y2', y2 + '%');\n            for (var b = 0; b < colorMap.color.length; b++) {\n                var offsetColor = 100 / (colorMap.color.length - 1);\n                var stopEle = document.createElementNS(xmlns, 'stop');\n                stopEle.setAttribute('offset', b * offsetColor + '%');\n                stopEle.setAttribute('stop-color', colorMap.color[b]);\n                stopEle.setAttribute('stop-opacity', opacity.toString());\n                linerGradientEle.appendChild(stopEle);\n            }\n            defElement.appendChild(linerGradientEle);\n            this.legendLinearGradient = linerGradientEle;\n            var color = 'url(' + '#linear_' + legendIndex + ')';\n            this.defsElement.appendChild(linerGradientEle);\n            legendFillColor = color;\n        }\n        return legendFillColor;\n    };\n    return TreeMapLegend;\n}());\nexport { TreeMapLegend };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { itemHighlight, itemSelected } from '../model/constants';\nimport { findHightLightItems, removeClassNames, applyOptions, removeShape, removeLegend, removeSelectionWithHighlight, setColor, getLegendIndex, pushCollection, setItemTemplateContent } from '../utils/helper';\n/**\n * Performing treemap highlight\n */\nvar TreeMapHighlight = /** @class */ (function () {\n    function TreeMapHighlight(treeMap) {\n        this.target = 'highlight';\n        this.shapeTarget = 'highlight';\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.shapeHighlightCollection = [];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.legendHighlightCollection = [];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.currentElement = [];\n        this.treemap = treeMap;\n        this.addEventListener();\n    }\n    /**\n     * Mouse down event in highlight\n     *\n     * @param {PointerEvent} e - Specifies the pointer argument.\n     * @returns {boolean} - return the highlight process is true or false.\n     * @private\n     */\n    TreeMapHighlight.prototype.mouseMove = function (e) {\n        var treemap = this.treemap;\n        var processHighlight;\n        var targetId = e.target.id;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var eventArgs;\n        var items = [];\n        var highlight = this.treemap.highlightSettings;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var item;\n        var highLightElements = [];\n        var process;\n        var treeMapElement;\n        var element;\n        var orders;\n        var selectionModule = this.treemap.treeMapSelectionModule;\n        if (targetId.indexOf('_Item_Index') > -1 && (selectionModule ? this.treemap.selectionId !== targetId : true)) {\n            if (this.highLightId !== targetId) {\n                treeMapElement = document.getElementById(treemap.element.id + '_TreeMap_' + treemap.layoutType + '_Layout');\n                var selectionElements = document.getElementsByClassName('treeMapSelection');\n                item = this.treemap.layout.renderItems[parseFloat(targetId.split('_Item_Index_')[1])];\n                var index = void 0;\n                if (this.treemap.legendSettings.visible) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    var collection = this.treemap.treeMapLegendModule.legendCollections;\n                    var length_1 = this.treemap.treeMapLegendModule.legendCollections.length;\n                    index = getLegendIndex(length_1, item, treemap);\n                    this.shapeElement = this.treemap.legendSettings.mode === 'Default' ? document.getElementById(this.treemap.element.id + '_Legend_Shape_Index_' + index) : document.getElementById(this.treemap.element.id + '_Legend_Index_' + index);\n                    if (this.shapeElement !== null && (selectionModule ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true)) {\n                        if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true) {\n                            this.currentElement.push({ currentElement: this.shapeElement });\n                            removeShape(this.shapeHighlightCollection);\n                            this.shapeHighlightCollection.push({ legendEle: this.shapeElement, oldFill: collection[index]['legendFill'],\n                                oldOpacity: collection[index]['opacity'], oldBorderColor: collection[index]['borderColor'],\n                                oldBorderWidth: collection[index]['borderWidth']\n                            });\n                            setColor(this.shapeElement, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            this.target = 'highlight';\n                        }\n                        else if (this.currentElement.length > 0 && this.currentElement[this.currentElement.length - 1]['currentElement'] !== this.shapeElement) {\n                            removeSelectionWithHighlight(this.shapeHighlightCollection, this.currentElement, treemap);\n                            this.highLightId = '';\n                        }\n                    }\n                    else if (this.currentElement.length > 0 && this.currentElement[this.currentElement.length - 1]['currentElement'] !== this.shapeElement) {\n                        removeSelectionWithHighlight(this.shapeHighlightCollection, this.currentElement, treemap);\n                        this.highLightId = '';\n                    }\n                }\n                orders = findHightLightItems(item, [], highlight.mode, treemap);\n                if (this.treemap.legendSettings.visible ? selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true : true) {\n                    if (this.treemap.legendSettings.visible ? selectionModule ?\n                        this.shapeElement !== selectionModule.shapeElement : true : true) {\n                        for (var i = 0; i < treeMapElement.childElementCount; i++) {\n                            element = treeMapElement.childNodes[i];\n                            process = true;\n                            item = treemap.layout.renderItems[parseFloat(element.id.split('_Item_Index_')[1])];\n                            for (var j = 0; j < selectionElements.length; j++) {\n                                if (element.id === selectionElements[j].id) {\n                                    process = false;\n                                    break;\n                                }\n                            }\n                            if (orders.indexOf(item['levelOrderName']) > -1 && process) {\n                                highLightElements.push(element);\n                                items.push(item);\n                            }\n                        }\n                        removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n                        for (var k = 0; k < highLightElements.length; k++) {\n                            element = highLightElements[k];\n                            applyOptions(element.childNodes[0], { border: highlight.border, fill: highlight.fill, opacity: highlight.opacity });\n                            element.classList.add('treeMapHighLight');\n                            this.highLightId = targetId;\n                        }\n                        eventArgs = { cancel: false, name: itemHighlight, treemap: treemap, items: items, elements: highLightElements };\n                        treemap.trigger(itemHighlight, eventArgs);\n                    }\n                    else {\n                        processHighlight = false;\n                    }\n                }\n            }\n        }\n        else if (targetId.indexOf('_Legend_Shape') > -1 || targetId.indexOf('_Legend_Index') > -1) {\n            if (this.treemap.legendSettings.visible && (selectionModule ? selectionModule.legendSelectId !== targetId : true)\n                && (selectionModule ? selectionModule.shapeSelectId !== targetId : true)) {\n                var itemIndex = void 0;\n                var groupIndex = void 0;\n                var length_2;\n                var targetEle = document.getElementById(targetId);\n                if (this.shapeTarget === 'highlight') {\n                    removeLegend(this.legendHighlightCollection);\n                }\n                this.shapeTarget = 'highlight';\n                var index = this.treemap.legendSettings.mode === 'Default' ? parseFloat(targetId.split('_Legend_Shape_Index_')[1]) : parseFloat(targetId.split('_Legend_Index_')[1]);\n                var dataLength = this.treemap.treeMapLegendModule.legendCollections[index]['legendData'].length;\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var collection = this.treemap.treeMapLegendModule.legendCollections;\n                var legendIndex = parseInt(targetId[targetId.length - 1], 10);\n                for (var i = 0; i < dataLength; i++) {\n                    for (var j = 0; j < this.treemap.layout.renderItems.length; j++) {\n                        if (this.treemap.treeMapLegendModule.legendCollections[index]['legendData'][i]['levelOrderName'] === this.treemap.layout.renderItems[j]['levelOrderName']) {\n                            itemIndex = j;\n                            groupIndex = this.treemap.layout.renderItems[j]['groupIndex'];\n                            var nodeEle = document.getElementById(this.treemap.element.id + '_Level_Index_' + groupIndex + '_Item_Index_' + itemIndex + '_RectPath');\n                            if (i === 0) {\n                                this.legendHighlightCollection = [];\n                                pushCollection(this.legendHighlightCollection, legendIndex, j, targetEle, nodeEle, this.treemap.layout.renderItems, collection);\n                                length_2 = this.legendHighlightCollection.length;\n                                this.legendHighlightCollection[length_2 - 1]['ShapeCollection'] = { Elements: [] };\n                            }\n                            setColor(targetEle, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            setColor(nodeEle, highlight.fill, highlight.opacity, highlight.border.color, highlight.border.width.toString());\n                            length_2 = this.legendHighlightCollection.length;\n                            this.legendHighlightCollection[length_2 - 1]['ShapeCollection']['Elements'].push(nodeEle);\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            if (selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true) {\n                if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true && this.treemap.legendSettings.visible) {\n                    removeClassNames(document.getElementsByClassName('treeMapHighLight'), 'treeMapHighLight', treemap);\n                }\n            }\n            if ((this.shapeTarget === 'highlight' || this.target === 'highlight') && this.treemap.legendSettings.visible) {\n                if (selectionModule ? this.shapeElement ? this.shapeElement.getAttribute('id') !== selectionModule.legendSelectId : true : true) {\n                    if (selectionModule ? this.shapeElement !== selectionModule.shapeElement : true && selectionModule ?\n                        selectionModule.legendSelect : true) {\n                        removeShape(this.shapeHighlightCollection);\n                        this.shapeHighlightCollection = [];\n                    }\n                }\n            }\n            if (this.shapeTarget === 'highlight' && this.treemap.legendSettings.visible) {\n                removeLegend(this.legendHighlightCollection);\n            }\n            this.highLightId = '';\n            processHighlight = false;\n        }\n        return processHighlight;\n    };\n    /**\n     * To bind events for highlight\n     *\n     * @returns {void}\n     */\n    TreeMapHighlight.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.mouseMove, this);\n    };\n    /**\n     * To unbind events for highlight\n     *\n     * @returns {void}\n     */\n    TreeMapHighlight.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.mouseMove);\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name\n     */\n    TreeMapHighlight.prototype.getModuleName = function () {\n        return 'treeMapHighlight';\n    };\n    /**\n     * To destroy the hightlight.\n     *\n     * @returns {void}\n     * @private\n     */\n    TreeMapHighlight.prototype.destroy = function () {\n        this.shapeElement = null;\n        this.shapeHighlightCollection = [];\n        this.legendHighlightCollection = [];\n        this.currentElement = [];\n        this.removeEventListener();\n        this.treemap = null;\n    };\n    return TreeMapHighlight;\n}());\nexport { TreeMapHighlight };\n/**\n * Performing treemap selection\n */\nvar TreeMapSelection = /** @class */ (function () {\n    function TreeMapSelection(treeMap) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.shapeSelectionCollection = [];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.legendSelectionCollection = [];\n        this.shapeSelect = true;\n        this.legendSelect = true;\n        this.treemap = treeMap;\n        this.addEventListener();\n    }\n    /**\n     * Mouse down event in selection\n     *\n     * @param {PointerEvent} e - Specifies the pointer argument.\n     * @returns {void}\n     * @private\n     */\n    TreeMapSelection.prototype.mouseDown = function (e) {\n        var targetEle = e.target;\n        var eventArgs;\n        var treemap = this.treemap;\n        treemap.levelSelection = [];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var items = [];\n        var targetId = targetEle.id;\n        var labelText = targetEle.innerHTML;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var item;\n        var selectionElements = [];\n        var treeMapElement;\n        var element;\n        var orders;\n        var selection = treemap.selectionSettings;\n        var highlightModule = this.treemap.treeMapHighlightModule;\n        var layoutID = treemap.element.id + '_TreeMap_' + treemap.layoutType + '_Layout';\n        if (targetId.indexOf('_Item_Index') > -1) {\n            e.preventDefault();\n            if (this.treemap.selectionId !== targetId && this.legendSelect) {\n                treeMapElement = document.getElementById(layoutID);\n                item = treemap.layout.renderItems[parseFloat(targetId.split('_Item_Index_')[1])];\n                var index = void 0;\n                if (this.treemap.legendSettings.visible) {\n                    this.shapeSelect = false;\n                    var length_3 = this.treemap.treeMapLegendModule.legendCollections.length;\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    var collection = this.treemap.treeMapLegendModule.legendCollections;\n                    this.shapeElement = undefined;\n                    removeShape(this.shapeSelectionCollection);\n                    if (highlightModule) {\n                        highlightModule.shapeTarget = 'selection';\n                        highlightModule.shapeHighlightCollection = [];\n                    }\n                    index = getLegendIndex(length_3, item, treemap);\n                    this.shapeElement = this.treemap.legendSettings.mode === 'Default' ? document.getElementById(this.treemap.element.id + '_Legend_Shape_Index_' + index) : document.getElementById(this.treemap.element.id + '_Legend_Index_' + index);\n                    if (this.shapeElement !== null) {\n                        this.shapeSelectId = this.shapeElement.getAttribute('id');\n                        this.shapeSelectionCollection.push({ legendEle: this.shapeElement, oldFill: collection[index]['legendFill'],\n                            oldOpacity: collection[index]['opacity'], oldBorderColor: collection[index]['borderColor'],\n                            oldBorderWidth: collection[index]['borderWidth']\n                        });\n                        setColor(this.shapeElement, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                    }\n                }\n                orders = findHightLightItems(item, [], selection.mode, treemap);\n                for (var i = 0; i < treeMapElement.childElementCount; i++) {\n                    element = treeMapElement.childNodes[i];\n                    item = treemap.layout.renderItems[parseFloat(element.id.split('_Item_Index_')[1])];\n                    if (orders.indexOf(item['levelOrderName']) > -1) {\n                        selectionElements.push(element);\n                        treemap.levelSelection.push(element.id);\n                        items.push(item);\n                    }\n                }\n                removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', treemap);\n                this.treemap.selectionId = targetId;\n                var highLightElements = document.getElementsByClassName('treeMapHighLight');\n                for (var k = 0; k < selectionElements.length; k++) {\n                    element = selectionElements[k];\n                    if (highLightElements.length > 0) {\n                        for (var j = 0; j < highLightElements.length; j++) {\n                            if (highLightElements[j].id === element.id) {\n                                highLightElements[j].classList.remove('treeMapHighLight');\n                            }\n                            applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                            element.classList.add('treeMapSelection');\n                        }\n                    }\n                    else {\n                        applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                        element.classList.add('treeMapSelection');\n                    }\n                    eventArgs = { cancel: false, name: itemSelected, treemap: treemap, items: items, elements: selectionElements,\n                        text: labelText, contentItemTemplate: labelText };\n                    treemap.trigger(itemSelected, eventArgs, function (observedArgs) {\n                        if (observedArgs.contentItemTemplate !== labelText) {\n                            setItemTemplateContent(targetId, targetEle, observedArgs.contentItemTemplate);\n                        }\n                    });\n                }\n            }\n            else {\n                removeShape(this.shapeSelectionCollection);\n                this.shapeSelectionCollection = [];\n                this.shapeElement = undefined;\n                this.shapeSelect = true;\n                this.shapeSelectId = '';\n                this.treemap.legendId = [];\n                removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', treemap);\n                this.treemap.selectionId = '';\n            }\n        }\n        else if (targetId.indexOf('_Legend_Shape') > -1 || targetId.indexOf('_Legend_Index') > -1) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var collection = this.treemap.treeMapLegendModule.legendCollections;\n            if (this.treemap.legendSettings.visible && this.legendSelectId !== targetId && this.shapeSelect) {\n                var itemIndex = void 0;\n                var groupIndex = void 0;\n                var length_4;\n                this.legendSelectId = targetId;\n                this.legendSelect = false;\n                var legendIndex = parseInt(targetId[targetId.length - 1], 10);\n                var targetEle_1 = document.getElementById(targetId);\n                removeLegend(this.legendSelectionCollection);\n                if (highlightModule) {\n                    highlightModule.shapeTarget = 'selection';\n                }\n                var index = this.treemap.legendSettings.mode === 'Default' ? parseFloat(targetId.split('_Legend_Shape_Index_')[1]) : parseFloat(targetId.split('_Legend_Index_')[1]);\n                var dataLength = this.treemap.treeMapLegendModule.legendCollections[index]['legendData'].length;\n                for (var k = 0; k < dataLength; k++) {\n                    for (var l = 0; l < this.treemap.layout.renderItems.length; l++) {\n                        if (this.treemap.treeMapLegendModule.legendCollections[index]['legendData'][k]['levelOrderName'] === this.treemap.layout.renderItems[l]['levelOrderName']) {\n                            itemIndex = l;\n                            groupIndex = this.treemap.layout.renderItems[l]['groupIndex'];\n                            var nodeEle = document.getElementById(this.treemap.element.id + '_Level_Index_' + groupIndex + '_Item_Index_' + itemIndex + '_RectPath');\n                            if (k === 0) {\n                                pushCollection(this.legendSelectionCollection, legendIndex, l, targetEle_1, nodeEle, this.treemap.layout.renderItems, collection);\n                                length_4 = this.legendSelectionCollection.length;\n                                this.legendSelectionCollection[length_4 - 1]['ShapeCollection'] = { Elements: [] };\n                            }\n                            setColor(targetEle_1, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                            setColor(nodeEle, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                            length_4 = this.legendSelectionCollection.length;\n                            this.legendSelectionCollection[length_4 - 1]['ShapeCollection']['Elements'].push(nodeEle);\n                        }\n                    }\n                }\n            }\n            else {\n                removeLegend(this.legendSelectionCollection);\n                if (highlightModule) {\n                    highlightModule.shapeTarget = 'highlight';\n                }\n                this.legendSelect = true;\n                this.legendSelectId = '';\n            }\n        }\n    };\n    /**\n     * @param {string} levelOrder - Specifies the level order of treemap item\n     * @param {boolean} enable - Specifies the boolean value\n     * @returns {void}\n     * @private\n     */\n    TreeMapSelection.prototype.selectTreemapItem = function (levelOrder, enable) {\n        if (enable) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var item = void 0;\n            for (var s = 0; s < this.treemap.layout.renderItems.length; s++) {\n                if (levelOrder === this.treemap.layout.renderItems[s]['levelOrderName']) {\n                    item = this.treemap.layout.renderItems[s];\n                    break;\n                }\n            }\n            var selection = this.treemap.selectionSettings;\n            var selectionElements = [];\n            var element = void 0;\n            var index = void 0;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var items = [];\n            this.treemap.levelSelection = [];\n            var layoutID = this.treemap.element.id + '_TreeMap_' + this.treemap.layoutType + '_Layout';\n            var treeMapElement = document.getElementById(layoutID);\n            var orders = findHightLightItems(item, [], selection.mode, this.treemap);\n            for (var i = 0; i < treeMapElement.childElementCount; i++) {\n                element = treeMapElement.childNodes[i];\n                item = this.treemap.layout.renderItems[parseFloat(element.id.split('_Item_Index_')[1])];\n                if (orders.indexOf(item['levelOrderName']) > -1) {\n                    selectionElements.push(element);\n                    this.treemap.levelSelection.push(element.id);\n                    items.push(item);\n                }\n            }\n            if (this.treemap.legendSettings.visible) {\n                for (var m = 0; m < items.length; m++) {\n                    this.shapeSelect = false;\n                    var length_5 = this.treemap.treeMapLegendModule.legendCollections.length;\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    var collection = this.treemap.treeMapLegendModule.legendCollections;\n                    this.shapeElement = undefined;\n                    removeShape(this.shapeSelectionCollection);\n                    index = getLegendIndex(length_5, items[m], this.treemap);\n                    this.shapeElement = this.treemap.legendSettings.mode === 'Default' ? document.getElementById(this.treemap.element.id + '_Legend_Shape_Index_' + index) : document.getElementById(this.treemap.element.id + '_Legend_Index_' + index);\n                    if (this.shapeElement !== null) {\n                        this.shapeSelectId = this.shapeElement.getAttribute('id');\n                        this.treemap.legendId.push(this.shapeSelectId);\n                        this.shapeSelectionCollection.push({\n                            legendEle: this.shapeElement, oldFill: collection[index]['legendFill'],\n                            oldOpacity: collection[index]['opacity'], oldBorderColor: collection[index]['borderColor'],\n                            oldBorderWidth: collection[index]['borderWidth']\n                        });\n                        setColor(this.shapeElement, selection.fill, selection.opacity, selection.border.color, selection.border.width.toString());\n                    }\n                }\n            }\n            removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', this.treemap);\n            var selectionElement = document.getElementById(this.treemap.levelSelection[0]);\n            this.treemap.selectionId = selectionElement.childNodes[0]['id'];\n            var highLightElements = document.getElementsByClassName('treeMapHighLight');\n            for (var k = 0; k < selectionElements.length; k++) {\n                element = selectionElements[k];\n                if (highLightElements.length > 0) {\n                    for (var j = 0; j < highLightElements.length; j++) {\n                        if (highLightElements[j].id === element.id) {\n                            highLightElements[j].classList.remove('treeMapHighLight');\n                        }\n                        applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                        element.classList.add('treeMapSelection');\n                    }\n                }\n                else {\n                    selection.fill = selection.fill === 'null' ?\n                        this.treemap.layout.renderItems[parseInt(element.id.split('Item_Index_')[1], 10)]['options']['fill']\n                        : selection.fill;\n                    applyOptions(element.childNodes[0], { border: selection.border, fill: selection.fill, opacity: selection.opacity });\n                    element.classList.add('treeMapSelection');\n                }\n            }\n        }\n        else {\n            removeShape(this.shapeSelectionCollection);\n            this.shapeElement = undefined;\n            this.treemap.levelSelection = [];\n            this.shapeSelect = true;\n            this.shapeSelectId = '';\n            this.treemap.legendId = [];\n            removeClassNames(document.getElementsByClassName('treeMapSelection'), 'treeMapSelection', this.treemap);\n            this.treemap.selectionId = '';\n        }\n    };\n    /**\n     * To bind events for selection\n     *\n     * @returns {void}\n     */\n    TreeMapSelection.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchStartEvent, this.mouseDown, this);\n    };\n    /**\n     * To unbind events for selection\n     *\n     * @returns {void}\n     */\n    TreeMapSelection.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchStartEvent, this.mouseDown);\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name.\n     */\n    TreeMapSelection.prototype.getModuleName = function () {\n        return 'treeMapSelection';\n    };\n    /**\n     * To destroy the selection.\n     *\n     * @returns {void}\n     * @private\n     */\n    TreeMapSelection.prototype.destroy = function () {\n        this.shapeElement = null;\n        this.shapeSelectionCollection = [];\n        this.legendSelectionCollection = [];\n        this.removeEventListener();\n        this.treemap = null;\n    };\n    return TreeMapSelection;\n}());\nexport { TreeMapSelection };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport { Tooltip } from '@syncfusion/ej2-svg-base';\nimport { Browser, createElement, isNullOrUndefined, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport { getMousePosition, textFormatter, formatValue } from '../utils/helper';\nimport { tooltipRendering } from '../model/constants';\n/**\n * Render Tooltip\n */\nvar TreeMapTooltip = /** @class */ (function () {\n    function TreeMapTooltip(treeMap) {\n        this.treemap = treeMap;\n        this.tooltipSettings = this.treemap.tooltipSettings;\n        this.tooltipId = this.treemap.element.id + '_TreeMapTooltip';\n        this.addEventListener();\n    }\n    TreeMapTooltip.prototype.renderTooltip = function (e) {\n        var _this = this;\n        var pageX;\n        var pageY;\n        var target;\n        var touchArg;\n        var tootipArgs;\n        if (e.type.indexOf('touch') !== -1) {\n            this.isTouch = true;\n            touchArg = e;\n            pageX = touchArg.changedTouches[0].pageX;\n            pageY = touchArg.changedTouches[0].pageY;\n            target = touchArg.target;\n        }\n        else {\n            this.isTouch = e.pointerType === 'touch';\n            pageX = e.pageX;\n            pageY = e.pageY;\n            target = e.target;\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var value;\n        var targetId = target.id;\n        var item = {};\n        var tooltipEle;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var location;\n        var toolTipData = {};\n        var tooltipContent = [];\n        var markerFill;\n        if (targetId.indexOf('_Item_Index') > -1) {\n            item = this.treemap.layout.renderItems[parseFloat(targetId.split('_Item_Index_')[1])];\n            if (!isNullOrUndefined(item)) {\n                value = item['weight'];\n                toolTipData = item['data'];\n                if (!isNullOrUndefined(item['options'])) {\n                    markerFill = item['options']['fill'];\n                }\n                if (this.treemap.enableRtl) {\n                    tooltipContent = [SanitizeHtmlHelper.sanitize(textFormatter(this.tooltipSettings.format, toolTipData, this.treemap)) ||\n                            SanitizeHtmlHelper.sanitize(formatValue(value, this.treemap) + ' : ' + this.treemap.weightValuePath.toString())];\n                }\n                else {\n                    tooltipContent = [SanitizeHtmlHelper.sanitize(textFormatter(this.tooltipSettings.format, toolTipData, this.treemap)) ||\n                            SanitizeHtmlHelper.sanitize(this.treemap.weightValuePath.toString() + ' : ' + formatValue(value, this.treemap))];\n                }\n                if (document.getElementById(this.tooltipId)) {\n                    tooltipEle = document.getElementById(this.tooltipId);\n                }\n                else {\n                    tooltipEle = createElement('div', {\n                        id: this.treemap.element.id + '_TreeMapTooltip',\n                        className: 'EJ2-TreeMap-Tooltip'\n                    });\n                    tooltipEle.style.cssText = 'position: absolute;pointer-events:none;';\n                    document.getElementById(this.treemap.element.id + '_Secondary_Element').appendChild(tooltipEle);\n                }\n                location = getMousePosition(pageX, pageY, this.treemap.svgObject);\n                location.y = (this.tooltipSettings.template) ? location.y + 10 : location.y;\n                this.tooltipSettings.textStyle.size = this.tooltipSettings.textStyle.size || this.treemap.themeStyle.tooltipFontSize;\n                this.tooltipSettings.textStyle.fontFamily = this.treemap.themeStyle.fontFamily;\n                this.tooltipSettings.textStyle.fontStyle = !isNullOrUndefined(this.tooltipSettings.textStyle.fontStyle) ? this.tooltipSettings.textStyle.fontStyle : 'Normal';\n                this.tooltipSettings.textStyle.fontWeight = this.tooltipSettings.textStyle.fontWeight || this.treemap.themeStyle.fontWeight;\n                this.tooltipSettings.textStyle.color = this.treemap.themeStyle.tooltipFontColor\n                    || this.tooltipSettings.textStyle.color;\n                this.tooltipSettings.textStyle.opacity = this.treemap.themeStyle.tooltipTextOpacity\n                    || this.tooltipSettings.textStyle.opacity;\n                tootipArgs = {\n                    cancel: false, name: tooltipRendering, item: item,\n                    options: {\n                        location: location, text: tooltipContent, data: toolTipData,\n                        textStyle: this.tooltipSettings.textStyle, template: this.tooltipSettings.template\n                    },\n                    treemap: this.treemap,\n                    element: target, eventArgs: e\n                };\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                this.treemap.trigger(tooltipRendering, tootipArgs, function (args) {\n                    _this.addTooltip(tootipArgs, markerFill, tooltipEle);\n                });\n            }\n        }\n        else {\n            this.removeTooltip();\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.treemap.clearTemplate();\n        }\n    };\n    TreeMapTooltip.prototype.addTooltip = function (tootipArgs, markerFill, tooltipEle, eventArgs) {\n        var cancel;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var args;\n        if (!isNullOrUndefined(tootipArgs)) {\n            var c = tootipArgs.cancel, otherArgs = __rest(tootipArgs, [\"cancel\"]);\n            cancel = c;\n            args = otherArgs.options;\n        }\n        else {\n            cancel = eventArgs.cancel;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            args = eventArgs;\n        }\n        if (!cancel) {\n            this.svgTooltip = new Tooltip({\n                enable: true,\n                header: '',\n                data: args['data'],\n                template: args['template'],\n                content: args['text'],\n                shapes: [],\n                location: args['location'],\n                palette: [markerFill],\n                areaBounds: this.treemap.areaRect,\n                textStyle: args['textStyle'],\n                fill: this.treemap.tooltipSettings.fill ? this.treemap.tooltipSettings.fill : this.treemap.themeStyle.tooltipFillColor\n            });\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            if (this.treemap.isVue || this.treemap.isVue3) {\n                this.svgTooltip.controlInstance = this.treemap;\n            }\n            this.svgTooltip.opacity = this.treemap.themeStyle.tooltipFillOpacity || this.svgTooltip.opacity;\n            this.svgTooltip.appendTo(tooltipEle);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.treemap.renderReactTemplates();\n        }\n        else {\n            this.removeTooltip();\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.treemap.clearTemplate();\n        }\n    };\n    TreeMapTooltip.prototype.mouseUpHandler = function (e) {\n        this.renderTooltip(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeTooltip.bind(this), 2000);\n    };\n    TreeMapTooltip.prototype.removeTooltip = function () {\n        if (document.getElementsByClassName('EJ2-TreeMap-Tooltip').length > 0) {\n            var tooltipElementId = document.getElementsByClassName('EJ2-TreeMap-Tooltip')[0];\n            tooltipElementId.parentNode.removeChild(tooltipElementId);\n        }\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To bind events for tooltip module\n     * @private\n     */\n    TreeMapTooltip.prototype.addEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.on(Browser.touchMoveEvent, this.renderTooltip, this);\n        this.treemap.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To unbind events for tooltip module\n     * @private\n     */\n    TreeMapTooltip.prototype.removeEventListener = function () {\n        if (this.treemap.isDestroyed) {\n            return;\n        }\n        this.treemap.off(Browser.touchMoveEvent, this.renderTooltip);\n        this.treemap.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} returns string\n     */\n    TreeMapTooltip.prototype.getModuleName = function () {\n        return 'treeMapTooltip';\n    };\n    /**\n     * To destroy the tooltip.\n     *\n     * @returns {void}\n     * @private\n     */\n    TreeMapTooltip.prototype.destroy = function () {\n        if (!isNullOrUndefined(this.svgTooltip)) {\n            this.svgTooltip.destroy();\n        }\n        this.svgTooltip = null;\n        this.tooltipSettings = null;\n        this.removeEventListener();\n        this.treemap = null;\n    };\n    return TreeMapTooltip;\n}());\nexport { TreeMapTooltip };\n","import * as index from './index';\nindex.TreeMap.Inject(index.TreeMapTooltip, index.TreeMapLegend, index.TreeMapHighlight, index.TreeMapSelection, index.Print, index.PdfExport, index.ImageExport);\nexport * from './index';\n"],"names":["stringToNumber","value","containerSize","undefined","indexOf","parseInt","measureText","text","font","measureObject","document","getElementById","createElement","id","body","appendChild","innerHTML","SanitizeHtmlHelper","sanitize","style","position","fontSize","size","fontWeight","fontStyle","fontFamily","visibility","top","left","whiteSpace","lineHeight","Size","clientWidth","clientHeight","textTrim","maxWidth","label","width","i","length","substring","findPosition","location","alignment","textSize","type","x","y","height","Location","createTextStyle","renderer","renderOptions","htmlObject","createText","setAttributeNS","renderTextElement","options","color","parent","isMinus","tspanElement","font-size","font-style","font-family","font-weight","text-anchor","anchor","transform","opacity","dominant-baseline","baseLine","fill","SvgRenderer","isNullOrUndefined","connectorText","search","drillLevelText","split","z","drillText","replace","len","createTSpan","setItemTemplateContent","targetId","targetElement","contentItemTemplate","itemTemplate","itemSelect","querySelector","getElement","itemsToOrder","a","b","isContainsData","source","pathName","processData","treemap","path","isExist","name","leaf","leafItemSettings","data","levels","groupPath","labelPath","weightValuePath","findChildren","children","keys","Object","Array","findHightLightItems","items","mode","treeMap","push","j","parentName","currentItem","layout","renderItems","getTemplateFunction","template","templateFn","querySelectorAll","compile","trim","e","convertElement","element","labelId","childElement","cssText","elementLength","templateHtml","regExp","RegExp","toString","findLabelLocation","rect","labelSize","areaRect","Math","abs","enableDrillDown","renderDirection","measureElement","parentElement","offsetHeight","offsetWidth","measureElementId","parentNode","removeChild","getArea","getShortestEdge","input","container","convertToContainer","min","convertToRect","xOffset","yOffset","getMousePosition","pageX","pageY","elementRect","getBoundingClientRect","pageXOffset","ownerDocument","defaultView","pageYOffset","clientTop","documentElement","clientLeft","positionX","positionY","colorMap","colorMapping","equalValue","paths","isNaN","isEqualColor","dataValue","from","to","prototype","call","colorCollections","minOpacity","maxOpacity","deSaturationColor","rangeValue","getColorByValue","rgbToHex","r","g","componentToHex","rbg","Number","getGradientColor","previousOffset","nextOffset","percent","full","previousColor","nextColor","charAt","colorNameToHex","length_1","splitColorValueOffset","splitColor","getPercentageColor","previous","next","prevColor","getPercentage","substr","ColorValue","round","wordWrap","maximumWidth","dataLabel","textCollection","labelCollection","concat","textWrap","resultText","currentLength","totalWidth","totalLength","sliceString","slice","hide","maxHeight","orderByArea","maintainSelection","className","elementId","levelSelection","index","getAttribute","childElementCount","setAttribute","applyOptions","childNodes","border","selectionSettings","legendMaintain","legendGroup","legendId","treemapSVGRectElement","removeClassNames","elements","parseFloat","classList","remove","textFormatter","format","_i","keys_1","key","join","formatValue","intl","getNumberFormat","useGrouping","useGroupingSeparator","convertToHexCode","hex","convertHexToColor","result","exec","isRGBValue","window","getComputedStyle","drawSymbol","shape","url","svgRenderer","temp","renderLegendShape","htmlElement","functionName","renderOption","renderPath","shapeWidth","shapeHeight","shapeX","shapeY","merge","rx","ry","cx","cy","d","xValue","yValue","cos","PI","sin","href","isParentItem","item","removeShape","collection","setColor","removeLegend","dataCount","k","borderColor","borderWidth","removeSelectionWithHighlight","getElementsByClassName","getLegendIndex","dataLength","treeMapLegendModule","legendCollections","pushCollection","number","legendElement","shapeElement","legendCollection","legendEle","oldFill","oldOpacity","oldBorderColor","oldBorderWidth","shapeOldFill","shapeOldOpacity","shapeOldBorderColor","shapeOldBorderWidth","triggerDownload","fileName","isDownload","attrs","download","toLocaleLowerCase","dispatchEvent","MouseEvent","view","bubbles","cancelable","removeElement","getThemeStyle","theme","toLowerCase","backgroundColor","titleFontColor","titleFontWeight","subTitleFontColor","tooltipFillColor","tooltipFontColor","tooltipFontSize","legendTitleColor","legendTextColor","subtitleFontSize","legendFontSize","tooltipFillOpacity","tooltipTextOpacity","labelFontFamily","defaultFont","__extends","extendStatics","setPrototypeOf","__proto__","p","hasOwnProperty","__","this","constructor","create","__decorate","decorators","target","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Border","_super","apply","Property","ChildProperty","Margin","Font","CommonTitleSettings","SubTitleSettings","Complex","TitleSettings","ColorMapping","LegendSettings","InitialDrillSettings","LeafItemSettings","Collection","TooltipSettings","SelectionSettings","HighlightSettings","LevelSettings","Rect","RectOption","dashArray","stroke","PathOption","TextOption","TreeMapAjax","async","contentType","sendData","dataOptions","LayoutPanel","processLayoutPanel","totalRect","treemapLevelData","levelsData","initialDrillDown","groupIndex","groupName","drilledItems","getDrilldownData","extend","legendSettings","currentLevel","calculateLayoutItems","renderLayoutItems","count","enableBreadcrumb","drillData","newData","child","parentData","layoutType","computeSliceAndDiceDimensional","computeSquarifyDimensional","coords","gap","headerHeight","leafItem","groups","sliceAndDiceProcess","groupGap","showHeader","childValue","parentArea","alottedValue","totalWeight","forEach","isHorizontal","sort","isHierarchicalData","padding","calculateChildrenLayout","groupPadding","computeTotalArea","performRowsLayout","currentRow","stack","newCoordinates","getCoordinates","newStack","nextDatum","restData","aspectRatio","newRow","currentRowLength","valueSum","newContainer","cutArea","findMaxAspectRatio","row","rowLength","minArea","Infinity","maxArea","sumArea","area","max","pow","areaWidth","areaHeight","isParent","parentRect","subXOffset","subYOffset","coordinates","y1","x1","dataLength_1","dataSum","i_1","multiplier","datum","onDemandProcess","childItems","parentItem","parentItemGroupname","splice","txtVisible","getItemColor","eventArgs","_this","pathOptions","templatePosition","renderText","groupId","templateEle","textStyle","elementID","interSectAction","rectPath","secondaryEle","layoutGroup","createGroup","itemGroup","templateGroup","isLeafItem","this_1","drillDownView","treemapItemRect","labelFormat","headerFormat","levelName","showLabels","breadcrumbConnector","enableRtl","labelStyle","headerStyle","themeStyle","labelPosition","labelTemplate","headerTemplate","cancel","RenderItems","trigger","observedArgs","drawPath","renderItemText","renderTemplate","renderReactTemplates","tabIndex","svgObject","customText","textName","tspanText","labelInterSectAction","drillSymbolCount","drillSymbolSize","textLocation","texts","maxNumber","collectionLength","stringText","getSaturatedColor","itemFill","itemOpacity","defaultLevelsData","option","equalColorValuePath","rangeColorValuePath","colorValuePath","palette","saturatedColor","rgbValue","templateId","baseTemplateId","labelElement","templateLocation","textValue","destroy","currentRect","Theme","mapsTitleFont","Print","control","print","printWindow","open","outerHeight","outerWidth","moveTo","resizeTo","screen","availWidth","availHeight","argsData","htmlContent","getHTMLContent","printFunction","div","cloneNode","Element","exportElement","backgroundElement","getElementsByTagName","getModuleName","ImageExport","export","allowDownload","Promise","resolve","reject","availableSize","Browser","userAgent","svgData","outerHTML","URL","createObjectURL","Blob","XMLSerializer","serializeToString","image_1","Image","context_1","getContext","onload","drawImage","revokeObjectURL","toDataURL","src","PdfExport","orientation","PdfPageOrientation","Landscape","image","context","PdfDocument","imageString","pageSettings","pages","add","graphics","PdfBitmap","save","TreeMap","isResize","preRender","initPrivateVariable","unWireEVents","createSvg","wireEVents","setCulture","render","renderElements","LevelsData","hierarchyData","createSecondaryElement","addTabIndex","renderBorder","renderTitle","titleSettings","processDataManager","dataModule","queryModule","fetchApiModule","localAjax","dataSource","DataManager","query","Query","executeQuery","then","renderTreeMapElements","Fetch","onSuccess","args","send","processingData","visible","renderLegend","elementChange","isResized","renderComplete","firstChild","hasChildNodes","clearTemplate","containerWidth","containerHeight","secondaryElement","insertBefore","borderElement","background","borderRect","drawRectangle","title","bounds","groupEle","margin","right","trimmedTitle","elementSize","location_1","titleBounds","description","subtitleSettings","bottom","map","checkIsHierarchicalData","data_1","currentData","levelOrderName","weight","processHierarchicalData","processFlatJsonData","reOrderLevelData","findTotalWeight","childData","levelIndex","childItemLevel","childLevel","mainData_1","l","allowPrint","printModule","allowPdfExport","pdfExportModule","allowImageExport","imageExportModule","orderNames","level","childName","name_1","childGroupPath","start","currentName","currentPath","prevPath","previousData","IsChildHierarchy","current","isChild","groupObj","EventHandler","clickOnTreeMap","doubleClickOnTreeMap","rightClickOnTreeMap","touchStartEvent","mouseDownOnTreeMap","touchMoveEvent","mouseMoveOnTreeMap","touchEndEvent","mouseEndOnTreeMap","mouseLeaveOnTreeMap","removeEventListener","resizeEvent","resizeOnTreeMap","bind","addEventListener","Internationalization","isDestroyed","args_1","previousSize","currentSize","clearTimeout","contains","setTimeout","refreshing","itemIndex","targetEle","labelText","clickArgs","mouseEvent","preventDefault","textContent","doubleTapTimer1","end","Date","getMilliseconds","doubleClick","doubleClickArgs","rightClickArgs","mouseDown","notify","moveArgs","cursor","calculateSelectedTextLevels","drillLevel","levelText","_a","currentLevelLabel","calculatePreviousLevelChildItems","drillLevelValues","directLevel","levelItems","text1","drillTextLevel","h","compareSelectedLabelWithDrillDownItems","drillLevelChild","newDrillItem","startEvent","endEvent","layoutID","templateID","drillMouseMove","drillLength","rightClick","which","layerElementId","widthIncrement","heightIncrement","drilledLegendItems","drillElementId","treeMapTooltipModule","removeTooltip","removeInteractivePointer","treeMapHighlightModule","shapeHighlightCollection","highLightId","selectItem","levelOrder","isSelected","treeMapSelectionModule","enable","selectTreemapItem","requiredModules","modules","tooltipSettings","member","highlightSettings","onPropertyChanged","newProp","oldProp","removeSvg","getPersistData","Event","NotifyPropertyChanges","Component","TreeMapLegend","page","legendBorderRect","currentPage","textMaxWidth","legendInteractiveGradient","legendItemRect","legendRenderingCollections","legendNames","totalPages","gradientCount","defsElement","createDefs","_changePosition","calculateLegendBounds","drawLegend","legend","findColorMappingLegendItems","findPaletteLegendItems","firstItem","nextItem","leafIndex","legendTitle","titleTextStyle","titleStyle","legendMode","textX","textY","shapeLocation","orientation_1","legendWidth","legendHeight","legendTitleSize","startX_1","startY_1","shapePadding","itemTextStyle","legendItem","Page","legendTextSize","maxSize","prvePositionX","nextPositionY","getPageChanged","prevPositionY","nextPositionX","DisplayText","Shape","Text","Fill","Data","legendObj","legendRect","legendLength","rectWidth","rectHeight","placement","itemStartX","itemStartY","labelAction","labelDisplayMode","maxTextHeight","maxTextWidth","legendText","itemTextSize","textWidth","textHeight","calculateLegendItems","legendFillColor","legendName","showLegendPath","valuePath","removeDuplicateLegend","removeDuplicates","legendFill","legendData","itemArea","isAddData","gradientElement","x2","y2","actualValue","isDuplicate","isRange","outfill","labelLegend","otherIndex","colorMapProcess","isDesaturation","legendIndex","outOfRangeLegend","showLegend","isAddNewLegendData","colors","q","stop1Color","colorStop","stop2Color","gradient","drawGradient","legendGradientColor","legendLinearGradient","newDataProcess","itemValue","process","textFont","renderLegendBorder","renderLegendTitle","drawLegendItem","itemId","textId","rectOptions","shapeBorder","translate","defaultLegendRtlLocation","spacing","textOptions","legendRtlLocation","shapeSize","isLineShape_1","strokeColor_1","strokeWidth_1","shapeId","imageUrl","pagingGroup","pagingText","pagingFont","pagingTextSize","leftPageX","rightPageX","locY","pageTextX","leftPageElement","rightPageElement","rightPath","leftPath","leftPageOptions","leftRectPageOptions","wireEvents","rightPageOptions","rightRectPageOptions","pageTextOptions","legendBorder","pointerEvents","getLegendAlignment","trimTitle","renderInteractivePointer","interactiveId","elementFromPoint","changedTouches","clientX","clientY","targetItem","strokeWidth","svgRect","drawInteractivePointer","locX","invertedPointer","areaX","areaY","totalHeight","mouseUpHandler","legendElementId","changeNextPage","on","off","xmlns","defElement","linerGradientEle","createElementNS","offsetColor","stopEle","TreeMapHighlight","shapeTarget","legendHighlightCollection","currentElement","mouseMove","processHighlight","treeMapElement","orders","highlight","highLightElements","selectionModule","selectionId","selectionElements","legendSelectId","shapeSelectId","length_2","nodeEle","Elements","legendSelect","TreeMapSelection","shapeSelectionCollection","legendSelectionCollection","shapeSelect","selection","highlightModule","length_3","length_4","targetEle_1","s","m","length_5","selectionElement","__rest","t","getOwnPropertySymbols","TreeMapTooltip","tooltipId","renderTooltip","touchArg","tootipArgs","isTouch","pointerType","tooltipEle","markerFill","toolTipData","tooltipContent","addTooltip","svgTooltip","Tooltip","header","content","shapes","areaBounds","isVue","isVue3","controlInstance","appendTo","tooltipElementId","index.TreeMap","Inject","index.TreeMapTooltip","index.TreeMapLegend","index.TreeMapHighlight","index.TreeMapSelection","index.Print","index.PdfExport","index.ImageExport"],"mappings":"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"}